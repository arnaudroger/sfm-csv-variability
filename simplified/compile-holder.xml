<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='22202' time_ms='1480515459123'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.112-b16
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.112-b16) for bsd-amd64 JRE (1.8.0_112-b16), built on Sep 30 2016 22:41:41 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=simplified/compile-holder.xml -XX:CompileCommandFile=/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T/jmh1562257068128394411compilecommand 
</args>
<command>
org.openjdk.jmh.runner.ForkedMain 127.0.0.1 55728
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.112-b16
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/aroger/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib
java.library.path=/Users/aroger/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre
java.class.path=target/benchmarks.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
sun.java.command=org.openjdk.jmh.runner.ForkedMain 127.0.0.1 55728
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='7171'/>
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
<thread_logfile thread='19203' filename='/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T//hs_c19203_pid22202.log'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
<thread_logfile thread='19715' filename='/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T//hs_c19715_pid22202.log'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='502' backedge_count='5000' iicount='502' stamp='0.080' comment='count' hot_count='502'/>
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSigner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x000000010ca10210:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x0000000110f4e000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000010ca10360: mov    0x8(%rsi),%r10d
  0x000000010ca10364: shl    $0x3,%r10
  0x000000010ca10368: cmp    %r10,%rax
  0x000000010ca1036b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca10371: data32 xchg %ax,%ax
  0x000000010ca10374: nopl   0x0(%rax,%rax,1)
  0x000000010ca1037c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca10380: mov    %eax,-0x14000(%rsp)
  0x000000010ca10387: push   %rbp
  0x000000010ca10388: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010ca1038c: mov    %rsi,%rbx
  0x000000010ca1038f: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000010ca10392: test   %eax,%eax
  0x000000010ca10394: jne    0x000000010ca10480  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010ca1039a: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010ca1039d: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000010ca104a5
  0x000000010ca103a2: test   %r10d,%r10d
  0x000000010ca103a5: jg     0x000000010ca103ae  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010ca103a7: xor    %eax,%eax
  0x000000010ca103a9: jmpq   0x000000010ca10480
  0x000000010ca103ae: test   %r10d,%r10d
  0x000000010ca103b1: jbe    0x000000010ca10491
  0x000000010ca103b7: mov    %r10d,%r9d
  0x000000010ca103ba: dec    %r9d
  0x000000010ca103bd: cmp    %r10d,%r9d
  0x000000010ca103c0: jae    0x000000010ca10491  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010ca103c6: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000010ca103cc: mov    %r10d,%edi
  0x000000010ca103cf: add    $0xfffffffffffffffd,%edi
  0x000000010ca103d2: mov    %r11d,%eax
  0x000000010ca103d5: shl    $0x5,%eax
  0x000000010ca103d8: lea    (%r12,%rbp,8),%rdx
  0x000000010ca103dc: mov    $0x1,%r8d
  0x000000010ca103e2: mov    $0x80000000,%ecx
  0x000000010ca103e7: cmp    %edi,%r9d
  0x000000010ca103ea: cmovl  %ecx,%edi
  0x000000010ca103ed: cmp    $0x1,%edi
  0x000000010ca103f0: jle    0x000000010ca10456
  0x000000010ca103f2: sub    %r11d,%eax
  0x000000010ca103f5: jmp    0x000000010ca10403
  0x000000010ca103f7: nopw   0x0(%rax,%rax,1)
  0x000000010ca10400: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010ca10403: movzwl 0x10(%rdx,%r8,2),%r9d
  0x000000010ca10409: add    %r9d,%eax
  0x000000010ca1040c: movslq %r8d,%r11
  0x000000010ca1040f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x000000010ca10415: movzwl 0x16(%rdx,%r11,2),%ebp
  0x000000010ca1041b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x000000010ca10421: mov    %eax,%r11d
  0x000000010ca10424: shl    $0x5,%r11d
  0x000000010ca10428: sub    %eax,%r11d
  0x000000010ca1042b: add    %ecx,%r11d
  0x000000010ca1042e: mov    %r11d,%esi
  0x000000010ca10431: shl    $0x5,%esi
  0x000000010ca10434: sub    %r11d,%esi
  0x000000010ca10437: add    %r9d,%esi
  0x000000010ca1043a: mov    %esi,%r11d
  0x000000010ca1043d: shl    $0x5,%r11d
  0x000000010ca10441: sub    %esi,%r11d
  0x000000010ca10444: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010ca10447: mov    %r11d,%eax
  0x000000010ca1044a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010ca1044d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010ca10451: cmp    %edi,%r8d
  0x000000010ca10454: jl     0x000000010ca10400  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010ca10456: cmp    %r10d,%r8d
  0x000000010ca10459: jge    0x000000010ca1048c  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010ca1045b: movzwl 0x10(%rdx,%r8,2),%ecx
  0x000000010ca10461: sub    %r11d,%eax
  0x000000010ca10464: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000010ca10466: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000010ca10469: cmp    %r10d,%r8d
  0x000000010ca1046c: jge    0x000000010ca1047d  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010ca1046e: mov    %eax,%r9d
  0x000000010ca10471: shl    $0x5,%r9d          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010ca10475: mov    %eax,%r11d
  0x000000010ca10478: mov    %r9d,%eax
  0x000000010ca1047b: jmp    0x000000010ca1045b
  0x000000010ca1047d: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010ca10480: add    $0x20,%rsp
  0x000000010ca10484: pop    %rbp
  0x000000010ca10485: test   %eax,-0x211548b(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca1048b: retq   
  0x000000010ca1048c: mov    %r11d,%eax
  0x000000010ca1048f: jmp    0x000000010ca1047d
  0x000000010ca10491: mov    $0xffffff86,%esi
  0x000000010ca10496: mov    %rbx,(%rsp)
  0x000000010ca1049a: nop
  0x000000010ca1049b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop off=320}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010ca104a0: callq  0x000000010be85e14  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x000000010ca104a5: mov    $0xfffffff6,%esi
  0x000000010ca104aa: nop
  0x000000010ca104ab: callq  0x000000010c9a71a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010ca104b0: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000010ca104b5: hlt    
  0x000000010ca104b6: hlt    
  0x000000010ca104b7: hlt    
  0x000000010ca104b8: hlt    
  0x000000010ca104b9: hlt    
  0x000000010ca104ba: hlt    
  0x000000010ca104bb: hlt    
  0x000000010ca104bc: hlt    
  0x000000010ca104bd: hlt    
  0x000000010ca104be: hlt    
  0x000000010ca104bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca104c0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca104c5: callq  0x000000010ca104ca
  0x000000010ca104ca: subq   $0x5,(%rsp)
  0x000000010ca104cf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca104d4: hlt    
  0x000000010ca104d5: hlt    
  0x000000010ca104d6: hlt    
  0x000000010ca104d7: hlt    
<nmethod compile_id='1' compiler='C2' entry='0x000000010ca10360' size='1256' address='0x000000010ca10210' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/lang/String hashCode ()I' bytes='55' count='511' backedge_count='5045' iicount='511' stamp='0.085'/>
<writer thread='7171'/>
[Loaded java.security.CryptoPrimitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.EnumSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RegularEnumSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AlgorithmDecomposer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$LastNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$GroupHead from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$CharProperty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$BmpCharProperty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Single from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$SliceNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Slice from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Begin from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$First from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Start from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$TreeInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$SliceI from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$BranchConn from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Branch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Security from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Security$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties$LineReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='24' backedge_count='5000' iicount='24' stamp='0.090' comment='count' hot_count='24'/>
[Loaded java.util.ArrayList$SubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ListIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$GroupTail from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Ctype from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$CharProperty$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Curly from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.MatchResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Matcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain$HangupThread from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.io.IOException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ApplicationShutdownHooks from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ApplicationShutdownHooks$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain$ShutdownTimeoutThread from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='3' method='java/lang/String indexOf (II)I' bytes='70' count='323' backedge_count='5000' iicount='323' stamp='0.098' comment='count' hot_count='323'/>
[Loaded java.lang.reflect.InvocationHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.net.Socket from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetSocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca1e810:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001111adcc8} &apos;readLine&apos; &apos;()I&apos; in &apos;java/util/Properties$Line
<writer thread='7171'/>
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Reader&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000010ca1e9c0: mov    0x8(%rsi),%r10d
  0x000000010ca1e9c4: shl    $0x3,%r10
  0x000000010ca1e9c8: cmp    %r10,%rax
  0x000000010ca1e9cb: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca1e9d1: data32 xchg %ax,%ax
  0x000000010ca1e9d4: nopl   0x0(%rax,%rax,1)
  0x000000010ca1e9dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca1e9e0: mov    %eax,-0x14000(%rsp)
  0x000000010ca1e9e7: push   %rbp
  0x000000010ca1e9e8: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.Properties$LineReader::readLine@-1 (line 422)

  0x000000010ca1e9ec: mov    %rsi,%rbx
  0x000000010ca1e9ef: xor    %edi,%edi
  0x000000010ca1e9f1: xor    %r11d,%r11d
  0x000000010ca1e9f4: xor    %r8d,%r8d
  0x000000010ca1e9f7: xor    %r9d,%r9d
  0x000000010ca1e9fa: mov    $0x1,%edx
  0x000000010ca1e9ff: mov    $0x1,%esi
  0x000000010ca1ea04: jmp    0x000000010ca1ea20
  0x000000010ca1ea06: data32 nopw 0x0(%rax,%rax,1)  ; OopMap{rbx=Oop off=80}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@344 (line 493)

  0x000000010ca1ea10: test   %eax,-0x2123a16(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@344 (line 493)
                                                ;   {poll}
  0x000000010ca1ea16: xor    %r9d,%r9d
  0x000000010ca1ea19: xor    %edx,%edx
  0x000000010ca1ea1b: xor    %esi,%esi
  0x000000010ca1ea1d: mov    %ebp,%edi
  0x000000010ca1ea1f: nop                       ;*aload_0
                                                ; - java.util.Properties$LineReader::readLine@21 (line 433)

  0x000000010ca1ea20: mov    0x20(%rbx),%r13d   ;*getfield inStream
                                                ; - java.util.Properties$LineReader::readLine@34 (line 434)

  0x000000010ca1ea24: mov    0xc(%rbx),%ecx     ;*getfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@26 (line 433)

  0x000000010ca1ea27: mov    %ecx,0x24(%rsp)
  0x000000010ca1ea2b: mov    0x10(%rbx),%ecx    ;*getfield inOff
                                                ; - java.util.Properties$LineReader::readLine@22 (line 433)

  0x000000010ca1ea2e: mov    0x14(%rbx),%r10d   ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@59 (line 434)

  0x000000010ca1ea32: mov    %edi,%eax
  0x000000010ca1ea34: dec    %eax               ;*iinc
                                                ; - java.util.Properties$LineReader::readLine@96 (line 442)

  0x000000010ca1ea36: cmp    0x24(%rsp),%ecx
  0x000000010ca1ea3a: jge    0x000000010ca1eba4  ;*getfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@374 (line 505)

  0x000000010ca1ea40: test   %r13d,%r13d
  0x000000010ca1ea43: je     0x000000010ca1ee88  ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)

  0x000000010ca1ea49: mov    %ecx,%r13d
  0x000000010ca1ea4c: inc    %r13d              ;*iadd
                                                ; - java.util.Properties$LineReader::readLine@122 (line 450)

  0x000000010ca1ea4f: mov    %r13d,0x10(%rbx)   ;*putfield inOff
                                                ; - java.util.Properties$LineReader::readLine@123 (line 450)

  0x000000010ca1ea53: mov    0xc(%r12,%r10,8),%r14d  ; implicit exception: dispatches to 0x000000010ca1f1a9
  0x000000010ca1ea58: cmp    %r14d,%ecx
  0x000000010ca1ea5b: jae    0x000000010ca1ee0c  ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)

  0x000000010ca1ea61: shl    $0x3,%r10
  0x000000010ca1ea65: movslq %ecx,%rcx
  0x000000010ca1ea68: movzbl 0x10(%r10,%rcx,1),%r10d  ;*iand
                                                ; - java.util.Properties$LineReader::readLine@127 (line 450)

  0x000000010ca1ea6e: test   %edx,%edx
  0x000000010ca1ea70: jne    0x000000010ca1eade  ;*iload
                                                ; - java.util.Properties$LineReader::readLine@217 (line 470)

  0x000000010ca1ea72: test   %esi,%esi
  0x000000010ca1ea74: jne    0x000000010ca1eb7e  ;*iload_2
                                                ; - java.util.Properties$LineReader::readLine@243 (line 478)

  0x000000010ca1ea7a: cmp    $0xa,%r10d
  0x000000010ca1ea7e: je     0x000000010ca1eb23  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@246 (line 478)

  0x000000010ca1ea84: cmp    $0xd,%r10d
  0x000000010ca1ea88: je     0x000000010ca1eeb9  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)

  0x000000010ca1ea8e: mov    0x1c(%rbx),%ecx    ;*getfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@256 (line 479)

  0x000000010ca1ea91: mov    0xc(%r12,%rcx,8),%edx  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ; implicit exception: dispatches to 0x000000010ca1f1bd
  0x000000010ca1ea96: mov    %edi,%ebp
  0x000000010ca1ea98: inc    %ebp               ;*iinc
                                                ; - java.util.Properties$LineReader::readLine@260 (line 479)

  0x000000010ca1ea9a: cmp    %edx,%edi
  0x000000010ca1ea9c: jae    0x000000010ca1ee41  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)

  0x000000010ca1eaa2: lea    (%r12,%rcx,8),%rax  ;*getfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@256 (line 479)

  0x000000010ca1eaa6: mov    %r10w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)

  0x000000010ca1eaac: cmp    %edx,%ebp
  0x000000010ca1eaae: je     0x000000010ca1ec75  ;*iload_2
                                                ; - java.util.Properties$LineReader::readLine@320 (line 490)

  0x000000010ca1eab4: cmp    $0x5c,%r10d
  0x000000010ca1eab8: jne    0x000000010ca1ea10  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@323 (line 490)

  0x000000010ca1eabe: test   %r9d,%r9d
  0x000000010ca1eac1: jne    0x000000010ca1f0b5  ; OopMap{rbx=Oop off=263}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@338 (line 491)

  0x000000010ca1eac7: test   %eax,-0x2123acd(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@338 (line 491)
                                                ;   {poll}
  0x000000010ca1eacd: mov    $0x1,%r9d
  0x000000010ca1ead3: xor    %edx,%edx
  0x000000010ca1ead5: xor    %esi,%esi
  0x000000010ca1ead7: mov    %ebp,%edi
  0x000000010ca1ead9: jmpq   0x000000010ca1ea20  ; OopMap{rbx=Oop off=286}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@174 (line 461)

  0x000000010ca1eade: test   %eax,-0x2123ae4(%rip)        # 0x000000010a8fb000
                                                ;   {poll}
  0x000000010ca1eae4: cmp    $0x20,%r10d
  0x000000010ca1eae8: je     0x000000010ca1ea20  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@174 (line 461)

  0x000000010ca1eaee: cmp    $0x9,%r10d
  0x000000010ca1eaf2: je     0x000000010ca1ef60  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)

  0x000000010ca1eaf8: cmp    $0xc,%r10d
  0x000000010ca1eafc: je     0x000000010ca1ef91  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)

  0x000000010ca1eb02: test   %r8d,%r8d
  0x000000010ca1eb05: jne    0x000000010ca1eb1b  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@194 (line 464)

  0x000000010ca1eb07: cmp    $0xd,%r10d
  0x000000010ca1eb0b: je     0x000000010ca1f047  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)

  0x000000010ca1eb11: cmp    $0xa,%r10d
  0x000000010ca1eb15: je     0x000000010ca1ec67  ;*iconst_0
                                                ; - java.util.Properties$LineReader::readLine@212 (line 467)

  0x000000010ca1eb1b: xor    %r8d,%r8d
  0x000000010ca1eb1e: jmpq   0x000000010ca1ea72
  0x000000010ca1eb23: test   %r11d,%r11d
  0x000000010ca1eb26: jne    0x000000010ca1eb64  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@349 (line 498)

  0x000000010ca1eb28: test   %edi,%edi
  0x000000010ca1eb2a: je     0x000000010ca1f075  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)

  0x000000010ca1eb30: cmp    0x24(%rsp),%r13d
  0x000000010ca1eb35: jge    0x000000010ca1f095  ;*if_icmplt
                                                ; - java.util.Properties$LineReader::readLine@377 (line 505)

  0x000000010ca1eb3b: test   %r9d,%r9d
  0x000000010ca1eb3e: je     0x000000010ca1ec59  ; OopMap{rbx=Oop off=388}
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@457 (line 523)

  0x000000010ca1eb44: test   %eax,-0x2123b4a(%rip)        # 0x000000010a8fb000
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@457 (line 523)
                                                ;   {poll}
  0x000000010ca1eb4a: xor    %r11d,%r11d
  0x000000010ca1eb4d: mov    $0x1,%r8d
  0x000000010ca1eb53: xor    %r9d,%r9d
  0x000000010ca1eb56: mov    $0x1,%edx
  0x000000010ca1eb5b: xor    %esi,%esi
  0x000000010ca1eb5d: mov    %eax,%edi
  0x000000010ca1eb5f: jmpq   0x000000010ca1ea20  ; OopMap{rbx=Oop off=420}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@366 (line 503)

  0x000000010ca1eb64: test   %eax,-0x2123b6a(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@366 (line 503)
                                                ;   {poll}
  0x000000010ca1eb6a: xor    %edi,%edi
  0x000000010ca1eb6c: xor    %r11d,%r11d
  0x000000010ca1eb6f: mov    $0x1,%edx
  0x000000010ca1eb74: mov    $0x1,%esi
  0x000000010ca1eb79: jmpq   0x000000010ca1ea20
  0x000000010ca1eb7e: cmp    $0x23,%r10d
  0x000000010ca1eb82: jne    0x000000010ca1eb99  ; OopMap{rbx=Oop off=452}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@240 (line 474)

  0x000000010ca1eb84: test   %eax,-0x2123b8a(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@240 (line 474)
                                                ;   {poll}
  0x000000010ca1eb8a: mov    $0x1,%r11d
  0x000000010ca1eb90: xor    %edx,%edx
  0x000000010ca1eb92: xor    %esi,%esi
  0x000000010ca1eb94: jmpq   0x000000010ca1ea20
  0x000000010ca1eb99: cmp    $0x21,%r10d
  0x000000010ca1eb9d: je     0x000000010ca1eb84  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@234 (line 472)

  0x000000010ca1eb9f: jmpq   0x000000010ca1ea7a
  0x000000010ca1eba4: test   %r13d,%r13d
  0x000000010ca1eba7: je     0x000000010ca1edaa  ;*ifnonnull
                                                ; - java.util.Properties$LineReader::readLine@37 (line 434)

  0x000000010ca1ebad: mov    0x8(%r12,%r13,8),%ecx
  0x000000010ca1ebb2: cmp    $0xf8004d39,%ecx   ;   {metadata(&apos;java/io/BufferedInputStream&apos;)}
  0x000000010ca1ebb8: jne    0x000000010ca1f15e
  0x000000010ca1ebbe: mov    %eax,0x20(%rsp)
  0x000000010ca1ebc2: mov    %esi,0x1c(%rsp)
  0x000000010ca1ebc6: mov    %edx,0x18(%rsp)
  0x000000010ca1ebca: mov    %r9d,0x14(%rsp)
  0x000000010ca1ebcf: mov    %r8d,0x10(%rsp)
  0x000000010ca1ebd4: mov    %r11d,0xc(%rsp)
  0x000000010ca1ebd9: mov    %edi,0x8(%rsp)
  0x000000010ca1ebdd: mov    %rbx,(%rsp)
  0x000000010ca1ebe1: lea    (%r12,%r13,8),%rsi  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)

  0x000000010ca1ebe5: mov    %r10,%rdx
  0x000000010ca1ebe8: shl    $0x3,%rdx          ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@59 (line 434)

  0x000000010ca1ebec: mov    %rbx,%rbp
  0x000000010ca1ebef: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop off=564}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {optimized virtual_call}
  0x000000010ca1ebf4: mov    %eax,0x24(%rsp)
  0x000000010ca1ebf8: mov    (%rsp),%rbx
  0x000000010ca1ebfc: mov    0x24(%rsp),%r11d
  0x000000010ca1ec01: mov    %r11d,0xc(%rbx)    ;*putfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@65 (line 435)

  0x000000010ca1ec05: mov    %r12d,0x10(%rbx)   ;*putfield inOff
                                                ; - java.util.Properties$LineReader::readLine@70 (line 436)

  0x000000010ca1ec09: test   %r11d,%r11d
  0x000000010ca1ec0c: jle    0x000000010ca1ec3c  ;*ifgt
                                                ; - java.util.Properties$LineReader::readLine@77 (line 437)

  0x000000010ca1ec0e: mov    0x20(%rbx),%r13d   ;*getfield inStream
                                                ; - java.util.Properties$LineReader::readLine@102 (line 447)

  0x000000010ca1ec12: mov    0x14(%rbx),%r10d   ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@112 (line 450)

  0x000000010ca1ec16: xor    %ecx,%ecx
  0x000000010ca1ec18: mov    0x8(%rsp),%edi
  0x000000010ca1ec1c: mov    0xc(%rsp),%r11d
  0x000000010ca1ec21: mov    0x10(%rsp),%r8d
  0x000000010ca1ec26: mov    0x14(%rsp),%r9d
  0x000000010ca1ec2b: mov    0x18(%rsp),%edx
  0x000000010ca1ec2f: mov    0x1c(%rsp),%esi
  0x000000010ca1ec33: mov    0x20(%rsp),%eax
  0x000000010ca1ec37: jmpq   0x000000010ca1ea40
  0x000000010ca1ec3c: mov    0x8(%rsp),%r10d
  0x000000010ca1ec41: test   %r10d,%r10d
  0x000000010ca1ec44: je     0x000000010ca1ec54  ;*ifeq
                                                ; - java.util.Properties$LineReader::readLine@81 (line 438)

  0x000000010ca1ec46: mov    0xc(%rsp),%r8d
  0x000000010ca1ec4b: test   %r8d,%r8d
  0x000000010ca1ec4e: je     0x000000010ca1edf9  ;*iconst_m1
                                                ; - java.util.Properties$LineReader::readLine@89 (line 439)

  0x000000010ca1ec54: mov    $0xffffffff,%edi   ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@349 (line 498)

  0x000000010ca1ec59: mov    %edi,%eax
  0x000000010ca1ec5b: add    $0x50,%rsp
  0x000000010ca1ec5f: pop    %rbp
  0x000000010ca1ec60: test   %eax,-0x2123c66(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca1ec66: retq                      ; OopMap{rbx=Oop off=679}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@209 (line 465)

  0x000000010ca1ec67: test   %eax,-0x2123c6d(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@209 (line 465)
                                                ;   {poll}
  0x000000010ca1ec6d: xor    %r8d,%r8d
  0x000000010ca1ec70: jmpq   0x000000010ca1ea20
  0x000000010ca1ec75: mov    %edx,%edi
  0x000000010ca1ec77: shl    %edi               ;*imul
                                                ; - java.util.Properties$LineReader::readLine@280 (line 481)

  0x000000010ca1ec79: test   %edi,%edi
  0x000000010ca1ec7b: jge    0x000000010ca1ec82  ;*ifge
                                                ; - java.util.Properties$LineReader::readLine@285 (line 482)

  0x000000010ca1ec7d: mov    $0x7fffffff,%edi   ;*iload
                                                ; - java.util.Properties$LineReader::readLine@292 (line 485)

  0x000000010ca1ec82: cmp    $0x80000,%edi
  0x000000010ca1ec88: ja     0x000000010ca1f0d9
  0x000000010ca1ec8e: movslq %edi,%r13
  0x000000010ca1ec91: shl    %r13
  0x000000010ca1ec94: add    $0x17,%r13
  0x000000010ca1ec98: mov    %r13,%rsi
  0x000000010ca1ec9b: and    $0xfffffffffffffff8,%rsi
  0x000000010ca1ec9f: vmovq  %rsi,%xmm1
  0x000000010ca1eca4: cmp    $0x80000,%edi
  0x000000010ca1ecaa: ja     0x000000010ca1efc5
  0x000000010ca1ecb0: mov    %ecx,0x38(%rsp)
  0x000000010ca1ecb4: mov    0x60(%r15),%rsi
  0x000000010ca1ecb8: mov    %rsi,%rcx
  0x000000010ca1ecbb: vmovq  %xmm1,%r14
  0x000000010ca1ecc0: add    %r14,%rcx
  0x000000010ca1ecc3: cmp    0x70(%r15),%rcx
  0x000000010ca1ecc7: jae    0x000000010ca1efc9
  0x000000010ca1eccd: mov    %rcx,0x60(%r15)
  0x000000010ca1ecd1: prefetchnta 0xc0(%rcx)
  0x000000010ca1ecd8: movq   $0x1,(%rsi)
  0x000000010ca1ecdf: prefetchnta 0x100(%rcx)
  0x000000010ca1ece6: movl   $0xf8000041,0x8(%rsi)  ;   {metadata({type array char})}
  0x000000010ca1eced: mov    %edi,0xc(%rsi)
  0x000000010ca1ecf0: prefetchnta 0x140(%rcx)
  0x000000010ca1ecf7: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x000000010ca1ecfe: mov    %rsi,%rcx
  0x000000010ca1ed01: add    $0x10,%rcx
  0x000000010ca1ed05: vmovq  %rcx,%xmm0
  0x000000010ca1ed0a: shr    $0x3,%r13
  0x000000010ca1ed0e: mov    %r13,%rcx
  0x000000010ca1ed11: add    $0xfffffffffffffffe,%rcx
  0x000000010ca1ed15: cmp    %edx,%edi
  0x000000010ca1ed17: jb     0x000000010ca1f0e1
  0x000000010ca1ed1d: test   %edx,%edx
  0x000000010ca1ed1f: jle    0x000000010ca1f14a
  0x000000010ca1ed25: mov    0x38(%rsp),%ecx
  0x000000010ca1ed29: lea    0x10(%r12,%rcx,8),%rcx
  0x000000010ca1ed2e: cmp    %edi,%edx
  0x000000010ca1ed30: jl     0x000000010ca1eee5
  0x000000010ca1ed36: mov    %rcx,%rdi
  0x000000010ca1ed39: vmovq  %xmm0,%rcx
  0x000000010ca1ed3e: mov    %rsi,0x8(%rsp)
  0x000000010ca1ed43: mov    %r10d,0x4(%rsp)
  0x000000010ca1ed48: mov    %r9d,(%rsp)
  0x000000010ca1ed4c: mov    %r8d,%r14d
  0x000000010ca1ed4f: mov    %r11d,%r13d
  0x000000010ca1ed52: vmovq  %xmm1,%r10
  0x000000010ca1ed57: add    $0xfffffffffffffff0,%r10
  0x000000010ca1ed5b: shr    $0x3,%r10
  0x000000010ca1ed5f: mov    %rcx,%rsi
  0x000000010ca1ed62: mov    %r10,%rdx
  0x000000010ca1ed65: movabs $0x10c9f4780,%r10
  0x000000010ca1ed6f: callq  *%r10
  0x000000010ca1ed72: mov    %r13d,%r11d
  0x000000010ca1ed75: mov    %r14d,%r8d
  0x000000010ca1ed78: mov    (%rsp),%r9d
  0x000000010ca1ed7c: mov    0x4(%rsp),%r10d
  0x000000010ca1ed81: mov    0x8(%rsp),%rsi     ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x000000010ca1ed86: mov    %rsi,%rdi
  0x000000010ca1ed89: shr    $0x3,%rdi
  0x000000010ca1ed8d: mov    %edi,0x1c(%rbx)
  0x000000010ca1ed90: mov    %rbx,%rcx
  0x000000010ca1ed93: shr    $0x9,%rcx
  0x000000010ca1ed97: movabs $0x10c3a2000,%rdi
  0x000000010ca1eda1: mov    %r12b,(%rdi,%rcx,1)  ;*putfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@317 (line 487)

  0x000000010ca1eda5: jmpq   0x000000010ca1eab4
  0x000000010ca1edaa: mov    0x18(%rbx),%ebp    ;*getfield inCharBuf
                                                ; - java.util.Properties$LineReader::readLine@45 (line 434)

  0x000000010ca1edad: mov    0x24(%rbx),%ecx    ;*getfield reader
                                                ; - java.util.Properties$LineReader::readLine@41 (line 434)

  0x000000010ca1edb0: test   %ecx,%ecx
  0x000000010ca1edb2: je     0x000000010ca1f199  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)

  0x000000010ca1edb8: mov    %eax,0x20(%rsp)
  0x000000010ca1edbc: mov    %esi,0x1c(%rsp)
  0x000000010ca1edc0: mov    %edx,0x18(%rsp)
  0x000000010ca1edc4: mov    %r9d,0x14(%rsp)
  0x000000010ca1edc9: mov    %r8d,0x10(%rsp)
  0x000000010ca1edce: mov    %r11d,0xc(%rsp)
  0x000000010ca1edd3: mov    %edi,0x8(%rsp)
  0x000000010ca1edd7: mov    %rbx,(%rsp)
  0x000000010ca1eddb: mov    %rbp,%rdx
  0x000000010ca1edde: shl    $0x3,%rdx          ;*getfield inCharBuf
                                                ; - java.util.Properties$LineReader::readLine@45 (line 434)

  0x000000010ca1ede2: lea    (%r12,%rcx,8),%rsi  ;*getfield reader
                                                ; - java.util.Properties$LineReader::readLine@41 (line 434)

  0x000000010ca1ede6: mov    %rbx,%rbp
  0x000000010ca1ede9: xchg   %ax,%ax
  0x000000010ca1edeb: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop off=1072}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)
                                                ;   {optimized virtual_call}
  0x000000010ca1edf0: mov    %eax,0x24(%rsp)
  0x000000010ca1edf4: jmpq   0x000000010ca1ebf8
  0x000000010ca1edf9: mov    0x14(%rsp),%r11d
  0x000000010ca1edfe: test   %r11d,%r11d
  0x000000010ca1ee01: je     0x000000010ca1ee71  ;*iload_1
                                                ; - java.util.Properties$LineReader::readLine@99 (line 444)

  0x000000010ca1ee03: mov    0x20(%rsp),%edi
  0x000000010ca1ee07: jmpq   0x000000010ca1ec59
  0x000000010ca1ee0c: mov    %rbx,%rbp
  0x000000010ca1ee0f: mov    %edi,(%rsp)
  0x000000010ca1ee12: mov    %edx,0x4(%rsp)
  0x000000010ca1ee16: mov    %r11d,0x8(%rsp)
  0x000000010ca1ee1b: mov    %esi,0xc(%rsp)
  0x000000010ca1ee1f: mov    %r8d,0x10(%rsp)
  0x000000010ca1ee24: mov    %r9d,0x14(%rsp)
  0x000000010ca1ee29: mov    %r10d,0x18(%rsp)
  0x000000010ca1ee2e: mov    %ecx,0x1c(%rsp)
  0x000000010ca1ee32: mov    $0xffffffe4,%esi
  0x000000010ca1ee37: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [24]=NarrowOop off=1148}
                                                ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)
                                                ;   {runtime_call}
  0x000000010ca1ee3c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca1ee41: mov    %rbx,(%rsp)
  0x000000010ca1ee45: mov    %r11d,0xc(%rsp)
  0x000000010ca1ee4a: mov    %r8d,0x10(%rsp)
  0x000000010ca1ee4f: mov    %r9d,0x14(%rsp)
  0x000000010ca1ee54: mov    %ecx,0x18(%rsp)
  0x000000010ca1ee58: mov    %edi,0x1c(%rsp)
  0x000000010ca1ee5c: mov    %r10d,0x20(%rsp)
  0x000000010ca1ee61: mov    $0xffffffe4,%esi
  0x000000010ca1ee66: nop
  0x000000010ca1ee67: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=NarrowOop off=1196}
                                                ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x000000010ca1ee6c: callq  0x000000010be85e14  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x000000010ca1ee71: mov    %rax,-0x8(%rsp)
  0x000000010ca1ee76: mov    0x8(%rsp),%eax
  0x000000010ca1ee7a: mov    %eax,0x20(%rsp)
  0x000000010ca1ee7e: mov    -0x8(%rsp),%rax
  0x000000010ca1ee83: jmpq   0x000000010ca1ee03  ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)

  0x000000010ca1ee88: mov    %rbx,%rbp
  0x000000010ca1ee8b: mov    %edi,(%rsp)
  0x000000010ca1ee8e: mov    %edx,0x4(%rsp)
  0x000000010ca1ee92: mov    %r11d,0x8(%rsp)
  0x000000010ca1ee97: mov    %esi,0xc(%rsp)
  0x000000010ca1ee9b: mov    %r8d,0x10(%rsp)
  0x000000010ca1eea0: mov    %r9d,0x14(%rsp)
  0x000000010ca1eea5: mov    %r13d,0x18(%rsp)
  0x000000010ca1eeaa: mov    $0xffffff65,%esi
  0x000000010ca1eeaf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [24]=NarrowOop off=1268}
                                                ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)
                                                ;   {runtime_call}
  0x000000010ca1eeb4: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x000000010ca1eeb9: mov    %rbx,%rbp
  0x000000010ca1eebc: mov    %edi,(%rsp)
  0x000000010ca1eebf: mov    %r11d,0x8(%rsp)
  0x000000010ca1eec4: mov    %r8d,0xc(%rsp)
  0x000000010ca1eec9: mov    %r9d,0x10(%rsp)
  0x000000010ca1eece: mov    %r10d,0x14(%rsp)
  0x000000010ca1eed3: mov    $0xffffff65,%esi
  0x000000010ca1eed8: data32 xchg %ax,%ax
  0x000000010ca1eedb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1312}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x000000010ca1eee0: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x000000010ca1eee5: vmovq  %rcx,%xmm1
  0x000000010ca1eeea: mov    %r10d,0x8(%rsp)
  0x000000010ca1eeef: mov    %r9d,0x4(%rsp)
  0x000000010ca1eef4: mov    %r8d,(%rsp)
  0x000000010ca1eef8: mov    %r11d,%r14d
  0x000000010ca1eefb: movslq %edx,%rdx
  0x000000010ca1eefe: mov    %rdx,%r10
  0x000000010ca1ef01: shl    %r10
  0x000000010ca1ef04: add    $0x10,%r10
  0x000000010ca1ef08: mov    %r10,%r11
  0x000000010ca1ef0b: and    $0xfffffffffffffff9,%r11
  0x000000010ca1ef0f: mov    %rsi,%rdi
  0x000000010ca1ef12: add    %r11,%rdi
  0x000000010ca1ef15: mov    %rsi,0x10(%rsp)
  0x000000010ca1ef1a: shr    $0x3,%r10
  0x000000010ca1ef1e: sub    %r10,%r13
  0x000000010ca1ef21: mov    %r13,%rcx
  0x000000010ca1ef24: xor    %rax,%rax
  0x000000010ca1ef27: shl    $0x3,%rcx
  0x000000010ca1ef2b: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca1ef2e: vmovq  %xmm1,%rdi
  0x000000010ca1ef33: vmovq  %xmm0,%rsi
  0x000000010ca1ef38: movabs $0x10c9f44c0,%r10
  0x000000010ca1ef42: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x000000010ca1ef45: mov    %r14d,%r11d
  0x000000010ca1ef48: mov    (%rsp),%r8d
  0x000000010ca1ef4c: mov    0x4(%rsp),%r9d
  0x000000010ca1ef51: mov    0x8(%rsp),%r10d
  0x000000010ca1ef56: mov    0x10(%rsp),%rsi
  0x000000010ca1ef5b: jmpq   0x000000010ca1ed86  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)

  0x000000010ca1ef60: mov    %rbx,%rbp
  0x000000010ca1ef63: mov    %edi,(%rsp)
  0x000000010ca1ef66: mov    %edx,0x8(%rsp)
  0x000000010ca1ef6a: mov    %r11d,0xc(%rsp)
  0x000000010ca1ef6f: mov    %esi,0x10(%rsp)
  0x000000010ca1ef73: mov    %r8d,0x14(%rsp)
  0x000000010ca1ef78: mov    %r9d,0x18(%rsp)
  0x000000010ca1ef7d: mov    %r10d,0x1c(%rsp)
  0x000000010ca1ef82: mov    $0xffffff65,%esi
  0x000000010ca1ef87: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1484}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)
                                                ;   {runtime_call}
  0x000000010ca1ef8c: callq  0x000000010be85e14  ;*ifeq
                                                ; - java.util.Properties$LineReader::readLine@152 (line 454)
                                                ;   {runtime_call}
  0x000000010ca1ef91: mov    %rbx,%rbp
  0x000000010ca1ef94: mov    %edi,(%rsp)
  0x000000010ca1ef97: mov    %edx,0x8(%rsp)
  0x000000010ca1ef9b: mov    %r11d,0xc(%rsp)
  0x000000010ca1efa0: mov    %esi,0x10(%rsp)
  0x000000010ca1efa4: mov    %r8d,0x14(%rsp)
  0x000000010ca1efa9: mov    %r9d,0x18(%rsp)
  0x000000010ca1efae: mov    %r10d,0x1c(%rsp)
  0x000000010ca1efb3: mov    $0xffffff65,%esi
  0x000000010ca1efb8: data32 xchg %ax,%ax
  0x000000010ca1efbb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1536}
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)
                                                ;   {runtime_call}
  0x000000010ca1efc0: callq  0x000000010be85e14  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)
                                                ;   {runtime_call}
  0x000000010ca1efc5: mov    %ecx,0x38(%rsp)
  0x000000010ca1efc9: vmovsd %xmm1,0x30(%rsp)
  0x000000010ca1efcf: mov    %r13,0x28(%rsp)
  0x000000010ca1efd4: mov    %edi,0x1c(%rsp)
  0x000000010ca1efd8: mov    %rax,0x20(%rsp)
  0x000000010ca1efdd: mov    %edx,0x18(%rsp)
  0x000000010ca1efe1: mov    %r10d,0x14(%rsp)
  0x000000010ca1efe6: mov    %r9d,0x10(%rsp)
  0x000000010ca1efeb: mov    %r8d,0xc(%rsp)
  0x000000010ca1eff0: mov    %r11d,0x8(%rsp)
  0x000000010ca1eff5: mov    %rbx,(%rsp)        ;*ifge
                                                ; - java.util.Properties$LineReader::readLine@285 (line 482)

  0x000000010ca1eff9: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca1f003: mov    %edi,%edx
  0x000000010ca1f005: xchg   %ax,%ax
  0x000000010ca1f007: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [32]=Oop [56]=NarrowOop off=1612}
                                                ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)
                                                ;   {runtime_call}
  0x000000010ca1f00c: mov    %rax,%rcx
  0x000000010ca1f00f: mov    (%rsp),%rbx
  0x000000010ca1f013: mov    0x8(%rsp),%r11d
  0x000000010ca1f018: mov    0xc(%rsp),%r8d
  0x000000010ca1f01d: mov    0x10(%rsp),%r9d
  0x000000010ca1f022: mov    0x14(%rsp),%r10d
  0x000000010ca1f027: mov    0x18(%rsp),%edx
  0x000000010ca1f02b: mov    0x20(%rsp),%rax
  0x000000010ca1f030: mov    0x1c(%rsp),%edi
  0x000000010ca1f034: mov    0x28(%rsp),%r13
  0x000000010ca1f039: vmovsd 0x30(%rsp),%xmm1
  0x000000010ca1f03f: mov    %rcx,%rsi
  0x000000010ca1f042: jmpq   0x000000010ca1ecfe  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)

  0x000000010ca1f047: mov    %rbx,%rbp
  0x000000010ca1f04a: mov    %edi,(%rsp)
  0x000000010ca1f04d: mov    %edx,0x8(%rsp)
  0x000000010ca1f051: mov    %r11d,0xc(%rsp)
  0x000000010ca1f056: mov    %esi,0x10(%rsp)
  0x000000010ca1f05a: mov    %r9d,0x14(%rsp)
  0x000000010ca1f05f: mov    %r10d,0x18(%rsp)
  0x000000010ca1f064: mov    $0xffffff65,%esi
  0x000000010ca1f069: xchg   %ax,%ax
  0x000000010ca1f06b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1712}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)
                                                ;   {runtime_call}
  0x000000010ca1f070: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@246 (line 478)
                                                ;   {runtime_call}
  0x000000010ca1f075: mov    %rbx,%rbp
  0x000000010ca1f078: mov    %r8d,0x4(%rsp)
  0x000000010ca1f07d: mov    %r9d,0x8(%rsp)
  0x000000010ca1f082: mov    %edi,0xc(%rsp)
  0x000000010ca1f086: mov    $0xffffff65,%esi
  0x000000010ca1f08b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1744}
                                                ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)
                                                ;   {runtime_call}
  0x000000010ca1f090: callq  0x000000010be85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)
                                                ;   {runtime_call}
  0x000000010ca1f095: mov    %rbx,%rbp
  0x000000010ca1f098: mov    %edi,(%rsp)
  0x000000010ca1f09b: mov    %r9d,0x4(%rsp)
  0x000000010ca1f0a0: mov    %r13d,0x8(%rsp)
  0x000000010ca1f0a5: mov    $0xffffff65,%esi
  0x000000010ca1f0aa: nop
  0x000000010ca1f0ab: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1776}
                                                ;*if_icmplt
                                                ; - java.util.Properties$LineReader::readLine@377 (line 505)
                                                ;   {runtime_call}
  0x000000010ca1f0b0: callq  0x000000010be85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x000000010ca1f0b5: mov    %rbx,(%rsp)
  0x000000010ca1f0b9: mov    %r11d,0x8(%rsp)
  0x000000010ca1f0be: mov    %r8d,0xc(%rsp)
  0x000000010ca1f0c3: mov    %r9d,0x10(%rsp)
  0x000000010ca1f0c8: mov    $0xffffff65,%esi
  0x000000010ca1f0cd: xchg   %ax,%ax
  0x000000010ca1f0cf: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=1812}
                                                ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x000000010ca1f0d4: callq  0x000000010be85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x000000010ca1f0d9: movslq %edi,%r13          ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x000000010ca1f0dc: jmpq   0x000000010ca1ec91
  0x000000010ca1f0e1: mov    %rsi,0x18(%rsp)
  0x000000010ca1f0e6: mov    %rax,%rsi
  0x000000010ca1f0e9: mov    %edx,%r14d
  0x000000010ca1f0ec: mov    %r10d,0x14(%rsp)
  0x000000010ca1f0f1: mov    %r9d,0x10(%rsp)
  0x000000010ca1f0f6: mov    %r8d,0xc(%rsp)
  0x000000010ca1f0fb: mov    %r11d,0x8(%rsp)
  0x000000010ca1f100: mov    %rbx,(%rsp)
  0x000000010ca1f104: vmovq  %xmm0,%rdi
  0x000000010ca1f109: xor    %rax,%rax
  0x000000010ca1f10c: shl    $0x3,%rcx
  0x000000010ca1f110: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca1f113: xor    %edx,%edx
  0x000000010ca1f115: mov    0x18(%rsp),%rcx
  0x000000010ca1f11a: xor    %r8d,%r8d
  0x000000010ca1f11d: mov    %r14d,%r9d
  0x000000010ca1f120: data32 xchg %ax,%ax
  0x000000010ca1f123: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [24]=Oop off=1896}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)
                                                ;   {runtime_call}
  0x000000010ca1f128: mov    (%rsp),%rbx
  0x000000010ca1f12c: mov    0x8(%rsp),%r11d
  0x000000010ca1f131: mov    0xc(%rsp),%r8d
  0x000000010ca1f136: mov    0x10(%rsp),%r9d
  0x000000010ca1f13b: mov    0x14(%rsp),%r10d
  0x000000010ca1f140: mov    0x18(%rsp),%rsi
  0x000000010ca1f145: jmpq   0x000000010ca1ed86
  0x000000010ca1f14a: vmovq  %xmm0,%rdi
  0x000000010ca1f14f: xor    %rax,%rax
  0x000000010ca1f152: shl    $0x3,%rcx
  0x000000010ca1f156: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x000000010ca1f159: jmpq   0x000000010ca1ed86
  0x000000010ca1f15e: mov    %edi,(%rsp)
  0x000000010ca1f161: mov    %edx,0x4(%rsp)
  0x000000010ca1f165: mov    %r11d,0x8(%rsp)
  0x000000010ca1f16a: mov    %esi,0xc(%rsp)
  0x000000010ca1f16e: mov    %r8d,0x10(%rsp)
  0x000000010ca1f173: mov    %r9d,0x14(%rsp)
  0x000000010ca1f178: mov    %rbx,0x18(%rsp)
  0x000000010ca1f17d: mov    %r13d,0x20(%rsp)
  0x000000010ca1f182: mov    %r10d,0x24(%rsp)
  0x000000010ca1f187: mov    $0xffffffde,%esi
  0x000000010ca1f18c: data32 xchg %ax,%ax
  0x000000010ca1f18f: callq  0x000000010c9a71a0  ; OopMap{[24]=Oop [32]=NarrowOop [36]=NarrowOop off=2004}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {runtime_call}
  0x000000010ca1f194: callq  0x000000010be85e14  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {runtime_call}
  0x000000010ca1f199: mov    $0xfffffff6,%esi
  0x000000010ca1f19e: nop
  0x000000010ca1f19f: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=2020}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)
                                                ;   {runtime_call}
  0x000000010ca1f1a4: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca1f1a9: mov    $0xfffffff6,%esi
  0x000000010ca1f1ae: mov    %ecx,%ebp
  0x000000010ca1f1b0: data32 xchg %ax,%ax
  0x000000010ca1f1b3: callq  0x000000010c9a71a0  ; OopMap{off=2040}
                                                ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)
                                                ;   {runtime_call}
  0x000000010ca1f1b8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca1f1bd: mov    $0xfffffff6,%esi
  0x000000010ca1f1c2: mov    %edi,%ebp
  0x000000010ca1f1c4: mov    %r10d,(%rsp)
  0x000000010ca1f1c8: data32 xchg %ax,%ax
  0x000000010ca1f1cb: callq  0x000000010c9a71a0  ; OopMap{off=2064}
                                                ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x000000010ca1f1d0: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)
                                                ;   {runtime_call}
  0x000000010ca1f1d5: mov    %rax,%rsi
  0x000000010ca1f1d8: jmp    0x000000010ca1f1e7  ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x000000010ca1f1da: mov    %rax,%rsi
  0x000000010ca1f1dd: jmp    0x000000010ca1f1e7  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)

  0x000000010ca1f1df: mov    %rax,%rsi
  0x000000010ca1f1e2: jmp    0x000000010ca1f1e7
  0x000000010ca1f1e4: mov    %rax,%rsi          ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)

  0x000000010ca1f1e7: add    $0x50,%rsp
  0x000000010ca1f1eb: pop    %rbp
  0x000000010ca1f1ec: jmpq   0x000000010ca0f620  ;*aload_0
                                                ; - java.util.Properties$LineReader::readLine@21 (line 433)
                                                ;   {runtime_call}
  0x000000010ca1f1f1: hlt    
  0x000000010ca1f1f2: hlt    
  0x000000010ca1f1f3: hlt    
  0x000000010ca1f1f4: hlt    
  0x000000010ca1f1f5: hlt    
  0x000000010ca1f1f6: hlt    
  0x000000010ca1f1f7: hlt    
  0x000000010ca1f1f8: hlt    
  0x000000010ca1f1f9: hlt    
  0x000000010ca1f1fa: hlt    
  0x000000010ca1f1fb: hlt    
  0x000000010ca1f1fc: hlt    
  0x000000010ca1f1fd: hlt    
  0x000000010ca1f1fe: hlt    
  0x000000010ca1f1ff: hlt    
[Stub Code]
  0x000000010ca1f200: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca1f20a: jmpq   0x000000010ca1f20a  ;   {runtime_call}
  0x000000010ca1f20f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca1f219: jmpq   0x000000010ca1f219  ;   {runtime_call}
[Exception Handler]
  0x000000010ca1f21e: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca1f223: callq  0x000000010ca1f228
  0x000000010ca1f228: subq   $0x5,(%rsp)
  0x000000010ca1f22d: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca1f232: hlt    
  0x000000010ca1f233: hlt    
  0x000000010ca1f234: hlt    
  0x000000010ca1f235: hlt    
  0x000000010ca1f236: hlt    
  0x000000010ca1f237: hlt    
<nmethod compile_id='2' compiler='C2' entry='0x000000010ca1e9c0' size='5840' address='0x000000010ca1e810' relocation_offset='296' insts_offset='432' stub_offset='2544' scopes_data_offset='2632' scopes_pcs_offset='3904' dependencies_offset='5712' handler_table_offset='5720' nul_chk_table_offset='5816' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='5000' backedge_count='5000' iicount='33' stamp='0.106'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca1b410:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4e180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/Strin
<writer thread='7171'/>
[Loaded sun.security.action.GetBooleanAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
g&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010ca1b560: mov    0x8(%rsi),%r10d
  0x000000010ca1b564: shl    $0x3,%r10
  0x000000010ca1b568: cmp    %r10,%rax
  0x000000010ca1b56b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca1b571: data32 xchg %ax,%ax
  0x000000010ca1b574: nopl   0x0(%rax,%rax,1)
  0x000000010ca1b57c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca1b580: mov    %eax,-0x14000(%rsp)
  0x000000010ca1b587: push   %rbp
  0x000000010ca1b588: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x000000010ca1b58c: mov    %rsi,%r10
  0x000000010ca1b58f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010ca1b593: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010ca1b6cd
  0x000000010ca1b598: test   %ecx,%ecx
  0x000000010ca1b59a: jl     0x000000010ca1b695  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010ca1b5a0: mov    $0xffffffff,%eax
  0x000000010ca1b5a5: cmp    %ebp,%ecx
  0x000000010ca1b5a7: jge    0x000000010ca1b65d  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010ca1b5ad: cmp    $0x10000,%edx
  0x000000010ca1b5b3: jge    0x000000010ca1b6b1  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010ca1b5b9: cmp    %ebp,%ecx
  0x000000010ca1b5bb: jae    0x000000010ca1b679
  0x000000010ca1b5c1: mov    %ebp,%r10d
  0x000000010ca1b5c4: dec    %r10d
  0x000000010ca1b5c7: cmp    %ebp,%r10d
  0x000000010ca1b5ca: jae    0x000000010ca1b679
  0x000000010ca1b5d0: lea    (%r12,%r8,8),%r9
  0x000000010ca1b5d4: mov    %ecx,%r11d
  0x000000010ca1b5d7: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010ca1b5da: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b5e0: cmp    %edx,%r8d
  0x000000010ca1b5e3: je     0x000000010ca1b675  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b5e9: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010ca1b5eb: cmp    %r11d,%ecx
  0x000000010ca1b5ee: jl     0x000000010ca1b5da  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010ca1b5f0: mov    %ebp,%r11d
  0x000000010ca1b5f3: add    $0xfffffffffffffffd,%r11d
  0x000000010ca1b5f7: mov    $0x80000000,%r8d
  0x000000010ca1b5fd: cmp    %r11d,%r10d
  0x000000010ca1b600: cmovl  %r8d,%r11d
  0x000000010ca1b604: cmp    %r11d,%ecx
  0x000000010ca1b607: jge    0x000000010ca1b645
  0x000000010ca1b609: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010ca1b610: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b616: cmp    %edx,%r10d
  0x000000010ca1b619: je     0x000000010ca1b675  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b61b: movslq %ecx,%r10
  0x000000010ca1b61e: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b624: cmp    %edx,%ebx
  0x000000010ca1b626: je     0x000000010ca1b669  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b628: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b62e: cmp    %edx,%ebx
  0x000000010ca1b630: je     0x000000010ca1b66d  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b632: movzwl 0x16(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b638: cmp    %edx,%r8d
  0x000000010ca1b63b: je     0x000000010ca1b672  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b63d: add    $0x4,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010ca1b640: cmp    %r11d,%ecx
  0x000000010ca1b643: jl     0x000000010ca1b610  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010ca1b645: cmp    %ebp,%ecx
  0x000000010ca1b647: jge    0x000000010ca1b65d
  0x000000010ca1b649: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x000000010ca1b64c: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010ca1b652: cmp    %edx,%r11d
  0x000000010ca1b655: je     0x000000010ca1b675  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010ca1b657: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010ca1b659: cmp    %ebp,%ecx
  0x000000010ca1b65b: jl     0x000000010ca1b64c  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010ca1b65d: add    $0x30,%rsp
  0x000000010ca1b661: pop    %rbp
  0x000000010ca1b662: test   %eax,-0x2120668(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca1b668: retq   
  0x000000010ca1b669: inc    %ecx
  0x000000010ca1b66b: jmp    0x000000010ca1b675
  0x000000010ca1b66d: add    $0x2,%ecx
  0x000000010ca1b670: jmp    0x000000010ca1b675
  0x000000010ca1b672: add    $0x3,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x000000010ca1b675: mov    %ecx,%eax
  0x000000010ca1b677: jmp    0x000000010ca1b65d
  0x000000010ca1b679: mov    $0xffffff86,%esi
  0x000000010ca1b67e: mov    %edx,(%rsp)
  0x000000010ca1b681: mov    %ecx,0x4(%rsp)
  0x000000010ca1b685: mov    %r8d,0x8(%rsp)
  0x000000010ca1b68a: nop
  0x000000010ca1b68b: callq  0x000000010c9a71a0  ; OopMap{[8]=NarrowOop off=304}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010ca1b690: callq  0x000000010be85e14  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x000000010ca1b695: mov    $0xffffff65,%esi
  0x000000010ca1b69a: mov    %edx,(%rsp)
  0x000000010ca1b69d: mov    %ecx,0x8(%rsp)
  0x000000010ca1b6a1: mov    %r10,0x10(%rsp)
  0x000000010ca1b6a6: nop
  0x000000010ca1b6a7: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=332}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010ca1b6ac: callq  0x000000010be85e14  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x000000010ca1b6b1: mov    $0xffffff65,%esi
  0x000000010ca1b6b6: mov    %ecx,0x4(%rsp)
  0x000000010ca1b6ba: mov    %edx,0x8(%rsp)
  0x000000010ca1b6be: mov    %r10,0x10(%rsp)
  0x000000010ca1b6c3: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=360}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010ca1b6c8: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x000000010ca1b6cd: mov    $0xfffffff6,%esi
  0x000000010ca1b6d2: nop
  0x000000010ca1b6d3: callq  0x000000010c9a71a0  ; OopMap{off=376}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010ca1b6d8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010ca1b6dd: hlt    
  0x000000010ca1b6de: hlt    
  0x000000010ca1b6df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca1b6e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca1b6e5: callq  0x000000010ca1b6ea
  0x000000010ca1b6ea: subq   $0x5,(%rsp)
  0x000000010ca1b6ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca1b6f4: hlt    
  0x000000010ca1b6f5: hlt    
  0x000000010ca1b6f6: hlt    
  0x000000010ca1b6f7: hlt    
<nmethod compile_id='3' compiler='C2' entry='0x000000010ca1b560' size='1544' address='0x000000010ca1b410' relocation_offset='296' insts_offset='336' stub_offset='720' scopes_data_offset='752' scopes_pcs_offset='912' dependencies_offset='1520' nul_chk_table_offset='1528' method='java/lang/String indexOf (II)I' bytes='70' count='361' backedge_count='6083' iicount='361' stamp='0.108'/>
<writer thread='7171'/>
[Loaded java.net.InetAddress$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$InetAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImplFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6AddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.nameservice.NameService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.IPAddressUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet4Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksConsts from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketOptions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.PlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.ProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI$Parser from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList$Itr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks$Provider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.sdp.SdpProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address$Inet6AddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InterfaceAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.DefaultInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataOutput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Socket$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$BlockDataOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$HandleTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$ReplaceTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandles$Lookup from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType$ConcurrentWeakInternSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodTypeForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.Invokers from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandles from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.Wrapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.Wrapper$Format from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte$ByteCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short$ShortCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character$CharacterCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long$LongCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.VerifyAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.ValueConversions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca0ec90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112590a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x000000010ca0edc0: mov    0x8(%rsp),%rbx
  0x000000010ca0edc5: mov    0x18(%rbx),%rbx
  0x000000010ca0edc9: test   %rbx,%rbx
  0x000000010ca0edcc: je     0x000000010ca0edd5
  0x000000010ca0edd2: jmpq   *0x40(%rbx)
  0x000000010ca0edd5: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca0edda: hlt    
  0x000000010ca0eddb: hlt    
  0x000000010ca0eddc: hlt    
  0x000000010ca0eddd: hlt    
  0x000000010ca0edde: hlt    
  0x000000010ca0eddf: hlt    
<nmethod compile_id='4' compile_kind='c2n' entry='0x000000010ca0edc0' size='336' address='0x000000010ca0ec90' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.129'/>
[Loaded java.lang.invoke.LambdaForm$BasicType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$NamedFunction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.SimpleMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$SpeciesData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.BytecodeDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca1d650:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011126f860} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1d780: mov    0x18(%r8),%rbx
  0x000000010ca1d784: test   %rbx,%rbx
  0x000000010ca1d787: je     0x000000010ca1d790
  0x000000010ca1d78d: jmpq   *0x40(%rbx)
  0x000000010ca1d790: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1d795: hlt    
  0x000000010ca1d796: hlt    
  0x000000010ca1d797: hlt    
<nmethod compile_id='5' compile_kind='c2n' entry='0x000000010ca1d780' size='328' address='0x000000010ca1d650' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.132'/>
[Loaded java.lang.invoke.DirectMethodHandle$Lazy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InstantiationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca1d4d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000111270848} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1d600: mov    0x18(%rdx),%rbx
  0x000000010ca1d604: test   %rbx,%rbx
  0x000000010ca1d607: je     0x000000010ca1d610
  0x000000010ca1d60d: jmpq   *0x40(%rbx)
  0x000000010ca1d610: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1d615: hlt    
  0x000000010ca1d616: hlt    
  0x000000010ca1d617: hlt    
<nmethod compile_id='6' compile_kind='c2n' entry='0x000000010ca1d600' size='328' address='0x000000010ca1d4d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.133'/>
[Loaded java.util.Arrays$ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList$Itr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InvokerBytecodeGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ClassVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ClassWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ByteVector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Item from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.MethodVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.MethodWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Label from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Frame from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.AnnotationVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.AnnotationWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$Intrinsic from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InvokerBytecodeGenerator$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.VerifyType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.empty.Empty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Values from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$HashIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$ValueIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$DMH/1872034366 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca1c4d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011129e2a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1c600: mov    0x18(%rdx),%rbx
  0x000000010ca1c604: test   %rbx,%rbx
  0x000000010ca1c607: je     0x000000010ca1c610
  0x000000010ca1c60d: jmpq   *0x40(%rbx)
  0x000000010ca1c610: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1c615: hlt    
  0x000000010ca1c616: hlt    
  0x000000010ca1c617: hlt    
<nmethod compile_id='7' compile_kind='c2n' entry='0x000000010ca1c600' size='328' address='0x000000010ca1c4d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.137'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1581781576 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca1c350:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011129e400} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1c480: mov    0x18(%rdx),%rbx
  0x000000010ca1c484: test   %rbx,%rbx
  0x000000010ca1c487: je     0x000000010ca1c490
  0x000000010ca1c48d: jmpq   *0x40(%rbx)
  0x000000010ca1c490: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1c495: hlt    
  0x000000010ca1c496: hlt    
  0x000000010ca1c497: hlt    
<nmethod compile_id='8' compile_kind='c2n' entry='0x000000010ca1c480' size='328' address='0x000000010ca1c350' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.138'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1725154839 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca1c1d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000011129e518} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1c300: mov    0x18(%rcx),%rbx
  0x000000010ca1c304: test   %rbx,%rbx
  0x000000010ca1c307: je     0x000000010ca1c310
  0x000000010ca1c30d: jmpq   *0x40(%rbx)
  0x000000010ca1c310: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1c315: hlt    
  0x000000010ca1c316: hlt    
  0x000000010ca1c317: hlt    
<nmethod compile_id='9' compile_kind='c2n' entry='0x000000010ca1c300' size='328' address='0x000000010ca1c1d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.138'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1670675563 from java.lang.invoke.LambdaForm]
<task_queued compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='5000' backedge_count='1' iicount='10000' stamp='0.139' comment='count' hot_count='10000'/>
[Loaded java.lang.invoke.LambdaForm$DMH/723074861 from java.lang.invoke.LambdaForm]
[Loaded java.lang.NoSuchFieldException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca1be10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4cdb0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010ca1bf60: mov    0x8(%rsi),%r10d
  0x000000010ca1bf64: shl    $0x3,%r10
  0x000000010ca1bf68: cmp    %r10,%rax
  0x000000010ca1bf6b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca1bf71: data32 xchg %ax,%ax
  0x000000010ca1bf74: nopl   0x0(%rax,%rax,1)
  0x000000010ca1bf7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca1bf80: mov    %eax,-0x14000(%rsp)
  0x000000010ca1bf87: push   %rbp
  0x000000010ca1bf88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010ca1bf8c: test   %edx,%edx
  0x000000010ca1bf8e: jl     0x000000010ca1bfcd  ;*iflt
                                                ; -
<writer thread='7171'/>
[Loaded java.lang.invoke.InvokerBytecodeGenerator$CpPatch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
 java.lang.String::charAt@1 (line 657)

  0x000000010ca1bf90: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010ca1bf94: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x000000010ca1bffd
  0x000000010ca1bf99: cmp    %ebp,%edx
  0x000000010ca1bf9b: jge    0x000000010ca1bfe5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010ca1bf9d: cmp    %ebp,%edx
  0x000000010ca1bf9f: jae    0x000000010ca1bfb7
  0x000000010ca1bfa1: shl    $0x3,%r10
  0x000000010ca1bfa5: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010ca1bfab: add    $0x20,%rsp
  0x000000010ca1bfaf: pop    %rbp
  0x000000010ca1bfb0: test   %eax,-0x2120fb6(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca1bfb6: retq   
  0x000000010ca1bfb7: mov    $0xffffffe4,%esi
  0x000000010ca1bfbc: mov    %edx,%ebp
  0x000000010ca1bfbe: mov    %r10d,(%rsp)
  0x000000010ca1bfc2: nop
  0x000000010ca1bfc3: callq  0x000000010c9a71a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010ca1bfc8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010ca1bfcd: mov    %rsi,%rbp
  0x000000010ca1bfd0: mov    %edx,0x4(%rsp)
  0x000000010ca1bfd4: mov    $0xffffff65,%esi
  0x000000010ca1bfd9: xchg   %ax,%ax
  0x000000010ca1bfdb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1bfe0: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1bfe5: mov    %rsi,(%rsp)
  0x000000010ca1bfe9: mov    %edx,0xc(%rsp)
  0x000000010ca1bfed: mov    $0xffffff65,%esi
  0x000000010ca1bff2: nop
  0x000000010ca1bff3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1bff8: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1bffd: mov    $0xfffffff6,%esi
  0x000000010ca1c002: nop
  0x000000010ca1c003: callq  0x000000010c9a71a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1c008: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010ca1c00d: hlt    
  0x000000010ca1c00e: hlt    
  0x000000010ca1c00f: hlt    
  0x000000010ca1c010: hlt    
  0x000000010ca1c011: hlt    
  0x000000010ca1c012: hlt    
  0x000000010ca1c013: hlt    
  0x000000010ca1c014: hlt    
  0x000000010ca1c015: hlt    
  0x000000010ca1c016: hlt    
  0x000000010ca1c017: hlt    
  0x000000010ca1c018: hlt    
  0x000000010ca1c019: hlt    
  0x000000010ca1c01a: hlt    
  0x000000010ca1c01b: hlt    
  0x000000010ca1c01c: hlt    
  0x000000010ca1c01d: hlt    
  0x000000010ca1c01e: hlt    
  0x000000010ca1c01f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca1c020: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca1c025: callq  0x000000010ca1c02a
  0x000000010ca1c02a: subq   $0x5,(%rsp)
  0x000000010ca1c02f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca1c034: hlt    
  0x000000010ca1c035: hlt    
  0x000000010ca1c036: hlt    
  0x000000010ca1c037: hlt    
<nmethod compile_id='10' compiler='C2' entry='0x000000010ca1bf60' size='928' address='0x000000010ca1be10' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='6296' backedge_count='1' iicount='11296' stamp='0.141'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$MH/1304836502 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.DirectMethodHandle$Accessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/225534817 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1878246837 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/929338653 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1259475182 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1300109446 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1020371697 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/789451787 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1950409828 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1229416514 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/2016447921 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/666988784 from java.lang.invoke.LambdaForm]
[Loaded java.util.SubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccessSubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.SubList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList$ListItr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$DMH/617901222 from java.lang.invoke.LambdaForm]
[Loaded sun.misc.ObjectStreamClassValidator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca1ba50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112a3f68} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca1bb80: mov    0x18(%rcx),%rbx
  0x000000010ca1bb84: test   %rbx,%rbx
  0x000000010ca1bb87: je     0x000000010ca1bb90
  0x000000010ca1bb8d: jmpq   *0x40(%rbx)
  0x000000010ca1bb90: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca1bb95: hlt    
  0x000000010ca1bb96: hlt    
  0x000000010ca1bb97: hlt    
<nmethod compile_id='11' compile_kind='c2n' entry='0x000000010ca1bb80' size='328' address='0x000000010ca1ba50' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.147'/>
[Loaded java.lang.invoke.LambdaForm$DMH/798154996 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$DMH/681842940 from java.lang.invoke.LambdaForm]
[Loaded sun.misc.JavaObjectInputStreamAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca22a50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112a4ab0} &apos;linkToVirtual&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22b80: mov    0x8(%rsi),%r10d
  0x000000010ca22b84: shl    $0x3,%r10
  0x000000010ca22b88: mov    0x10(%rdx),%r11
  0x000000010ca22b8c: mov    0x1b8(%r10,%r11,8),%rbx
  0x000000010ca22b94: test   %rbx,%rbx
  0x000000010ca22b97: je     0x000000010ca22ba0
  0x000000010ca22b9d: jmpq   *0x40(%rbx)
  0x000000010ca22ba0: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca22ba5: hlt    
  0x000000010ca22ba6: hlt    
  0x000000010ca22ba7: hlt    
<nmethod compile_id='12' compile_kind='c2n' entry='0x000000010ca22b80' size='344' address='0x000000010ca22a50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle linkToVirtual (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.149'/>
[Loaded java.lang.invoke.LambdaForm$DMH/523429237 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.DelegatingMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$AsVarargsCollector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.WrongMethodTypeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca226d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112a8960} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22800: mov    0x14(%rsi),%ebx
  0x000000010ca22803: shl    $0x3,%rbx
  0x000000010ca22807: mov    0x28(%rbx),%ebx
  0x000000010ca2280a: shl    $0x3,%rbx
  0x000000010ca2280e: mov    0x18(%rbx),%rbx
  0x000000010ca22812: test   %rbx,%rbx
  0x000000010ca22815: je     0x000000010ca2281e
  0x000000010ca2281b: jmpq   *0x40(%rbx)
  0x000000010ca2281e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca22823: hlt    
  0x000000010ca22824: hlt    
  0x000000010ca22825: hlt    
  0x000000010ca22826: hlt    
  0x000000010ca22827: hlt    
<nmethod compile_id='13' compile_kind='c2n' entry='0x000000010ca22800' size='344' address='0x000000010ca226d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.150'/>
Decoding compiled method 0x000000010ca22550:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112a8a78} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22680: cmp    (%rsi),%rax
  0x000000010ca22683: mov    0x18(%rcx),%rbx
  0x000000010ca22687: test   %rbx,%rbx
  0x000000010ca2268a: je     0x000000010ca22693
  0x000000010ca22690: jmpq   *0x40(%rbx)
  0x000000010ca22693: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='14' compile_kind='c2n' entry='0x000000010ca22680' size='328' address='0x000000010ca22550' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.150'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1421795058 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1555009629 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/41359092 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.MethodHandleImpl$Lazy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca223d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112a9d88} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22500: mov    0x18(%rsi),%rbx
  0x000000010ca22504: test   %rbx,%rbx
  0x000000010ca22507: je     0x000000010ca22510
  0x000000010ca2250d: jmpq   *0x40(%rbx)
  0x000000010ca22510: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca22515: hlt    
  0x000000010ca22516: hlt    
  0x000000010ca22517: hlt    
<nmethod compile_id='15' compile_kind='c2n' entry='0x000000010ca22500' size='328' address='0x000000010ca223d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.152'/>
<task_queued compile_id='16' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='380' backedge_count='5000' iicount='380' stamp='0.152' comment='count' hot_count='380'/>
[Loaded java.lang.invoke.LambdaForm$DMH/149928006 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca22250:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112aa9a0} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22380: mov    0x14(%rsi),%ebx
  0x000000010ca22383: shl    $0x3,%rbx
  0x000000010ca22387: mov    0x28(%rbx),%ebx
  0x000000010ca2238a: shl    $0x3,%rbx
  0x000000010ca2238e: mov    0x18(%rbx),%rbx
  0x000000010ca22392: test   %rbx,%rbx
  0x000000010ca22395: je     0x000000010ca2239e
  0x000000010ca2239b: jmpq   *0x40(%rbx)
  0x000000010ca2239e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca223a3: hlt    
  0x000000010ca223a4: hlt    
  0x000000010ca223a5: hlt    
  0x000000010ca223a6: hlt    
  0x000000010ca223a7: hlt    
<nmethod compile_id='17' compile_kind='c2n' entry='0x000000010ca22380' size='344' address='0x000000010ca22250' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.153'/>
Decoding compiled method 0x000000010ca220d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112aaab8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22200: cmp    (%rsi),%rax
  0x000000010ca22203: mov    0x18(%rdx),%rbx
  0x000000010ca22207: test   %rbx,%rbx
  0x000000010ca2220a: je     0x000000010ca22213
  0x000000010ca22210: jmpq   *0x40(%rbx)
  0x000000010ca22213: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='18' compile_kind='c2n' entry='0x000000010ca22200' size='328' address='0x000000010ca220d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.153'/>
[Loaded java.lang.invoke.LambdaForm$DMH/713338599 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/168423058 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca21f50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112aaf08} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca22080: mov    0x14(%rsi),%ebx
  0x000000010ca22083: shl    $0x3,%rbx
  0x000000010ca22087: mov    0x28(%rbx),%ebx
  0x000000010ca2208a: shl    $0x3,%rbx
  0x000000010ca2208e: mov    0x18(%rbx),%rbx
  0x000000010ca22092: test   %rbx,%rbx
  0x000000010ca22095: je     0x000000010ca2209e
  0x000000010ca2209b: jmpq   *0x40(%rbx)
  0x000000010ca2209e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca220a3: hlt    
  0x000000010ca220a4: hlt    
  0x000000010ca220a5: hlt    
  0x000000010ca220a6: hlt    
  0x000000010ca220a7: hlt    
<nmethod compile_id='19' compile_kind='c2n' entry='0x000000010ca22080' size='344' address='0x000000010ca21f50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.154'/>
Decoding compiled method 0x000000010ca21dd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab020} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca21f00: cmp    (%rsi),%rax
  0x000000010ca21f03: mov    0x18(%r8),%rbx
  0x000000010ca21f07: test   %rbx,%rbx
  0x000000010ca21f0a: je     0x000000010ca21f13
  0x000000010ca21f10: jmpq   *0x40(%rbx)
  0x000000010ca21f13: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='20' compile_kind='c2n' entry='0x000000010ca21f00' size='328' address='0x000000010ca21dd0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.154'/>
[Loaded java.lang.invoke.LambdaForm$DMH/821270929 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1160460865 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca21c50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab138} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca21d80: mov    0x14(%rsi),%ebx
  0x000000010ca21d83: shl    $0x3,%rbx
  0x000000010ca21d87: mov    0x28(%rbx),%ebx
  0x000000010ca21d8a: shl    $0x3,%rbx
  0x000000010ca21d8e: mov    0x18(%rbx),%rbx
  0x000000010ca21d92: test   %rbx,%rbx
  0x000000010ca21d95: je     0x000000010ca21d9e
  0x000000010ca21d9b: jmpq   *0x40(%rbx)
  0x000000010ca21d9e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca21da3: hlt    
  0x000000010ca21da4: hlt    
  0x000000010ca21da5: hlt    
  0x000000010ca21da6: hlt    
  0x000000010ca21da7: hlt    
<nmethod compile_id='21' compile_kind='c2n' entry='0x000000010ca21d80' size='344' address='0x000000010ca21c50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.155'/>
Decoding compiled method 0x000000010ca21ad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab250} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca21c00: cmp    (%rsi),%rax
  0x000000010ca21c03: mov    0x18(%r9),%rbx
  0x000000010ca21c07: test   %rbx,%rbx
  0x000000010ca21c0a: je     0x000000010ca21c13
  0x000000010ca21c10: jmpq   *0x40(%rbx)
  0x000000010ca21c13: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='22' compile_kind='c2n' entry='0x000000010ca21c00' size='328' address='0x000000010ca21ad0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.156'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1247233941 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/258952499 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca21950:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab368} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca21a80: mov    0x18(%r9),%rbx
  0x000000010ca21a84: test   %rbx,%rbx
  0x000000010ca21a87: je     0x000000010ca21a90
  0x000000010ca21a8d: jmpq   *0x40(%rbx)
  0x000000010ca21a90: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca21a95: hlt    
  0x000000010ca21a96: hlt    
  0x000000010ca21a97: hlt    
<nmethod compile_id='23' compile_kind='c2n' entry='0x000000010ca21a80' size='328' address='0x000000010ca21950' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.157'/>
[Loaded java.lang.invoke.LambdaForm$DMH/603742814 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca202d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab480} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca20400: mov    0x14(%rsi),%ebx
  0x000000010ca20403: shl    $0x3,%rbx
  0x000000010ca20407: mov    0x28(%rbx),%ebx
  0x000000010ca2040a: shl    $0x3,%rbx
  0x000000010ca2040e: mov    0x18(%rbx),%rbx
  0x000000010ca20412: test   %rbx,%rbx
  0x000000010ca20415: je     0x000000010ca2041e
  0x000000010ca2041b: jmpq   *0x40(%rbx)
  0x000000010ca2041e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20423: hlt    
  0x000000010ca20424: hlt    
  0x000000010ca20425: hlt    
  0x000000010ca20426: hlt    
  0x000000010ca20427: hlt    
<nmethod compile_id='24' compile_kind='c2n' entry='0x000000010ca20400' size='344' address='0x000000010ca202d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.158'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca247d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000111283f40} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000010ca24940: mov    0x8(%rsi),%r10d
  0x000000010ca24944: shl    $0x3,%r10
  0x000000010ca24948: cmp    %r10,%rax
  0x000000010ca2494b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca24951: data32 xchg %ax,%ax
  0x000000010ca24954: nopl   0x0(%rax,%rax,1)
  0x000000010ca2495c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca24960: mov    %eax,-0x14000(%rsp)
  0x000000010ca24967: push   %rbp
  0x000000010ca24968: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)

  0x000000010ca2496c: mov    %rsi,%r10
  0x000000010ca2496f: mov    %rdx,0x10(%rsp)
  0x000000010ca24974: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010ca24dd6
  0x000000010ca24977: mov    0xc(%r12,%rcx,8),%r8d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x000000010ca24de5
  0x000000010ca2497c: cmp    $0xffff,%r8d
  0x000000010ca24983: jg     0x000000010ca24d93  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x000000010ca24989: mov    %rsi,%r9
  0x000000010ca2498c: mov    0x10(%rsi),%r13d   ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x000000010ca24990: mov    0xc(%r12,%r13,8),%eax  ; implicit exception: dispatches to 0x000000010ca24df5
  0x000000010ca24995: mov    0xc(%rsi),%ebx     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x000000010ca24998: mov    %r8d,%edi
  0x000000010ca2499b: add    %ebx,%edi          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca2499d: mov    %r8d,%edx
  0x000000010ca249a0: shr    $0x8,%edx          ;*iushr
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@59 (line 255)

  0x000000010ca249a3: mov    %edi,%esi
  0x000000010ca249a5: add    $0x2,%esi
  0x000000010ca249a8: movsbl %dl,%r11d          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@60 (line 255)

  0x000000010ca249ac: cmp    %eax,%esi
  0x000000010ca249ae: jle    0x000000010ca24a06  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x000000010ca249b0: mov    %r11d,0x18(%rsp)
  0x000000010ca249b5: mov    %edx,0xc(%rsp)
  0x000000010ca249b9: mov    %edi,0x8(%rsp)
  0x000000010ca249bd: mov    %ebx,0x4(%rsp)
  0x000000010ca249c1: mov    %r9,%rbp
  0x000000010ca249c4: mov    %r8d,%edx
  0x000000010ca249c7: mov    %r8d,(%rsp)
  0x000000010ca249cb: add    $0x2,%edx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@40 (line 246)

  0x000000010ca249ce: mov    %r9,%rsi
  0x000000010ca249d1: xchg   %ax,%ax
  0x000000010ca249d3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [16]=Oop off=152}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x000000010ca249d8: mov    %rbp,%r9
  0x000000010ca249db: mov    0x10(%r9),%r13d    ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x000000010ca249df: test   %r13d,%r13d
  0x000000010ca249e2: je     0x000000010ca24db6  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010ca249e8: mov    0x10(%rsp),%r10
  0x000000010ca249ed: mov    0xc(%r10),%ecx
  0x000000010ca249f1: mov    (%rsp),%r8d
  0x000000010ca249f5: mov    0x4(%rsp),%ebx
  0x000000010ca249f9: mov    0x8(%rsp),%edi
  0x000000010ca249fd: mov    0xc(%rsp),%edx
  0x000000010ca24a01: mov    0x18(%rsp),%r11d   ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24a06: mov    0xc(%r12,%r13,8),%ebp  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010ca24a0b: mov    %ebx,%r10d
  0x000000010ca24a0e: inc    %r10d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@53 (line 255)

  0x000000010ca24a11: cmp    %ebp,%ebx
  0x000000010ca24a13: jae    0x000000010ca24c81  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010ca24a19: lea    (%r12,%r13,8),%rax
  0x000000010ca24a1d: mov    %ebx,%r11d
  0x000000010ca24a20: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24a24: movslq %ebx,%rsi
  0x000000010ca24a27: mov    %dl,0x10(%rax,%rsi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010ca24a2b: cmp    %ebp,%r10d
  0x000000010ca24a2e: jae    0x000000010ca24cb5
  0x000000010ca24a34: movslq %ebx,%r10
  0x000000010ca24a37: mov    %r8b,0x11(%rax,%r10,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000000010ca24a3c: test   %r8d,%r8d
  0x000000010ca24a3f: jle    0x000000010ca24bd7  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010ca24a45: mov    0xc(%r12,%rcx,8),%edx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x000000010ca24ce1
  0x000000010ca24a4a: test   %edx,%edx
  0x000000010ca24a4c: jbe    0x000000010ca24ce1
  0x000000010ca24a52: mov    %r8d,%r10d
  0x000000010ca24a55: dec    %r10d
  0x000000010ca24a58: cmp    %edx,%r10d
  0x000000010ca24a5b: jae    0x000000010ca24ce1
  0x000000010ca24a61: cmp    %ebp,%r11d
  0x000000010ca24a64: jae    0x000000010ca24ce1
  0x000000010ca24a6a: inc    %edi
  0x000000010ca24a6c: cmp    %ebp,%edi
  0x000000010ca24a6e: jae    0x000000010ca24ce1
  0x000000010ca24a74: lea    (%r12,%rcx,8),%rbp
  0x000000010ca24a78: xor    %edi,%edi
  0x000000010ca24a7a: mov    $0x1,%r10d
  0x000000010ca24a80: cmp    %r10d,%r8d
  0x000000010ca24a83: mov    %r8d,%ecx
  0x000000010ca24a86: cmovg  %r10d,%ecx         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24a8a: mov    %edi,%r11d
  0x000000010ca24a8d: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24a90: test   %edi,%edi
  0x000000010ca24a92: jl     0x000000010ca24d0d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24a98: cmp    %edx,%edi
  0x000000010ca24a9a: jge    0x000000010ca24d4a  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24aa0: movzwl 0x10(%rbp,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24aa6: cmp    $0x1,%r10d
  0x000000010ca24aaa: jl     0x000000010ca24d41  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24ab0: cmp    $0x7f,%r10d
  0x000000010ca24ab4: jg     0x000000010ca24d81  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24aba: movslq %r11d,%rsi
  0x000000010ca24abd: mov    %r10b,0x12(%rax,%rsi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24ac2: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010ca24ac4: cmp    %ecx,%edi
  0x000000010ca24ac6: jl     0x000000010ca24a8a  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010ca24ac8: cmp    %edx,%r8d
  0x000000010ca24acb: mov    %r8d,%r10d
  0x000000010ca24ace: cmovg  %edx,%r10d
  0x000000010ca24ad2: mov    %r10d,%ecx
  0x000000010ca24ad5: add    $0xfffffffffffffffd,%ecx
  0x000000010ca24ad8: mov    $0x80000000,%esi
  0x000000010ca24add: cmp    %ecx,%r10d
  0x000000010ca24ae0: cmovl  %esi,%ecx
  0x000000010ca24ae3: cmp    %ecx,%edi
  0x000000010ca24ae5: jge    0x000000010ca24b8d
  0x000000010ca24aeb: jmp    0x000000010ca24af4
  0x000000010ca24aed: data32 xchg %ax,%ax
  0x000000010ca24af0: vmovd  %xmm1,%edx         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24af4: movzwl 0x10(%rbp,%rdi,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24af9: mov    %edi,%r11d
  0x000000010ca24afc: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24aff: cmp    $0x1,%esi
  0x000000010ca24b02: jl     0x000000010ca24bea  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24b08: cmp    $0x7f,%esi
  0x000000010ca24b0b: jg     0x000000010ca24c35  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24b11: vmovd  %edx,%xmm1
  0x000000010ca24b15: movslq %edi,%rdx
  0x000000010ca24b18: movzwl 0x12(%rbp,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24b1e: movslq %r11d,%r14
  0x000000010ca24b21: mov    %sil,0x12(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24b26: cmp    $0x1,%r10d
  0x000000010ca24b2a: jl     0x000000010ca24bfc  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24b30: cmp    $0x7f,%r10d
  0x000000010ca24b34: jg     0x000000010ca24c47  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24b3a: mov    %r10b,0x13(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24b3f: movzwl 0x14(%rbp,%rdx,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24b44: cmp    $0x1,%esi
  0x000000010ca24b47: jl     0x000000010ca24bf0  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24b4d: cmp    $0x7f,%esi
  0x000000010ca24b50: jg     0x000000010ca24c3b  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24b56: mov    %sil,0x14(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24b5b: movzwl 0x16(%rbp,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24b61: cmp    $0x1,%r10d
  0x000000010ca24b65: jl     0x000000010ca24c04  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24b6b: cmp    $0x7f,%r10d
  0x000000010ca24b6f: jg     0x000000010ca24c4f  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24b75: mov    %r10b,0x15(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24b7a: add    $0x4,%edi          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010ca24b7d: cmp    %ecx,%edi
  0x000000010ca24b7f: jl     0x000000010ca24af0  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010ca24b85: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24b89: vmovd  %xmm1,%edx
  0x000000010ca24b8d: cmp    %r8d,%edi
  0x000000010ca24b90: jge    0x000000010ca24bd3
  0x000000010ca24b92: xchg   %ax,%ax            ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24b94: mov    %edi,%r11d
  0x000000010ca24b97: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24b9a: test   %edi,%edi
  0x000000010ca24b9c: jl     0x000000010ca24d13  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24ba2: cmp    %edx,%edi
  0x000000010ca24ba4: jge    0x000000010ca24d50  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24baa: movzwl 0x10(%rbp,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24bb0: cmp    $0x1,%r10d
  0x000000010ca24bb4: jl     0x000000010ca24d8a  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24bba: cmp    $0x7f,%r10d
  0x000000010ca24bbe: jg     0x000000010ca24dad  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24bc4: movslq %r11d,%rcx
  0x000000010ca24bc7: mov    %r10b,0x12(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x000000010ca24bcc: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010ca24bce: cmp    %r8d,%edi
  0x000000010ca24bd1: jl     0x000000010ca24b94
  0x000000010ca24bd3: add    $0x3,%r11d         ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x000000010ca24bd7: mov    %r11d,0xc(%r9)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x000000010ca24bdb: mov    %r9,%rax
  0x000000010ca24bde: add    $0x40,%rsp
  0x000000010ca24be2: pop    %rbp
  0x000000010ca24be3: test   %eax,-0x2129be9(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca24be9: retq   
  0x000000010ca24bea: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24bee: jmp    0x000000010ca24bf7
  0x000000010ca24bf0: add    $0x4,%r11d
  0x000000010ca24bf4: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24bf7: mov    %esi,%r10d
  0x000000010ca24bfa: jmp    0x000000010ca24c0b
  0x000000010ca24bfc: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24c00: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010ca24c02: jmp    0x000000010ca24c0b
  0x000000010ca24c04: add    $0x5,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24c08: add    $0x3,%edi          ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x000000010ca24c0b: mov    $0xffffff65,%esi
  0x000000010ca24c10: mov    %r11d,%ebp
  0x000000010ca24c13: mov    %edi,(%rsp)
  0x000000010ca24c16: mov    %r10d,0x8(%rsp)
  0x000000010ca24c1b: mov    %r9,0x18(%rsp)
  0x000000010ca24c20: mov    %r8d,0xc(%rsp)
  0x000000010ca24c25: mov    %r13d,0x20(%rsp)
  0x000000010ca24c2a: nop
  0x000000010ca24c2b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=752}
                                                ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x000000010ca24c30: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x000000010ca24c35: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24c39: jmp    0x000000010ca24c42
  0x000000010ca24c3b: add    $0x4,%r11d
  0x000000010ca24c3f: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24c42: mov    %esi,%r10d
  0x000000010ca24c45: jmp    0x000000010ca24c56
  0x000000010ca24c47: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010ca24c4b: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x000000010ca24c4d: jmp    0x000000010ca24c56
  0x000000010ca24c4f: add    $0x5,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24c53: add    $0x3,%edi          ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x000000010ca24c56: mov    $0xffffff65,%esi
  0x000000010ca24c5b: mov    %r11d,%ebp
  0x000000010ca24c5e: mov    %edi,(%rsp)
  0x000000010ca24c61: mov    %r10d,0x8(%rsp)
  0x000000010ca24c66: mov    %r9,0x18(%rsp)
  0x000000010ca24c6b: mov    %r8d,0xc(%rsp)
  0x000000010ca24c70: mov    %r13d,0x20(%rsp)
  0x000000010ca24c75: xchg   %ax,%ax
  0x000000010ca24c77: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=828}
                                                ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x000000010ca24c7c: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x000000010ca24c81: mov    $0xffffffe4,%esi
  0x000000010ca24c86: mov    %ebx,%ebp
  0x000000010ca24c88: mov    %r9,(%rsp)
  0x000000010ca24c8c: rex.W pushq 0x10(%rsp)
  0x000000010ca24c91: rex.W popq 0x8(%rsp)
  0x000000010ca24c96: mov    %r8d,0x10(%rsp)
  0x000000010ca24c9b: mov    %r10d,0x14(%rsp)
  0x000000010ca24ca0: mov    %r13d,0x1c(%rsp)
  0x000000010ca24ca5: mov    %r11d,0x20(%rsp)
  0x000000010ca24caa: nop
  0x000000010ca24cab: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [28]=NarrowOop off=880}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010ca24cb0: callq  0x000000010be85e14  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x000000010ca24cb5: movsbl %r8b,%ebp          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@69 (line 256)

  0x000000010ca24cb9: mov    $0xffffffe4,%esi
  0x000000010ca24cbe: mov    %r11d,(%rsp)
  0x000000010ca24cc2: mov    %r9,0x8(%rsp)
  0x000000010ca24cc7: mov    %r8d,0x4(%rsp)
  0x000000010ca24ccc: mov    %r13d,0x1c(%rsp)
  0x000000010ca24cd1: mov    %r10d,0x20(%rsp)
  0x000000010ca24cd6: nop
  0x000000010ca24cd7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=924}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x000000010ca24cdc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca24ce1: mov    $0xffffff86,%esi
  0x000000010ca24ce6: mov    %r11d,%ebp
  0x000000010ca24ce9: mov    %r9,(%rsp)
  0x000000010ca24ced: rex.W pushq 0x10(%rsp)
  0x000000010ca24cf2: rex.W popq 0x8(%rsp)
  0x000000010ca24cf7: mov    %r8d,0x10(%rsp)
  0x000000010ca24cfc: mov    %r13d,0x14(%rsp)
  0x000000010ca24d01: xchg   %ax,%ax
  0x000000010ca24d03: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=968}
                                                ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24d08: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca24d0d: add    $0x2,%r11d
  0x000000010ca24d11: jmp    0x000000010ca24d17
  0x000000010ca24d13: add    $0x2,%r11d         ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24d17: mov    $0xffffff65,%esi
  0x000000010ca24d1c: mov    %r11d,%ebp
  0x000000010ca24d1f: mov    %edi,0x4(%rsp)
  0x000000010ca24d23: mov    %edi,0x8(%rsp)
  0x000000010ca24d27: mov    %r9,0x18(%rsp)
  0x000000010ca24d2c: mov    %r8d,0xc(%rsp)
  0x000000010ca24d31: mov    %r13d,0x20(%rsp)
  0x000000010ca24d36: nop
  0x000000010ca24d37: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=1020}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24d3c: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24d41: add    $0x2,%r11d
  0x000000010ca24d45: jmpq   0x000000010ca24c0b
  0x000000010ca24d4a: add    $0x2,%r11d
  0x000000010ca24d4e: jmp    0x000000010ca24d54
  0x000000010ca24d50: add    $0x2,%r11d         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x000000010ca24d54: mov    $0xffffff65,%esi
  0x000000010ca24d59: mov    %r11d,%ebp
  0x000000010ca24d5c: mov    %edi,0x4(%rsp)
  0x000000010ca24d60: mov    %edi,0x8(%rsp)
  0x000000010ca24d64: mov    %r9,0x18(%rsp)
  0x000000010ca24d69: mov    %r8d,0xc(%rsp)
  0x000000010ca24d6e: mov    %r13d,0x20(%rsp)
  0x000000010ca24d73: mov    %edx,0x24(%rsp)
  0x000000010ca24d77: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=1084}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24d7c: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24d81: add    $0x2,%r11d
  0x000000010ca24d85: jmpq   0x000000010ca24c56
  0x000000010ca24d8a: add    $0x2,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24d8e: jmpq   0x000000010ca24c0b
  0x000000010ca24d93: mov    $0xffffff65,%esi
  0x000000010ca24d98: mov    %r10,%rbp
  0x000000010ca24d9b: mov    %r8d,0xc(%rsp)
  0x000000010ca24da0: data32 xchg %ax,%ax
  0x000000010ca24da3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop off=1128}
                                                ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x000000010ca24da8: callq  0x000000010be85e14  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x000000010ca24dad: add    $0x2,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010ca24db1: jmpq   0x000000010ca24c56
  0x000000010ca24db6: mov    $0xfffffff6,%esi
  0x000000010ca24dbb: mov    0x4(%rsp),%ebp
  0x000000010ca24dbf: callq  0x000000010c9a71a0  ; OopMap{off=1156}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x000000010ca24dc4: callq  0x000000010be85e14  ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {runtime_call}
  0x000000010ca24dc9: mov    %rax,%rsi
  0x000000010ca24dcc: add    $0x40,%rsp
  0x000000010ca24dd0: pop    %rbp
  0x000000010ca24dd1: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca24dd6: mov    $0xfffffff6,%esi
  0x000000010ca24ddb: callq  0x000000010c9a71a0  ; OopMap{off=1184}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010ca24de0: callq  0x000000010be85e14  ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010ca24de5: mov    $0xfffffff6,%esi
  0x000000010ca24dea: nop
  0x000000010ca24deb: callq  0x000000010c9a71a0  ; OopMap{off=1200}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010ca24df0: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x000000010ca24df5: mov    $0xfffffff6,%esi
  0x000000010ca24dfa: nop
  0x000000010ca24dfb: callq  0x000000010c9a71a0  ; OopMap{off=1216}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x000000010ca24e00: callq  0x000000010be85e14  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x000000010ca24e05: hlt    
  0x000000010ca24e06: hlt    
  0x000000010ca24e07: hlt    
  0x000000010ca24e08: hlt    
  0x000000010ca24e09: hlt    
  0x000000010ca24e0a: hlt    
  0x000000010ca24e0b: hlt    
  0x000000010ca24e0c: hlt    
  0x000000010ca24e0d: hlt    
  0x000000010ca24e0e: hlt    
  0x000000010ca24e0f: hlt    
  0x000000010ca24e10: hlt    
  0x000000010ca24e11: hlt    
  0x000000010ca24e12: hlt    
  0x000000010ca24e13: hlt    
  0x000000010ca24e14: hlt    
  0x000000010ca24e15: hlt    
  0x000000010ca24e16: hlt    
  0x000000010ca24e17: hlt    
  0x000000010ca24e18: hlt    
  0x000000010ca24e19: hlt    
  0x000000010ca24e1a: hlt    
  0x000000010ca24e1b: hlt    
  0x000000010ca24e1c: hlt    
  0x000000010ca24e1d: hlt    
  0x000000010ca24e1e: hlt    
  0x000000010ca24e1f: hlt    
[Stub Code]
  0x000000010ca24e20: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca24e2a: jmpq   0x000000010ca24e2a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca24e2f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca24e34: callq  0x000000010ca24e39
  0x000000010ca24e39: subq   $0x5,(%rsp)
  0x000000010ca24e3e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca24e43: hlt    
  0x000000010ca24e44: hlt    
  0x000000010ca24e45: hlt    
  0x000000010ca24e46: hlt    
  0x000000010ca24e47: hlt    
<nmethod compile_id='16' compiler='C2' entry='0x000000010ca24940' size='3976' address='0x000000010ca247d0' relocation_offset='296' insts_offset='368' stub_offset='1616' scopes_data_offset='1680' scopes_pcs_offset='2208' dependencies_offset='3904' handler_table_offset='3912' nul_chk_table_offset='3936' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='514' backedge_count='8965' iicount='514' stamp='0.163'/>
<writer thread='7171'/>
Decoding compiled method 0x000000010ca20150:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab598} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca20280: cmp    (%rsi),%rax
  0x000000010ca20283: mov    0x18(%rdi),%rbx
  0x000000010ca20287: test   %rbx,%rbx
  0x000000010ca2028a: je     0x000000010ca20293
  0x000000010ca20290: jmpq   *0x40(%rbx)
  0x000000010ca20293: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='25' compile_kind='c2n' entry='0x000000010ca20280' size='328' address='0x000000010ca20150' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.163'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1067040082 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1325547227 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca1ff10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ab6b0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca20040: mov    0x18(%rdi),%rbx
  0x000000010ca20044: test   %rbx,%rbx
  0x000000010ca20047: je     0x000000010ca20050
  0x000000010ca2004d: jmpq   *0x40(%rbx)
  0x000000010ca20050: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20055: hlt    
  0x000000010ca20056: hlt    
  0x000000010ca20057: hlt    
<nmethod compile_id='26' compile_kind='c2n' entry='0x000000010ca20040' size='328' address='0x000000010ca1ff10' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.164'/>
[Loaded java.lang.invoke.LambdaForm$DMH/980546781 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca217d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112abc10} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca21900: mov    0x14(%rsi),%ebx
  0x000000010ca21903: shl    $0x3,%rbx
  0x000000010ca21907: mov    0x28(%rbx),%ebx
  0x000000010ca2190a: shl    $0x3,%rbx
  0x000000010ca2190e: mov    0x18(%rbx),%rbx
  0x000000010ca21912: test   %rbx,%rbx
  0x000000010ca21915: je     0x000000010ca2191e
  0x000000010ca2191b: jmpq   *0x40(%rbx)
  0x000000010ca2191e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca21923: hlt    
  0x000000010ca21924: hlt    
  0x000000010ca21925: hlt    
  0x000000010ca21926: hlt    
  0x000000010ca21927: hlt    
<nmethod compile_id='27' compile_kind='c2n' entry='0x000000010ca21900' size='344' address='0x000000010ca217d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.165'/>
Decoding compiled method 0x000000010ca21650:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112abd28} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x000000010ca21780: mov    0x8(%rsp),%rbx
  0x000000010ca21785: cmp    (%rsi),%rax
  0x000000010ca21788: mov    0x18(%rbx),%rbx
  0x000000010ca2178c: test   %rbx,%rbx
  0x000000010ca2178f: je     0x000000010ca21798
  0x000000010ca21795: jmpq   *0x40(%rbx)
  0x000000010ca21798: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2179d: hlt    
  0x000000010ca2179e: hlt    
  0x000000010ca2179f: hlt    
<nmethod compile_id='28' compile_kind='c2n' entry='0x000000010ca21780' size='336' address='0x000000010ca21650' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.166'/>
[Loaded java.lang.invoke.LambdaForm$DMH/2061475679 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/140435067 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca214d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112abe40} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x000000010ca21600: mov    0x14(%rsi),%ebx
  0x000000010ca21603: shl    $0x3,%rbx
  0x000000010ca21607: mov    0x28(%rbx),%ebx
  0x000000010ca2160a: shl    $0x3,%rbx
  0x000000010ca2160e: mov    0x18(%rbx),%rbx
  0x000000010ca21612: test   %rbx,%rbx
  0x000000010ca21615: je     0x000000010ca2161e
  0x000000010ca2161b: jmpq   *0x40(%rbx)
  0x000000010ca2161e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca21623: hlt    
  0x000000010ca21624: hlt    
  0x000000010ca21625: hlt    
  0x000000010ca21626: hlt    
  0x000000010ca21627: hlt    
<nmethod compile_id='29' compile_kind='c2n' entry='0x000000010ca21600' size='344' address='0x000000010ca214d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.167'/>
Decoding compiled method 0x000000010ca21350:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112abf58} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca21480: mov    0x10(%rsp),%rbx
  0x000000010ca21485: cmp    (%rsi),%rax
  0x000000010ca21488: mov    0x18(%rbx),%rbx
  0x000000010ca2148c: test   %rbx,%rbx
  0x000000010ca2148f: je     0x000000010ca21498
  0x000000010ca21495: jmpq   *0x40(%rbx)
  0x000000010ca21498: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2149d: hlt    
  0x000000010ca2149e: hlt    
  0x000000010ca2149f: hlt    
<nmethod compile_id='30' compile_kind='c2n' entry='0x000000010ca21480' size='336' address='0x000000010ca21350' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.168'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1450495309 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1670782018 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca211d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac070} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca21300: mov    0x10(%rsp),%rbx
  0x000000010ca21305: mov    0x18(%rbx),%rbx
  0x000000010ca21309: test   %rbx,%rbx
  0x000000010ca2130c: je     0x000000010ca21315
  0x000000010ca21312: jmpq   *0x40(%rbx)
  0x000000010ca21315: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2131a: hlt    
  0x000000010ca2131b: hlt    
  0x000000010ca2131c: hlt    
  0x000000010ca2131d: hlt    
  0x000000010ca2131e: hlt    
  0x000000010ca2131f: hlt    
<nmethod compile_id='31' compile_kind='c2n' entry='0x000000010ca21300' size='336' address='0x000000010ca211d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.169'/>
<task_queued compile_id='32' method='java/lang/String lastIndexOf (II)I' bytes='52' count='516' backedge_count='5000' iicount='516' stamp='0.169' comment='count' hot_count='516'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1706377736 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca21050:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac188} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  0x000000010ca21180: mov    0x14(%rsi),%ebx
  0x000000010ca21183: shl    $0x3,%rbx
  0x000000010ca21187: mov    0x28(%rbx),%ebx
  0x000000010ca2118a: shl    $0x3,%rbx
  0x000000010ca2118e: mov    0x18(%rbx),%rbx
  0x000000010ca21192: test   %rbx,%rbx
  0x000000010ca21195: je     0x000000010ca2119e
  0x000000010ca2119b: jmpq   *0x40(%rbx)
  0x000000010ca2119e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca211a3: hlt    
  0x000000010ca211a4: hlt    
  0x000000010ca211a5: hlt    
  0x000000010ca211a6: hlt    
  0x000000010ca211a7: hlt    
<nmethod compile_id='33' compile_kind='c2n' entry='0x000000010ca21180' size='344' address='0x000000010ca21050' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.170'/>
Decoding compiled method 0x000000010ca20ed0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac2a0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca21000: mov    0x18(%rsp),%rbx
  0x000000010ca21005: cmp    (%rsi),%rax
  0x000000010ca21008: mov    0x18(%rbx),%rbx
  0x000000010ca2100c: test   %rbx,%rbx
  0x000000010ca2100f: je     0x000000010ca21018
  0x000000010ca21015: jmpq   *0x40(%rbx)
  0x000000010ca21018: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2101d: hlt    
  0x000000010ca2101e: hlt    
  0x000000010ca2101f: hlt    
<nmethod compile_id='34' compile_kind='c2n' entry='0x000000010ca21000' size='336' address='0x000000010ca20ed0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.170'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca22cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4e3d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/468121027 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>
/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010ca22e20: mov    0x8(%rsi),%r10d
  0x000000010ca22e24: shl    $0x3,%r10
  0x000000010ca22e28: cmp    %r10,%rax
  0x000000010ca22e2b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca22e31: data32 xchg %ax,%ax
  0x000000010ca22e34: nopl   0x0(%rax,%rax,1)
  0x000000010ca22e3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca22e40: mov    %eax,-0x14000(%rsp)
  0x000000010ca22e47: push   %rbp
  0x000000010ca22e48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x000000010ca22e4c: mov    %rsi,%r10
  0x000000010ca22e4f: cmp    $0x10000,%edx
  0x000000010ca22e55: jge    0x000000010ca22f35  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x000000010ca22e5b: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x000000010ca22e5e: mov    0xc(%r12,%rbp,8),%r11d  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000010ca22f51
  0x000000010ca22e63: mov    %r11d,%eax
  0x000000010ca22e66: dec    %eax               ;*isub
                                                ; - java.lang.String::lastIndexOf@15 (line 1653)

  0x000000010ca22e68: cmp    %eax,%ecx
  0x000000010ca22e6a: cmovl  %ecx,%eax          ;*invokestatic min
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x000000010ca22e6d: test   %eax,%eax
  0x000000010ca22e6f: jl     0x000000010ca22efe  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010ca22e75: test   %r11d,%r11d
  0x000000010ca22e78: jbe    0x000000010ca22f1d
  0x000000010ca22e7e: cmp    %r11d,%eax
  0x000000010ca22e81: jae    0x000000010ca22f1d
  0x000000010ca22e87: mov    %eax,%r10d
  0x000000010ca22e8a: dec    %r10d
  0x000000010ca22e8d: lea    (%r12,%rbp,8),%r11  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010ca22e91: movzwl 0x10(%r11,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22e97: cmp    %edx,%r9d
  0x000000010ca22e9a: je     0x000000010ca22f0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22e9c: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010ca22e9e: cmp    %r10d,%eax
  0x000000010ca22ea1: jg     0x000000010ca22e91  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010ca22ea3: cmp    $0x2,%eax
  0x000000010ca22ea6: jle    0x000000010ca22ee4
  0x000000010ca22ea8: nopl   0x0(%rax,%rax,1)   ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010ca22eb0: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22eb6: cmp    %edx,%r10d
  0x000000010ca22eb9: je     0x000000010ca22f0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22ebb: movzwl 0xe(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22ec1: cmp    %edx,%r10d
  0x000000010ca22ec4: je     0x000000010ca22f05  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22ec6: movzwl 0xc(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22ecc: cmp    %edx,%r10d
  0x000000010ca22ecf: je     0x000000010ca22f09  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22ed1: movzwl 0xa(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22ed7: cmp    %edx,%r10d
  0x000000010ca22eda: je     0x000000010ca22f18  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22edc: add    $0xfffffffffffffffc,%eax  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010ca22edf: cmp    $0x2,%eax
  0x000000010ca22ee2: jg     0x000000010ca22eb0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010ca22ee4: cmp    $0xffffffffffffffff,%eax
  0x000000010ca22ee7: jle    0x000000010ca22efe
  0x000000010ca22ee9: data32 xchg %ax,%ax       ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x000000010ca22eec: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x000000010ca22ef2: cmp    %edx,%r10d
  0x000000010ca22ef5: je     0x000000010ca22f0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x000000010ca22ef7: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010ca22ef9: cmp    $0xffffffffffffffff,%eax
  0x000000010ca22efc: jg     0x000000010ca22eec  ;*iconst_m1
                                                ; - java.lang.String::lastIndexOf@43 (line 1659)

  0x000000010ca22efe: mov    $0xffffffff,%eax
  0x000000010ca22f03: jmp    0x000000010ca22f0c
  0x000000010ca22f05: dec    %eax
  0x000000010ca22f07: jmp    0x000000010ca22f0c
  0x000000010ca22f09: add    $0xfffffffffffffffe,%eax  ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x000000010ca22f0c: add    $0x20,%rsp
  0x000000010ca22f10: pop    %rbp
  0x000000010ca22f11: test   %eax,-0x2127f17(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca22f17: retq   
  0x000000010ca22f18: add    $0xfffffffffffffffd,%eax  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x000000010ca22f1b: jmp    0x000000010ca22f0c
  0x000000010ca22f1d: mov    $0xffffff86,%esi
  0x000000010ca22f22: mov    %edx,(%rsp)
  0x000000010ca22f25: mov    %eax,0x4(%rsp)
  0x000000010ca22f29: xchg   %ax,%ax
  0x000000010ca22f2b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=272}
                                                ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x000000010ca22f30: callq  0x000000010be85e14  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x000000010ca22f35: mov    $0xffffff65,%esi
  0x000000010ca22f3a: mov    %edx,(%rsp)
  0x000000010ca22f3d: mov    %r10,0x8(%rsp)
  0x000000010ca22f42: mov    %ecx,0x4(%rsp)
  0x000000010ca22f46: nop
  0x000000010ca22f47: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=300}
                                                ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x000000010ca22f4c: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x000000010ca22f51: mov    $0xfffffff6,%esi
  0x000000010ca22f56: nop
  0x000000010ca22f57: callq  0x000000010c9a71a0  ; OopMap{off=316}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010ca22f5c: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010ca22f61: hlt    
  0x000000010ca22f62: hlt    
  0x000000010ca22f63: hlt    
  0x000000010ca22f64: hlt    
  0x000000010ca22f65: hlt    
  0x000000010ca22f66: hlt    
  0x000000010ca22f67: hlt    
  0x000000010ca22f68: hlt    
  0x000000010ca22f69: hlt    
  0x000000010ca22f6a: hlt    
  0x000000010ca22f6b: hlt    
  0x000000010ca22f6c: hlt    
  0x000000010ca22f6d: hlt    
  0x000000010ca22f6e: hlt    
  0x000000010ca22f6f: hlt    
  0x000000010ca22f70: hlt    
  0x000000010ca22f71: hlt    
  0x000000010ca22f72: hlt    
  0x000000010ca22f73: hlt    
  0x000000010ca22f74: hlt    
  0x000000010ca22f75: hlt    
  0x000000010ca22f76: hlt    
  0x000000010ca22f77: hlt    
  0x000000010ca22f78: hlt    
  0x000000010ca22f79: hlt    
  0x000000010ca22f7a: hlt    
  0x000000010ca22f7b: hlt    
  0x000000010ca22f7c: hlt    
  0x000000010ca22f7d: hlt    
  0x000000010ca22f7e: hlt    
  0x000000010ca22f7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca22f80: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca22f85: callq  0x000000010ca22f8a
  0x000000010ca22f8a: subq   $0x5,(%rsp)
  0x000000010ca22f8f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca22f94: hlt    
  0x000000010ca22f95: hlt    
  0x000000010ca22f96: hlt    
  0x000000010ca22f97: hlt    
<nmethod compile_id='32' compiler='C2' entry='0x000000010ca22e20' size='1496' address='0x000000010ca22cd0' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='864' dependencies_offset='1472' nul_chk_table_offset='1480' method='java/lang/String lastIndexOf (II)I' bytes='52' count='529' backedge_count='5176' iicount='529' stamp='0.172'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$MH/1804094807 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca20d50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac3b8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca20e80: mov    0x18(%rsp),%rbx
  0x000000010ca20e85: mov    0x18(%rbx),%rbx
  0x000000010ca20e89: test   %rbx,%rbx
  0x000000010ca20e8c: je     0x000000010ca20e95
  0x000000010ca20e92: jmpq   *0x40(%rbx)
  0x000000010ca20e95: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20e9a: hlt    
  0x000000010ca20e9b: hlt    
  0x000000010ca20e9c: hlt    
  0x000000010ca20e9d: hlt    
  0x000000010ca20e9e: hlt    
  0x000000010ca20e9f: hlt    
<nmethod compile_id='35' compile_kind='c2n' entry='0x000000010ca20e80' size='336' address='0x000000010ca20d50' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.173'/>
<task_queued compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1295' backedge_count='5000' iicount='1295' stamp='0.173' comment='count' hot_count='1295'/>
[Loaded java.lang.invoke.LambdaForm$DMH/951007336 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca20bd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac4d0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  0x000000010ca20d00: mov    0x14(%rsi),%ebx
  0x000000010ca20d03: shl    $0x3,%rbx
  0x000000010ca20d07: mov    0x28(%rbx),%ebx
  0x000000010ca20d0a: shl    $0x3,%rbx
  0x000000010ca20d0e: mov    0x18(%rbx),%rbx
  0x000000010ca20d12: test   %rbx,%rbx
  0x000000010ca20d15: je     0x000000010ca20d1e
  0x000000010ca20d1b: jmpq   *0x40(%rbx)
  0x000000010ca20d1e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20d23: hlt    
  0x000000010ca20d24: hlt    
  0x000000010ca20d25: hlt    
  0x000000010ca20d26: hlt    
  0x000000010ca20d27: hlt    
<nmethod compile_id='37' compile_kind='c2n' entry='0x000000010ca20d00' size='344' address='0x000000010ca20bd0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.174'/>
Decoding compiled method 0x000000010ca20a50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac5e8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca20b80: mov    0x20(%rsp),%rbx
  0x000000010ca20b85: cmp    (%rsi),%rax
  0x000000010ca20b88: mov    0x18(%rbx),%rbx
  0x000000010ca20b8c: test   %rbx,%rbx
  0x000000010ca20b8f: je     0x000000010ca20b98
  0x000000010ca20b95: jmpq   *0x40(%rbx)
  0x000000010ca20b98: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20b9d: hlt    
  0x000000010ca20b9e: hlt    
  0x000000010ca20b9f: hlt    
<nmethod compile_id='38' compile_kind='c2n' entry='0x000000010ca20b80' size='336' address='0x000000010ca20a50' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.175'/>
[Loaded java.lang.invoke.LambdaForm$DMH/2001049719 from java.lang.invoke.LambdaForm]
<task_queued compile_id='39' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5000' backedge_count='1' iicount='10000' stamp='0.176' comment='count' hot_count='10000'/>
[Loaded java.lang.invoke.LambdaForm$MH/1528902577 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca208d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ac860} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca20a00: mov    0x20(%rsp),%rbx
  0x000000010ca20a05: mov    0x18(%rbx),%rbx
  0x000000010ca20a09: test   %rbx,%rbx
  0x000000010ca20a0c: je     0x000000010ca20a15
  0x000000010ca20a12: jmpq   *0x40(%rbx)
  0x000000010ca20a15: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca20a1a: hlt    
  0x000000010ca20a1b: hlt    
  0x000000010ca20a1c: hlt    
  0x000000010ca20a1d: hlt    
  0x000000010ca20a1e: hlt    
  0x000000010ca20a1f: hlt    
<nmethod compile_id='40' compile_kind='c2n' entry='0x000000010ca20a00' size='336' address='0x000000010ca208d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.177'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca20610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f49480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010ca20760: mov    0x8(%rsi),%r10d
  0x000000010ca20764: shl    $0x3,%r10
  0x000000010ca20768: cmp    %r10,%rax
  0x000000010ca2076b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca20771: data32 xchg %ax,%ax
  0x000000010ca20774: nopl   0x0(%rax,%rax,1)
  0x000000010ca2077c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca20780: mov    %eax,-0x14000(%rsp)
  0x000000010ca20787: push   %rbp
  0x000000010ca20788: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x000000010ca2078c: mov    0x8(%rsi),%r11d
  0x000000010ca20790: movabs $0x0,%r10
  0x000000010ca2079a: lea    (%r10,%r11,8),%r10
  0x000000010ca2079e: mov    $0x40000000,%r8d
  0x000000010ca207a4: test   %r8d,0x9c(%r10)
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1927950199 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>

  0x000000010ca207ab: je     0x000000010ca207b8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010ca207ad: mov    %rsi,%rbp
  0x000000010ca207b0: data32 xchg %ax,%ax
  0x000000010ca207b3: callq  0x000000010ca0f4a0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x000000010ca207b8: add    $0x10,%rsp
  0x000000010ca207bc: pop    %rbp
  0x000000010ca207bd: test   %eax,-0x21257c3(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca207c3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x000000010ca207c4: mov    %rax,%rsi
  0x000000010ca207c7: add    $0x10,%rsp
  0x000000010ca207cb: pop    %rbp
  0x000000010ca207cc: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca207d1: hlt    
  0x000000010ca207d2: hlt    
  0x000000010ca207d3: hlt    
  0x000000010ca207d4: hlt    
  0x000000010ca207d5: hlt    
  0x000000010ca207d6: hlt    
  0x000000010ca207d7: hlt    
  0x000000010ca207d8: hlt    
  0x000000010ca207d9: hlt    
  0x000000010ca207da: hlt    
  0x000000010ca207db: hlt    
  0x000000010ca207dc: hlt    
  0x000000010ca207dd: hlt    
  0x000000010ca207de: hlt    
  0x000000010ca207df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca207e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca207e5: callq  0x000000010ca207ea
  0x000000010ca207ea: subq   $0x5,(%rsp)
  0x000000010ca207ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca207f4: hlt    
  0x000000010ca207f5: hlt    
  0x000000010ca207f6: hlt    
  0x000000010ca207f7: hlt    
<nmethod compile_id='39' compiler='C2' entry='0x000000010ca20760' size='648' address='0x000000010ca20610' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='520' dependencies_offset='616' handler_table_offset='624' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5155' backedge_count='1' iicount='10155' stamp='0.177'/>
<writer thread='7171'/>
Decoding compiled method 0x000000010ca20450:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112acc80} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  0x000000010ca20580: mov    0x14(%rsi),%ebx
  0x000000010ca20583: shl    $0x3,%rbx
  0x000000010ca20587: mov    0x28(%rbx),%ebx
  0x000000010ca2058a: shl    $0x3,%rbx
  0x000000010ca2058e: mov    0x18(%rbx),%rbx
  0x000000010ca20592: test   %rbx,%rbx
  0x000000010ca20595: je     0x000000010ca2059e
  0x000000010ca2059b: jmpq   *0x40(%rbx)
  0x000000010ca2059e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca205a3: hlt    
  0x000000010ca205a4: hlt    
  0x000000010ca205a5: hlt    
  0x000000010ca205a6: hlt    
  0x000000010ca205a7: hlt    
<nmethod compile_id='41' compile_kind='c2n' entry='0x000000010ca20580' size='344' address='0x000000010ca20450' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.178'/>
Decoding compiled method 0x000000010ca26e90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112acd98} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca26fc0: mov    0x28(%rsp),%rbx
  0x000000010ca26fc5: cmp    (%rsi),%rax
  0x000000010ca26fc8: mov    0x18(%rbx),%rbx
  0x000000010ca26fcc: test   %rbx,%rbx
  0x000000010ca26fcf: je     0x000000010ca26fd8
  0x000000010ca26fd5: jmpq   *0x40(%rbx)
  0x000000010ca26fd8: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca26fdd: hlt    
  0x000000010ca26fde: hlt    
  0x000000010ca26fdf: hlt    
<nmethod compile_id='42' compile_kind='c2n' entry='0x000000010ca26fc0' size='336' address='0x000000010ca26e90' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.179'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca26650:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4d618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010ca267a0: mov    0x8(%rsi),%r10d
  0x000000010ca267a4: shl    $0x3,%r10
  0x000000010ca267a8: cmp    %r10,%rax
  0x000000010ca267ab: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca267b1: data32 xchg %ax,%ax
  0x000000010ca267b4: nopl   0x0(%rax,%rax,1)
  0x000000010ca267bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca267c0: mov    %eax,-0x14000(%rsp)
  0x000000010ca267c7: push   %rbp
  0x000000010ca267c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010ca267cc: cmp    %rdx,%rsi
  0x000000010ca267cf: jne    0x000000010ca267dc  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010ca267d1: mov    $0x1,%r13d
  0x000000010ca267d7: jmpq   0x000000010ca26956
  0x000000010ca267dc: mov    0x8(%rdx),%r10d    ; implicit exception: dispatches to 0x000000010ca269c1
  0x000000010ca267e0: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca267e7: jne    0x000000010ca269a9  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010ca267ed: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010ca267f0: mov    0xc(%r12,%rdi,8),%ecx  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ; implicit exception: dispatches to 0x000000010ca269d5
  0x000000010ca267f5: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010ca267f8: mov    0xc(%r12,%rax,8),%r14d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010ca269e5
  0x000000010ca267fd: cmp    %r14d,%ecx
  0x000000010ca26800: je     0x000000010ca2680a  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010ca26802: xor    %r13d,%r13d
  0x000000010ca26805: jmpq   0x000000010ca26956
  0x000000010ca2680a: test   %ecx,%ecx
  0x000000010ca2680c: je     0x000000010ca26950  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010ca26812: mov    %ecx,%r10d
  0x000000010ca26815: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010ca26818: vmovd  %r10d,%xmm0
  0x000000010ca2681d: movslq %ecx,%r10
  0x000000010ca26820: lea    (%r12,%rdi,8),%r11
  0x000000010ca26824: lea    (%r12,%rax,8),%rsi
  0x000000010ca26828: mov    %ecx,%r9d
  0x000000010ca2682b: add    $0xfffffffffffffffe,%r9d
  0x000000010ca2682f: mov    $0xffffffff,%r8d
  0x000000010ca26835: cmp    %r8d,%r9d
  0x000000010ca26838: cmovl  %r8d,%r9d
  0x000000010ca2683c: vmovd  %xmm0,%ebx
  0x000000010ca26840: xor    %r13d,%r13d
  0x000000010ca26843: vmovd  %xmm0,%edx
  0x000000010ca26847: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010ca26849: cmp    %ecx,%edx
  0x000000010ca2684b: jae    0x000000010ca2696b
  0x000000010ca26851: vmovd  %eax,%xmm1
  0x000000010ca26855: mov    %edi,%eax
  0x000000010ca26857: movslq %ebx,%rbp
  0x000000010ca2685a: mov    %r10,%rdi
  0x000000010ca2685d: sub    %rbp,%rdi
  0x000000010ca26860: movzwl 0xe(%r11,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca26866: cmp    %r14d,%edx
  0x000000010ca26869: jae    0x000000010ca26989  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca2686f: movzwl 0xe(%rsi,%rdi,2),%edx
  0x000000010ca26874: cmp    %edx,%ebp
  0x000000010ca26876: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca2687c: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010ca2687e: cmp    %r9d,%ebx
  0x000000010ca26881: jle    0x000000010ca2688b  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010ca26883: mov    %eax,%edi
  0x000000010ca26885: vmovd  %xmm1,%eax
  0x000000010ca26889: jmp    0x000000010ca26843
  0x000000010ca2688b: mov    %ecx,%edi
  0x000000010ca2688d: sub    %r14d,%edi
  0x000000010ca26890: dec    %edi
  0x000000010ca26892: cmp    %r8d,%edi
  0x000000010ca26895: cmovl  %r8d,%edi
  0x000000010ca26899: mov    %edi,%edx
  0x000000010ca2689b: add    $0x3,%edx
  0x000000010ca2689e: mov    $0x7fffffff,%r9d
  0x000000010ca268a4: cmp    %edx,%edi
  0x000000010ca268a6: cmovg  %r9d,%edx
  0x000000010ca268aa: cmp    %edx,%ebx
  0x000000010ca268ac: jle    0x000000010ca26918
  0x000000010ca268ae: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010ca268b0: movslq %ebx,%r8
  0x000000010ca268b3: mov    %r10,%r9
  0x000000010ca268b6: sub    %r8,%r9
  0x000000010ca268b9: movzwl 0xe(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca268bf: movzwl 0xe(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca268c5: cmp    %r8d,%edi
  0x000000010ca268c8: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca268ce: movzwl 0x10(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca268d4: movzwl 0x10(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca268da: cmp    %r8d,%edi
  0x000000010ca268dd: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca268df: mov    %ebx,%r9d
  0x000000010ca268e2: add    $0xfffffffffffffffe,%r9d
  0x000000010ca268e6: movslq %r9d,%r8
  0x000000010ca268e9: mov    %r10,%r9
  0x000000010ca268ec: sub    %r8,%r9
  0x000000010ca268ef: movzwl 0xe(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca268f5: movzwl 0xe(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca268fb: cmp    %r8d,%edi
  0x000000010ca268fe: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca26900: movzwl 0x10(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca26906: movzwl 0x10(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca2690c: cmp    %r8d,%edi
  0x000000010ca2690f: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca26911: add    $0xfffffffffffffffc,%ebx  ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010ca26914: cmp    %edx,%ebx
  0x000000010ca26916: jg     0x000000010ca268b0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010ca26918: cmp    $0xffffffffffffffff,%ebx
  0x000000010ca2691b: je     0x000000010ca26950
  0x000000010ca2691d: data32 xchg %ax,%ax
  0x000000010ca26920: vmovd  %xmm0,%edx
  0x000000010ca26924: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010ca26926: cmp    %ecx,%edx
  0x000000010ca26928: jae    0x000000010ca26965
  0x000000010ca2692a: movslq %ebx,%r9
  0x000000010ca2692d: mov    %r10,%r8
  0x000000010ca26930: sub    %r9,%r8
  0x000000010ca26933: movzwl 0xe(%r11,%r8,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010ca26939: cmp    %r14d,%edx
  0x000000010ca2693c: jae    0x000000010ca26989  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010ca2693e: movzwl 0xe(%rsi,%r8,2),%r8d
  0x000000010ca26944: cmp    %r8d,%ebp
  0x000000010ca26947: jne    0x000000010ca26956  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010ca26949: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010ca2694b: cmp    $0xffffffffffffffff,%ebx
  0x000000010ca2694e: jne    0x000000010ca26920  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x000000010ca26950: mov    $0x1,%r13d         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010ca26956: mov    %r13d,%eax
  0x000000010ca26959: add    $0x30,%rsp
  0x000000010ca2695d: pop    %rbp
  0x000000010ca2695e: test   %eax,-0x212b964(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca26964: retq   
  0x000000010ca26965: mov    %eax,%edi
  0x000000010ca26967: vmovd  %xmm1,%eax
  0x000000010ca2696b: mov    $0xffffffe4,%esi
  0x000000010ca26970: mov    %ebx,%ebp
  0x000000010ca26972: mov    %edx,0x4(%rsp)
  0x000000010ca26976: mov    %eax,0xc(%rsp)
  0x000000010ca2697a: mov    %edi,0x10(%rsp)
  0x000000010ca2697e: nop
  0x000000010ca2697f: callq  0x000000010c9a71a0  ; OopMap{[12]=NarrowOop [16]=NarrowOop off=484}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010ca26984: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010ca26989: mov    $0xffffffe4,%esi
  0x000000010ca2698e: mov    %ebx,(%rsp)
  0x000000010ca26991: mov    %edx,0x8(%rsp)
  0x000000010ca26995: mov    %eax,0xc(%rsp)
  0x000000010ca26999: vmovss %xmm1,0x14(%rsp)
  0x000000010ca2699f: callq  0x000000010c9a71a0  ; OopMap{[12]=NarrowOop [20]=NarrowOop off=516}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010ca269a4: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010ca269a9: mov    %rsi,%rbp
  0x000000010ca269ac: mov    %rdx,0x8(%rsp)
  0x000000010ca269b1: mov    $0xffffffde,%esi
  0x000000010ca269b6: nop
  0x000000010ca269b7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=540}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010ca269bc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca269c1: mov    %rsi,%rbp
  0x000000010ca269c4: mov    $0xfffffff4,%esi
  0x000000010ca269c9: xchg   %ax,%ax
  0x000000010ca269cb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=560}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010ca269d0: callq  0x000000010be85e14  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010ca269d5: mov    $0xfffffff6,%esi
  0x000000010ca269da: nop
  0x000000010ca269db: callq  0x000000010c9a71a0  ; OopMap{off=576}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010ca269e0: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010ca269e5: mov    $0xfffffff6,%esi
  0x000000010ca269ea: nop
  0x000000010ca269eb: callq  0x000000010c9a71a0  ; OopMap{off=592}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010ca269f0: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010ca269f5: hlt    
  0x000000010ca269f6: hlt    
  0x000000010ca269f7: hlt    
  0x000000010ca269f8: hlt    
  0x000000010ca269f9: hlt    
  0x000000010ca269fa: hlt    
  0x000000010ca269fb: hlt    
  0x000000010ca269fc: hlt    
  0x000000010ca269fd: hlt    
  0x000000010ca269fe: hlt    
  0x000000010ca269ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca26a00: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca26a05: callq  0x000000010ca26a0a
  0x000000010ca26a0a: subq   $0x5,(%rsp)
  0x000000010ca26a0f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca26a14: hlt    
  0x000000010ca26a15: hlt    
  0x000000010ca26a16: hlt    
  0x000000010ca26a17: hlt    
<nmethod compile_id='36' compiler='C2' entry='0x000000010ca267a0' size='2072' address='0x000000010ca26650' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='984' scopes_pcs_offset='1216' dependencies_offset='2032' nul_chk_table_offset='2040' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1360' backedge_count='5583' iicount='1360' stamp='0.181'/>
<writer thread='7171'/>
<task_queued compile_id='43' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='361' backedge_count='5000' iicount='361' stamp='0.181' comment='count' hot_count='361'/>
[Loaded java.lang.invoke.LambdaForm$DMH/868693306 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1746572565 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca264d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ad298} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca26600: mov    0x28(%rsp),%rbx
  0x000000010ca26605: mov    0x18(%rbx),%rbx
  0x000000010ca26609: test   %rbx,%rbx
  0x000000010ca2660c: je     0x000000010ca26615
  0x000000010ca26612: jmpq   *0x40(%rbx)
  0x000000010ca26615: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2661a: hlt    
  0x000000010ca2661b: hlt    
  0x000000010ca2661c: hlt    
  0x000000010ca2661d: hlt    
  0x000000010ca2661e: hlt    
  0x000000010ca2661f: hlt    
<nmethod compile_id='44' compile_kind='c2n' entry='0x000000010ca26600' size='336' address='0x000000010ca264d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.182'/>
[Loaded java.lang.invoke.LambdaForm$DMH/989110044 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca26350:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ad3b0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x20]   = &apos;java/lang/Object&apos;
  0x000000010ca26480: mov    0x14(%rsi),%ebx
  0x000000010ca26483: shl    $0x3,%rbx
  0x000000010ca26487: mov    0x28(%rbx),%ebx
  0x000000010ca2648a: shl    $0x3,%rbx
  0x000000010ca2648e: mov    0x18(%rbx),%rbx
  0x000000010ca26492: test   %rbx,%rbx
  0x000000010ca26495: je     0x000000010ca2649e
  0x000000010ca2649b: jmpq   *0x40(%rbx)
  0x000000010ca2649e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca264a3: hlt    
  0x000000010ca264a4: hlt    
  0x000000010ca264a5: hlt    
  0x000000010ca264a6: hlt    
  0x000000010ca264a7: hlt    
<nmethod compile_id='45' compile_kind='c2n' entry='0x000000010ca26480' size='344' address='0x000000010ca26350' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.183'/>
Decoding compiled method 0x000000010ca261d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ad4c8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca26300: mov    0x30(%rsp),%rbx
  0x000000010ca26305: cmp    (%rsi),%rax
  0x000000010ca26308: mov    0x18(%rbx),%rbx
  0x000000010ca2630c: test   %rbx,%rbx
  0x000000010ca2630f: je     0x000000010ca26318
  0x000000010ca26315: jmpq   *0x40(%rbx)
  0x000000010ca26318: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2631d: hlt    
  0x000000010ca2631e: hlt    
  0x000000010ca2631f: hlt    
<nmethod compile_id='46' compile_kind='c2n' entry='0x000000010ca26300' size='336' address='0x000000010ca261d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.184'/>
[Loaded java.lang.invoke.LambdaForm$DMH/424058530 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/321001045 from java.lang.invoke.LambdaForm]
[Loaded java.lang.NoSuchFieldError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalAccessException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010ca26050:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112add50} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca26180: mov    0x30(%rsp),%rbx
  0x000000010ca26185: mov    0x18(%rbx),%rbx
  0x000000010ca26189: test   %rbx,%rbx
  0x000000010ca2618c: je     0x000000010ca26195
  0x000000010ca26192: jmpq   *0x40(%rbx)
  0x000000010ca26195: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca2619a: hlt    
  0x000000010ca2619b: hlt    
  0x000000010ca2619c: hlt    
  0x000000010ca2619d: hlt    
  0x000000010ca2619e: hlt    
  0x000000010ca2619f: hlt    
<nmethod compile_id='47' compile_kind='c2n' entry='0x000000010ca26180' size='336' address='0x000000010ca26050' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.186'/>
[Loaded java.lang.invoke.LambdaForm$DMH/834600351 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca25c50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ade68} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/Object&apos;
  # parm12:   [sp+0x30]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010ca25d80: mov    0x38(%rsp),%rbx
  0x000000010ca25d85: mov    0x18(%rbx),%rbx
  0x000000010ca25d89: test   %rbx,%rbx
  0x000000010ca25d8c: je     0x000000010ca25d95
  0x000000010ca25d92: jmpq   *0x40(%rbx)
  0x000000010ca25d95: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca25d9a: hlt    
  0x000000010ca25d9b: hlt    
  0x000000010ca25d9c: hlt    
  0x000000010ca25d9d: hlt    
  0x000000010ca25d9e: hlt    
  0x000000010ca25d9f: hlt    
<nmethod compile_id='48' compile_kind='c2n' entry='0x000000010ca25d80' size='336' address='0x000000010ca25c50' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.187'/>
[Loaded java.lang.invoke.LambdaForm$DMH/471910020 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca25ad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ae3d8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca25c00: mov    0x18(%rcx),%rbx
  0x000000010ca25c04: test   %rbx,%rbx
  0x000000010ca25c07: je     0x000000010ca25c10
  0x000000010ca25c0d: jmpq   *0x40(%rbx)
  0x000000010ca25c10: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca25c15: hlt    
  0x000000010ca25c16: hlt    
  0x000000010ca25c17: hlt    
<nmethod compile_id='49' compile_kind='c2n' entry='0x000000010ca25c00' size='328' address='0x000000010ca25ad0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.189'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca27b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4ef38} &apos;replace&apos; &apos;(C
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1418481495 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>
C)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x40]  (sp of caller)
  0x000000010ca27cc0: mov    0x8(%rsi),%r10d
  0x000000010ca27cc4: shl    $0x3,%r10
  0x000000010ca27cc8: cmp    %r10,%rax
  0x000000010ca27ccb: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca27cd1: data32 xchg %ax,%ax
  0x000000010ca27cd4: nopl   0x0(%rax,%rax,1)
  0x000000010ca27cdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca27ce0: mov    %eax,-0x14000(%rsp)
  0x000000010ca27ce7: push   %rbp
  0x000000010ca27ce8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010ca27cec: mov    %rsi,%r11
  0x000000010ca27cef: mov    %ecx,0x8(%rsp)
  0x000000010ca27cf3: mov    %edx,%r10d
  0x000000010ca27cf6: cmp    %ecx,%edx
  0x000000010ca27cf8: je     0x000000010ca281b1  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000000010ca27cfe: mov    %rsi,%rcx
  0x000000010ca27d01: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010ca27d05: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x000000010ca281f5
  0x000000010ca27d0a: test   %r11d,%r11d
  0x000000010ca27d0d: jle    0x000000010ca28185  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010ca27d13: test   %r11d,%r11d
  0x000000010ca27d16: jbe    0x000000010ca280b1
  0x000000010ca27d1c: mov    %r11d,%r9d
  0x000000010ca27d1f: dec    %r9d
  0x000000010ca27d22: cmp    %r11d,%r9d
  0x000000010ca27d25: jae    0x000000010ca280b1  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca27d2b: movzwl 0x10(%r12,%r8,8),%esi
  0x000000010ca27d31: mov    %r11d,%ebx
  0x000000010ca27d34: add    $0xfffffffffffffffd,%ebx
  0x000000010ca27d37: lea    (%r12,%r8,8),%rdx  ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010ca27d3b: cmp    %ebx,%r9d
  0x000000010ca27d3e: mov    $0x80000000,%edi
  0x000000010ca27d43: cmovl  %edi,%ebx
  0x000000010ca27d46: cmp    %r10d,%esi
  0x000000010ca27d49: je     0x000000010ca2802c  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca27d4f: mov    $0x1,%ebp
  0x000000010ca27d54: cmp    $0x1,%ebx
  0x000000010ca27d57: jle    0x000000010ca28111
  0x000000010ca27d5d: xor    %esi,%esi
  0x000000010ca27d5f: nop                       ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca27d60: movzwl 0x10(%rdx,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca27d66: cmp    %r10d,%r9d
  0x000000010ca27d69: je     0x000000010ca27d7e  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca27d6b: movslq %ebp,%rax
  0x000000010ca27d6e: movzwl 0x12(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca27d73: cmp    %r10d,%edi
  0x000000010ca27d76: jne    0x000000010ca27ed3  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca27d7c: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca27d7e: cmp    %r11d,%ebp
  0x000000010ca27d81: jge    0x000000010ca281c9  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010ca27d87: cmp    $0x80000,%r11d
  0x000000010ca27d8e: ja     0x000000010ca28047
  0x000000010ca27d94: mov    0x60(%r15),%r13
  0x000000010ca27d98: movslq %r11d,%rcx
  0x000000010ca27d9b: shl    %rcx
  0x000000010ca27d9e: add    $0x17,%rcx
  0x000000010ca27da2: mov    %rcx,%r9
  0x000000010ca27da5: and    $0xfffffffffffffff8,%r9
  0x000000010ca27da9: mov    %r13,%rax
  0x000000010ca27dac: add    %r9,%rax
  0x000000010ca27daf: cmp    0x70(%r15),%rax
  0x000000010ca27db3: jae    0x000000010ca28047
  0x000000010ca27db9: mov    %rax,0x60(%r15)
  0x000000010ca27dbd: prefetchnta 0xc0(%rax)
  0x000000010ca27dc4: movq   $0x1,0x0(%r13)
  0x000000010ca27dcc: prefetchnta 0x100(%rax)
  0x000000010ca27dd3: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000010ca27ddb: mov    %r11d,0xc(%r13)
  0x000000010ca27ddf: prefetchnta 0x140(%rax)
  0x000000010ca27de6: mov    %r13,%rdi
  0x000000010ca27de9: add    $0x10,%rdi
  0x000000010ca27ded: prefetchnta 0x180(%rax)
  0x000000010ca27df4: shr    $0x3,%rcx
  0x000000010ca27df8: add    $0xfffffffffffffffe,%rcx
  0x000000010ca27dfc: xor    %rax,%rax
  0x000000010ca27dff: shl    $0x3,%rcx
  0x000000010ca27e03: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x000000010ca27e06: mov    %r13,0x10(%rsp)
  0x000000010ca27e0b: test   %ebp,%ebp
  0x000000010ca27e0d: jle    0x000000010ca27e97  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca27e13: mov    %ebp,%ecx
  0x000000010ca27e15: dec    %ecx
  0x000000010ca27e17: cmp    %r11d,%ecx
  0x000000010ca27e1a: jae    0x000000010ca28159
  0x000000010ca27e20: mov    $0x4,%r9d
  0x000000010ca27e26: cmp    %r9d,%ebp
  0x000000010ca27e29: mov    %ebp,%ecx
  0x000000010ca27e2b: cmovg  %r9d,%ecx          ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca27e2f: movzwl 0x10(%rdx,%rsi,2),%r9d
  0x000000010ca27e35: mov    0x10(%rsp),%rdi
  0x000000010ca27e3a: mov    %r9w,0x10(%rdi,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca27e40: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca27e42: cmp    %ecx,%esi
  0x000000010ca27e44: jl     0x000000010ca27e2f  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca27e46: mov    %ebp,%ecx
  0x000000010ca27e48: add    $0xfffffffffffffffd,%ecx
  0x000000010ca27e4b: cmp    %ecx,%ebp
  0x000000010ca27e4d: mov    $0x80000000,%edi
  0x000000010ca27e52: cmovl  %edi,%ecx
  0x000000010ca27e55: cmp    %ecx,%esi
  0x000000010ca27e57: jge    0x000000010ca27e79
  0x000000010ca27e59: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca27e60: vmovq  0x10(%rdx,%rsi,2),%xmm0
  0x000000010ca27e66: mov    0x10(%rsp),%r9
  0x000000010ca27e6b: vmovq  %xmm0,0x10(%r9,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca27e72: add    $0x4,%esi          ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca27e75: cmp    %ecx,%esi
  0x000000010ca27e77: jl     0x000000010ca27e60  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca27e79: cmp    %ebp,%esi
  0x000000010ca27e7b: jge    0x000000010ca27e97
  0x000000010ca27e7d: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca27e80: movzwl 0x10(%rdx,%rsi,2),%r9d
  0x000000010ca27e86: mov    0x10(%rsp),%rcx
  0x000000010ca27e8b: mov    %r9w,0x10(%rcx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca27e91: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca27e93: cmp    %ebp,%esi
  0x000000010ca27e95: jl     0x000000010ca27e80  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca27e97: cmp    %r11d,%ebp
  0x000000010ca27e9a: jae    0x000000010ca280dd
  0x000000010ca27ea0: mov    %ebp,%r8d
  0x000000010ca27ea3: inc    %r8d               ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca27ea6: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27eab: cmp    %r10d,%ecx
  0x000000010ca27eae: je     0x000000010ca28023
  0x000000010ca27eb4: mov    0x10(%rsp),%r9
  0x000000010ca27eb9: mov    %cx,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27ebf: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca27ec1: cmp    %r8d,%ebp
  0x000000010ca27ec4: jl     0x000000010ca27ea6  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca27ec6: cmp    %ebx,%ebp
  0x000000010ca27ec8: jge    0x000000010ca27f89
  0x000000010ca27ece: jmpq   0x000000010ca27f4e
  0x000000010ca27ed3: movzwl 0x14(%rdx,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca27ed9: cmp    %r10d,%r9d
  0x000000010ca27edc: jne    0x000000010ca27ee6  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca27ede: add    $0x2,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca27ee1: jmpq   0x000000010ca27d7e
  0x000000010ca27ee6: movzwl 0x16(%rdx,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca27eec: cmp    %r10d,%r9d
  0x000000010ca27eef: je     0x000000010ca28035  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca27ef5: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca27ef8: cmp    %ebx,%ebp
  0x000000010ca27efa: jl     0x000000010ca27d60  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010ca27f00: jmpq   0x000000010ca28113
  0x000000010ca27f05: mov    0x8(%rsp),%r9d
  0x000000010ca27f0a: nopw   0x0(%rax,%rax,1)
  0x000000010ca27f10: mov    0x10(%rsp),%r8
  0x000000010ca27f15: mov    %r9w,0x12(%r8,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27f1b: movzwl 0x14(%rdx,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27f21: cmp    %r10d,%r8d
  0x000000010ca27f24: je     0x000000010ca27f82
  0x000000010ca27f26: mov    0x10(%rsp),%r9
  0x000000010ca27f2b: mov    %r8w,0x14(%r9,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27f31: movzwl 0x16(%rdx,%rcx,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27f37: cmp    %r10d,%r9d
  0x000000010ca27f3a: je     0x000000010ca27f7b
  0x000000010ca27f3c: mov    0x10(%rsp),%r8
  0x000000010ca27f41: mov    %r9w,0x16(%r8,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27f47: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca27f4a: cmp    %ebx,%ebp
  0x000000010ca27f4c: jge    0x000000010ca27f89  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca27f4e: movzwl 0x10(%rdx,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27f54: cmp    %r10d,%r8d
  0x000000010ca27f57: je     0x000000010ca27f74
  0x000000010ca27f59: mov    0x10(%rsp),%r9
  0x000000010ca27f5e: mov    %r8w,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27f64: movslq %ebp,%rcx
  0x000000010ca27f67: movzwl 0x12(%rdx,%rcx,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27f6d: cmp    %r10d,%r9d
  0x000000010ca27f70: jne    0x000000010ca27f10  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010ca27f72: jmp    0x000000010ca27f05
  0x000000010ca27f74: mov    0x8(%rsp),%r8d
  0x000000010ca27f79: jmp    0x000000010ca27f59
  0x000000010ca27f7b: mov    0x8(%rsp),%r9d
  0x000000010ca27f80: jmp    0x000000010ca27f3c
  0x000000010ca27f82: mov    0x8(%rsp),%r8d
  0x000000010ca27f87: jmp    0x000000010ca27f26
  0x000000010ca27f89: cmp    %r11d,%ebp
  0x000000010ca27f8c: jge    0x000000010ca27fb1
  0x000000010ca27f8e: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca27f90: movzwl 0x10(%rdx,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca27f96: cmp    %r10d,%r8d
  0x000000010ca27f99: je     0x000000010ca2803d
  0x000000010ca27f9f: mov    0x10(%rsp),%r9
  0x000000010ca27fa4: mov    %r8w,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca27faa: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca27fac: cmp    %r11d,%ebp
  0x000000010ca27faf: jl     0x000000010ca27f90  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca27fb1: mov    0x60(%r15),%rax
  0x000000010ca27fb5: mov    %rax,%r10
  0x000000010ca27fb8: add    $0x18,%r10
  0x000000010ca27fbc: cmp    0x70(%r15),%r10
  0x000000010ca27fc0: jae    0x000000010ca28097
  0x000000010ca27fc6: mov    %r10,0x60(%r15)
  0x000000010ca27fca: prefetchnta 0xc0(%r10)
  0x000000010ca27fd2: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca27fd8: shl    $0x3,%r10
  0x000000010ca27fdc: mov    0xa8(%r10),%r10
  0x000000010ca27fe3: mov    %r10,(%rax)
  0x000000010ca27fe6: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca27fed: mov    %r12d,0xc(%rax)
  0x000000010ca27ff1: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010ca27ff5: mov    0x10(%rsp),%r10
  0x000000010ca27ffa: shr    $0x3,%r10
  0x000000010ca27ffe: mov    %r10d,0xc(%rax)
  0x000000010ca28002: mov    %rax,%r10
  0x000000010ca28005: shr    $0x9,%r10
  0x000000010ca28009: movabs $0x10c3a2000,%r11
  0x000000010ca28013: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010ca28017: add    $0x30,%rsp
  0x000000010ca2801b: pop    %rbp
  0x000000010ca2801c: test   %eax,-0x212d022(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca28022: retq   
  0x000000010ca28023: mov    0x8(%rsp),%ecx
  0x000000010ca28027: jmpq   0x000000010ca27eb4
  0x000000010ca2802c: xor    %ebp,%ebp
  0x000000010ca2802e: xor    %esi,%esi
  0x000000010ca28030: jmpq   0x000000010ca27d7e
  0x000000010ca28035: add    $0x3,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca28038: jmpq   0x000000010ca27d7e
  0x000000010ca2803d: mov    0x8(%rsp),%r8d
  0x000000010ca28042: jmpq   0x000000010ca27f9f
  0x000000010ca28047: mov    %esi,0x14(%rsp)
  0x000000010ca2804b: mov    %rdx,0x18(%rsp)
  0x000000010ca28050: mov    %ebx,0x10(%rsp)
  0x000000010ca28054: mov    %r11d,0xc(%rsp)
  0x000000010ca28059: mov    %r8d,0x4(%rsp)
  0x000000010ca2805e: mov    %r10d,(%rsp)
  0x000000010ca28062: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca2806c: mov    %r11d,%edx
  0x000000010ca2806f: callq  0x000000010ca11a60  ; OopMap{[4]=NarrowOop [24]=Oop off=948}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010ca28074: mov    (%rsp),%r10d
  0x000000010ca28078: mov    0x4(%rsp),%r8d
  0x000000010ca2807d: mov    0xc(%rsp),%r11d
  0x000000010ca28082: mov    0x10(%rsp),%ebx
  0x000000010ca28086: mov    0x18(%rsp),%rdx
  0x000000010ca2808b: mov    0x14(%rsp),%esi
  0x000000010ca2808f: mov    %rax,%r13
  0x000000010ca28092: jmpq   0x000000010ca27e06  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca28097: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca280a1: mov    0x10(%rsp),%rbp
  0x000000010ca280a6: nop
  0x000000010ca280a7: callq  0x000000010ca11960  ; OopMap{rbp=Oop [16]=Oop off=1004}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010ca280ac: jmpq   0x000000010ca27ff5
  0x000000010ca280b1: mov    $0xffffff86,%esi
  0x000000010ca280b6: mov    %edx,%ebp
  0x000000010ca280b8: mov    0x8(%rsp),%r9d
  0x000000010ca280bd: mov    %r9d,(%rsp)
  0x000000010ca280c1: mov    %rcx,0x8(%rsp)
  0x000000010ca280c6: mov    %r11d,0x4(%rsp)
  0x000000010ca280cb: mov    %r8d,0x10(%rsp)
  0x000000010ca280d0: data32 xchg %ax,%ax
  0x000000010ca280d3: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1048}
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)
                                                ;   {runtime_call}
  0x000000010ca280d8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca280dd: mov    $0xffffff86,%esi
  0x000000010ca280e2: mov    %r10d,(%rsp)
  0x000000010ca280e6: mov    0x8(%rsp),%r9d
  0x000000010ca280eb: mov    %r9d,0x4(%rsp)
  0x000000010ca280f0: rex.W pushq 0x10(%rsp)
  0x000000010ca280f5: rex.W popq 0x8(%rsp)
  0x000000010ca280fa: mov    %r11d,0x10(%rsp)
  0x000000010ca280ff: mov    %r8d,0x14(%rsp)
  0x000000010ca28104: data32 xchg %ax,%ax
  0x000000010ca28107: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1100}
                                                ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca2810c: callq  0x000000010be85e14  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca28111: xor    %esi,%esi
  0x000000010ca28113: cmp    %r11d,%ebp
  0x000000010ca28116: jge    0x000000010ca2812d  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca28118: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2811d: cmp    %r10d,%edi
  0x000000010ca28120: je     0x000000010ca27d7e  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca28126: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca28128: cmp    %r11d,%ebp
  0x000000010ca2812b: jl     0x000000010ca28118  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010ca2812d: mov    $0xffffff65,%esi
  0x000000010ca28132: mov    %r10d,(%rsp)
  0x000000010ca28136: mov    0x8(%rsp),%r9d
  0x000000010ca2813b: mov    %r9d,0x4(%rsp)
  0x000000010ca28140: mov    %rcx,0x10(%rsp)
  0x000000010ca28145: mov    %r8d,0x18(%rsp)
  0x000000010ca2814a: mov    %r11d,0x1c(%rsp)
  0x000000010ca2814f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=NarrowOop off=1172}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010ca28154: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca28159: mov    $0xffffff86,%esi
  0x000000010ca2815e: mov    %r10d,(%rsp)
  0x000000010ca28162: mov    0x8(%rsp),%r10d
  0x000000010ca28167: mov    %r10d,0x4(%rsp)
  0x000000010ca2816c: mov    %r13,0x8(%rsp)
  0x000000010ca28171: mov    %r11d,0x10(%rsp)
  0x000000010ca28176: mov    %r8d,0x14(%rsp)
  0x000000010ca2817b: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1216}
                                                ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010ca28180: callq  0x000000010be85e14  ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010ca28185: mov    $0xffffff65,%esi
  0x000000010ca2818a: mov    %edx,%ebp
  0x000000010ca2818c: mov    0x8(%rsp),%r10d
  0x000000010ca28191: mov    %r10d,(%rsp)
  0x000000010ca28195: mov    %rcx,0x8(%rsp)
  0x000000010ca2819a: mov    %r8d,0x10(%rsp)
  0x000000010ca2819f: mov    %r11d,0x14(%rsp)
  0x000000010ca281a4: data32 xchg %ax,%ax
  0x000000010ca281a7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1260}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010ca281ac: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010ca281b1: mov    $0xffffff65,%esi
  0x000000010ca281b6: mov    %edx,0x4(%rsp)
  0x000000010ca281ba: mov    %r11,0x10(%rsp)
  0x000000010ca281bf: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=1284}
                                                ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010ca281c4: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010ca281c9: mov    $0xffffff65,%esi
  0x000000010ca281ce: mov    %r10d,(%rsp)
  0x000000010ca281d2: mov    0x8(%rsp),%r10d
  0x000000010ca281d7: mov    %r10d,0x4(%rsp)
  0x000000010ca281dc: mov    %rcx,0x10(%rsp)
  0x000000010ca281e1: mov    %r8d,0x18(%rsp)
  0x000000010ca281e6: mov    %r11d,0x1c(%rsp)
  0x000000010ca281eb: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=NarrowOop off=1328}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)
                                                ;   {runtime_call}
  0x000000010ca281f0: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)
                                                ;   {runtime_call}
  0x000000010ca281f5: mov    $0xfffffff6,%esi
  0x000000010ca281fa: nop
  0x000000010ca281fb: callq  0x000000010c9a71a0  ; OopMap{off=1344}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x000000010ca28200: callq  0x000000010be85e14  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010ca28205: mov    %rax,%rsi
  0x000000010ca28208: jmp    0x000000010ca2820d
  0x000000010ca2820a: mov    %rax,%rsi          ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010ca2820d: add    $0x30,%rsp
  0x000000010ca28211: pop    %rbp
  0x000000010ca28212: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca28217: hlt    
  0x000000010ca28218: hlt    
  0x000000010ca28219: hlt    
  0x000000010ca2821a: hlt    
  0x000000010ca2821b: hlt    
  0x000000010ca2821c: hlt    
  0x000000010ca2821d: hlt    
  0x000000010ca2821e: hlt    
  0x000000010ca2821f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca28220: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca28225: callq  0x000000010ca2822a
  0x000000010ca2822a: subq   $0x5,(%rsp)
  0x000000010ca2822f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca28234: hlt    
  0x000000010ca28235: hlt    
  0x000000010ca28236: hlt    
  0x000000010ca28237: hlt    
<nmethod compile_id='43' compiler='C2' entry='0x000000010ca27cc0' size='3616' address='0x000000010ca27b50' relocation_offset='296' insts_offset='368' stub_offset='1744' scopes_data_offset='1792' scopes_pcs_offset='2184' dependencies_offset='3544' handler_table_offset='3552' nul_chk_table_offset='3600' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='453' backedge_count='7176' iicount='453' stamp='0.193'/>
<writer thread='7171'/>
Decoding compiled method 0x000000010ca25950:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112ae4f0} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca25a80: mov    0x18(%rcx),%rbx
  0x000000010ca25a84: test   %rbx,%rbx
  0x000000010ca25a87: je     0x000000010ca25a90
  0x000000010ca25a8d: jmpq   *0x40(%rbx)
  0x000000010ca25a90: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca25a95: hlt    
  0x000000010ca25a96: hlt    
  0x000000010ca25a97: hlt    
<nmethod compile_id='50' compile_kind='c2n' entry='0x000000010ca25a80' size='328' address='0x000000010ca25950' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.193'/>
[Loaded java.lang.invoke.LambdaForm$DMH/142257191 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1826771953 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaFormEditor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormEditor$Transform$Kind from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormEditor$Transform from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/1406718218 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/245257410 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1705736037 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca25790:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112b94d0} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca258c0: mov    0x18(%r8),%rbx
  0x000000010ca258c4: test   %rbx,%rbx
  0x000000010ca258c7: je     0x000000010ca258d0
  0x000000010ca258cd: jmpq   *0x40(%rbx)
  0x000000010ca258d0: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca258d5: hlt    
  0x000000010ca258d6: hlt    
  0x000000010ca258d7: hlt    
<nmethod compile_id='51' compile_kind='c2n' entry='0x000000010ca258c0' size='328' address='0x000000010ca25790' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.196'/>
<task_queued compile_id='52' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='160' backedge_count='5000' iicount='160' stamp='0.196' comment='count' hot_count='160'/>
[Loaded java.lang.invoke.LambdaForm$DMH/455659002 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010ca279d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112b95e8} &apos;invokeBasic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca27b00: mov    0x14(%rsi),%ebx
  0x000000010ca27b03: shl    $0x3,%rbx
  0x000000010ca27b07: mov    0x28(%rbx),%ebx
  0x000000010ca27b0a: shl    $0x3,%rbx
  0x000000010ca27b0e: mov    0x18(%rbx),%rbx
  0x000000010ca27b12: test   %rbx,%rbx
  0x000000010ca27b15: je     0x000000010ca27b1e
  0x000000010ca27b1b: jmpq   *0x40(%rbx)
  0x000000010ca27b1e: jmpq   0x000000010c9f9de0  ;   {runtime_call}
  0x000000010ca27b23: hlt    
  0x000000010ca27b24: hlt    
  0x000000010ca27b25: hlt    
  0x000000010ca27b26: hlt    
  0x000000010ca27b27: hlt    
<nmethod compile_id='53' compile_kind='c2n' entry='0x000000010ca27b00' size='344' address='0x000000010ca279d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.197'/>
Decoding compiled method 0x000000010ca27850:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001112b9700} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010ca27980: cmp    (%rsi),%rax
  0x000000010ca27983: mov    0x18(%r9),%rbx
  0x000000010ca27987: test   %rbx,%rbx
  0x000000010ca2798a: je     0x000000010ca27993
  0x000000010ca27990: jmpq   *0x40(%rbx)
  0x000000010ca27993: jmpq   0x000000010c9f9de0  ;   {runtime_call}
<nmethod compile_id='54' compile_kind='c2n' entry='0x000000010ca27980' size='328' address='0x000000010ca27850' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.197'/>
[Loaded java.lang.invoke.LambdaForm$DMH/250421012 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1915318863 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1283928880 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/295530567 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/2003749087 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$SpeciesData$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Factory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ReservationNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.FieldVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.FieldWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Species_LL from __JVM_DefineClass__]
[Loaded sun.reflect.UnsafeFieldAccessorFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Decoding compiled method 0x000000010ca2a650:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000111291590} &apos;getArgumentsAndReturnSizes&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/Type&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010ca2a800: mov    %eax,-0x14000(%rsp)
  0x000000010ca2a807: push   %rbp
  0x000000010ca2a808: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@-1 (line 437)

  0x000000010ca2a80c: mov    %rsi,%r10
  0x000000010ca2a80f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010ca2ac25
  0x000000010ca2a813: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010ca2ac35
  0x000000010ca2a818: cmp    $0x1,%ebp
  0x000000010ca2a81b: jle    0x000000010ca2abad  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a821: cmp    $0x1,%ebp
  0x000000010ca2a824: jbe    0x000000010ca2ab79
  0x000000010ca2a82a: movzwl 0x12(%r12,%r8,8),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a830: mov    $0x1,%ebp
  0x000000010ca2a835: mov    $0x2,%eax
  0x000000010ca2a83a: cmp    $0x29,%edx
  0x000000010ca2a83d: je     0x000000010ca2a955  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@16 (line 441)

  0x000000010ca2a843: mov    %r8d,%edi
  0x000000010ca2a846: mov    $0x3,%ecx
  0x000000010ca2a84b: mov    $0x2,%r11d
  0x000000010ca2a851: jmp    0x000000010ca2a8af
  0x000000010ca2a853: mov    %ecx,%r11d         ; OopMap{r10=Oop r8=NarrowOop rdi=NarrowOop off=86}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010ca2a856: test   %eax,-0x212f85c(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)
                                                ;   {poll}
  0x000000010ca2a85c: mov    %r11d,%r9d
  0x000000010ca2a85f: inc    %r9d               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@6 (line 440)

  0x000000010ca2a862: test   %r11d,%r11d
  0x000000010ca2a865: jl     0x000000010ca2aad1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a86b: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010ca2ac05
  0x000000010ca2a870: cmp    %ebp,%r11d
  0x000000010ca2a873: jge    0x000000010ca2ab15  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a879: cmp    %ebp,%r11d
  0x000000010ca2a87c: jae    0x000000010ca2aa89
  0x000000010ca2a882: lea    (%r12,%r8,8),%rcx
  0x000000010ca2a886: movzwl 0x10(%rcx,%r11,2),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a88c: cmp    $0x29,%edx
  0x000000010ca2a88f: je     0x000000010ca2a960  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@16 (line 441)

  0x000000010ca2a895: mov    0xc(%r10),%ebx     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a899: mov    %eax,%esi
  0x000000010ca2a89b: inc    %esi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@79 (line 448)

  0x000000010ca2a89d: mov    %r11d,%ecx
  0x000000010ca2a8a0: add    $0x2,%ecx          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010ca2a8a3: mov    %eax,%ebp
  0x000000010ca2a8a5: mov    %esi,%eax
  0x000000010ca2a8a7: mov    %edi,%r8d
  0x000000010ca2a8aa: mov    %ebx,%edi
  0x000000010ca2a8ac: mov    %r9d,%r11d         ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@79 (line 448)

  0x000000010ca2a8af: cmp    $0x4c,%edx
  0x000000010ca2a8b2: jne    0x000000010ca2a9b3  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@60 (line 445)

  0x000000010ca2a8b8: test   %r11d,%r11d
  0x000000010ca2a8bb: jl     0x000000010ca2aaf5  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a8c1: mov    0xc(%r12,%r8,8),%r9d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ; implicit exception: dispatches to 0x000000010ca2ac15
  0x000000010ca2a8c6: cmp    %r9d,%r11d
  0x000000010ca2a8c9: jge    0x000000010ca2ab39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a8cf: cmp    %r9d,%r11d
  0x000000010ca2a8d2: jae    0x000000010ca2aaad  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a8d8: lea    (%r12,%r8,8),%rdx
  0x000000010ca2a8dc: movzwl 0x10(%rdx,%r11,2),%r11d
  0x000000010ca2a8e2: cmp    $0x3b,%r11d
  0x000000010ca2a8e6: je     0x000000010ca2a853  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@73 (line 446)

  0x000000010ca2a8ec: mov    %ecx,%r11d
  0x000000010ca2a8ef: inc    %r11d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010ca2a8f2: test   %ecx,%ecx
  0x000000010ca2a8f4: jge    0x000000010ca2a906  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a8f6: mov    %r11d,%ebx
  0x000000010ca2a8f9: mov    %ecx,%r11d
  0x000000010ca2a8fc: jmp    0x000000010ca2a936
  0x000000010ca2a8fe: xchg   %ax,%ax
  0x000000010ca2a900: mov    %r11d,%ecx
  0x000000010ca2a903: mov    %ebx,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a906: cmp    %r9d,%ecx
  0x000000010ca2a909: jge    0x000000010ca2aa65  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a90f: cmp    %r9d,%ecx
  0x000000010ca2a912: jae    0x000000010ca2aa44  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a918: movzwl 0x10(%rdx,%rcx,2),%ecx
  0x000000010ca2a91d: cmp    $0x3b,%ecx
  0x000000010ca2a920: je     0x000000010ca2a856  ; OopMap{r10=Oop r8=NarrowOop rdi=NarrowOop rdx=Oop off=294}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)

  0x000000010ca2a926: test   %eax,-0x212f92c(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)
                                                ;   {poll}
  0x000000010ca2a92c: mov    %r11d,%ebx
  0x000000010ca2a92f: inc    %ebx               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010ca2a931: test   %r11d,%r11d
  0x000000010ca2a934: jge    0x000000010ca2a900  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010ca2a936: mov    $0xffffff65,%esi
  0x000000010ca2a93b: mov    %ebx,0x8(%rsp)
  0x000000010ca2a93f: mov    %r10,0x10(%rsp)
  0x000000010ca2a944: mov    %r11d,0x18(%rsp)
  0x000000010ca2a949: xchg   %ax,%ax
  0x000000010ca2a94b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=336}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2a950: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2a955: mov    $0x2,%r9d
  0x000000010ca2a95b: mov    $0x1,%eax          ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@19 (line 442)

  0x000000010ca2a960: test   %r9d,%r9d
  0x000000010ca2a963: jl     0x000000010ca2ab91  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010ca2a969: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ; implicit exception: dispatches to 0x000000010ca2ac45
  0x000000010ca2a96e: cmp    %ebp,%r9d
  0x000000010ca2a971: jge    0x000000010ca2abc1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010ca2a977: cmp    %ebp,%r9d
  0x000000010ca2a97a: jae    0x000000010ca2ab5d
  0x000000010ca2a980: lea    (%r12,%r8,8),%r10
  0x000000010ca2a984: movzwl 0x10(%r10,%r9,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010ca2a98a: shl    $0x2,%eax          ;*ishl
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@27 (line 443)

  0x000000010ca2a98d: cmp    $0x56,%ebp
  0x000000010ca2a990: je     0x000000010ca2a9a7  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@31 (line 443)

  0x000000010ca2a992: cmp    $0x44,%ebp
  0x000000010ca2a995: je     0x000000010ca2abdd  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)

  0x000000010ca2a99b: cmp    $0x4a,%ebp
  0x000000010ca2a99e: je     0x000000010ca2abf1  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)

  0x000000010ca2a9a4: or     $0x1,%eax          ;*ior  ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@55 (line 443)

  0x000000010ca2a9a7: add    $0x30,%rsp
  0x000000010ca2a9ab: pop    %rbp
  0x000000010ca2a9ac: test   %eax,-0x212f9b2(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2a9b2: retq   
  0x000000010ca2a9b3: cmp    $0x5b,%edx
  0x000000010ca2a9b6: je     0x000000010ca2a9d0  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@88 (line 449)

  0x000000010ca2a9b8: cmp    $0x44,%edx
  0x000000010ca2a9bb: je     0x000000010ca2a9c6  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@130 (line 456)

  0x000000010ca2a9bd: cmp    $0x4a,%edx
  0x000000010ca2a9c0: jne    0x000000010ca2a856
  0x000000010ca2a9c6: mov    %ebp,%eax
  0x000000010ca2a9c8: add    $0x2,%eax          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@139 (line 457)

  0x000000010ca2a9cb: jmpq   0x000000010ca2a856
  0x000000010ca2a9d0: mov    %r11d,0xc(%rsp)
  0x000000010ca2a9d5: mov    %ecx,0x8(%rsp)
  0x000000010ca2a9d9: mov    %r10,(%rsp)
  0x000000010ca2a9dd: mov    %r10,%rsi
  0x000000010ca2a9e0: mov    %r11d,%edx
  0x000000010ca2a9e3: callq  0x000000010c9e8020  ; OopMap{[0]=Oop off=488}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {optimized virtual_call}
  0x000000010ca2a9e8: cmp    $0x5b,%eax
  0x000000010ca2a9eb: je     0x000000010ca2aa1d
  0x000000010ca2a9ed: mov    0xc(%rsp),%r11d    ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@100 (line 450)

  0x000000010ca2a9f2: mov    (%rsp),%r10
  0x000000010ca2a9f6: mov    0xc(%r10),%edi     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010ca2a9fa: cmp    $0x44,%eax
  0x000000010ca2a9fd: je     0x000000010ca2aa38  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@112 (line 453)

  0x000000010ca2a9ff: cmp    $0x4a,%eax
  0x000000010ca2aa02: je     0x000000010ca2aa38  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@118 (line 453)

  0x000000010ca2aa04: mov    %edi,%r8d
  0x000000010ca2aa07: mov    %ebp,%eax
  0x000000010ca2aa09: jmpq   0x000000010ca2a856
  0x000000010ca2aa0e: xchg   %ax,%ax
  0x000000010ca2aa10: mov    0x8(%rsp),%r10d
  0x000000010ca2aa15: inc    %r10d
  0x000000010ca2aa18: mov    %r10d,0x8(%rsp)    ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@103 (line 451)

  0x000000010ca2aa1d: mov    (%rsp),%rsi
  0x000000010ca2aa21: mov    0x8(%rsp),%edx
  0x000000010ca2aa25: xchg   %ax,%ax
  0x000000010ca2aa27: callq  0x000000010c9e8020  ; OopMap{[0]=Oop off=556}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {optimized virtual_call}
  0x000000010ca2aa2c: cmp    $0x5b,%eax
  0x000000010ca2aa2f: je     0x000000010ca2aa10  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@100 (line 450)

  0x000000010ca2aa31: mov    0x8(%rsp),%r11d
  0x000000010ca2aa36: jmp    0x000000010ca2a9f2
  0x000000010ca2aa38: mov    %ebp,%eax
  0x000000010ca2aa3a: dec    %eax               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@121 (line 454)

  0x000000010ca2aa3c: mov    %edi,%r8d
  0x000000010ca2aa3f: jmpq   0x000000010ca2a856
  0x000000010ca2aa44: mov    $0xffffffe4,%esi
  0x000000010ca2aa49: mov    %r10,(%rsp)
  0x000000010ca2aa4d: mov    %r11d,0x8(%rsp)
  0x000000010ca2aa52: mov    %r8d,0xc(%rsp)
  0x000000010ca2aa57: mov    %ecx,0x10(%rsp)
  0x000000010ca2aa5b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [12]=NarrowOop off=608}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aa60: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aa65: mov    $0xffffff65,%esi
  0x000000010ca2aa6a: mov    %r11d,0x8(%rsp)
  0x000000010ca2aa6f: mov    %r10,0x10(%rsp)
  0x000000010ca2aa74: mov    %ecx,0x18(%rsp)
  0x000000010ca2aa78: mov    %r9d,0x1c(%rsp)
  0x000000010ca2aa7d: xchg   %ax,%ax
  0x000000010ca2aa7f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=644}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aa84: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aa89: mov    $0xffffffe4,%esi
  0x000000010ca2aa8e: mov    %r10,%rbp
  0x000000010ca2aa91: mov    %eax,(%rsp)
  0x000000010ca2aa94: mov    %r9d,0x4(%rsp)
  0x000000010ca2aa99: mov    %r8d,0x8(%rsp)
  0x000000010ca2aa9e: mov    %r11d,0xc(%rsp)
  0x000000010ca2aaa3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=NarrowOop off=680}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2aaa8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2aaad: mov    $0xffffffe4,%esi
  0x000000010ca2aab2: mov    %r10,(%rsp)
  0x000000010ca2aab6: mov    %ecx,0x8(%rsp)
  0x000000010ca2aaba: mov    %r8d,0xc(%rsp)
  0x000000010ca2aabf: mov    %r11d,0x10(%rsp)
  0x000000010ca2aac4: data32 xchg %ax,%ax
  0x000000010ca2aac7: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [12]=NarrowOop off=716}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aacc: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2aad1: mov    $0xffffff65,%esi
  0x000000010ca2aad6: mov    %eax,(%rsp)
  0x000000010ca2aad9: mov    %r9d,0x4(%rsp)
  0x000000010ca2aade: mov    %r10,0x8(%rsp)
  0x000000010ca2aae3: mov    %r11d,0x14(%rsp)
  0x000000010ca2aae8: data32 xchg %ax,%ax
  0x000000010ca2aaeb: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=752}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2aaf0: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2aaf5: mov    $0xffffff65,%esi
  0x000000010ca2aafa: mov    %ecx,0x8(%rsp)
  0x000000010ca2aafe: mov    %r10,0x10(%rsp)
  0x000000010ca2ab03: mov    %r11d,0x18(%rsp)
  0x000000010ca2ab08: data32 xchg %ax,%ax
  0x000000010ca2ab0b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=784}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ab10: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ab15: mov    $0xffffff65,%esi
  0x000000010ca2ab1a: mov    %eax,0x8(%rsp)
  0x000000010ca2ab1e: mov    %r9d,0xc(%rsp)
  0x000000010ca2ab23: mov    %r10,0x10(%rsp)
  0x000000010ca2ab28: mov    %r11d,0x1c(%rsp)
  0x000000010ca2ab2d: xchg   %ax,%ax
  0x000000010ca2ab2f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=820}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ab34: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ab39: mov    $0xffffff65,%esi
  0x000000010ca2ab3e: mov    %ecx,0x8(%rsp)
  0x000000010ca2ab42: mov    %r10,0x10(%rsp)
  0x000000010ca2ab47: mov    %r11d,0x18(%rsp)
  0x000000010ca2ab4c: mov    %r9d,0x1c(%rsp)
  0x000000010ca2ab51: xchg   %ax,%ax
  0x000000010ca2ab53: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=856}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ab58: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ab5d: mov    $0xffffffe4,%esi
  0x000000010ca2ab62: mov    %eax,%ebp
  0x000000010ca2ab64: mov    %r8d,(%rsp)
  0x000000010ca2ab68: mov    %r9d,0x4(%rsp)
  0x000000010ca2ab6d: xchg   %ax,%ax
  0x000000010ca2ab6f: callq  0x000000010c9a71a0  ; OopMap{[0]=NarrowOop off=884}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2ab74: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2ab79: mov    $0xffffffe4,%esi
  0x000000010ca2ab7e: mov    %r10,%rbp
  0x000000010ca2ab81: mov    %r8d,(%rsp)
  0x000000010ca2ab85: xchg   %ax,%ax
  0x000000010ca2ab87: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=NarrowOop off=908}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ab8c: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ab91: mov    $0xffffff65,%esi
  0x000000010ca2ab96: mov    %eax,%ebp
  0x000000010ca2ab98: mov    %r10,(%rsp)
  0x000000010ca2ab9c: mov    %r9d,0xc(%rsp)
  0x000000010ca2aba1: xchg   %ax,%ax
  0x000000010ca2aba3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=936}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2aba8: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2abad: mov    $0xffffff65,%esi
  0x000000010ca2abb2: mov    %r10,0x8(%rsp)
  0x000000010ca2abb7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=956}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2abbc: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2abc1: mov    $0xffffff65,%esi
  0x000000010ca2abc6: mov    %eax,(%rsp)
  0x000000010ca2abc9: mov    %r10,0x8(%rsp)
  0x000000010ca2abce: mov    %r9d,0x10(%rsp)
  0x000000010ca2abd3: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=984}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2abd8: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2abdd: mov    $0xffffff65,%esi
  0x000000010ca2abe2: mov    %eax,(%rsp)
  0x000000010ca2abe5: xchg   %ax,%ax
  0x000000010ca2abe7: callq  0x000000010c9a71a0  ; OopMap{off=1004}
                                                ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)
                                                ;   {runtime_call}
  0x000000010ca2abec: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)
                                                ;   {runtime_call}
  0x000000010ca2abf1: mov    $0xffffff65,%esi
  0x000000010ca2abf6: mov    %eax,(%rsp)
  0x000000010ca2abf9: xchg   %ax,%ax
  0x000000010ca2abfb: callq  0x000000010c9a71a0  ; OopMap{off=1024}
                                                ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)
                                                ;   {runtime_call}
  0x000000010ca2ac00: callq  0x000000010be85e14  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)
                                                ;   {runtime_call}
  0x000000010ca2ac05: mov    $0xfffffff6,%esi
  0x000000010ca2ac0a: nop
  0x000000010ca2ac0b: callq  0x000000010c9a71a0  ; OopMap{off=1040}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac10: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac15: mov    $0xfffffff6,%esi
  0x000000010ca2ac1a: nop
  0x000000010ca2ac1b: callq  0x000000010c9a71a0  ; OopMap{off=1056}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ac20: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ac25: mov    $0xfffffff6,%esi
  0x000000010ca2ac2a: nop
  0x000000010ca2ac2b: callq  0x000000010c9a71a0  ; OopMap{off=1072}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac30: callq  0x000000010be85e14  ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac35: mov    $0xfffffff6,%esi
  0x000000010ca2ac3a: nop
  0x000000010ca2ac3b: callq  0x000000010c9a71a0  ; OopMap{off=1088}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac40: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010ca2ac45: mov    $0xfffffff6,%esi
  0x000000010ca2ac4a: nop
  0x000000010ca2ac4b: callq  0x000000010c9a71a0  ; OopMap{off=1104}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010ca2ac50: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ac55: mov    %rax,%rsi
  0x000000010ca2ac58: jmp    0x000000010ca2ac5d
  0x000000010ca2ac5a: mov    %rax,%rsi          ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010ca2ac5d: add    $0x30,%rsp
  0x000000010ca2ac61: pop    %rbp
  0x000000010ca2ac62: jmpq   0x000000010ca0f620  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@73 (line 446)
                                                ;   {runtime_call}
  0x000000010ca2ac67: hlt    
  0x000000010ca2ac68: hlt    
  0x000000010ca2ac69: hlt    
  0x000000010ca2ac6a: hlt    
  0x000000010ca2ac6b: hlt    
  0x000000010ca2ac6c: hlt    
  0x000000010ca2ac6d: hlt    
  0x000000010ca2ac6e: hlt    
  0x000000010ca2ac6f: hlt    
  0x000000010ca2ac70: hlt    
  0x000000010ca2ac71: hlt    
  0x000000010ca2ac72: hlt    
  0x000000010ca2ac73: hlt    
  0x000000010ca2ac74: hlt    
  0x000000010ca2ac75: hlt    
  0x000000010ca2ac76: hlt    
  0x000000010ca2ac77: hlt    
  0x000000010ca2ac78: hlt    
  0x000000010ca2ac79: hlt    
  0x000000010ca2ac7a: hlt    
  0x000000010ca2ac7b: hlt    
  0x000000010ca2ac7c: hlt    
  0x000000010ca2ac7d: hlt    
  0x000000010ca2ac7e: hlt    
  0x000000010ca2ac7f: hlt    
[Stub Code]
  0x000000010ca2ac80: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca2ac8a: jmpq   0x000000010ca2ac8a  ;   {runtime_call}
  0x000000010ca2ac8f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca2ac99: jmpq   0x000000010ca2ac99  ;   {runtime_call}
[Exception Handler]
  0x000000010ca2ac9e: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca2aca3: callq  0x000000010ca2aca8
  0x000000010ca2aca8: subq   $0x5,(%rsp)
  0x000000010ca2acad: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2acb2: hlt    
  0x000000010ca2acb3: hlt    
  0x000000010ca2acb4: hlt    
  0x000000010ca2acb5: hlt    
  0x000000010ca2acb6: hlt    
  0x000000010ca2acb7: hlt    
<nmethod compile_id='52' compiler='C2' entry='0x000000010ca2a800' size='4168' address='0x000000010ca2a650' relocation_offset='296' insts_offset='432' stub_offset='1584' scopes_data_offset='1656' scopes_pcs_offset='2464' dependencies_offset='4064' handler_table_offset='4072' nul_chk_table_offset='4120' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='203' backedge_count='7126' iicount='203' stamp='0.206'/>
<writer thread='7171'/>
[Loaded sun.reflect.UnsafeStaticObjectFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$EntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$BMH/1096979270 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1078694789 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L3 from __JVM_DefineClass__]
[Loaded java.lang.invoke.LambdaForm$BMH/1747585824 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L4 from __JVM_DefineClass__]
<task_queued compile_id='55' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='417' backedge_count='5000' iicount='417' stamp='0.211' comment='count' hot_count='417'/>
[Loaded java.lang.invoke.LambdaForm$BMH/558638686 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.AbstractValidatingLambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.PropertyPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.SecurityConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecurityPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InfoFromMemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.TypeConvertingMethodAdapter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$$Lambda$1/2093631819 from java.io.ObjectInputStream]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/2074407503 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/999966131 from java.lang.invoke.LambdaForm]
[Loaded java.net.Socket$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca2b6d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110f4e7e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = 
<writer thread='7171'/>
[Loaded java.io.ObjectInputStream$BlockDataInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x60]   = int  (sp of caller)
  0x000000010ca2b840: mov    %eax,-0x14000(%rsp)
  0x000000010ca2b847: push   %rbp
  0x000000010ca2b848: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)

  0x000000010ca2b84c: mov    %r8,%r10
  0x000000010ca2b84f: mov    %edx,0x14(%rsp)
  0x000000010ca2b853: mov    %ecx,%r11d
  0x000000010ca2b856: mov    0x60(%rsp),%r8d
  0x000000010ca2b85b: cmp    %ecx,%r8d
  0x000000010ca2b85e: jge    0x000000010ca2bb41  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x000000010ca2b864: test   %r8d,%r8d
  0x000000010ca2b867: jl     0x000000010ca2bb71  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010ca2b86d: mov    %edi,%ecx
  0x000000010ca2b86f: test   %edi,%edi
  0x000000010ca2b871: je     0x000000010ca2bb9d  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x000000010ca2b877: mov    %r10,%r14
  0x000000010ca2b87a: mov    0xc(%r10),%ebx     ; implicit exception: dispatches to 0x000000010ca2bc49
  0x000000010ca2b87e: mov    %r9d,%edi
  0x000000010ca2b881: cmp    %ebx,%r9d
  0x000000010ca2b884: jae    0x000000010ca2ba61  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010ca2b88a: mov    %edx,%r10d
  0x000000010ca2b88d: add    0x60(%rsp),%r10d   ;*iadd
                                                ; - java.lang.String::indexOf@50 (line 1769)

  0x000000010ca2b892: mov    %r11d,%edx
  0x000000010ca2b895: sub    %ecx,%edx
  0x000000010ca2b897: add    0x14(%rsp),%edx    ;*iadd
                                                ; - java.lang.String::indexOf@44 (line 1767)

  0x000000010ca2b89b: cmp    %edx,%r10d
  0x000000010ca2b89e: jle    0x000000010ca2b957  ;*iconst_m1
                                                ; - java.lang.String::indexOf@164 (line 1788)

  0x000000010ca2b8a4: mov    $0xffffffff,%eax
  0x000000010ca2b8a9: jmpq   0x000000010ca2b94b
  0x000000010ca2b8ae: xchg   %ax,%ax
  0x000000010ca2b8b0: mov    %eax,%ebx          ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca2b8b2: movzwl 0x10(%rsi,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b8b8: cmp    %r11d,%r10d
  0x000000010ca2b8bb: je     0x000000010ca2b97c  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b8c1: movslq %ebx,%rbp
  0x000000010ca2b8c4: movzwl 0x12(%rsi,%rbp,2),%eax  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b8c9: cmp    %r11d,%eax
  0x000000010ca2b8cc: je     0x000000010ca2b982  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b8d2: movzwl 0x14(%rsi,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b8d8: cmp    %r11d,%r10d
  0x000000010ca2b8db: je     0x000000010ca2b98b  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b8e1: movzwl 0x16(%rsi,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b8e7: mov    %ebx,%eax
  0x000000010ca2b8e9: add    $0x4,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b8ec: cmp    %r11d,%r10d
  0x000000010ca2b8ef: je     0x000000010ca2b995  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b8f5: cmp    %r8d,%eax
  0x000000010ca2b8f8: jl     0x000000010ca2b8b0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca2b8fa: add    $0x3,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b8fd: cmp    %r13d,%eax
  0x000000010ca2b900: jge    0x000000010ca2b928
  0x000000010ca2b902: xchg   %ax,%ax            ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca2b904: movzwl 0x10(%rsi,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b90a: mov    %eax,%ebx
  0x000000010ca2b90c: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b90e: cmp    %r11d,%r10d
  0x000000010ca2b911: je     0x000000010ca2b99e  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b917: cmp    %r13d,%ebx
  0x000000010ca2b91a: jge    0x000000010ca2b920  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca2b91c: mov    %ebx,%eax
  0x000000010ca2b91e: jmp    0x000000010ca2b904
  0x000000010ca2b920: mov    %ebx,%r10d
  0x000000010ca2b923: mov    %eax,%ebx
  0x000000010ca2b925: mov    %r10d,%eax
  0x000000010ca2b928: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca2b92b: cmp    %edx,%eax
  0x000000010ca2b92d: jg     0x000000010ca2b9a2  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2b92f: mov    %ecx,%r8d
  0x000000010ca2b932: add    %eax,%r8d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca2b935: cmp    %r8d,%ebx
  0x000000010ca2b938: jl     0x000000010ca2bc0d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010ca2b93e: cmp    %r8d,%ebx
  0x000000010ca2b941: jne    0x000000010ca2bbcd  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x000000010ca2b947: sub    0x14(%rsp),%eax    ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010ca2b94b: add    $0x50,%rsp
  0x000000010ca2b94f: pop    %rbp
  0x000000010ca2b950: test   %eax,-0x2130956(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2b956: retq   
  0x000000010ca2b957: movzwl 0x10(%r14,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010ca2b95d: mov    0xc(%rsi),%r9d     ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ; implicit exception: dispatches to 0x000000010ca2bc5d
  0x000000010ca2b961: mov    %edx,%r13d
  0x000000010ca2b964: inc    %r13d
  0x000000010ca2b967: mov    %edx,%r8d
  0x000000010ca2b96a: add    $0xfffffffffffffffe,%r8d
  0x000000010ca2b96e: mov    $0x80000000,%eax
  0x000000010ca2b973: cmp    %r8d,%r13d
  0x000000010ca2b976: cmovl  %eax,%r8d
  0x000000010ca2b97a: jmp    0x000000010ca2b9b3
  0x000000010ca2b97c: mov    %ebx,%eax
  0x000000010ca2b97e: inc    %eax
  0x000000010ca2b980: jmp    0x000000010ca2b998
  0x000000010ca2b982: mov    %ebx,%eax
  0x000000010ca2b984: add    $0x2,%eax
  0x000000010ca2b987: inc    %ebx
  0x000000010ca2b989: jmp    0x000000010ca2b998
  0x000000010ca2b98b: mov    %ebx,%eax
  0x000000010ca2b98d: add    $0x3,%eax
  0x000000010ca2b990: add    $0x2,%ebx
  0x000000010ca2b993: jmp    0x000000010ca2b998
  0x000000010ca2b995: add    $0x3,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b998: mov    %ebx,%ebp
  0x000000010ca2b99a: mov    %eax,%ebx
  0x000000010ca2b99c: mov    %ebp,%eax
  0x000000010ca2b99e: cmp    %edx,%eax
  0x000000010ca2b9a0: jle    0x000000010ca2b92f  ; OopMap{rsi=Oop r14=Oop off=354}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010ca2b9a2: test   %eax,-0x21309a8(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x000000010ca2b9a8: cmp    %edx,%ebx
  0x000000010ca2b9aa: jg     0x000000010ca2b8a4  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000010ca2b9b0: mov    %ebx,%r10d         ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)

  0x000000010ca2b9b3: cmp    %r9d,%r10d
  0x000000010ca2b9b6: jae    0x000000010ca2ba28
  0x000000010ca2b9b8: movzwl 0x10(%rsi,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca2b9be: cmp    %r11d,%ebp
  0x000000010ca2b9c1: je     0x000000010ca2bb07  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x000000010ca2b9c7: mov    %r10d,%ebp
  0x000000010ca2b9ca: add    $0x2,%ebp          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca2b9cd: inc    %r10d              ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b9d0: cmp    %edx,%r10d
  0x000000010ca2b9d3: jg     0x000000010ca2ba1a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca2b9d5: cmp    %r9d,%r10d
  0x000000010ca2b9d8: jae    0x000000010ca2ba8d
  0x000000010ca2b9de: cmp    %r9d,%edx
  0x000000010ca2b9e1: jae    0x000000010ca2ba8d
  0x000000010ca2b9e7: cmp    $0x7ffffffe,%edx
  0x000000010ca2b9ed: jg     0x000000010ca2bac5  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca2b9f3: movzwl 0x10(%rsi,%r10,2),%eax  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca2b9f9: mov    %r10d,%ebx
  0x000000010ca2b9fc: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca2b9fe: cmp    %r11d,%eax
  0x000000010ca2ba01: je     0x000000010ca2ba1e  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca2ba03: cmp    %ebp,%ebx
  0x000000010ca2ba05: jge    0x000000010ca2ba0c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca2ba07: mov    %ebx,%r10d
  0x000000010ca2ba0a: jmp    0x000000010ca2b9f3
  0x000000010ca2ba0c: cmp    %r8d,%ebx
  0x000000010ca2ba0f: jge    0x000000010ca2bafd
  0x000000010ca2ba15: jmpq   0x000000010ca2b8b2
  0x000000010ca2ba1a: mov    %ebp,%ebx
  0x000000010ca2ba1c: jmp    0x000000010ca2b9a2
  0x000000010ca2ba1e: mov    %ebx,%eax
  0x000000010ca2ba20: mov    %r10d,%ebx
  0x000000010ca2ba23: jmpq   0x000000010ca2b998
  0x000000010ca2ba28: mov    %r11d,0x60(%rsp)
  0x000000010ca2ba2d: mov    %rsi,0x8(%rsp)
  0x000000010ca2ba32: mov    %r10d,0x4(%rsp)
  0x000000010ca2ba37: mov    0x14(%rsp),%r11d
  0x000000010ca2ba3c: mov    %r11d,0x10(%rsp)
  0x000000010ca2ba41: mov    %r14,0x18(%rsp)
  0x000000010ca2ba46: mov    %edi,0x14(%rsp)
  0x000000010ca2ba4a: mov    %ecx,0x20(%rsp)
  0x000000010ca2ba4e: mov    %edx,0x24(%rsp)
  0x000000010ca2ba52: mov    $0xffffffe4,%esi
  0x000000010ca2ba57: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [24]=Oop off=540}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2ba5c: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2ba61: mov    %rsi,%rbp
  0x000000010ca2ba64: mov    %edx,0x60(%rsp)
  0x000000010ca2ba68: mov    %r11d,(%rsp)
  0x000000010ca2ba6c: mov    %ecx,0x10(%rsp)
  0x000000010ca2ba70: mov    %r8d,0x14(%rsp)
  0x000000010ca2ba75: mov    %r10,0x18(%rsp)
  0x000000010ca2ba7a: mov    %edi,0x20(%rsp)
  0x000000010ca2ba7e: mov    $0xffffffe4,%esi
  0x000000010ca2ba83: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [24]=Oop off=584}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca2ba88: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca2ba8d: mov    %rsi,%rbp
  0x000000010ca2ba90: mov    %r11d,0x60(%rsp)
  0x000000010ca2ba95: mov    %r10d,(%rsp)
  0x000000010ca2ba99: mov    0x14(%rsp),%r11d
  0x000000010ca2ba9e: mov    %r11d,0x4(%rsp)
  0x000000010ca2baa3: mov    %r14,0x8(%rsp)
  0x000000010ca2baa8: mov    %edi,0x10(%rsp)
  0x000000010ca2baac: mov    %ecx,0x14(%rsp)
  0x000000010ca2bab0: mov    %edx,0x18(%rsp)
  0x000000010ca2bab4: mov    $0xffffff86,%esi
  0x000000010ca2bab9: xchg   %ax,%ax
  0x000000010ca2babb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=640}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca2bac0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2bac5: mov    %rsi,%rbp
  0x000000010ca2bac8: mov    %r11d,0x60(%rsp)
  0x000000010ca2bacd: mov    %r10d,(%rsp)
  0x000000010ca2bad1: mov    0x14(%rsp),%r11d
  0x000000010ca2bad6: mov    %r11d,0x4(%rsp)
  0x000000010ca2badb: mov    %r14,0x8(%rsp)
  0x000000010ca2bae0: mov    %edi,0x10(%rsp)
  0x000000010ca2bae4: mov    %ecx,0x14(%rsp)
  0x000000010ca2bae8: mov    %edx,0x18(%rsp)
  0x000000010ca2baec: mov    $0xffffff7e,%esi
  0x000000010ca2baf1: xchg   %ax,%ax
  0x000000010ca2baf3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=696}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca2baf8: callq  0x000000010be85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca2bafd: mov    %ebx,%eax
  0x000000010ca2baff: mov    %r10d,%ebx
  0x000000010ca2bb02: jmpq   0x000000010ca2b8fd
  0x000000010ca2bb07: mov    %rsi,(%rsp)
  0x000000010ca2bb0b: mov    %r10d,0x8(%rsp)
  0x000000010ca2bb10: mov    %r11d,0xc(%rsp)
  0x000000010ca2bb15: mov    0x14(%rsp),%r11d
  0x000000010ca2bb1a: mov    %r11d,0x10(%rsp)
  0x000000010ca2bb1f: mov    %r14,0x18(%rsp)
  0x000000010ca2bb24: mov    %edi,0x14(%rsp)
  0x000000010ca2bb28: mov    %ecx,0x20(%rsp)
  0x000000010ca2bb2c: mov    %edx,0x24(%rsp)
  0x000000010ca2bb30: mov    $0xffffff65,%esi
  0x000000010ca2bb35: xchg   %ax,%ax
  0x000000010ca2bb37: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=Oop off=764}
                                                ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2bb3c: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2bb41: mov    %rsi,%rbp
  0x000000010ca2bb44: mov    %edx,0x60(%rsp)
  0x000000010ca2bb48: mov    %r10,0x8(%rsp)
  0x000000010ca2bb4d: mov    %r9d,0x4(%rsp)
  0x000000010ca2bb52: mov    %edi,0x10(%rsp)
  0x000000010ca2bb56: mov    %r8d,0x18(%rsp)
  0x000000010ca2bb5b: mov    %ecx,0x1c(%rsp)
  0x000000010ca2bb5f: mov    $0xffffff65,%esi
  0x000000010ca2bb64: data32 xchg %ax,%ax
  0x000000010ca2bb67: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=812}
                                                ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x000000010ca2bb6c: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x000000010ca2bb71: mov    %rsi,%rbp
  0x000000010ca2bb74: mov    %edx,0x60(%rsp)
  0x000000010ca2bb78: mov    %ecx,(%rsp)
  0x000000010ca2bb7b: mov    %r10,0x8(%rsp)
  0x000000010ca2bb80: mov    %r9d,0x4(%rsp)
  0x000000010ca2bb85: mov    %edi,0x10(%rsp)
  0x000000010ca2bb89: mov    %r8d,0x18(%rsp)
  0x000000010ca2bb8e: mov    $0xffffff65,%esi
  0x000000010ca2bb93: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=856}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x000000010ca2bb98: callq  0x000000010be85e14  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x000000010ca2bb9d: mov    %rsi,%rbp
  0x000000010ca2bba0: mov    %edx,0x60(%rsp)
  0x000000010ca2bba4: mov    %r11d,(%rsp)
  0x000000010ca2bba8: mov    %r10,0x8(%rsp)
  0x000000010ca2bbad: mov    %r9d,0x4(%rsp)
  0x000000010ca2bbb2: mov    %r8d,0x14(%rsp)
  0x000000010ca2bbb7: mov    %ecx,0x18(%rsp)
  0x000000010ca2bbbb: mov    $0xffffff65,%esi
  0x000000010ca2bbc0: data32 xchg %ax,%ax
  0x000000010ca2bbc3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=904}
                                                ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x000000010ca2bbc8: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x000000010ca2bbcd: mov    %rsi,%rbp
  0x000000010ca2bbd0: mov    %r11d,0x60(%rsp)
  0x000000010ca2bbd5: mov    %eax,(%rsp)
  0x000000010ca2bbd8: mov    %ebx,0x4(%rsp)
  0x000000010ca2bbdc: mov    0x14(%rsp),%r10d
  0x000000010ca2bbe1: mov    %r10d,0x8(%rsp)
  0x000000010ca2bbe6: mov    %r14,0x10(%rsp)
  0x000000010ca2bbeb: mov    %edi,0xc(%rsp)
  0x000000010ca2bbef: mov    %ecx,0x18(%rsp)
  0x000000010ca2bbf3: mov    %edx,0x1c(%rsp)
  0x000000010ca2bbf7: mov    %r8d,0x20(%rsp)
  0x000000010ca2bbfc: mov    $0xffffff65,%esi
  0x000000010ca2bc01: xchg   %ax,%ax
  0x000000010ca2bc03: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop off=968}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)
                                                ;   {runtime_call}
  0x000000010ca2bc08: callq  0x000000010be85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)
                                                ;   {runtime_call}
  0x000000010ca2bc0d: mov    %edi,%ebp
  0x000000010ca2bc0f: inc    %ebp               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x000000010ca2bc11: mov    %rsi,(%rsp)
  0x000000010ca2bc15: mov    %r11d,0x60(%rsp)
  0x000000010ca2bc1a: mov    %eax,0x8(%rsp)
  0x000000010ca2bc1e: mov    %ebx,0x10(%rsp)
  0x000000010ca2bc22: mov    %r14,0x18(%rsp)
  0x000000010ca2bc27: mov    %edi,0x20(%rsp)
  0x000000010ca2bc2b: mov    %ecx,0x24(%rsp)
  0x000000010ca2bc2f: mov    %edx,0x28(%rsp)
  0x000000010ca2bc33: mov    %r8d,0x30(%rsp)
  0x000000010ca2bc38: mov    $0xffffff65,%esi
  0x000000010ca2bc3d: xchg   %ax,%ax
  0x000000010ca2bc3f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=Oop off=1028}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca2bc44: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca2bc49: mov    $0xfffffff6,%esi
  0x000000010ca2bc4e: mov    %r9d,%ebp
  0x000000010ca2bc51: xchg   %ax,%ax
  0x000000010ca2bc53: callq  0x000000010c9a71a0  ; OopMap{off=1048}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca2bc58: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca2bc5d: mov    %rsi,%rbp
  0x000000010ca2bc60: mov    %r11d,0x60(%rsp)
  0x000000010ca2bc65: mov    %r10d,(%rsp)
  0x000000010ca2bc69: mov    0x14(%rsp),%r11d
  0x000000010ca2bc6e: mov    %r11d,0x4(%rsp)
  0x000000010ca2bc73: mov    %r14,0x8(%rsp)
  0x000000010ca2bc78: mov    %edi,0x10(%rsp)
  0x000000010ca2bc7c: mov    %ecx,0x14(%rsp)
  0x000000010ca2bc80: mov    %edx,0x18(%rsp)
  0x000000010ca2bc84: mov    $0xffffff86,%esi
  0x000000010ca2bc89: xchg   %ax,%ax
  0x000000010ca2bc8b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1104}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2bc90: callq  0x000000010be85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca2bc95: hlt    
  0x000000010ca2bc96: hlt    
  0x000000010ca2bc97: hlt    
  0x000000010ca2bc98: hlt    
  0x000000010ca2bc99: hlt    
  0x000000010ca2bc9a: hlt    
  0x000000010ca2bc9b: hlt    
  0x000000010ca2bc9c: hlt    
  0x000000010ca2bc9d: hlt    
  0x000000010ca2bc9e: hlt    
  0x000000010ca2bc9f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca2bca0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca2bca5: callq  0x000000010ca2bcaa
  0x000000010ca2bcaa: subq   $0x5,(%rsp)
  0x000000010ca2bcaf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2bcb4: hlt    
  0x000000010ca2bcb5: hlt    
  0x000000010ca2bcb6: hlt    
  0x000000010ca2bcb7: hlt    
<nmethod compile_id='55' compiler='C2' entry='0x000000010ca2b840' size='3344' address='0x000000010ca2b6d0' relocation_offset='296' insts_offset='368' stub_offset='1488' scopes_data_offset='1520' scopes_pcs_offset='2128' dependencies_offset='3312' nul_chk_table_offset='3320' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='424' backedge_count='5232' iicount='424' stamp='0.219'/>
<writer thread='7171'/>
[Loaded java.io.ObjectInputStream$PeekInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$HandleTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$HandleTable$HandleList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$ValidationList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='55' compiler='C2' stamp='0.220'>
<jvms bci='66' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='424' backedge_count='5232' iicount='424'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='55' compiler='C2' stamp='0.220'/>
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.OutputFrame$Type from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.format.OutputFormat from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.reflect.Proxy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.BiFunction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$KeyFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$ProxyClassFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$CacheKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$Key1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Supplier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ProxyMethod from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.IterationResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.BenchmarkResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='43' compiler='C2' stamp='0.228'>
<jvms bci='26' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='453' backedge_count='7176' iicount='453'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='43' compiler='C2' stamp='0.228'/>
[Loaded sun.misc.ProxyGenerator$PrimitiveTypeInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$MethodInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$ValueEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$IndirectEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$FieldInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ExceptionTableEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.sun.proxy.$Proxy0 from sun.misc.Launcher$AppClassLoader]
[Loaded java.lang.reflect.WeakCache$Value from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$CacheValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.UndeclaredThrowableException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.annotations.Mode from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Utils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.NumberFormatException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.StringWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.WorkloadParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.TimeUnit from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.options.TimeValue from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Multimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.IterationType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.DelegatingMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.TreeMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.SortedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.NavigableMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.HandshakeInitFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.management.ManagementFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.ManagementFactoryHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.ManagementFactoryHelper$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.VMManagement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.VMManagementImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.management.PlatformManagedObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.management.RuntimeMXBean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.RuntimeImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet4AddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedKeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedHashIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedKeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$ListItr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$Caches from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$WeakClassKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$EntryFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Externalizable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays$LegacyMergeSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ComparableTimSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassFileConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.AccessorGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVectorFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVectorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassFileAssembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UTF8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Label from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Label$PatchInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorGenerator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassDefiner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassDefiner$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.SerializationConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor1 from __JVM_DefineClass__]
[Loaded sun.reflect.BootstrapConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CloneNotSupportedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$FieldReflectorKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$FieldReflector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$ClassDataSlot from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.HandshakeResponseFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='56' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='182' backedge_count='5000' iicount='182' stamp='0.263' comment='count' hot_count='182'/>
[Loaded org.openjdk.jmh.runner.options.Options from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor2 from __JVM_DefineClass__]
Decoding compiled method 0x000000010ca23c90:
Code:
[Entry Point]
  # {method} {0x0000000110f62930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000010ca23e00: mov    0x8(%rsi),%r10d
  0x000000010ca23e04: shl    $0x3,%r10
  0x000000010ca23e08: cmp    %r10,%rax
  0x000000010ca23e0b: je     0x000000010ca23e18
  0x000000010ca23e11: jmpq   0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca23e16: xchg   %ax,%ax
[Verified Entry Point]
  0x000000010ca23e18: mov    %eax,-0x14000(%rsp)
  0x000000010ca23e1f: push   %rbp
  0x000000010ca23e20: mov    %rsp,%rbp
  0x000000010ca23e23: sub    $0x50,%rsp
  0x000000010ca23e27: mov    %r9,(%rsp)
  0x000000010ca23e2b: mov    %r8,%r9
  0x000000010ca23e2e: mov    %rcx,0x18(%rsp)
  0x000000010ca23e33: cmp    $0x0,%rcx
  0x000000010ca23e37: lea    0x18(%rsp),%r8
  0x000000010ca23e3c: cmove  0x18(%rsp),%r8
  0x000000010ca23e42: mov    %rdx,%rcx
  0x000000010ca23e45: mov    %rsi,0x8(%rsp)
  0x000000010ca23e4a: cmp    $0x0,%rsi
  0x000000010ca23e4e: lea    0x8(%rsp),%rdx
  0x000000010ca23e53: cmove  0x8(%rsp),%rdx
  0x000000010ca23e59: movabs $0x76ab00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x000000010ca23e63: mov    %r14,0x38(%rsp)
  0x000000010ca23e68: lea    0x38(%rsp),%r14
  0x000000010ca23e6d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000010ca23e70: movabs $0x10ca23e70,%r10  ;   {section_word}
  0x000000010ca23e7a: mov    %r10,0x1e0(%r15)
  0x000000010ca23e81: mov    %rsp,0x1d8(%r15)
  0x000000010ca23e88: cmpb   $0x0,-0x73cbc5(%rip)        # 0x000000010c2e72ca
                                                ;   {external_word}
  0x000000010ca23e8f: je     0x000000010ca23ed3
  0x000000010ca23e95: push   %rsi
  0x000000010ca23e96: push   %rdx
  0x000000010ca23e97: push   %rcx
  0x000000010ca23e98: push   %r8
  0x000000010ca23e9a: push   %r9
  0x000000010ca23e9c: movabs $0x110f62930,%rsi  ;   {metadata({method} {0x0000000110f62930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000010ca23ea6: mov    %r15,%rdi
  0x000000010ca23ea9: test   $0xf,%esp
  0x000000010ca23eaf: je     0x000000010ca23ec7
  0x000000010ca23eb5: sub    $0x8,%rsp
  0x000000010ca23eb9: callq  0x000000010bee7b1c  ;   {runtime_call}
  0x000000010ca23ebe: add    $0x8,%rsp
  0x000000010ca23ec2: jmpq   0x000000010ca23ecc
  0x000000010ca23ec7: callq  0x000000010bee7b1c  ;   {runtime_call}
  0x000000010ca23ecc: pop    %r9
  0x000000010ca23ece: pop    %r8
  0x000000010ca23ed0: pop    %rcx
  0x000000010ca23ed1: pop    %rdx
  0x000000010ca23ed2: pop    %rsi
  0x000000010ca23ed3: lea    0x1f8(%r15),%rdi
  0x000000010ca23eda: movl   $0x4,0x270(%r15)
  0x000000010ca23ee5: callq  0x000000010bd43bec  ;   {runtime_call}
  0x000000010ca23eea: vzeroupper 
  0x000000010ca23eed: movl   $0x5,0x270(%r15)
  0x000000010ca23ef8: lock addl $0x0,(%rsp)
  0x000000010ca23efd: cmpl   $0x0,-0x7322a7(%rip)        # 0x000000010c2f1c60
                                                ;   {external_word}
  0x000000010ca23f07: jne    0x000000010ca23f1b
  0x000000010ca23f0d: cmpl   $0x0,0x30(%r15)
  0x000000010ca23f15: je     0x000000010ca23f34
  0x000000010ca23f1b: mov    %r15,%rdi
  0x000000010ca23f1e: mov    %rsp,%r12
  0x000000010ca23f21: sub    $0x0,%rsp
  0x000000010ca23f25: and    $0xfffffffffffffff0,%rsp
  0x000000010ca23f29: callq  0x000000010bf6a2e4  ;   {runtime_call}
  0x000000010ca23f2e: mov    %r12,%rsp
  0x000000010ca23f31: xor    %r12,%r12
  0x000000010ca23f34: movl   $0x8,0x270(%r15)
  0x000000010ca23f3f: cmpl   $0x1,0x29c(%r15)
  0x000000010ca23f4a: je     0x000000010ca23fd2
  0x000000010ca23f50: cmpb   $0x0,-0x73cc8d(%rip)        # 0x000000010c2e72ca
                                                ;   {external_word}
  0x000000010ca23f57: je     0x000000010ca23f8d
  0x000000010ca23f5d: movabs $0x110f62930,%rsi  ;   {metadata({method} {0x0000000110f62930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x000000010ca23f67: mov    %r15,%rdi
  0x000000010ca23f6a: test   $0xf,%esp
  0x000000010ca23f70: je     0x000000010ca23f88
  0x000000010ca23f76: sub    $0x8,%rsp
  0x000000010ca23f7a: callq  0x000000010bee7a8e  ;   {runtime_call}
  0x000000010ca23f7f: add    $0x8,%rsp
  0x000000010ca23f83: jmpq   0x000000010ca23f8d
  0x000000010ca23f88: callq  0x000000010bee7a8e  ;   {runtime_call}
  0x000000010ca23f8d: movabs $0x0,%r10
  0x000000010ca23f97: mov    %r10,0x1d8(%r15)
  0x000000010ca23f9e: movabs $0x0,%r10
  0x000000010ca23fa8: mov    %r10,0x1e0(%r15)
  0x000000010ca23faf: mov    0x38(%r15),%rcx
  0x000000010ca23fb3: movl   $0x0,0x100(%rcx)
  0x000000010ca23fbd: leaveq 
  0x000000010ca23fbe: cmpq   $0x0,0x8(%r15)
  0x000000010ca23fc6: jne    0x000000010ca23fcd
  0x000000010ca23fcc: retq   
  0x000000010ca23fcd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000010ca23fd2: mov    %rsp,%r12
  0x000000010ca23fd5: sub    $0x0,%rsp
  0x000000010ca23fd9: and    $0xfffffffffffffff0,%rsp
  0x000000010ca23fdd: callq  0x000000010bee58f4  ;   {runtime_call}
  0x000000010ca23fe2: mov    %r12,%rsp
  0x000000010ca23fe5: xor    %r12,%r12
  0x000000010ca23fe8: jmpq   0x000000010ca23f50
  0x000000010ca23fed: hlt    
  0x000000010ca23fee: hlt    
  0x000000010ca23fef: hlt    
<nmethod compile_id='57' compile_kind='c2n' entry='0x000000010ca23e00' size='864' address='0x000000010ca23c90' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='5000' backedge_count='1' iicount='10000' stamp='0.266'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca28990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000111095df8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000010ca28ae0: mov    0x8(%rsi),%r10d
  0x000000010ca28ae4: shl    $0x3,%r10
  0x000000010ca28ae8: cmp    %r10,%rax
  0x000000010ca28aeb: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca28af1: data32 xchg %ax,%ax
  0x000000010ca28af4: nopl   0x0(%rax,%rax,1)
  0x000000010ca28afc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca28b00: mov    %eax,-0x14000(%rsp)
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.options.CommandLineOptions from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19203'/>
  0x000000010ca28b07: push   %rbp
  0x000000010ca28b08: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x000000010ca28b0c: mov    %rsi,%r13
  0x000000010ca28b0f: mov    %r9,%rbx
  0x000000010ca28b12: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000010ca28d19
  0x000000010ca28b16: cmp    %r11d,%r8d
  0x000000010ca28b19: mov    %r11d,%r10d
  0x000000010ca28b1c: cmovl  %r8d,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010ca28b20: mov    %ecx,%r9d
  0x000000010ca28b23: add    %r8d,%r9d          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x000000010ca28b26: xor    %eax,%eax
  0x000000010ca28b28: test   %r10d,%r10d
  0x000000010ca28b2b: jle    0x000000010ca28c57  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010ca28b31: mov    0xc(%rdx),%r8d     ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x000000010ca28ca9
  0x000000010ca28b35: cmp    %r8d,%ecx
  0x000000010ca28b38: jae    0x000000010ca28ca9
  0x000000010ca28b3e: mov    %ecx,%esi
  0x000000010ca28b40: add    %r10d,%esi
  0x000000010ca28b43: dec    %esi
  0x000000010ca28b45: cmp    %r8d,%esi
  0x000000010ca28b48: jae    0x000000010ca28ca9
  0x000000010ca28b4e: test   %r11d,%r11d
  0x000000010ca28b51: jbe    0x000000010ca28ca9
  0x000000010ca28b57: mov    %r10d,%edi
  0x000000010ca28b5a: dec    %edi
  0x000000010ca28b5c: cmp    %r11d,%edi
  0x000000010ca28b5f: jae    0x000000010ca28ca9  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28b65: movzwl 0x10(%rdx,%rcx,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28b6a: cmp    $0x80,%ebp
  0x000000010ca28b70: jge    0x000000010ca28d09  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28b76: mov    %bpl,0x10(%rbx)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28b7a: mov    %r10d,%edi
  0x000000010ca28b7d: add    $0xfffffffffffffffd,%edi
  0x000000010ca28b80: mov    $0x80000000,%r11d
  0x000000010ca28b86: cmp    %edi,%r10d
  0x000000010ca28b89: cmovl  %r11d,%edi
  0x000000010ca28b8d: mov    $0x1,%eax
  0x000000010ca28b92: cmp    $0x1,%edi
  0x000000010ca28b95: jle    0x000000010ca28cd5
  0x000000010ca28b9b: nopl   0x0(%rax,%rax,1)
  0x000000010ca28ba0: mov    %eax,%r11d
  0x000000010ca28ba3: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28ba6: movzwl 0x10(%rdx,%r11,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28bac: cmp    $0x80,%r8d
  0x000000010ca28bb3: jge    0x000000010ca28c63  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28bb9: movslq %r11d,%r14
  0x000000010ca28bbc: movzwl 0x12(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28bc2: movslq %eax,%rsi
  0x000000010ca28bc5: mov    %r8b,0x10(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28bca: cmp    $0x80,%ebp
  0x000000010ca28bd0: jge    0x000000010ca28c68  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28bd6: movzwl 0x14(%rdx,%r14,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28bdc: movslq %eax,%rsi
  0x000000010ca28bdf: mov    %bpl,0x11(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28be4: cmp    $0x80,%r8d
  0x000000010ca28beb: jge    0x000000010ca28c5c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28bed: mov    %r8b,0x12(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28bf2: movzwl 0x16(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28bf8: cmp    $0x80,%ebp
  0x000000010ca28bfe: jge    0x000000010ca28c6f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28c00: mov    %bpl,0x13(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28c05: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010ca28c08: cmp    %edi,%eax
  0x000000010ca28c0a: jl     0x000000010ca28ba0
  0x000000010ca28c0c: add    $0x3,%r11d
  0x000000010ca28c10: cmp    %r10d,%eax
  0x000000010ca28c13: jge    0x000000010ca28c3f
  0x000000010ca28c15: data32 xchg %ax,%ax
  0x000000010ca28c18: mov    %eax,%r11d
  0x000000010ca28c1b: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28c1e: movzwl 0x10(%rdx,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010ca28c24: cmp    $0x80,%ebp
  0x000000010ca28c2a: jge    0x000000010ca28d11  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010ca28c30: movslq %eax,%r8
  0x000000010ca28c33: mov    %bpl,0x10(%rbx,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010ca28c38: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010ca28c3a: cmp    %r10d,%eax
  0x000000010ca28c3d: jl     0x000000010ca28c18
  0x000000010ca28c3f: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010ca28c42: cmp    %r9d,%r11d
  0x000000010ca28c45: jl     0x000000010ca28cdd
  0x000000010ca28c4b: add    $0x40,%rsp
  0x000000010ca28c4f: pop    %rbp
  0x000000010ca28c50: test   %eax,-0x212dc56(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca28c56: retq   
  0x000000010ca28c57: mov    %ecx,%r11d
  0x000000010ca28c5a: jmp    0x000000010ca28c42
  0x000000010ca28c5c: add    $0x2,%r11d
  0x000000010ca28c60: add    $0x2,%eax
  0x000000010ca28c63: mov    %r8d,%ebp
  0x000000010ca28c66: jmp    0x000000010ca28c76  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28c68: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010ca28c6a: inc    %r11d
  0x000000010ca28c6d: jmp    0x000000010ca28c76  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28c6f: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010ca28c72: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28c76: mov    %eax,(%rsp)
  0x000000010ca28c79: mov    $0xffffff65,%esi
  0x000000010ca28c7e: mov    %rdx,0x8(%rsp)
  0x000000010ca28c83: mov    %r11d,0x4(%rsp)
  0x000000010ca28c88: mov    %r13,0x10(%rsp)
  0x000000010ca28c8d: mov    %rbx,0x18(%rsp)
  0x000000010ca28c92: mov    %r9d,0x20(%rsp)
  0x000000010ca28c97: mov    %r10d,0x24(%rsp)
  0x000000010ca28c9c: data32 xchg %ax,%ax
  0x000000010ca28c9f: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=452}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010ca28ca4: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x000000010ca28ca9: mov    $0xffffff86,%esi
  0x000000010ca28cae: mov    %rdx,%rbp
  0x000000010ca28cb1: mov    %ecx,(%rsp)
  0x000000010ca28cb4: mov    %r13,0x8(%rsp)
  0x000000010ca28cb9: mov    %rbx,0x10(%rsp)
  0x000000010ca28cbe: mov    %r9d,0x4(%rsp)
  0x000000010ca28cc3: mov    %r10d,0x18(%rsp)
  0x000000010ca28cc8: data32 xchg %ax,%ax
  0x000000010ca28ccb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=496}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010ca28cd0: callq  0x000000010be85e14  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010ca28cd5: mov    %ecx,%r11d
  0x000000010ca28cd8: jmpq   0x000000010ca28c10  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010ca28cdd: mov    $0xffffff65,%esi
  0x000000010ca28ce2: mov    %rdx,%rbp
  0x000000010ca28ce5: mov    %eax,0x4(%rsp)
  0x000000010ca28ce9: mov    %r11d,0x8(%rsp)
  0x000000010ca28cee: mov    %r13,0x10(%rsp)
  0x000000010ca28cf3: mov    %rbx,0x18(%rsp)
  0x000000010ca28cf8: mov    %r9d,0x20(%rsp)
  0x000000010ca28cfd: xchg   %ax,%ax
  0x000000010ca28cff: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=548}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010ca28d04: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x000000010ca28d09: mov    %ecx,%r11d
  0x000000010ca28d0c: jmpq   0x000000010ca28c76  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010ca28d11: mov    %eax,(%rsp)
  0x000000010ca28d14: jmpq   0x000000010ca28c79
  0x000000010ca28d19: mov    $0xfffffff6,%esi
  0x000000010ca28d1e: nop
  0x000000010ca28d1f: callq  0x000000010c9a71a0  ; OopMap{off=580}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000010ca28d24: callq  0x000000010be85e14  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x000000010ca28d29: hlt    
  0x000000010ca28d2a: hlt    
  0x000000010ca28d2b: hlt    
  0x000000010ca28d2c: hlt    
  0x000000010ca28d2d: hlt    
  0x000000010ca28d2e: hlt    
  0x000000010ca28d2f: hlt    
  0x000000010ca28d30: hlt    
  0x000000010ca28d31: hlt    
  0x000000010ca28d32: hlt    
  0x000000010ca28d33: hlt    
  0x000000010ca28d34: hlt    
  0x000000010ca28d35: hlt    
  0x000000010ca28d36: hlt    
  0x000000010ca28d37: hlt    
  0x000000010ca28d38: hlt    
  0x000000010ca28d39: hlt    
  0x000000010ca28d3a: hlt    
  0x000000010ca28d3b: hlt    
  0x000000010ca28d3c: hlt    
  0x000000010ca28d3d: hlt    
  0x000000010ca28d3e: hlt    
  0x000000010ca28d3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca28d40: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca28d45: callq  0x000000010ca28d4a
  0x000000010ca28d4a: subq   $0x5,(%rsp)
  0x000000010ca28d4f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca28d54: hlt    
  0x000000010ca28d55: hlt    
  0x000000010ca28d56: hlt    
  0x000000010ca28d57: hlt    
<nmethod compile_id='56' compiler='C2' entry='0x000000010ca28ae0' size='1968' address='0x000000010ca28990' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='976' scopes_pcs_offset='1184' dependencies_offset='1936' nul_chk_table_offset='1944' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='185' backedge_count='5209' iicount='185' stamp='0.269'/>
<writer thread='7171'/>
[Loaded joptsimple.OptionException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.HelpFormatter from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.ValueConverter from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionSpec from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.options.CommandLineOptionException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Optional from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionDeclarer from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionParser from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor3 from __JVM_DefineClass__]
[Loaded joptsimple.OptionSet from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor4 from __JVM_DefineClass__]
<task_queued compile_id='58' compile_kind='osr' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='251' backedge_count='7204' iicount='703' decompiles='1' unstable_if_traps='1' osr_bci='78' stamp='0.275' comment='backedge_count' hot_count='7204'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor5 from __JVM_DefineClass__]
[Loaded java.util.function.UnaryOperator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Spliterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Consumer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Predicate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.SerialCallbackContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$ExceptionInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor6 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor7 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.util.HashMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca23410:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110f4ef38} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  0x000000010ca23580: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca23585: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca23590: mov    %eax,-0x14000(%rsp)
  0x000000010ca23597: push   %rbp
  0x000000010ca23598: sub    $0x40,%rsp
  0x000000010ca2359c: mov    0x18(%rsi),%r13d
  0x000000010ca235a0: mov    0x20(%rsi),%r11d
  0x000000010ca235a4: mov    %r11d,0x10(%rsp)
  0x000000010ca235a9: mov    0x10(%rsi),%rbp
  0x000000010ca235ad: mov    0x8(%rsi),%r10
  0x000000010ca235b1: mov    %r10,0x8(%rsp)
  0x000000010ca235b6: mov    0x28(%rsi),%ebx
  0x000000010ca235b9: mov    0x30(%rsi),%r14d
  0x000000010ca235bd: mov    %rsi,%rdi
  0x000000010ca235c0: movabs $0x10bee473e,%r10
  0x000000010ca235ca: callq  *%r10
  0x000000010ca235cd: test   %rbp,%rbp
  0x000000010ca235d0: je     0x000000010ca237f9
  0x000000010ca235d6: mov    %rbp,%r10
  0x000000010ca235d9: mov    0x8(%rbp),%r11d
  0x000000010ca235dd: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010ca235e4: jne    0x000000010ca23895
  0x000000010ca235ea: mov    %rbp,%r8
  0x000000010ca235ed: mov    0x8(%rsp),%r11
  0x000000010ca235f2: test   %r11,%r11
  0x000000010ca235f5: je     0x000000010ca23804
  0x000000010ca235fb: mov    0x8(%r11),%r9d
  0x000000010ca235ff: cmp    $0xf8000041,%r9d   ;   {metadata({type array char})}
  0x000000010ca23606: jne    0x000000010ca23895
  0x000000010ca2360c: mov    %r11,%r10          ;*iload
                                                ; - java.lang.String::replace@78 (line 2082)

  0x000000010ca2360f: mov    %r10,0x18(%rsp)
  0x000000010ca23614: mov    %r10,%rdx
  0x000000010ca23617: add    $0xc,%rdx          ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2361b: cmp    0x10(%rsp),%r13d
  0x000000010ca23620: jge    0x000000010ca23770  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca23626: mov    %r13d,%r11d
  0x000000010ca23629: inc    %r11d
  0x000000010ca2362c: xor    %r10d,%r10d
  0x000000010ca2362f: cmp    %r10d,%r11d
  0x000000010ca23632: cmovl  %r10d,%r11d
  0x000000010ca23636: cmp    0x10(%rsp),%r11d
  0x000000010ca2363b: mov    0x10(%rsp),%r9d
  0x000000010ca23640: cmovg  %r9d,%r11d         ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca23644: mov    0xc(%r8),%ecx      ; implicit exception: dispatches to 0x000000010ca238b5
  0x000000010ca23648: cmp    %ecx,%r13d
  0x000000010ca2364b: jae    0x000000010ca2382a
  0x000000010ca23651: movzwl 0x10(%r8,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca23657: cmp    %r14d,%ebp
  0x000000010ca2365a: je     0x000000010ca237eb
  0x000000010ca23660: mov    0x18(%rsp),%r10
  0x000000010ca23665: test   %r10,%r10
  0x000000010ca23668: je     0x000000010ca23859
  0x000000010ca2366e: mov    (%rdx),%edi
  0x000000010ca23670: cmp    %edi,%r13d
  0x000000010ca23673: jae    0x000000010ca2386d
  0x000000010ca23679: mov    %bp,0x10(%r10,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2367f: inc    %r13d              ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca23682: cmp    %r11d,%r13d
  0x000000010ca23685: jl     0x000000010ca23644  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca23687: cmp    %edi,%ecx
  0x000000010ca23689: mov    %ecx,%r11d
  0x000000010ca2368c: cmovg  %edi,%r11d
  0x000000010ca23690: cmp    %r9d,%r11d
  0x000000010ca23693: cmovg  %r9d,%r11d
  0x000000010ca23697: mov    %r11d,%esi
  0x000000010ca2369a: add    $0xfffffffffffffffd,%esi
  0x000000010ca2369d: mov    $0x80000000,%r10d
  0x000000010ca236a3: cmp    %esi,%r11d
  0x000000010ca236a6: cmovl  %r10d,%esi
  0x000000010ca236aa: cmp    %esi,%r13d
  0x000000010ca236ad: jge    0x000000010ca23735
  0x000000010ca236b3: jmp    0x000000010ca236d4
  0x000000010ca236b5: mov    %ebx,%r11d
  0x000000010ca236b8: nopl   0x0(%rax,%rax,1)
  0x000000010ca236c0: mov    0x18(%rsp),%r10
  0x000000010ca236c5: mov    %r11w,0x16(%r10,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca236cb: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca236cf: cmp    %esi,%r13d
  0x000000010ca236d2: jge    0x000000010ca23735  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca236d4: movzwl 0x10(%r8,%r13,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca236da: cmp    %r14d,%r10d
  0x000000010ca236dd: je     0x000000010ca23726
  0x000000010ca236df: mov    0x18(%rsp),%r11
  0x000000010ca236e4: mov    %r10w,0x10(%r11,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca236ea: movslq %r13d,%rdx
  0x000000010ca236ed: movzwl 0x12(%r8,%rdx,2),%r11d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca236f3: cmp    %r14d,%r11d
  0x000000010ca236f6: je     0x000000010ca23730
  0x000000010ca236f8: mov    0x18(%rsp),%r10
  0x000000010ca236fd: mov    %r11w,0x12(%r10,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca23703: movzwl 0x14(%r8,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca23709: cmp    %r14d,%r10d
  0x000000010ca2370c: je     0x000000010ca2372b
  0x000000010ca2370e: mov    0x18(%rsp),%r11
  0x000000010ca23713: mov    %r10w,0x14(%r11,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca23719: movzwl 0x16(%r8,%rdx,2),%r11d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2371f: cmp    %r14d,%r11d
  0x000000010ca23722: jne    0x000000010ca236c0  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010ca23724: jmp    0x000000010ca236b5
  0x000000010ca23726: mov    %ebx,%r10d
  0x000000010ca23729: jmp    0x000000010ca236df
  0x000000010ca2372b: mov    %ebx,%r10d
  0x000000010ca2372e: jmp    0x000000010ca2370e
  0x000000010ca23730: mov    %ebx,%r11d
  0x000000010ca23733: jmp    0x000000010ca236f8
  0x000000010ca23735: cmp    %r9d,%r13d
  0x000000010ca23738: jge    0x000000010ca23770
  0x000000010ca2373a: xchg   %ax,%ax            ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2373c: cmp    %ecx,%r13d
  0x000000010ca2373f: jae    0x000000010ca2382a
  0x000000010ca23745: movzwl 0x10(%r8,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2374b: cmp    %r14d,%ebp
  0x000000010ca2374e: je     0x000000010ca237f2
  0x000000010ca23754: cmp    %edi,%r13d
  0x000000010ca23757: jae    0x000000010ca2386d
  0x000000010ca2375d: mov    0x18(%rsp),%r10
  0x000000010ca23762: mov    %bp,0x10(%r10,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca23768: inc    %r13d              ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca2376b: cmp    %r9d,%r13d
  0x000000010ca2376e: jl     0x000000010ca2373c  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca23770: mov    0x60(%r15),%rax
  0x000000010ca23774: mov    %rax,%r10
  0x000000010ca23777: add    $0x18,%r10
  0x000000010ca2377b: cmp    0x70(%r15),%r10
  0x000000010ca2377f: jae    0x000000010ca23816
  0x000000010ca23785: mov    %r10,0x60(%r15)
  0x000000010ca23789: prefetchnta 0xc0(%r10)
  0x000000010ca23791: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca23797: movabs $0x0,%r10
  0x000000010ca237a1: lea    (%r10,%r11,8),%r10
  0x000000010ca237a5: mov    0xa8(%r10),%r10
  0x000000010ca237ac: mov    %r10,(%rax)
  0x000000010ca237af: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca237b6: mov    %r12,0x10(%rax)
  0x000000010ca237ba: mov    0x18(%rsp),%r10
  0x000000010ca237bf: mov    %r10,%r11
  0x000000010ca237c2: shr    $0x3,%r11
  0x000000010ca237c6: mov    %r11d,0xc(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010ca237ca: mov    %rax,%r10
  0x000000010ca237cd: shr    $0x9,%r10
  0x000000010ca237d1: movabs $0x10c3a2000,%r11
  0x000000010ca237db: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010ca237df: add    $0x40,%rsp
  0x000000010ca237e3: pop    %rbp
  0x000000010ca237e4: test   %eax,-0x21287ea(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca237ea: retq   
  0x000000010ca237eb: mov    %ebx,%ebp
  0x000000010ca237ed: jmpq   0x000000010ca23660
  0x000000010ca237f2: mov    %ebx,%ebp
  0x000000010ca237f4: jmpq   0x000000010ca23754
  0x000000010ca237f9: xor    %r8d,%r8d
  0x000000010ca237fc: mov    %rbp,%r10
  0x000000010ca237ff: jmpq   0x000000010ca235ed
  0x000000010ca23804: mov    $0xc,%edx
  0x000000010ca23809: xor    %r10d,%r10d
  0x000000010ca2380c: mov    %r10,0x18(%rsp)
  0x000000010ca23811: jmpq   0x000000010ca2361b  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca23816: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca23820: data32 xchg %ax,%ax
  0x000000010ca23823: callq  0x000000010ca11960  ; OopMap{[24]=Oop off=680}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010ca23828: jmp    0x000000010ca237ba
  0x000000010ca2382a: mov    $0xffffffe4,%esi
  0x000000010ca2382f: mov    %r14d,%ebp
  0x000000010ca23832: mov    %ebx,(%rsp)
  0x000000010ca23835: rex.W pushq 0x18(%rsp)
  0x000000010ca2383a: rex.W popq 0x10(%rsp)
  0x000000010ca2383f: mov    %r8,0x18(%rsp)
  0x000000010ca23844: mov    %r13d,0x20(%rsp)
  0x000000010ca23849: mov    %r9d,0x24(%rsp)
  0x000000010ca2384e: nop
  0x000000010ca2384f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop off=724}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca23854: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca23859: mov    $0xfffffff6,%esi
  0x000000010ca2385e: mov    %r13d,(%rsp)
  0x000000010ca23862: nop
  0x000000010ca23863: callq  0x000000010c9a71a0  ; OopMap{off=744}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x000000010ca23868: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2386d: mov    $0xffffffe4,%esi
  0x000000010ca23872: mov    %r14d,(%rsp)
  0x000000010ca23876: mov    %ebx,0x4(%rsp)
  0x000000010ca2387a: mov    %r8,0x10(%rsp)
  0x000000010ca2387f: mov    %r13d,0xc(%rsp)
  0x000000010ca23884: mov    %r9d,0x28(%rsp)
  0x000000010ca23889: xchg   %ax,%ax
  0x000000010ca2388b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [24]=Oop off=784}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x000000010ca23890: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca23895: mov    $0xffffff9d,%esi
  0x000000010ca2389a: mov    %r14d,%ebp
  0x000000010ca2389d: mov    %ebx,(%rsp)
  0x000000010ca238a0: mov    %r13d,0x4(%rsp)
  0x000000010ca238a5: mov    %r10,0x18(%rsp)
  0x000000010ca238aa: nop
  0x000000010ca238ab: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [24]=Oop off=816}
                                                ;*iload
                                                ; - java.lang.String::replace@78 (line 2082)
                                                ;   {runtime_call}
  0x000000010ca238b0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca238b5: mov    $0xfffffff6,%esi
  0x000000010ca238ba: mov    %r13d,%ebp
  0x000000010ca238bd: xchg   %ax,%ax
  0x000000010ca238bf: callq  0x000000010c9a71a0  ; OopMap{off=836}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca238c4: callq  0x000000010be85e14  ;*new
                                                ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010ca238c9: mov    %rax,%rsi
  0x000000010ca238cc: add    $0x40,%rsp
  0x000000010ca238d0: pop    %rbp
  0x000000010ca238d1: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca238d6: hlt    
  0x000000010ca238d7: hlt    
  0x000000010ca238d8: hlt    
  0x000000010ca238d9: hlt    
  0x000000010ca238da: hlt    
  0x000000010ca238db: hlt    
  0x000000010ca238dc: hlt    
  0x000000010ca238dd: hlt    
  0x000000010ca238de: hlt    
  0x000000010ca238df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca238e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca238e5: callq  0x000000010ca238ea
  0x000000010ca238ea: subq   $0x5,(%rsp)
  0x000000010ca238ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca238f4: hlt    
  0x000000010ca238f5: hlt    
  0x000000010ca238f6: hlt    
  0x000000010ca238f7: hlt    
<nmethod compile_id='58' compile_kind='osr' compiler='C2' entry='0x000000010ca23580' size='2120' address='0x000000010ca23410' relocation_offset='296' insts_offset='368' stub_offset='1232' scopes_data_offset='1280' scopes_pcs_offset='1496' dependencies_offset='2072' handler_table_offset='2080' nul_chk_table_offset='2104' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5017' iicount='711' decompiles='1' unstable_if_traps='1' stamp='0.282'/>
<writer thread='7171'/>
<task_queued compile_id='59' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.282' comment='count' hot_count='10000'/>
<task_queued compile_id='60' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='5000' backedge_count='1' iicount='10000' stamp='0.282' comment='count' hot_count='10000'/>
<task_queued compile_id='61' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5000' iicount='712' decompiles='1' unstable_if_traps='1' stamp='0.282' comment='count' hot_count='5001'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor8 from __JVM_DefineClass__]
<writer thread='19203'/>
Decoding compiled method 0x000000010ca2dbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011132ef08} &apos;add&apos; &apos;(B)V&apos; in &apos;sun/reflect/ByteVectorImpl&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ByteVectorImpl&apos;
  # parm0:    rdx       = byte
  #           [sp+0x30]  (sp of caller)
  0x000000010ca2dd20: mov    0x8(%rsi),%r10d
  0x000000010ca2dd24: shl    $0x3,%r10
  0x000000010ca2dd28: cmp    %r10,%rax
  0x000000010ca2dd2b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2dd31: data32 xchg %ax,%ax
  0x000000010ca2dd34: nopl   0x0(%rax,%rax,1)
  0x000000010ca2dd3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2dd40: mov    %eax,-0x14000(%rsp)
  0x000000010ca2dd47: push   %rbp
  0x000000010ca2dd48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)

  0x000000010ca2dd4c: mov    %edx,0x4(%rsp)
  0x000000010ca2dd50: mov    %rsi,%rbp
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor9 from __JVM_DefineClass__]
<writer thread='19203'/>
  0x000000010ca2dd53: mov    0xc(%rsi),%edx
  0x000000010ca2dd56: mov    0x10(%rsi),%r11d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)

  0x000000010ca2dd5a: inc    %edx               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)

  0x000000010ca2dd5c: mov    %edx,0xc(%rsi)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)

  0x000000010ca2dd5f: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010ca2ddcd
  0x000000010ca2dd64: cmp    %r10d,%edx
  0x000000010ca2dd67: jge    0x000000010ca2dd90  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)

  0x000000010ca2dd69: mov    0xc(%r12,%r11,8),%r8d
  0x000000010ca2dd6e: cmp    %r8d,%edx
  0x000000010ca2dd71: jae    0x000000010ca2ddb5
  0x000000010ca2dd73: movslq %edx,%r10
  0x000000010ca2dd76: shl    $0x3,%r11
  0x000000010ca2dd7a: mov    0x4(%rsp),%r8d
  0x000000010ca2dd7f: mov    %r8b,0x10(%r11,%r10,1)  ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)

  0x000000010ca2dd84: add    $0x20,%rsp
  0x000000010ca2dd88: pop    %rbp
  0x000000010ca2dd89: test   %eax,-0x2132d8f(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2dd8f: retq                      ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)

  0x000000010ca2dd90: data32 xchg %ax,%ax
  0x000000010ca2dd93: callq  0x000000010c9e8020  ; OopMap{rbp=Oop off=120}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ;   {optimized virtual_call}
  0x000000010ca2dd98: mov    0xc(%rbp),%edx     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)

  0x000000010ca2dd9b: mov    0x10(%rbp),%r11d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)

  0x000000010ca2dd9f: test   %r11d,%r11d
  0x000000010ca2dda2: jne    0x000000010ca2dd69
  0x000000010ca2dda4: mov    $0xfffffff6,%esi
  0x000000010ca2dda9: mov    %edx,%ebp
  0x000000010ca2ddab: callq  0x000000010c9a71a0  ; OopMap{off=144}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ;   {runtime_call}
  0x000000010ca2ddb0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ddb5: mov    $0xffffffe4,%esi
  0x000000010ca2ddba: mov    %r11d,%ebp
  0x000000010ca2ddbd: mov    %edx,(%rsp)
  0x000000010ca2ddc0: data32 xchg %ax,%ax
  0x000000010ca2ddc3: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=168}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ;   {runtime_call}
  0x000000010ca2ddc8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ddcd: mov    $0xfffffff6,%esi
  0x000000010ca2ddd2: nop
  0x000000010ca2ddd3: callq  0x000000010c9a71a0  ; OopMap{off=184}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ;   {runtime_call}
  0x000000010ca2ddd8: callq  0x000000010be85e14  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ;   {runtime_call}
  0x000000010ca2dddd: mov    %rax,%rsi
  0x000000010ca2dde0: add    $0x20,%rsp
  0x000000010ca2dde4: pop    %rbp
  0x000000010ca2dde5: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca2ddea: hlt    
  0x000000010ca2ddeb: hlt    
  0x000000010ca2ddec: hlt    
  0x000000010ca2dded: hlt    
  0x000000010ca2ddee: hlt    
  0x000000010ca2ddef: hlt    
  0x000000010ca2ddf0: hlt    
  0x000000010ca2ddf1: hlt    
  0x000000010ca2ddf2: hlt    
  0x000000010ca2ddf3: hlt    
  0x000000010ca2ddf4: hlt    
  0x000000010ca2ddf5: hlt    
  0x000000010ca2ddf6: hlt    
  0x000000010ca2ddf7: hlt    
  0x000000010ca2ddf8: hlt    
  0x000000010ca2ddf9: hlt    
  0x000000010ca2ddfa: hlt    
  0x000000010ca2ddfb: hlt    
  0x000000010ca2ddfc: hlt    
  0x000000010ca2ddfd: hlt    
  0x000000010ca2ddfe: hlt    
  0x000000010ca2ddff: hlt    
[Stub Code]
  0x000000010ca2de00: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca2de0a: jmpq   0x000000010ca2de0a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca2de0f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca2de14: callq  0x000000010ca2de19
  0x000000010ca2de19: subq   $0x5,(%rsp)
  0x000000010ca2de1e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2de23: hlt    
  0x000000010ca2de24: hlt    
  0x000000010ca2de25: hlt    
  0x000000010ca2de26: hlt    
  0x000000010ca2de27: hlt    
<nmethod compile_id='60' compiler='C2' entry='0x000000010ca2dd20' size='1024' address='0x000000010ca2dbd0' relocation_offset='296' insts_offset='336' stub_offset='560' scopes_data_offset='608' scopes_pcs_offset='720' dependencies_offset='976' handler_table_offset='984' nul_chk_table_offset='1008' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='7742' backedge_count='1' iicount='12742' stamp='0.284'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca2d690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000111330290} &apos;emitByte&apos; &apos;(B)V&apos; in &apos;sun/reflect/ClassFileAssembler&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ClassFileAssembler&apos;
  # parm0:    rdx       = byte
  #           [sp+0x30]  (sp of caller)
  0x000000010ca2d800: mov    0x8(%rsi),%r10d
  0x000000010ca2d804: shl    $0x3,%r10
  0x000000010ca2d808: cmp    %r10,%rax
  0x000000010ca2d80b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2d811: data32 xchg %ax,%ax
  0x000000010ca2d814: nopl   0x0(%rax,%rax,1)
  0x000000010ca2d81c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2d820: mov    %eax,-0x14000(%rsp)
  0x000000010ca2d827: push   %rbp
  0x000000010ca2d828: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitByte@-1 (line 74)

  0x000000010ca2d82c: mov    %edx,(%rsp)
  0x000000010ca2d82f: mov    0x1c(%rsi),%r10d   ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)

  0x000000010ca2d833: mov    0x8(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x000000010ca2d8e5
  0x000000010ca2d838: cmp    $0xf80129ee,%r8d   ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x000000010ca2d83f: jne    0x000000010ca2d8d1
  0x000000010ca2d845: shl    $0x3,%r10          ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d849: mov    0x10(%r10),%ebp    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d84d: mov    0xc(%r10),%r8d
  0x000000010ca2d851: inc    %r8d               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d854: mov    %r8d,0xc(%r10)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d858: mov    0xc(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x000000010ca2d8f9
  0x000000010ca2d85d: cmp    %r11d,%r8d
  0x000000010ca2d860: jge    0x000000010ca2d888  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d862: mov    0xc(%r12,%rbp,8),%r10d
  0x000000010ca2d867: cmp    %r10d,%r8d
  0x000000010ca2d86a: jae    0x000000010ca2d8bd
  0x000000010ca2d86c: movslq %r8d,%r10
  0x000000010ca2d86f: lea    (%r12,%rbp,8),%r11
  0x000000010ca2d873: mov    (%rsp),%r9d
  0x000000010ca2d877: mov    %r9b,0x10(%r11,%r10,1)  ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitByte@-1 (line 74)

  0x000000010ca2d87c: add    $0x20,%rsp
  0x000000010ca2d880: pop    %rbp
  0x000000010ca2d881: test   %eax,-0x2132887(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2d887: retq                      ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d888: mov    %r10,%rsi
  0x000000010ca2d88b: mov    %r8d,%edx
  0x000000010ca2d88e: mov    %r10,%rbp
  0x000000010ca2d891: xchg   %ax,%ax
  0x000000010ca2d893: callq  0x000000010c9e8020  ; OopMap{rbp=Oop off=152}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {optimized virtual_call}
  0x000000010ca2d898: mov    %rbp,%r10
  0x000000010ca2d89b: mov    0xc(%r10),%r8d     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d89f: mov    0x10(%r10),%ebp    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010ca2d8a3: test   %ebp,%ebp
  0x000000010ca2d8a5: jne    0x000000010ca2d862
  0x000000010ca2d8a7: mov    $0xfffffff6,%esi
  0x000000010ca2d8ac: mov    (%rsp),%ebp
  0x000000010ca2d8af: mov    %r8d,(%rsp)
  0x000000010ca2d8b3: callq  0x000000010c9a71a0  ; OopMap{off=184}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d8b8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2d8bd: mov    $0xffffffe4,%esi
  0x000000010ca2d8c2: mov    %r8d,0x4(%rsp)
  0x000000010ca2d8c7: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=204}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d8cc: callq  0x000000010be85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d8d1: mov    $0xffffffde,%esi
  0x000000010ca2d8d6: mov    %r10d,%ebp
  0x000000010ca2d8d9: xchg   %ax,%ax
  0x000000010ca2d8db: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=224}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d8e0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2d8e5: mov    $0xfffffff6,%esi
  0x000000010ca2d8ea: mov    %edx,%ebp
  0x000000010ca2d8ec: data32 xchg %ax,%ax
  0x000000010ca2d8ef: callq  0x000000010c9a71a0  ; OopMap{off=244}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d8f4: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2d8f9: mov    $0xfffffff6,%esi
  0x000000010ca2d8fe: nop
  0x000000010ca2d8ff: callq  0x000000010c9a71a0  ; OopMap{off=260}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d904: callq  0x000000010be85e14  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010ca2d909: mov    %rax,%rsi
  0x000000010ca2d90c: add    $0x20,%rsp
  0x000000010ca2d910: pop    %rbp
  0x000000010ca2d911: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca2d916: hlt    
  0x000000010ca2d917: hlt    
  0x000000010ca2d918: hlt    
  0x000000010ca2d919: hlt    
  0x000000010ca2d91a: hlt    
  0x000000010ca2d91b: hlt    
  0x000000010ca2d91c: hlt    
  0x000000010ca2d91d: hlt    
  0x000000010ca2d91e: hlt    
  0x000000010ca2d91f: hlt    
[Stub Code]
  0x000000010ca2d920: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca2d92a: jmpq   0x000000010ca2d92a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca2d92f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca2d934: callq  0x000000010ca2d939
  0x000000010ca2d939: subq   $0x5,(%rsp)
  0x000000010ca2d93e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2d943: hlt    
  0x000000010ca2d944: hlt    
  0x000000010ca2d945: hlt    
  0x000000010ca2d946: hlt    
  0x000000010ca2d947: hlt    
<nmethod compile_id='59' compiler='C2' entry='0x000000010ca2d800' size='1272' address='0x000000010ca2d690' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='720' scopes_pcs_offset='880' dependencies_offset='1216' handler_table_offset='1224' nul_chk_table_offset='1248' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='7742' backedge_count='1' iicount='12742' stamp='0.286'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor10 from __JVM_DefineClass__]
[Loaded java.util.function.BiConsumer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$5 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$6 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BaseRunner from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ForkedRunner from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.IterationResultAcceptor from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ForkedRunner$SavedIOException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.InfraFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.InfraFrame$Type from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor11 from __JVM_DefineClass__]
<writer thread='19203'/>
Decoding compiled method 0x000000010ca2c790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4ef38} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x40]  (sp of caller)
  0x000000010ca2c900: mov    0x8(%rsi),%r10d
  0x000000010ca2c904: shl    $0x3,%r10
  0x000000010ca2c908: cmp    %r10,%rax
  0x000000010ca2c90b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2c911: data32 xchg %ax,%ax
  0x000000010ca2c914: nopl   0x0(%rax,%rax,1)
  0x000000010ca2c91c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2c920: mov    %eax,-0x14000(%rsp)
  0x000000010ca2c927: push   %rbp
  0x000000010ca2c928: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010ca2c92c: mov    %rsi,%r10
  0x000000010ca2c92f: mov    %ecx,0x8(%rsp)
  0x000000010ca2c933: mov    %edx,%r11d
  0x000000010ca2c936: cmp    %ecx,%edx
  0x000000010ca2c938: je     0x000000010ca2cd7d  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000000010ca2c93e: mov    %rsi,%rcx
  0x000000010ca2c941: mov    0xc(%rsi),%ebx     ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010ca2c944: mov    0xc(%r12,%rbx,8),%r8d  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x000000010ca2cd95
  0x000000010ca2c949: test   %r8d,%r8d
  0x000000010ca2c94c: jle    0x000000010ca2c9f1  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010ca2c952: test   %r8d,%r8d
  0x000000010ca2c955: jbe    0x000000010ca2ccf1
  0x000000010ca2c95b: mov    %r8d,%r9d
  0x000000010ca2c95e: dec    %r9d
  0x000000010ca2c961: cmp    %r8d,%r9d
  0x000000010ca2c964: jae    0x000000010ca2ccf1  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca2c96a: movzwl 0x10(%r12,%rbx,8),%r10d
  0x000000010ca2c970: mov    %r8d,%r9d
  0x000000010ca2c973: add    $0xfffffffffffffffd,%r9d
  0x000000010ca2c977: lea    (%r12,%rbx,8),%rdx
  0x000000010ca2c97b: cmp    %r11d,%r10d
  0x000000010ca2c97e: je     0x000000010ca2cc69  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c984: mov    $0x1,%ebp
  0x000000010ca2c989: cmp    $0x1,%r9d
  0x000000010ca2c98d: jle    0x000000010ca2cd49
  0x000000010ca2c993: xor    %esi,%esi
  0x000000010ca2c995: data32 data32 nopw 0x0(%rax,%rax,1)
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca2c9a0: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2c9a5: cmp    %r11d,%edi
  0x000000010ca2c9a8: je     0x000000010ca2c9fe  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c9aa: movslq %ebp,%rax
  0x000000010ca2c9ad: movzwl 0x12(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2c9b2: cmp    %r11d,%edi
  0x000000010ca2c9b5: je     0x000000010ca2c9fc  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c9b7: movzwl 0x14(%rdx,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2c9bd: cmp    %r11d,%r10d
  0x000000010ca2c9c0: je     0x000000010ca2cc72  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c9c6: movzwl 0x16(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2c9cb: cmp    %r11d,%edi
  0x000000010ca2c9ce: je     0x000000010ca2c9f9  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c9d0: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca2c9d3: cmp    %r9d,%ebp
  0x000000010ca2c9d6: jl     0x000000010ca2c9a0  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010ca2c9d8: cmp    %r8d,%ebp
  0x000000010ca2c9db: jge    0x000000010ca2c9f1
  0x000000010ca2c9dd: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010ca2c9e0: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010ca2c9e5: cmp    %r11d,%edi
  0x000000010ca2c9e8: je     0x000000010ca2c9fe  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010ca2c9ea: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca2c9ec: cmp    %r8d,%ebp
  0x000000010ca2c9ef: jl     0x000000010ca2c9e0  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010ca2c9f1: mov    %rcx,%rax
  0x000000010ca2c9f4: jmpq   0x000000010ca2cc54
  0x000000010ca2c9f9: add    $0x2,%ebp
  0x000000010ca2c9fc: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca2c9fe: cmp    %r8d,%ebp
  0x000000010ca2ca01: jge    0x000000010ca2c9f1  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010ca2ca03: cmp    $0x80000,%r8d
  0x000000010ca2ca0a: ja     0x000000010ca2cc84
  0x000000010ca2ca10: mov    0x60(%r15),%r13
  0x000000010ca2ca14: movslq %r8d,%rcx
  0x000000010ca2ca17: shl    %rcx
  0x000000010ca2ca1a: add    $0x17,%rcx
  0x000000010ca2ca1e: mov    %rcx,%r10
  0x000000010ca2ca21: and    $0xfffffffffffffff8,%r10
  0x000000010ca2ca25: mov    %r13,%rax
  0x000000010ca2ca28: add    %r10,%rax
  0x000000010ca2ca2b: cmp    0x70(%r15),%rax
  0x000000010ca2ca2f: jae    0x000000010ca2cc84
  0x000000010ca2ca35: mov    %rax,0x60(%r15)
  0x000000010ca2ca39: prefetchnta 0xc0(%rax)
  0x000000010ca2ca40: movq   $0x1,0x0(%r13)
  0x000000010ca2ca48: prefetchnta 0x100(%rax)
  0x000000010ca2ca4f: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000010ca2ca57: mov    %r8d,0xc(%r13)
  0x000000010ca2ca5b: prefetchnta 0x140(%rax)
  0x000000010ca2ca62: mov    %r13,%rdi
  0x000000010ca2ca65: add    $0x10,%rdi
  0x000000010ca2ca69: prefetchnta 0x180(%rax)
  0x000000010ca2ca70: shr    $0x3,%rcx
  0x000000010ca2ca74: add    $0xfffffffffffffffe,%rcx
  0x000000010ca2ca78: xor    %rax,%rax
  0x000000010ca2ca7b: shl    $0x3,%rcx
  0x000000010ca2ca7f: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x000000010ca2ca82: mov    %r13,0x10(%rsp)
  0x000000010ca2ca87: test   %ebp,%ebp
  0x000000010ca2ca89: jle    0x000000010ca2cb06  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca2ca8f: mov    %ebp,%ecx
  0x000000010ca2ca91: dec    %ecx
  0x000000010ca2ca93: cmp    %r8d,%ecx
  0x000000010ca2ca96: jae    0x000000010ca2cd50
  0x000000010ca2ca9c: mov    $0x2,%r10d
  0x000000010ca2caa2: cmp    %r10d,%ebp
  0x000000010ca2caa5: mov    %ebp,%edi
  0x000000010ca2caa7: cmovg  %r10d,%edi         ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca2caab: movzwl 0x10(%rdx,%rsi,2),%eax
  0x000000010ca2cab0: mov    0x10(%rsp),%r10
  0x000000010ca2cab5: mov    %ax,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca2cabb: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca2cabd: cmp    %edi,%esi
  0x000000010ca2cabf: jl     0x000000010ca2caab  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca2cac1: mov    $0x80000000,%edi
  0x000000010ca2cac6: cmp    %ecx,%ebp
  0x000000010ca2cac8: cmovl  %edi,%ecx
  0x000000010ca2cacb: cmp    %ecx,%esi
  0x000000010ca2cacd: jge    0x000000010ca2cae9
  0x000000010ca2cacf: nop                       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca2cad0: vmovd  0x10(%rdx,%rsi,2),%xmm0
  0x000000010ca2cad6: mov    0x10(%rsp),%r10
  0x000000010ca2cadb: vmovd  %xmm0,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca2cae2: add    $0x2,%esi          ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca2cae5: cmp    %ecx,%esi
  0x000000010ca2cae7: jl     0x000000010ca2cad0  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca2cae9: cmp    %ebp,%esi
  0x000000010ca2caeb: jge    0x000000010ca2cb06
  0x000000010ca2caed: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010ca2caf0: movzwl 0x10(%rdx,%rsi,2),%ecx
  0x000000010ca2caf5: mov    0x10(%rsp),%r10
  0x000000010ca2cafa: mov    %cx,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010ca2cb00: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010ca2cb02: cmp    %ebp,%esi
  0x000000010ca2cb04: jl     0x000000010ca2caf0  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010ca2cb06: cmp    %r8d,%ebp
  0x000000010ca2cb09: jae    0x000000010ca2cd19
  0x000000010ca2cb0f: mov    %ebp,%r10d
  0x000000010ca2cb12: inc    %r10d              ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca2cb15: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cb1a: cmp    %r11d,%ecx
  0x000000010ca2cb1d: je     0x000000010ca2cc60
  0x000000010ca2cb23: mov    0x10(%rsp),%rbx
  0x000000010ca2cb28: mov    %cx,0x10(%rbx,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cb2d: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca2cb2f: cmp    %r10d,%ebp
  0x000000010ca2cb32: jl     0x000000010ca2cb15  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca2cb34: cmp    %r9d,%ebp
  0x000000010ca2cb37: jge    0x000000010ca2cbba
  0x000000010ca2cb3d: jmp    0x000000010ca2cb6c
  0x000000010ca2cb3f: mov    0x8(%rsp),%ecx
  0x000000010ca2cb43: mov    0x10(%rsp),%r10
  0x000000010ca2cb48: mov    %cx,0x14(%r10,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cb4e: movzwl 0x16(%rdx,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cb54: cmp    %r11d,%r10d
  0x000000010ca2cb57: je     0x000000010ca2cba6
  0x000000010ca2cb59: mov    0x10(%rsp),%rcx
  0x000000010ca2cb5e: mov    %r10w,0x16(%rcx,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cb64: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca2cb67: cmp    %r9d,%ebp
  0x000000010ca2cb6a: jge    0x000000010ca2cbba  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca2cb6c: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cb71: cmp    %r11d,%ecx
  0x000000010ca2cb74: je     0x000000010ca2cbad
  0x000000010ca2cb76: mov    0x10(%rsp),%r10
  0x000000010ca2cb7b: mov    %cx,0x10(%r10,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cb81: movslq %ebp,%rbx
  0x000000010ca2cb84: movzwl 0x12(%rdx,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cb8a: cmp    %r11d,%r10d
  0x000000010ca2cb8d: je     0x000000010ca2cbb3
  0x000000010ca2cb8f: mov    0x10(%rsp),%rcx
  0x000000010ca2cb94: mov    %r10w,0x12(%rcx,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cb9a: movzwl 0x14(%rdx,%rbx,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cb9f: cmp    %r11d,%ecx
  0x000000010ca2cba2: jne    0x000000010ca2cb43  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010ca2cba4: jmp    0x000000010ca2cb3f
  0x000000010ca2cba6: mov    0x8(%rsp),%r10d
  0x000000010ca2cbab: jmp    0x000000010ca2cb59
  0x000000010ca2cbad: mov    0x8(%rsp),%ecx
  0x000000010ca2cbb1: jmp    0x000000010ca2cb76
  0x000000010ca2cbb3: mov    0x8(%rsp),%r10d
  0x000000010ca2cbb8: jmp    0x000000010ca2cb8f
  0x000000010ca2cbba: cmp    %r8d,%ebp
  0x000000010ca2cbbd: jge    0x000000010ca2cbe1
  0x000000010ca2cbbf: nop                       ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010ca2cbc0: movzwl 0x10(%rdx,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010ca2cbc6: cmp    %r11d,%r9d
  0x000000010ca2cbc9: je     0x000000010ca2cc7a
  0x000000010ca2cbcf: mov    0x10(%rsp),%r10
  0x000000010ca2cbd4: mov    %r9w,0x10(%r10,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010ca2cbda: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010ca2cbdc: cmp    %r8d,%ebp
  0x000000010ca2cbdf: jl     0x000000010ca2cbc0  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca2cbe1: mov    0x60(%r15),%rax
  0x000000010ca2cbe5: mov    %rax,%r10
  0x000000010ca2cbe8: add    $0x18,%r10
  0x000000010ca2cbec: cmp    0x70(%r15),%r10
  0x000000010ca2cbf0: jae    0x000000010ca2ccd7
  0x000000010ca2cbf6: mov    %r10,0x60(%r15)
  0x000000010ca2cbfa: prefetchnta 0xc0(%r10)
  0x000000010ca2cc02: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca2cc08: movabs $0x0,%r10
  0x000000010ca2cc12: lea    (%r10,%r11,8),%r10
  0x000000010ca2cc16: mov    0xa8(%r10),%r10
  0x000000010ca2cc1d: mov    %r10,(%rax)
  0x000000010ca2cc20: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca2cc27: mov    %r12d,0xc(%rax)
  0x000000010ca2cc2b: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010ca2cc2f: mov    0x10(%rsp),%r10
  0x000000010ca2cc34: mov    %r10,%r11
  0x000000010ca2cc37: shr    $0x3,%r11
  0x000000010ca2cc3b: mov    %r11d,0xc(%rax)
  0x000000010ca2cc3f: mov    %rax,%r10
  0x000000010ca2cc42: shr    $0x9,%r10
  0x000000010ca2cc46: movabs $0x10c3a2000,%r11
  0x000000010ca2cc50: mov    %r12b,(%r11,%r10,1)  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)

  0x000000010ca2cc54: add    $0x30,%rsp
  0x000000010ca2cc58: pop    %rbp
  0x000000010ca2cc59: test   %eax,-0x2131c5f(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2cc5f: retq   
  0x000000010ca2cc60: mov    0x8(%rsp),%ecx
  0x000000010ca2cc64: jmpq   0x000000010ca2cb23
  0x000000010ca2cc69: xor    %ebp,%ebp
  0x000000010ca2cc6b: xor    %esi,%esi
  0x000000010ca2cc6d: jmpq   0x000000010ca2c9fe
  0x000000010ca2cc72: add    $0x2,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010ca2cc75: jmpq   0x000000010ca2c9fe
  0x000000010ca2cc7a: mov    0x8(%rsp),%r9d
  0x000000010ca2cc7f: jmpq   0x000000010ca2cbcf
  0x000000010ca2cc84: mov    %esi,0x14(%rsp)
  0x000000010ca2cc88: mov    %rdx,0x18(%rsp)
  0x000000010ca2cc8d: mov    %r9d,0x10(%rsp)
  0x000000010ca2cc92: mov    %r8d,0xc(%rsp)
  0x000000010ca2cc97: mov    %ebx,0x4(%rsp)
  0x000000010ca2cc9b: mov    %r11d,(%rsp)
  0x000000010ca2cc9f: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca2cca9: mov    %r8d,%edx
  0x000000010ca2ccac: data32 xchg %ax,%ax
  0x000000010ca2ccaf: callq  0x000000010ca11a60  ; OopMap{[4]=NarrowOop [24]=Oop off=948}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010ca2ccb4: mov    (%rsp),%r11d
  0x000000010ca2ccb8: mov    0x4(%rsp),%ebx
  0x000000010ca2ccbc: mov    0xc(%rsp),%r8d
  0x000000010ca2ccc1: mov    0x10(%rsp),%r9d
  0x000000010ca2ccc6: mov    0x18(%rsp),%rdx
  0x000000010ca2cccb: mov    0x14(%rsp),%esi
  0x000000010ca2cccf: mov    %rax,%r13
  0x000000010ca2ccd2: jmpq   0x000000010ca2ca82  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010ca2ccd7: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca2cce1: mov    0x10(%rsp),%rbp
  0x000000010ca2cce6: nop
  0x000000010ca2cce7: callq  0x000000010ca11960  ; OopMap{rbp=Oop [16]=Oop off=1004}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010ca2ccec: jmpq   0x000000010ca2cc2f
  0x000000010ca2ccf1: mov    $0xffffff86,%esi
  0x000000010ca2ccf6: mov    %edx,%ebp
  0x000000010ca2ccf8: mov    0x8(%rsp),%r10d
  0x000000010ca2ccfd: mov    %r10d,(%rsp)
  0x000000010ca2cd01: mov    %rcx,0x8(%rsp)
  0x000000010ca2cd06: mov    %r8d,0x4(%rsp)
  0x000000010ca2cd0b: mov    %ebx,0x10(%rsp)
  0x000000010ca2cd0f: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1044}
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)
                                                ;   {runtime_call}
  0x000000010ca2cd14: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2cd19: mov    $0xffffff86,%esi
  0x000000010ca2cd1e: mov    %r11d,(%rsp)
  0x000000010ca2cd22: mov    0x8(%rsp),%r11d
  0x000000010ca2cd27: mov    %r11d,0x4(%rsp)
  0x000000010ca2cd2c: rex.W pushq 0x10(%rsp)
  0x000000010ca2cd31: rex.W popq 0x8(%rsp)
  0x000000010ca2cd36: mov    %r8d,0x10(%rsp)
  0x000000010ca2cd3b: mov    %ebx,0x14(%rsp)
  0x000000010ca2cd3f: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1092}
                                                ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca2cd44: callq  0x000000010be85e14  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010ca2cd49: xor    %esi,%esi
  0x000000010ca2cd4b: jmpq   0x000000010ca2c9d8
  0x000000010ca2cd50: mov    $0xffffff86,%esi
  0x000000010ca2cd55: mov    %r11d,(%rsp)
  0x000000010ca2cd59: mov    0x8(%rsp),%r10d
  0x000000010ca2cd5e: mov    %r10d,0x4(%rsp)
  0x000000010ca2cd63: mov    %r13,0x8(%rsp)
  0x000000010ca2cd68: mov    %r8d,0x10(%rsp)
  0x000000010ca2cd6d: mov    %ebx,0x14(%rsp)
  0x000000010ca2cd71: xchg   %ax,%ax
  0x000000010ca2cd73: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1144}
                                                ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010ca2cd78: callq  0x000000010be85e14  ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010ca2cd7d: mov    $0xffffff65,%esi
  0x000000010ca2cd82: mov    %edx,0x4(%rsp)
  0x000000010ca2cd86: mov    %r10,0x10(%rsp)
  0x000000010ca2cd8b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=1168}
                                                ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010ca2cd90: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010ca2cd95: mov    $0xfffffff6,%esi
  0x000000010ca2cd9a: nop
  0x000000010ca2cd9b: callq  0x000000010c9a71a0  ; OopMap{off=1184}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x000000010ca2cda0: callq  0x000000010be85e14  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010ca2cda5: mov    %rax,%rsi
  0x000000010ca2cda8: jmp    0x000000010ca2cdad
  0x000000010ca2cdaa: mov    %rax,%rsi          ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010ca2cdad: add    $0x30,%rsp
  0x000000010ca2cdb1: pop    %rbp
  0x000000010ca2cdb2: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca2cdb7: hlt    
  0x000000010ca2cdb8: hlt    
  0x000000010ca2cdb9: hlt    
  0x000000010ca2cdba: hlt    
  0x000000010ca2cdbb: hlt    
  0x000000010ca2cdbc: hlt    
  0x000000010ca2cdbd: hlt    
  0x000000010ca2cdbe: hlt    
  0x000000010ca2cdbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca2cdc0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca2cdc5: callq  0x000000010ca2cdca
  0x000000010ca2cdca: subq   $0x5,(%rsp)
  0x000000010ca2cdcf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2cdd4: hlt    
  0x000000010ca2cdd5: hlt    
  0x000000010ca2cdd6: hlt    
  0x000000010ca2cdd7: hlt    
<nmethod compile_id='61' compiler='C2' entry='0x000000010ca2c900' size='3272' address='0x000000010ca2c790' relocation_offset='296' insts_offset='368' stub_offset='1584' scopes_data_offset='1632' scopes_pcs_offset='1952' dependencies_offset='3200' handler_table_offset='3208' nul_chk_table_offset='3256' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5046' iicount='743' decompiles='1' unstable_if_traps='1' stamp='0.297'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.link.ActionPlanFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ActionPlan from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor12 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.ActionType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='62' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='671' backedge_count='5000' iicount='671' stamp='0.307' comment='count' hot_count='671'/>
<task_queued compile_id='63' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='671' backedge_count='5000' iicount='671' stamp='0.307' comment='count' hot_count='671'/>
<task_queued compile_id='64' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='671' backedge_count='5000' iicount='671' stamp='0.307' comment='count' hot_count='671'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor13 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.Action from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ActionMode from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor14 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor15 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor16 from __JVM_DefineClass__]
<task_queued compile_id='65' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='0.314' comment='count' hot_count='10000'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca2e310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001113341d0} &apos;encode&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;sun/reflect/UTF8&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x000000010ca2e480: mov    %eax,-0x14000(%rsp)
  0x000000010ca2e487: push   %rbp
  0x000000010ca2e488: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.reflect.UTF8::encode@-1 (line 35)

  0x000000010ca2e48c: mov    %rsi,%r13
  0x000000010ca2e48f: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; implicit exception: dispatches to 0x000000010ca2e9a5
  0x000000010ca2e493: mov    0xc(%r12,%r10,8),%r9d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; implicit exception: dispatches to 0x000000010ca2e9b5
  0x000000010ca2e498: mov    %r9d,%esi
  0x000000010ca2e49b: dec    %esi
  0x000000010ca2e49d: mov    %r9d,%ebx
  0x000000010ca2e4a0: add    $0xfffffffffffffffd,%ebx
  0x000000010ca2e4a3: lea    (%r12,%r10,8),%rbp
  0x000000010ca2e4a7: mov    $0x80000000,%r10d
  0x000000010ca2e4ad: cmp    %ebx,%r9d
  0x000000010ca2e4b0: cmovl  %r10d,%ebx
  0x000000010ca2e4b4: mov    $0x1,%r10d
  0x000000010ca2e4ba: cmp    %r10d,%r9d
  0x000000010ca2e4bd: mov    %r9d,%edx
  0x000000010ca2e4c0: cmovg  %r10d,%edx
  0x000000010ca2e4c4: test   %r9d,%r9d
  0x000000010ca2e4c7: jle    0x000000010ca2e795  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e4cd: test   %r9d,%r9d
  0x000000010ca2e4d0: jbe    0x000000010ca2e8e9
  0x000000010ca2e4d6: cmp    %r9d,%esi
  0x000000010ca2e4d9: jae    0x000000010ca2e8e9
  0x000000010ca2e4df: xor    %r10d,%r10d
  0x000000010ca2e4e2: xor    %r8d,%r8d          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e4e5: test   %r10d,%r10d
  0x000000010ca2e4e8: jl     0x000000010ca2e929  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e4ee: cmp    %r9d,%r10d
  0x000000010ca2e4f1: jge    0x000000010ca2e979  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e4f7: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e4fd: cmp    $0x1,%ecx
  0x000000010ca2e500: jl     0x000000010ca2e840  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e506: cmp    $0x7f,%ecx
  0x000000010ca2e509: jg     0x000000010ca2e8a4  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e50f: inc    %r10d              ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e512: cmp    %edx,%r10d
  0x000000010ca2e515: jl     0x000000010ca2e4e5  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e517: cmp    %ebx,%r10d
  0x000000010ca2e51a: jge    0x000000010ca2e58c
  0x000000010ca2e51c: nopl   0x0(%rax)          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e520: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e526: cmp    $0x1,%ecx
  0x000000010ca2e529: jl     0x000000010ca2e840  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e52f: cmp    $0x7f,%ecx
  0x000000010ca2e532: jg     0x000000010ca2e8a4  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e538: movslq %r10d,%r11
  0x000000010ca2e53b: movzwl 0x12(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e541: cmp    $0x1,%ecx
  0x000000010ca2e544: jl     0x000000010ca2e831  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e54a: cmp    $0x7f,%ecx
  0x000000010ca2e54d: jg     0x000000010ca2e895  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e553: movzwl 0x14(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e559: cmp    $0x1,%ecx
  0x000000010ca2e55c: jl     0x000000010ca2e836  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e562: cmp    $0x7f,%ecx
  0x000000010ca2e565: jg     0x000000010ca2e89a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e56b: movzwl 0x16(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e571: cmp    $0x1,%ecx
  0x000000010ca2e574: jl     0x000000010ca2e83c  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e57a: cmp    $0x7f,%ecx
  0x000000010ca2e57d: jg     0x000000010ca2e8a0  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e583: add    $0x4,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e587: cmp    %ebx,%r10d
  0x000000010ca2e58a: jl     0x000000010ca2e520  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e58c: cmp    %r9d,%r10d
  0x000000010ca2e58f: jge    0x000000010ca2e5c6
  0x000000010ca2e591: data32 xchg %ax,%ax       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e594: test   %r10d,%r10d
  0x000000010ca2e597: jl     0x000000010ca2e929  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e59d: cmp    %r9d,%r10d
  0x000000010ca2e5a0: jge    0x000000010ca2e979  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5a6: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5ac: cmp    $0x1,%ecx
  0x000000010ca2e5af: jl     0x000000010ca2e840  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5b5: cmp    $0x7f,%ecx
  0x000000010ca2e5b8: jg     0x000000010ca2e8a4  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5be: inc    %r10d              ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5c1: cmp    %r9d,%r10d
  0x000000010ca2e5c4: jl     0x000000010ca2e594  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e5c6: cmp    $0x100000,%r10d
  0x000000010ca2e5cd: ja     0x000000010ca2e8c5
  0x000000010ca2e5d3: movslq %r10d,%rcx
  0x000000010ca2e5d6: cmp    $0x100000,%r10d
  0x000000010ca2e5dd: ja     0x000000010ca2e7a0
  0x000000010ca2e5e3: add    $0x17,%rcx
  0x000000010ca2e5e7: mov    %rcx,%rdi
  0x000000010ca2e5ea: and    $0xfffffffffffffff8,%rdi
  0x000000010ca2e5ee: mov    0x60(%r15),%r11
  0x000000010ca2e5f2: mov    %r11,%rax
  0x000000010ca2e5f5: add    %rdi,%rax
  0x000000010ca2e5f8: cmp    0x70(%r15),%rax
  0x000000010ca2e5fc: jae    0x000000010ca2e7a0
  0x000000010ca2e602: mov    %rax,0x60(%r15)
  0x000000010ca2e606: prefetchnta 0xc0(%rax)
  0x000000010ca2e60d: movq   $0x1,(%r11)
  0x000000010ca2e614: prefetchnta 0x100(%rax)
  0x000000010ca2e61b: movl   $0xf80000f5,0x8(%r11)  ;   {metadata({type array byte})}
  0x000000010ca2e623: mov    %r10d,0xc(%r11)
  0x000000010ca2e627: prefetchnta 0x140(%rax)
  0x000000010ca2e62e: mov    %r11,%rdi
  0x000000010ca2e631: add    $0x10,%rdi
  0x000000010ca2e635: prefetchnta 0x180(%rax)
  0x000000010ca2e63c: shr    $0x3,%rcx
  0x000000010ca2e640: add    $0xfffffffffffffffe,%rcx
  0x000000010ca2e644: xor    %rax,%rax
  0x000000010ca2e647: shl    $0x3,%rcx
  0x000000010ca2e64b: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)

  0x000000010ca2e64e: test   %r9d,%r9d
  0x000000010ca2e651: jle    0x000000010ca2e786  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x000000010ca2e657: test   %r9d,%r9d
  0x000000010ca2e65a: jbe    0x000000010ca2e8cd
  0x000000010ca2e660: cmp    %r9d,%esi
  0x000000010ca2e663: jae    0x000000010ca2e8cd
  0x000000010ca2e669: test   %r10d,%r10d
  0x000000010ca2e66c: jbe    0x000000010ca2e8cd
  0x000000010ca2e672: cmp    %r10d,%esi
  0x000000010ca2e675: jae    0x000000010ca2e8cd  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x000000010ca2e67b: test   %r8d,%r8d
  0x000000010ca2e67e: jl     0x000000010ca2e901  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e684: cmp    %r9d,%r8d
  0x000000010ca2e687: jge    0x000000010ca2e951  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e68d: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e690: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e696: cmp    $0x1,%ecx
  0x000000010ca2e699: jl     0x000000010ca2e80a  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e69f: cmp    $0x7f,%ecx
  0x000000010ca2e6a2: jg     0x000000010ca2e870  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e6a8: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e6ad: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x000000010ca2e6b0: cmp    %edx,%r8d
  0x000000010ca2e6b3: jl     0x000000010ca2e67b  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x000000010ca2e6b5: cmp    %ebx,%r8d
  0x000000010ca2e6b8: jge    0x000000010ca2e747
  0x000000010ca2e6be: xchg   %ax,%ax            ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x000000010ca2e6c0: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e6c3: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e6c9: cmp    $0x1,%ecx
  0x000000010ca2e6cc: jl     0x000000010ca2e80a  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e6d2: cmp    $0x7f,%ecx
  0x000000010ca2e6d5: jg     0x000000010ca2e870  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e6db: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e6e0: movslq %r8d,%r10
  0x000000010ca2e6e3: movzwl 0x12(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e6e9: cmp    $0x1,%ecx
  0x000000010ca2e6ec: jl     0x000000010ca2e7fb  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e6f2: cmp    $0x7f,%ecx
  0x000000010ca2e6f5: jg     0x000000010ca2e861  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e6fb: mov    %cl,0x11(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e700: movzwl 0x14(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e706: cmp    $0x1,%ecx
  0x000000010ca2e709: jl     0x000000010ca2e800  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e70f: cmp    $0x7f,%ecx
  0x000000010ca2e712: jg     0x000000010ca2e866  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e718: mov    %cl,0x12(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e71d: movzwl 0x16(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e723: cmp    $0x1,%ecx
  0x000000010ca2e726: jl     0x000000010ca2e806  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e72c: cmp    $0x7f,%ecx
  0x000000010ca2e72f: jg     0x000000010ca2e86c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e735: mov    %cl,0x13(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e73a: add    $0x4,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x000000010ca2e73e: cmp    %ebx,%r8d
  0x000000010ca2e741: jl     0x000000010ca2e6c0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x000000010ca2e747: cmp    %r9d,%r8d
  0x000000010ca2e74a: jge    0x000000010ca2e786  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x000000010ca2e74c: test   %r8d,%r8d
  0x000000010ca2e74f: jl     0x000000010ca2e901  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e755: cmp    %r9d,%r8d
  0x000000010ca2e758: jge    0x000000010ca2e951  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e75e: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e761: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010ca2e767: cmp    $0x1,%ecx
  0x000000010ca2e76a: jl     0x000000010ca2e80a  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e770: cmp    $0x7f,%ecx
  0x000000010ca2e773: jg     0x000000010ca2e870  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e779: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010ca2e77e: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x000000010ca2e781: cmp    %r9d,%r8d
  0x000000010ca2e784: jl     0x000000010ca2e74c  ;*synchronization entry
                                                ; - sun.reflect.UTF8::encode@-1 (line 35)

  0x000000010ca2e786: mov    %r11,%rax
  0x000000010ca2e789: add    $0x40,%rsp
  0x000000010ca2e78d: pop    %rbp
  0x000000010ca2e78e: test   %eax,-0x2133794(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2e794: retq   
  0x000000010ca2e795: xor    %r10d,%r10d
  0x000000010ca2e798: xor    %r8d,%r8d
  0x000000010ca2e79b: jmpq   0x000000010ca2e5c6
  0x000000010ca2e7a0: mov    %edx,0x1c(%rsp)
  0x000000010ca2e7a4: mov    %r8d,0x18(%rsp)
  0x000000010ca2e7a9: mov    %ebx,0x14(%rsp)
  0x000000010ca2e7ad: mov    %esi,0x10(%rsp)
  0x000000010ca2e7b1: mov    %r9d,0xc(%rsp)
  0x000000010ca2e7b6: mov    %r10d,0x8(%rsp)
  0x000000010ca2e7bb: mov    %r13,(%rsp)
  0x000000010ca2e7bf: movabs $0x7c00007a8,%rsi  ;   {metadata({type array byte})}
  0x000000010ca2e7c9: mov    %r10d,%edx
  0x000000010ca2e7cc: data32 xchg %ax,%ax
  0x000000010ca2e7cf: callq  0x000000010ca11a60  ; OopMap{rbp=Oop [0]=Oop off=852}
                                                ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e7d4: mov    (%rsp),%r13
  0x000000010ca2e7d8: mov    0x8(%rsp),%r10d
  0x000000010ca2e7dd: mov    %rax,%r11
  0x000000010ca2e7e0: mov    0xc(%rsp),%r9d
  0x000000010ca2e7e5: mov    0x10(%rsp),%esi
  0x000000010ca2e7e9: mov    0x14(%rsp),%ebx
  0x000000010ca2e7ed: mov    0x18(%rsp),%r8d
  0x000000010ca2e7f2: mov    0x1c(%rsp),%edx
  0x000000010ca2e7f6: jmpq   0x000000010ca2e64e
  0x000000010ca2e7fb: inc    %r8d
  0x000000010ca2e7fe: jmp    0x000000010ca2e80a
  0x000000010ca2e800: add    $0x2,%r8d
  0x000000010ca2e804: jmp    0x000000010ca2e80a
  0x000000010ca2e806: add    $0x3,%r8d          ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010ca2e80a: mov    $0xffffff65,%esi
  0x000000010ca2e80f: mov    %r9d,%ebp
  0x000000010ca2e812: mov    %r11,(%rsp)
  0x000000010ca2e816: mov    %r8d,0xc(%rsp)
  0x000000010ca2e81b: mov    %ecx,0x14(%rsp)
  0x000000010ca2e81f: mov    %r13,0x18(%rsp)
  0x000000010ca2e824: data32 xchg %ax,%ax
  0x000000010ca2e827: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=Oop off=940}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ;   {runtime_call}
  0x000000010ca2e82c: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ;   {runtime_call}
  0x000000010ca2e831: inc    %r10d
  0x000000010ca2e834: jmp    0x000000010ca2e840
  0x000000010ca2e836: add    $0x2,%r10d
  0x000000010ca2e83a: jmp    0x000000010ca2e840
  0x000000010ca2e83c: add    $0x3,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e840: mov    $0xffffff65,%esi
  0x000000010ca2e845: mov    %r9d,(%rsp)
  0x000000010ca2e849: mov    %r10d,0x8(%rsp)
  0x000000010ca2e84e: mov    %ecx,0x10(%rsp)
  0x000000010ca2e852: mov    %r13,0x20(%rsp)
  0x000000010ca2e857: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop off=988}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e85c: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e861: inc    %r8d
  0x000000010ca2e864: jmp    0x000000010ca2e870
  0x000000010ca2e866: add    $0x2,%r8d
  0x000000010ca2e86a: jmp    0x000000010ca2e870
  0x000000010ca2e86c: add    $0x3,%r8d          ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010ca2e870: mov    $0xffffff65,%esi
  0x000000010ca2e875: mov    %r9d,%ebp
  0x000000010ca2e878: mov    %r11,(%rsp)
  0x000000010ca2e87c: mov    %r8d,0xc(%rsp)
  0x000000010ca2e881: mov    %ecx,0x14(%rsp)
  0x000000010ca2e885: mov    %r13,0x18(%rsp)
  0x000000010ca2e88a: nop
  0x000000010ca2e88b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=Oop off=1040}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ;   {runtime_call}
  0x000000010ca2e890: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ;   {runtime_call}
  0x000000010ca2e895: inc    %r10d
  0x000000010ca2e898: jmp    0x000000010ca2e8a4
  0x000000010ca2e89a: add    $0x2,%r10d
  0x000000010ca2e89e: jmp    0x000000010ca2e8a4
  0x000000010ca2e8a0: add    $0x3,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010ca2e8a4: mov    $0xffffff65,%esi
  0x000000010ca2e8a9: mov    %r9d,(%rsp)
  0x000000010ca2e8ad: mov    %r10d,0x8(%rsp)
  0x000000010ca2e8b2: mov    %ecx,0x10(%rsp)
  0x000000010ca2e8b6: mov    %r13,0x20(%rsp)
  0x000000010ca2e8bb: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop off=1088}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e8c0: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e8c5: movslq %r10d,%rcx         ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)

  0x000000010ca2e8c8: jmpq   0x000000010ca2e5d6
  0x000000010ca2e8cd: mov    $0xffffff86,%esi
  0x000000010ca2e8d2: mov    %r9d,%ebp
  0x000000010ca2e8d5: mov    %r11,(%rsp)
  0x000000010ca2e8d9: mov    %r13,0x8(%rsp)
  0x000000010ca2e8de: nop
  0x000000010ca2e8df: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop off=1124}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e8e4: callq  0x000000010be85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e8e9: mov    $0xffffff86,%esi
  0x000000010ca2e8ee: mov    %r9d,(%rsp)
  0x000000010ca2e8f2: mov    %r13,0x10(%rsp)
  0x000000010ca2e8f7: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=1148}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e8fc: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e901: mov    $0xffffff65,%esi
  0x000000010ca2e906: mov    %r9d,%ebp
  0x000000010ca2e909: mov    %r11,(%rsp)
  0x000000010ca2e90d: mov    %r8d,0xc(%rsp)
  0x000000010ca2e912: mov    %r8d,0x10(%rsp)
  0x000000010ca2e917: mov    %r13,0x20(%rsp)
  0x000000010ca2e91c: data32 xchg %ax,%ax
  0x000000010ca2e91f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [32]=Oop off=1188}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e924: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e929: mov    $0xffffff65,%esi
  0x000000010ca2e92e: mov    %r9d,(%rsp)
  0x000000010ca2e932: mov    %r10d,0x8(%rsp)
  0x000000010ca2e937: mov    %r10d,0xc(%rsp)
  0x000000010ca2e93c: mov    %r13,0x20(%rsp)
  0x000000010ca2e941: mov    %r13,0x28(%rsp)
  0x000000010ca2e946: nop
  0x000000010ca2e947: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop [40]=Oop off=1228}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e94c: callq  0x000000010be85e14  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e951: mov    $0xffffff65,%esi
  0x000000010ca2e956: mov    %r11,(%rsp)
  0x000000010ca2e95a: mov    %r8d,0xc(%rsp)
  0x000000010ca2e95f: mov    %r8d,0x10(%rsp)
  0x000000010ca2e964: mov    %r9d,0x18(%rsp)
  0x000000010ca2e969: mov    %r13,0x28(%rsp)
  0x000000010ca2e96e: nop
  0x000000010ca2e96f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [40]=Oop off=1268}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e974: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x000000010ca2e979: mov    $0xffffff65,%esi
  0x000000010ca2e97e: mov    %r9d,(%rsp)
  0x000000010ca2e982: mov    %r10d,0x8(%rsp)
  0x000000010ca2e987: mov    %r10d,0xc(%rsp)
  0x000000010ca2e98c: mov    %r9d,0x14(%rsp)
  0x000000010ca2e991: mov    %r13,0x20(%rsp)
  0x000000010ca2e996: mov    %r13,0x28(%rsp)
  0x000000010ca2e99b: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop [40]=Oop off=1312}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e9a0: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e9a5: mov    $0xfffffff6,%esi
  0x000000010ca2e9aa: nop
  0x000000010ca2e9ab: callq  0x000000010c9a71a0  ; OopMap{off=1328}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x000000010ca2e9b0: callq  0x000000010be85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x000000010ca2e9b5: mov    $0xfffffff6,%esi
  0x000000010ca2e9ba: mov    %r13,%rbp
  0x000000010ca2e9bd: xchg   %ax,%ax
  0x000000010ca2e9bf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1348}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x000000010ca2e9c4: callq  0x000000010be85e14  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ;   {runtime_call}
  0x000000010ca2e9c9: mov    %rax,%rsi
  0x000000010ca2e9cc: add    $0x40,%rsp
  0x000000010ca2e9d0: pop    %rbp
  0x000000010ca2e9d1: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca2e9d6: hlt    
  0x000000010ca2e9d7: hlt    
  0x000000010ca2e9d8: hlt    
  0x000000010ca2e9d9: hlt    
  0x000000010ca2e9da: hlt    
  0x000000010ca2e9db: hlt    
  0x000000010ca2e9dc: hlt    
  0x000000010ca2e9dd: hlt    
  0x000000010ca2e9de: hlt    
  0x000000010ca2e9df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca2e9e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca2e9e5: callq  0x000000010ca2e9ea
  0x000000010ca2e9ea: subq   $0x5,(%rsp)
  0x000000010ca2e9ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2e9f4: hlt    
  0x000000010ca2e9f5: hlt    
  0x000000010ca2e9f6: hlt    
  0x000000010ca2e9f7: hlt    
<nmethod compile_id='63' compiler='C2' entry='0x000000010ca2e480' size='4160' address='0x000000010ca2e310' relocation_offset='296' insts_offset='368' stub_offset='1744' scopes_data_offset='1808' scopes_pcs_offset='2360' dependencies_offset='4104' handler_table_offset='4112' nul_chk_table_offset='4136' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='864' backedge_count='7529' iicount='864' stamp='0.321'/>
<writer thread='7171'/>
<task_queued compile_id='66' compile_kind='osr' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='15' backedge_count='14637' iicount='15' osr_bci='43' stamp='0.321' comment='backedge_count' hot_count='14637'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca2f550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000111330548} &apos;emitConstantPoolUTF8&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;sun/reflect/ClassFileAssembler&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ClassFileAssembler&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000010ca2f720: mov    0x8(%rsi),%r10d
  0x000000010ca2f724: shl    $0x3,%r10
  0x000000010ca2f728: cmp    %r10,%rax
  0x000000010ca2f72b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2f731: data32 xchg %ax,%ax
  0x000000010ca2f734: nopl   0x0(%rax,%rax,1)
  0x000000010ca2f73c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2f740: mov    %eax,-0x14000(%rsp)
  0x000000010ca2f747: push   %rbp
  0x000000010ca2f748: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x000000010ca2f74c: mov    %rsi,(%rsp)
  0x000000010ca2f750: mov    %rdx,%r13
  0x000000010ca2f753: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ; implicit exception: dispatches to 0x000000010ca2ff21
  0x000000010ca2f757: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ; implicit exception: dispatches to 0x000000010ca2ff35
  0x000000010ca2f75c: mov    %r11d,%r9d
  0x000000010ca2f75f: dec    %r9d
  0x000000010ca2f762: mov    %r11d,%edx
  0x000000010ca2f765: add    $0xfffffffffffffffd,%edx
  0x000000010ca2f768: lea    (%r12,%r8,8),%rbp
  0x000000010ca2f76c: mov    $0x1,%r8d
  0x000000010ca2f772: cmp    %r8d,%r11d
  0x000000010ca2f775: mov    %r11d,%esi
  0x000000010ca2f778: cmovg  %r8d,%esi
  0x000000010ca2f77c: mov    $0x80000000,%r8d
  0x000000010ca2f782: cmp    %edx,%r11d
  0x000000010ca2f785: cmovl  %r8d,%edx
  0x000000010ca2f789: test   %r11d,%r11d
  0x000000010ca2f78c: jle    0x000000010ca2fb8f  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f792: test   %r11d,%r11d
  0x000000010ca2f795: jbe    0x000000010ca2fddd
  0x000000010ca2f79b: cmp    %r11d,%r9d
  0x000000010ca2f79e: jae    0x000000010ca2fddd
  0x000000010ca2f7a4: xor    %ebx,%ebx
  0x000000010ca2f7a6: xor    %r8d,%r8d          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7a9: test   %r8d,%r8d
  0x000000010ca2f7ac: jl     0x000000010ca2fe21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7b2: cmp    %r11d,%r8d
  0x000000010ca2f7b5: jge    0x000000010ca2fe79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7bb: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7c1: cmp    $0x1,%ecx
  0x000000010ca2f7c4: jl     0x000000010ca2fcc8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7ca: cmp    $0x7f,%ecx
  0x000000010ca2f7cd: jg     0x000000010ca2fd3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7d3: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7d6: cmp    %esi,%r8d
  0x000000010ca2f7d9: jl     0x000000010ca2f7a9  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7db: cmp    %edx,%r8d
  0x000000010ca2f7de: jge    0x000000010ca2f84c  ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7e0: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; -
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor17 from __JVM_DefineClass__]
<writer thread='19715'/>
 sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7e6: cmp    $0x1,%ecx
  0x000000010ca2f7e9: jl     0x000000010ca2fcc8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7ef: cmp    $0x7f,%ecx
  0x000000010ca2f7f2: jg     0x000000010ca2fd3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f7f8: movslq %r8d,%r10
  0x000000010ca2f7fb: movzwl 0x12(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f801: cmp    $0x1,%ecx
  0x000000010ca2f804: jl     0x000000010ca2fcb9  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f80a: cmp    $0x7f,%ecx
  0x000000010ca2f80d: jg     0x000000010ca2fd2d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f813: movzwl 0x14(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f819: cmp    $0x1,%ecx
  0x000000010ca2f81c: jl     0x000000010ca2fcbe  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f822: cmp    $0x7f,%ecx
  0x000000010ca2f825: jg     0x000000010ca2fd32  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f82b: movzwl 0x16(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f831: cmp    $0x1,%ecx
  0x000000010ca2f834: jl     0x000000010ca2fcc4  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f83a: cmp    $0x7f,%ecx
  0x000000010ca2f83d: jg     0x000000010ca2fd38  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f843: add    $0x4,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f847: cmp    %edx,%r8d
  0x000000010ca2f84a: jl     0x000000010ca2f7e0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f84c: cmp    %r11d,%r8d
  0x000000010ca2f84f: jge    0x000000010ca2f886
  0x000000010ca2f851: data32 xchg %ax,%ax       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f854: test   %r8d,%r8d
  0x000000010ca2f857: jl     0x000000010ca2fe21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f85d: cmp    %r11d,%r8d
  0x000000010ca2f860: jge    0x000000010ca2fe79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f866: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f86c: cmp    $0x1,%ecx
  0x000000010ca2f86f: jl     0x000000010ca2fcc8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f875: cmp    $0x7f,%ecx
  0x000000010ca2f878: jg     0x000000010ca2fd3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f87e: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f881: cmp    %r11d,%r8d
  0x000000010ca2f884: jl     0x000000010ca2f854  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f886: cmp    $0x100000,%r8d
  0x000000010ca2f88d: ja     0x000000010ca2fda1
  0x000000010ca2f893: movslq %r8d,%rcx
  0x000000010ca2f896: cmp    $0x100000,%r8d
  0x000000010ca2f89d: ja     0x000000010ca2fc23
  0x000000010ca2f8a3: add    $0x17,%rcx
  0x000000010ca2f8a7: mov    %rcx,%rdi
  0x000000010ca2f8aa: and    $0xfffffffffffffff8,%rdi
  0x000000010ca2f8ae: mov    0x60(%r15),%r10
  0x000000010ca2f8b2: mov    %r10,%rax
  0x000000010ca2f8b5: add    %rdi,%rax
  0x000000010ca2f8b8: cmp    0x70(%r15),%rax
  0x000000010ca2f8bc: jae    0x000000010ca2fc23
  0x000000010ca2f8c2: mov    %rax,0x60(%r15)
  0x000000010ca2f8c6: prefetchnta 0xc0(%rax)
  0x000000010ca2f8cd: movq   $0x1,(%r10)
  0x000000010ca2f8d4: prefetchnta 0x100(%rax)
  0x000000010ca2f8db: movl   $0xf80000f5,0x8(%r10)  ;   {metadata({type array byte})}
  0x000000010ca2f8e3: mov    %r8d,0xc(%r10)
  0x000000010ca2f8e7: prefetchnta 0x140(%rax)
  0x000000010ca2f8ee: mov    %r10,%rdi
  0x000000010ca2f8f1: add    $0x10,%rdi
  0x000000010ca2f8f5: prefetchnta 0x180(%rax)
  0x000000010ca2f8fc: shr    $0x3,%rcx
  0x000000010ca2f900: add    $0xfffffffffffffffe,%rcx
  0x000000010ca2f904: xor    %rax,%rax
  0x000000010ca2f907: shl    $0x3,%rcx
  0x000000010ca2f90b: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f90e: test   %r11d,%r11d
  0x000000010ca2f911: jle    0x000000010ca2fa41  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f917: test   %r11d,%r11d
  0x000000010ca2f91a: jbe    0x000000010ca2fdfd
  0x000000010ca2f920: cmp    %r11d,%r9d
  0x000000010ca2f923: jae    0x000000010ca2fdfd
  0x000000010ca2f929: test   %r8d,%r8d
  0x000000010ca2f92c: jbe    0x000000010ca2fdfd
  0x000000010ca2f932: cmp    %r8d,%r9d
  0x000000010ca2f935: jae    0x000000010ca2fdfd
  0x000000010ca2f93b: xor    %r9d,%r9d          ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f93e: test   %r9d,%r9d
  0x000000010ca2f941: jl     0x000000010ca2fe4d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f947: cmp    %r11d,%r9d
  0x000000010ca2f94a: jge    0x000000010ca2fead  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f950: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f953: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f958: cmp    $0x1,%ecx
  0x000000010ca2f95b: jl     0x000000010ca2fd00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f961: cmp    $0x7f,%ecx
  0x000000010ca2f964: jg     0x000000010ca2fd74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f96a: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f96f: inc    %r9d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f972: cmp    %esi,%r9d
  0x000000010ca2f975: jl     0x000000010ca2f93e  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f977: cmp    %edx,%r9d
  0x000000010ca2f97a: jge    0x000000010ca2fa03  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f980: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f983: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f988: cmp    $0x1,%ecx
  0x000000010ca2f98b: jl     0x000000010ca2fd00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f991: cmp    $0x7f,%ecx
  0x000000010ca2f994: jg     0x000000010ca2fd74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f99a: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f99f: movslq %r9d,%rdi
  0x000000010ca2f9a2: movzwl 0x12(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9a7: cmp    $0x1,%ecx
  0x000000010ca2f9aa: jl     0x000000010ca2fcf1  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9b0: cmp    $0x7f,%ecx
  0x000000010ca2f9b3: jg     0x000000010ca2fd65  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9b9: mov    %cl,0x11(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9be: movzwl 0x14(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9c3: cmp    $0x1,%ecx
  0x000000010ca2f9c6: jl     0x000000010ca2fcf6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9cc: cmp    $0x7f,%ecx
  0x000000010ca2f9cf: jg     0x000000010ca2fd6a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9d5: mov    %cl,0x12(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9da: movzwl 0x16(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9df: cmp    $0x1,%ecx
  0x000000010ca2f9e2: jl     0x000000010ca2fcfc  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9e8: cmp    $0x7f,%ecx
  0x000000010ca2f9eb: jg     0x000000010ca2fd70  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9f1: mov    %cl,0x13(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9f6: add    $0x4,%r9d          ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2f9fa: cmp    %edx,%r9d
  0x000000010ca2f9fd: jl     0x000000010ca2f980  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa03: cmp    %r11d,%r9d
  0x000000010ca2fa06: jge    0x000000010ca2fa41  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa08: test   %r9d,%r9d
  0x000000010ca2fa0b: jl     0x000000010ca2fe4d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa11: cmp    %r11d,%r9d
  0x000000010ca2fa14: jge    0x000000010ca2fead  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa1a: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa1d: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa22: cmp    $0x1,%ecx
  0x000000010ca2fa25: jl     0x000000010ca2fd00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa2b: cmp    $0x7f,%ecx
  0x000000010ca2fa2e: jg     0x000000010ca2fd74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa34: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa39: inc    %r9d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa3c: cmp    %r11d,%r9d
  0x000000010ca2fa3f: jl     0x000000010ca2fa08  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fa41: mov    (%rsp),%rdx
  0x000000010ca2fa45: mov    0x1c(%rdx),%ebp    ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa48: mov    0x8(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x000000010ca2ff4d
  0x000000010ca2fa4d: cmp    $0xf80129ee,%r11d  ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x000000010ca2fa54: jne    0x000000010ca2fdc9
  0x000000010ca2fa5a: lea    (%r12,%rbp,8),%rcx  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa5e: mov    0x10(%rcx),%r9d    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa62: mov    0xc(%rcx),%r11d
  0x000000010ca2fa66: inc    %r11d              ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa69: mov    %r11d,0xc(%rcx)    ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa6d: mov    0xc(%r12,%r9,8),%edi  ; implicit exception: dispatches to 0x000000010ca2ff5d
  0x000000010ca2fa72: cmp    %edi,%r11d
  0x000000010ca2fa75: jge    0x000000010ca2fbd8  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa7b: mov    0xc(%r12,%r9,8),%edi
  0x000000010ca2fa80: cmp    %edi,%r11d
  0x000000010ca2fa83: jae    0x000000010ca2fda9  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fa89: mov    %r10,0x18(%rsp)
  0x000000010ca2fa8e: mov    %ebx,0x10(%rsp)
  0x000000010ca2fa92: mov    %rdx,(%rsp)
  0x000000010ca2fa96: movslq %r11d,%r10
  0x000000010ca2fa99: mov    %r8d,0x8(%rsp)
  0x000000010ca2fa9e: movswl %r8w,%ebp          ;*i2s  ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@13 (line 105)

  0x000000010ca2faa2: lea    (%r12,%r9,8),%r11
  0x000000010ca2faa6: movb   $0x1,0x10(%r11,%r10,1)  ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitShort@-1 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x000000010ca2faac: mov    %ebp,%r10d
  0x000000010ca2faaf: shr    $0x8,%r10d
  0x000000010ca2fab3: movsbl %r10b,%edx         ;*i2b  ; - sun.reflect.ClassFileAssembler::emitShort@9 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x000000010ca2fab7: mov    (%rsp),%rsi
  0x000000010ca2fabb: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [24]=Oop off=928}
                                                ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@10 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)
                                                ;   {optimized virtual_call}
  0x000000010ca2fac0: movsbl 0x8(%rsp),%edx     ;*i2b  ; - sun.reflect.ClassFileAssembler::emitShort@19 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x000000010ca2fac5: mov    (%rsp),%rsi
  0x000000010ca2fac9: xchg   %ax,%ax
  0x000000010ca2facb: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [24]=Oop off=944}
                                                ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@20 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)
                                                ;   {optimized virtual_call}
  0x000000010ca2fad0: mov    0x8(%rsp),%ecx
  0x000000010ca2fad4: test   %ecx,%ecx
  0x000000010ca2fad6: jle    0x000000010ca2fb99  ;*if_icmpge
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@22 (line 106)

  0x000000010ca2fadc: test   %ecx,%ecx
  0x000000010ca2fade: jbe    0x000000010ca2faeb
  0x000000010ca2fae0: mov    %ecx,%r8d
  0x000000010ca2fae3: dec    %r8d
  0x000000010ca2fae6: cmp    %ecx,%r8d
  0x000000010ca2fae9: jb     0x000000010ca2fb0e
  0x000000010ca2faeb: mov    $0xffffff86,%esi
  0x000000010ca2faf0: mov    (%rsp),%rbp
  0x000000010ca2faf4: data32 xchg %ax,%ax
  0x000000010ca2faf7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [24]=Oop off=988}
                                                ;*aload_0
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@25 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fafc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2fb01: mov    %r8,(%rsp)
  0x000000010ca2fb05: mov    %ebx,0x10(%rsp)
  0x000000010ca2fb09: mov    %r9,0x18(%rsp)     ;*aload_0
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@25 (line 107)

  0x000000010ca2fb0e: mov    (%rsp),%r8
  0x000000010ca2fb12: mov    0x1c(%r8),%r11d    ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb16: movslq 0x10(%rsp),%r10
  0x000000010ca2fb1b: mov    0x18(%rsp),%r9
  0x000000010ca2fb20: movsbl 0x10(%r9,%r10,1),%ebp  ;*baload
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@28 (line 107)

  0x000000010ca2fb26: mov    0x8(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010ca2ff01
  0x000000010ca2fb2b: cmp    $0xf80129ee,%r10d  ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x000000010ca2fb32: jne    0x000000010ca2fca5
  0x000000010ca2fb38: shl    $0x3,%r11          ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb3c: mov    0xc(%r11),%edx
  0x000000010ca2fb40: mov    0x10(%r11),%r10d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb44: inc    %edx               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb46: mov    %edx,0xc(%r11)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb4a: mov    0xc(%r12,%r10,8),%ebx  ; implicit exception: dispatches to 0x000000010ca2ff11
  0x000000010ca2fb4f: cmp    %ebx,%edx
  0x000000010ca2fb51: jge    0x000000010ca2fb9f  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb53: mov    0xc(%r12,%r10,8),%ebx
  0x000000010ca2fb58: cmp    %ebx,%edx
  0x000000010ca2fb5a: jae    0x000000010ca2fc83
  0x000000010ca2fb60: movslq %edx,%r11
  0x000000010ca2fb63: shl    $0x3,%r10
  0x000000010ca2fb67: mov    %bpl,0x10(%r10,%r11,1)  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fb6c: mov    0x10(%rsp),%ebx
  0x000000010ca2fb70: inc    %ebx               ;*iinc
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@32 (line 106)

  0x000000010ca2fb72: cmp    %ecx,%ebx
  0x000000010ca2fb74: jl     0x000000010ca2fb01  ;*if_icmpge
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@22 (line 106)

  0x000000010ca2fb76: movswl 0x18(%r8),%r11d
  0x000000010ca2fb7b: inc    %r11d
  0x000000010ca2fb7e: mov    %r11w,0x18(%r8)    ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x000000010ca2fb83: add    $0x50,%rsp
  0x000000010ca2fb87: pop    %rbp
  0x000000010ca2fb88: test   %eax,-0x2134b8e(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2fb8e: retq   
  0x000000010ca2fb8f: xor    %ebx,%ebx
  0x000000010ca2fb91: xor    %r8d,%r8d
  0x000000010ca2fb94: jmpq   0x000000010ca2f886
  0x000000010ca2fb99: mov    (%rsp),%r8
  0x000000010ca2fb9d: jmp    0x000000010ca2fb76
  0x000000010ca2fb9f: mov    %r11,0x20(%rsp)
  0x000000010ca2fba4: mov    %ecx,0x8(%rsp)     ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fba8: mov    %r11,%rsi
  0x000000010ca2fbab: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [24]=Oop [32]=Oop off=1168}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {optimized virtual_call}
  0x000000010ca2fbb0: mov    0x20(%rsp),%r10
  0x000000010ca2fbb5: mov    0xc(%r10),%edx     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fbb9: mov    0x10(%r10),%r10d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fbbd: test   %r10d,%r10d
  0x000000010ca2fbc0: je     0x000000010ca2fed9  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2fbc6: mov    (%rsp),%r8
  0x000000010ca2fbca: mov    0x8(%rsp),%ecx
  0x000000010ca2fbce: mov    0x18(%rsp),%r9
  0x000000010ca2fbd3: jmpq   0x000000010ca2fb53
  0x000000010ca2fbd8: mov    %rcx,0x10(%rsp)
  0x000000010ca2fbdd: mov    %r10,0x8(%rsp)
  0x000000010ca2fbe2: mov    %r8d,0x4(%rsp)
  0x000000010ca2fbe7: mov    %ebx,(%rsp)
  0x000000010ca2fbea: mov    %rdx,%rbp          ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fbed: mov    %rcx,%rsi
  0x000000010ca2fbf0: mov    %r11d,%edx
  0x000000010ca2fbf3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=1240}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {optimized virtual_call}
  0x000000010ca2fbf8: mov    0x10(%rsp),%r10
  0x000000010ca2fbfd: mov    0xc(%r10),%r11d    ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fc01: mov    0x10(%r10),%r9d    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fc05: test   %r9d,%r9d
  0x000000010ca2fc08: je     0x000000010ca2feed  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2fc0e: mov    %rbp,%rdx
  0x000000010ca2fc11: mov    (%rsp),%ebx
  0x000000010ca2fc14: mov    0x4(%rsp),%r8d
  0x000000010ca2fc19: mov    0x8(%rsp),%r10
  0x000000010ca2fc1e: jmpq   0x000000010ca2fa7b
  0x000000010ca2fc23: mov    %r8d,0x24(%rsp)
  0x000000010ca2fc28: mov    %ebx,0x20(%rsp)
  0x000000010ca2fc2c: mov    %esi,0x14(%rsp)
  0x000000010ca2fc30: mov    %rbp,0x18(%rsp)
  0x000000010ca2fc35: mov    %edx,0x10(%rsp)
  0x000000010ca2fc39: mov    %r9d,0xc(%rsp)
  0x000000010ca2fc3e: mov    %r11d,0x8(%rsp)
  0x000000010ca2fc43: mov    %r13,%rbp
  0x000000010ca2fc46: movabs $0x7c00007a8,%rsi  ;   {metadata({type array byte})}
  0x000000010ca2fc50: mov    %r8d,%edx
  0x000000010ca2fc53: callq  0x000000010ca11a60  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1336}
                                                ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fc58: mov    %rbp,%r13
  0x000000010ca2fc5b: mov    0x8(%rsp),%r11d
  0x000000010ca2fc60: mov    0xc(%rsp),%r9d
  0x000000010ca2fc65: mov    0x10(%rsp),%edx
  0x000000010ca2fc69: mov    0x18(%rsp),%rbp
  0x000000010ca2fc6e: mov    0x14(%rsp),%esi
  0x000000010ca2fc72: mov    0x20(%rsp),%ebx
  0x000000010ca2fc76: mov    0x24(%rsp),%r8d
  0x000000010ca2fc7b: mov    %rax,%r10
  0x000000010ca2fc7e: jmpq   0x000000010ca2f90e
  0x000000010ca2fc83: mov    $0xffffffe4,%esi
  0x000000010ca2fc88: mov    %r8,(%rsp)
  0x000000010ca2fc8c: mov    %r9,0x8(%rsp)
  0x000000010ca2fc91: mov    %r10d,0x14(%rsp)
  0x000000010ca2fc96: mov    %edx,0x18(%rsp)
  0x000000010ca2fc9a: nop
  0x000000010ca2fc9b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=1408}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fca0: callq  0x000000010be85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fca5: mov    $0xffffffde,%esi
  0x000000010ca2fcaa: mov    %r11d,0x14(%rsp)
  0x000000010ca2fcaf: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [20]=NarrowOop [24]=Oop off=1428}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fcb4: callq  0x000000010be85e14  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fcb9: inc    %r8d
  0x000000010ca2fcbc: jmp    0x000000010ca2fcc8
  0x000000010ca2fcbe: add    $0x2,%r8d
  0x000000010ca2fcc2: jmp    0x000000010ca2fcc8
  0x000000010ca2fcc4: add    $0x3,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fcc8: mov    $0xffffff65,%esi
  0x000000010ca2fccd: mov    (%rsp),%rbp
  0x000000010ca2fcd1: mov    %r8d,0x4(%rsp)
  0x000000010ca2fcd6: mov    %ecx,0xc(%rsp)
  0x000000010ca2fcda: mov    %r13,0x20(%rsp)
  0x000000010ca2fcdf: mov    %r11d,0x1c(%rsp)
  0x000000010ca2fce4: data32 xchg %ax,%ax
  0x000000010ca2fce7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [32]=Oop off=1484}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fcec: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fcf1: inc    %r9d
  0x000000010ca2fcf4: jmp    0x000000010ca2fd00
  0x000000010ca2fcf6: add    $0x2,%r9d
  0x000000010ca2fcfa: jmp    0x000000010ca2fd00
  0x000000010ca2fcfc: add    $0x3,%r9d          ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fd00: mov    $0xffffff65,%esi
  0x000000010ca2fd05: mov    (%rsp),%rbp
  0x000000010ca2fd09: mov    %r10,(%rsp)
  0x000000010ca2fd0d: mov    %r9d,0xc(%rsp)
  0x000000010ca2fd12: mov    %ecx,0x14(%rsp)
  0x000000010ca2fd16: mov    %r13,0x18(%rsp)
  0x000000010ca2fd1b: mov    %r11d,0x20(%rsp)
  0x000000010ca2fd20: data32 xchg %ax,%ax
  0x000000010ca2fd23: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1544}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fd28: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fd2d: inc    %r8d
  0x000000010ca2fd30: jmp    0x000000010ca2fd3c
  0x000000010ca2fd32: add    $0x2,%r8d
  0x000000010ca2fd36: jmp    0x000000010ca2fd3c
  0x000000010ca2fd38: add    $0x3,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fd3c: mov    $0xffffff65,%esi
  0x000000010ca2fd41: mov    (%rsp),%rbp
  0x000000010ca2fd45: mov    %r8d,0x4(%rsp)
  0x000000010ca2fd4a: mov    %ecx,0xc(%rsp)
  0x000000010ca2fd4e: mov    %r13,0x20(%rsp)
  0x000000010ca2fd53: mov    %r11d,0x1c(%rsp)
  0x000000010ca2fd58: data32 xchg %ax,%ax
  0x000000010ca2fd5b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [32]=Oop off=1600}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fd60: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fd65: inc    %r9d
  0x000000010ca2fd68: jmp    0x000000010ca2fd74
  0x000000010ca2fd6a: add    $0x2,%r9d
  0x000000010ca2fd6e: jmp    0x000000010ca2fd74
  0x000000010ca2fd70: add    $0x3,%r9d          ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fd74: mov    $0xffffff65,%esi
  0x000000010ca2fd79: mov    (%rsp),%rbp
  0x000000010ca2fd7d: mov    %r10,(%rsp)
  0x000000010ca2fd81: mov    %r9d,0xc(%rsp)
  0x000000010ca2fd86: mov    %ecx,0x14(%rsp)
  0x000000010ca2fd8a: mov    %r13,0x18(%rsp)
  0x000000010ca2fd8f: mov    %r11d,0x20(%rsp)
  0x000000010ca2fd94: data32 xchg %ax,%ax
  0x000000010ca2fd97: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1660}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fd9c: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fda1: movslq %r8d,%rcx          ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010ca2fda4: jmpq   0x000000010ca2f896
  0x000000010ca2fda9: mov    $0xffffffe4,%esi
  0x000000010ca2fdae: mov    %rdx,%rbp
  0x000000010ca2fdb1: mov    %r10,(%rsp)
  0x000000010ca2fdb5: mov    %r9d,0x8(%rsp)
  0x000000010ca2fdba: mov    %r11d,0xc(%rsp)
  0x000000010ca2fdbf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=NarrowOop off=1700}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2fdc4: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2fdc9: mov    $0xffffffde,%esi
  0x000000010ca2fdce: mov    %r10,0x8(%rsp)
  0x000000010ca2fdd3: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop off=1720}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2fdd8: callq  0x000000010be85e14  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2fddd: mov    $0xffffff86,%esi
  0x000000010ca2fde2: mov    (%rsp),%rbp
  0x000000010ca2fde6: mov    %r13,0x10(%rsp)
  0x000000010ca2fdeb: mov    %r11d,0xc(%rsp)
  0x000000010ca2fdf0: data32 xchg %ax,%ax
  0x000000010ca2fdf3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop off=1752}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fdf8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2fdfd: mov    $0xffffff86,%esi
  0x000000010ca2fe02: mov    (%rsp),%rbp
  0x000000010ca2fe06: mov    %r10,(%rsp)
  0x000000010ca2fe0a: mov    %r13,0x8(%rsp)
  0x000000010ca2fe0f: mov    %r11d,0x10(%rsp)
  0x000000010ca2fe14: data32 xchg %ax,%ax
  0x000000010ca2fe17: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1788}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe1c: callq  0x000000010be85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe21: mov    $0xffffff65,%esi
  0x000000010ca2fe26: mov    (%rsp),%rbp
  0x000000010ca2fe2a: mov    %r8d,0x4(%rsp)
  0x000000010ca2fe2f: mov    %r8d,0x8(%rsp)
  0x000000010ca2fe34: mov    %r13,0x20(%rsp)
  0x000000010ca2fe39: mov    %r11d,0x1c(%rsp)
  0x000000010ca2fe3e: mov    %r13,0x28(%rsp)
  0x000000010ca2fe43: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [32]=Oop [40]=Oop off=1832}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe48: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe4d: mov    $0xffffff65,%esi
  0x000000010ca2fe52: mov    (%rsp),%rbp
  0x000000010ca2fe56: mov    %r10,(%rsp)
  0x000000010ca2fe5a: mov    %r9d,0xc(%rsp)
  0x000000010ca2fe5f: mov    %r9d,0x10(%rsp)
  0x000000010ca2fe64: mov    %r11d,0x20(%rsp)
  0x000000010ca2fe69: mov    %r13,0x28(%rsp)
  0x000000010ca2fe6e: nop
  0x000000010ca2fe6f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [40]=Oop off=1876}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe74: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fe79: mov    $0xffffff65,%esi
  0x000000010ca2fe7e: mov    (%rsp),%rbp
  0x000000010ca2fe82: mov    %r8d,0x4(%rsp)
  0x000000010ca2fe87: mov    %r8d,0x8(%rsp)
  0x000000010ca2fe8c: mov    %r13,0x20(%rsp)
  0x000000010ca2fe91: mov    %r11d,0x1c(%rsp)
  0x000000010ca2fe96: mov    %r13,0x28(%rsp)
  0x000000010ca2fe9b: mov    %r11d,0x30(%rsp)
  0x000000010ca2fea0: data32 xchg %ax,%ax
  0x000000010ca2fea3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [32]=Oop [40]=Oop off=1928}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fea8: callq  0x000000010be85e14  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fead: mov    $0xffffff65,%esi
  0x000000010ca2feb2: mov    (%rsp),%rbp
  0x000000010ca2feb6: mov    %r10,(%rsp)
  0x000000010ca2feba: mov    %r9d,0xc(%rsp)
  0x000000010ca2febf: mov    %r9d,0x10(%rsp)
  0x000000010ca2fec4: mov    %r13,0x28(%rsp)
  0x000000010ca2fec9: mov    %r11d,0x24(%rsp)
  0x000000010ca2fece: nop
  0x000000010ca2fecf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [40]=Oop off=1972}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fed4: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2fed9: mov    $0xfffffff6,%esi
  0x000000010ca2fede: mov    %edx,(%rsp)
  0x000000010ca2fee1: xchg   %ax,%ax
  0x000000010ca2fee3: callq  0x000000010c9a71a0  ; OopMap{off=1992}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2fee8: callq  0x000000010be85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2feed: mov    $0xfffffff6,%esi
  0x000000010ca2fef2: mov    %r11d,%ebp
  0x000000010ca2fef5: xchg   %ax,%ax
  0x000000010ca2fef7: callq  0x000000010c9a71a0  ; OopMap{off=2012}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2fefc: callq  0x000000010be85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2ff01: mov    $0xfffffff6,%esi
  0x000000010ca2ff06: nop
  0x000000010ca2ff07: callq  0x000000010c9a71a0  ; OopMap{off=2028}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2ff0c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ff11: mov    $0xfffffff6,%esi
  0x000000010ca2ff16: nop
  0x000000010ca2ff17: callq  0x000000010c9a71a0  ; OopMap{off=2044}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2ff1c: callq  0x000000010be85e14  ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x000000010ca2ff21: mov    $0xfffffff6,%esi
  0x000000010ca2ff26: mov    (%rsp),%rbp
  0x000000010ca2ff2a: nop
  0x000000010ca2ff2b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=2064}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2ff30: callq  0x000000010be85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2ff35: mov    $0xfffffff6,%esi
  0x000000010ca2ff3a: mov    (%rsp),%rbp
  0x000000010ca2ff3e: mov    %rdx,(%rsp)
  0x000000010ca2ff42: nop
  0x000000010ca2ff43: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop off=2088}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2ff48: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ff4d: mov    $0xfffffff6,%esi
  0x000000010ca2ff52: nop
  0x000000010ca2ff53: callq  0x000000010c9a71a0  ; OopMap{off=2104}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2ff58: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca2ff5d: mov    $0xfffffff6,%esi
  0x000000010ca2ff62: nop
  0x000000010ca2ff63: callq  0x000000010c9a71a0  ; OopMap{off=2120}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x000000010ca2ff68: callq  0x000000010be85e14  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x000000010ca2ff6d: mov    %rax,%rsi
  0x000000010ca2ff70: jmp    0x000000010ca2ff84  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010ca2ff72: mov    %rax,%rsi
  0x000000010ca2ff75: jmp    0x000000010ca2ff84  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010ca2ff77: mov    %rax,%rsi
  0x000000010ca2ff7a: jmp    0x000000010ca2ff84  ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@10 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x000000010ca2ff7c: mov    %rax,%rsi
  0x000000010ca2ff7f: jmp    0x000000010ca2ff84  ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@20 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x000000010ca2ff81: mov    %rax,%rsi          ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x000000010ca2ff84: add    $0x50,%rsp
  0x000000010ca2ff88: pop    %rbp
  0x000000010ca2ff89: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca2ff8e: hlt    
  0x000000010ca2ff8f: hlt    
  0x000000010ca2ff90: hlt    
  0x000000010ca2ff91: hlt    
  0x000000010ca2ff92: hlt    
  0x000000010ca2ff93: hlt    
  0x000000010ca2ff94: hlt    
  0x000000010ca2ff95: hlt    
  0x000000010ca2ff96: hlt    
  0x000000010ca2ff97: hlt    
  0x000000010ca2ff98: hlt    
  0x000000010ca2ff99: hlt    
  0x000000010ca2ff9a: hlt    
  0x000000010ca2ff9b: hlt    
  0x000000010ca2ff9c: hlt    
  0x000000010ca2ff9d: hlt    
  0x000000010ca2ff9e: hlt    
  0x000000010ca2ff9f: hlt    
[Stub Code]
  0x000000010ca2ffa0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca2ffaa: jmpq   0x000000010ca2ffaa  ;   {runtime_call}
  0x000000010ca2ffaf: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca2ffb9: jmpq   0x000000010ca2ffb9  ;   {runtime_call}
  0x000000010ca2ffbe: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca2ffc8: jmpq   0x000000010ca2ffc8  ;   {runtime_call}
  0x000000010ca2ffcd: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca2ffd7: jmpq   0x000000010ca2ffd7  ;   {runtime_call}
[Exception Handler]
  0x000000010ca2ffdc: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca2ffe1: callq  0x000000010ca2ffe6
  0x000000010ca2ffe6: subq   $0x5,(%rsp)
  0x000000010ca2ffeb: jmpq   0x000000010c9e93c0  ;   {runtime_call}
<nmethod compile_id='62' compiler='C2' entry='0x000000010ca2f720' size='6896' address='0x000000010ca2f550' relocation_offset='296' insts_offset='464' stub_offset='2640' scopes_data_offset='2800' scopes_pcs_offset='4056' dependencies_offset='6712' handler_table_offset='6720' nul_chk_table_offset='6840' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='918' backedge_count='8296' iicount='918' stamp='0.332'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca32450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001113342c0} &apos;utf8Length&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;sun/reflect/UTF8&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010ca325a0: mov    %eax,-0x14000(%rsp)
  0x000000010ca325a7: push   %rbp
  0x000000010ca325a8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - sun.reflect.UTF8::utf8Length@-1 (line 61)

  0x000000010ca325ac: mov    %rsi,%r9
  0x000000010ca325af: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ; implicit exception: dispatches to 0x000000010ca32782
  0x000000010ca325b3: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ; implicit exception: dispatches to 0x000000010ca32791
  0x000000010ca325b8: xor    %eax,%eax
  0x000000010ca325ba: test   %ebp,%ebp
  0x000000010ca325bc: jle    0x000000010ca326ce  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010ca325c2: test   %ebp,%ebp
  0x000000010ca325c4: jbe    0x000000010ca32729
  0x000000010ca325ca: mov    %ebp,%r8d
  0x000000010ca325cd: dec    %r8d
  0x000000010ca325d0: cmp    %ebp,%r8d
  0x000000010ca325d3: jae    0x000000010ca32729
  0x000000010ca325d9: lea    (%r12,%r11,8),%r10
  0x000000010ca325dd: mov    $0x1,%r8d
  0x000000010ca325e3: cmp    %r8d,%ebp
  0x000000010ca325e6: mov    %ebp,%r11d
  0x000000010ca325e9: cmovg  %r8d,%r11d         ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010ca325ed: test   %eax,%eax
  0x000000010ca325ef: jl     0x000000010ca3273d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca325f5: cmp    %ebp,%eax
  0x000000010ca325f7: jge    0x000000010ca32759  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca325fd: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca32603: cmp    $0x1,%ecx
  0x000000010ca32606: jl     0x000000010ca326e6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor18 from __JVM_DefineClass__]
<writer thread='19203'/>
utf8Length@27 (line 65)

  0x000000010ca3260c: cmp    $0x7f,%ecx
  0x000000010ca3260f: jg     0x000000010ca3270d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca32615: inc    %eax               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010ca32617: cmp    %r11d,%eax
  0x000000010ca3261a: jl     0x000000010ca325ed  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010ca3261c: mov    %ebp,%r11d
  0x000000010ca3261f: add    $0xfffffffffffffffd,%r11d
  0x000000010ca32623: mov    $0x80000000,%r8d
  0x000000010ca32629: cmp    %r11d,%ebp
  0x000000010ca3262c: cmovl  %r8d,%r11d
  0x000000010ca32630: cmp    %r11d,%eax
  0x000000010ca32633: jge    0x000000010ca3269b
  0x000000010ca32635: data32 data32 nopw 0x0(%rax,%rax,1)
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010ca32640: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca32646: cmp    $0x1,%ecx
  0x000000010ca32649: jl     0x000000010ca326e6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010ca3264f: cmp    $0x7f,%ecx
  0x000000010ca32652: jg     0x000000010ca3270d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca32658: movslq %eax,%r8
  0x000000010ca3265b: movzwl 0x12(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca32661: cmp    $0x1,%ecx
  0x000000010ca32664: jl     0x000000010ca326da  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010ca32666: cmp    $0x7f,%ecx
  0x000000010ca32669: jg     0x000000010ca32701  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca3266f: movzwl 0x14(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca32675: cmp    $0x1,%ecx
  0x000000010ca32678: jl     0x000000010ca326de  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010ca3267a: cmp    $0x7f,%ecx
  0x000000010ca3267d: jg     0x000000010ca32705  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca32683: movzwl 0x16(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca32689: cmp    $0x1,%ecx
  0x000000010ca3268c: jl     0x000000010ca326e3  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010ca3268e: cmp    $0x7f,%ecx
  0x000000010ca32691: jg     0x000000010ca3270a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca32693: add    $0x4,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010ca32696: cmp    %r11d,%eax
  0x000000010ca32699: jl     0x000000010ca32640  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010ca3269b: cmp    %ebp,%eax
  0x000000010ca3269d: jge    0x000000010ca326ce
  0x000000010ca3269f: nop                       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010ca326a0: test   %eax,%eax
  0x000000010ca326a2: jl     0x000000010ca32742  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca326a8: cmp    %ebp,%eax
  0x000000010ca326aa: jge    0x000000010ca3275e  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca326b0: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010ca326b6: cmp    $0x1,%ecx
  0x000000010ca326b9: jl     0x000000010ca32775  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010ca326bf: cmp    $0x7f,%ecx
  0x000000010ca326c2: jg     0x000000010ca3277d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010ca326c8: inc    %eax               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010ca326ca: cmp    %ebp,%eax
  0x000000010ca326cc: jl     0x000000010ca326a0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010ca326ce: add    $0x30,%rsp
  0x000000010ca326d2: pop    %rbp
  0x000000010ca326d3: test   %eax,-0x21376d9(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca326d9: retq   
  0x000000010ca326da: inc    %eax
  0x000000010ca326dc: jmp    0x000000010ca326e6
  0x000000010ca326de: add    $0x2,%eax
  0x000000010ca326e1: jmp    0x000000010ca326e6
  0x000000010ca326e3: add    $0x3,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010ca326e6: mov    %eax,(%rsp)
  0x000000010ca326e9: mov    $0xffffff65,%esi
  0x000000010ca326ee: mov    %ecx,0x8(%rsp)
  0x000000010ca326f2: mov    %r9,0x10(%rsp)
  0x000000010ca326f7: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=348}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ;   {runtime_call}
  0x000000010ca326fc: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ;   {runtime_call}
  0x000000010ca32701: inc    %eax
  0x000000010ca32703: jmp    0x000000010ca3270d
  0x000000010ca32705: add    $0x2,%eax
  0x000000010ca32708: jmp    0x000000010ca3270d
  0x000000010ca3270a: add    $0x3,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010ca3270d: mov    %eax,(%rsp)
  0x000000010ca32710: mov    $0xffffff65,%esi
  0x000000010ca32715: mov    %ecx,0x8(%rsp)
  0x000000010ca32719: mov    %r9,0x10(%rsp)
  0x000000010ca3271e: nop
  0x000000010ca3271f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=388}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ;   {runtime_call}
  0x000000010ca32724: callq  0x000000010be85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ;   {runtime_call}
  0x000000010ca32729: mov    $0xffffff86,%esi
  0x000000010ca3272e: mov    %r9,(%rsp)
  0x000000010ca32732: nop
  0x000000010ca32733: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=408}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ;   {runtime_call}
  0x000000010ca32738: callq  0x000000010be85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ;   {runtime_call}
  0x000000010ca3273d: mov    %eax,(%rsp)
  0x000000010ca32740: jmp    0x000000010ca32745
  0x000000010ca32742: mov    %eax,(%rsp)
  0x000000010ca32745: mov    $0xffffff65,%esi
  0x000000010ca3274a: mov    %r9,0x10(%rsp)
  0x000000010ca3274f: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=436}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010ca32754: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010ca32759: mov    %eax,(%rsp)
  0x000000010ca3275c: jmp    0x000000010ca32761
  0x000000010ca3275e: mov    %eax,(%rsp)
  0x000000010ca32761: mov    $0xffffff65,%esi
  0x000000010ca32766: mov    %r9,0x10(%rsp)
  0x000000010ca3276b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=464}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010ca32770: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010ca32775: mov    %eax,(%rsp)
  0x000000010ca32778: jmpq   0x000000010ca326e9
  0x000000010ca3277d: mov    %eax,(%rsp)
  0x000000010ca32780: jmp    0x000000010ca32710
  0x000000010ca32782: mov    $0xfffffff6,%esi
  0x000000010ca32787: callq  0x000000010c9a71a0  ; OopMap{off=492}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010ca3278c: callq  0x000000010be85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010ca32791: mov    $0xfffffff6,%esi
  0x000000010ca32796: nop
  0x000000010ca32797: callq  0x000000010c9a71a0  ; OopMap{off=508}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010ca3279c: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010ca327a1: hlt    
  0x000000010ca327a2: hlt    
  0x000000010ca327a3: hlt    
  0x000000010ca327a4: hlt    
  0x000000010ca327a5: hlt    
  0x000000010ca327a6: hlt    
  0x000000010ca327a7: hlt    
  0x000000010ca327a8: hlt    
  0x000000010ca327a9: hlt    
  0x000000010ca327aa: hlt    
  0x000000010ca327ab: hlt    
  0x000000010ca327ac: hlt    
  0x000000010ca327ad: hlt    
  0x000000010ca327ae: hlt    
  0x000000010ca327af: hlt    
  0x000000010ca327b0: hlt    
  0x000000010ca327b1: hlt    
  0x000000010ca327b2: hlt    
  0x000000010ca327b3: hlt    
  0x000000010ca327b4: hlt    
  0x000000010ca327b5: hlt    
  0x000000010ca327b6: hlt    
  0x000000010ca327b7: hlt    
  0x000000010ca327b8: hlt    
  0x000000010ca327b9: hlt    
  0x000000010ca327ba: hlt    
  0x000000010ca327bb: hlt    
  0x000000010ca327bc: hlt    
  0x000000010ca327bd: hlt    
  0x000000010ca327be: hlt    
  0x000000010ca327bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca327c0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca327c5: callq  0x000000010ca327ca
  0x000000010ca327ca: subq   $0x5,(%rsp)
  0x000000010ca327cf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca327d4: hlt    
  0x000000010ca327d5: hlt    
  0x000000010ca327d6: hlt    
  0x000000010ca327d7: hlt    
<nmethod compile_id='64' compiler='C2' entry='0x000000010ca325a0' size='2024' address='0x000000010ca32450' relocation_offset='296' insts_offset='336' stub_offset='880' scopes_data_offset='928' scopes_pcs_offset='1144' dependencies_offset='1992' nul_chk_table_offset='2000' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='864' backedge_count='7529' iicount='864' stamp='0.336'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca2e010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110ff9728} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/ObjectStreamField&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010ca2e160: mov    0x8(%rsi),%r10d
  0x000000010ca2e164: shl    $0x3,%r10
  0x000000010ca2e168: cmp    %r10,%rax
  0x000000010ca2e16b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2e171: data32 xchg %ax,%ax
  0x000000010ca2e174: nopl   0x0(%rax,%rax,1)
  0x000000010ca2e17c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2e180: sub    $0x18,%rsp
  0x000000010ca2e187: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getName@-1 (line 150)

  0x000000010ca2e18c: mov    0x14(%rsi),%r11d
  0x000000010ca2e190: mov    %r11,%rax
  0x000000010ca2e193: shl    $0x3,%rax          ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)

  0x000000010ca2e197: add    $0x10,%rsp
  0x000000010ca2e19b: pop    %rbp
  0x000000010ca2e19c: test   %eax,-0x21331a2(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2e1a2: retq   
  0x000000010ca2e1a3: hlt    
  0x000000010ca2e1a4: hlt    
  0x000000010ca2e1a5: hlt    
  0x000000010ca2e1a6: hlt    
  0x000000010ca2e1a7: hlt    
  0x000000010ca2e1a8: hlt    
  0x000000010ca2e1a9: hlt    
  0x000000010ca2e1aa: hlt    
  0x000000010ca2e1ab: hlt    
  0x000000010ca2e1ac: hlt    
  0x000000010ca2e1ad: hlt    
  0x000000010ca2e1ae: hlt    
  0x000000010ca2e1af: hlt    
  0x000000010ca2e1b0: hlt    
  0x000000010ca2e1b1: hlt    
  0x000000010ca2e1b2: hlt    
  0x000000010ca2e1b3: hlt    
  0x000000010ca2e1b4: hlt    
  0x000000010ca2e1b5: hlt    
  0x000000010ca2e1b6: hlt    
  0x000000010ca2e1b7: hlt    
  0x000000010ca2e1b8: hlt    
  0x000000010ca2e1b9: hlt    
  0x000000010ca2e1ba: hlt    
  0x000000010ca2e1bb: hlt    
  0x000000010ca2e1bc: hlt    
  0x000000010ca2e1bd: hlt    
  0x000000010ca2e1be: hlt    
  0x000000010ca2e1bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca2e1c0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca2e1c5: callq  0x000000010ca2e1ca
  0x000000010ca2e1ca: subq   $0x5,(%rsp)
  0x000000010ca2e1cf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2e1d4: hlt    
  0x000000010ca2e1d5: hlt    
  0x000000010ca2e1d6: hlt    
  0x000000010ca2e1d7: hlt    
<nmethod compile_id='65' compiler='C2' entry='0x000000010ca2e160' size='552' address='0x000000010ca2e010' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='6377' backedge_count='1' iicount='36372' stamp='0.337'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor19 from __JVM_DefineClass__]
<task_queued compile_id='67' method='java/lang/String length ()I' bytes='6' count='5000' backedge_count='1' iicount='10000' stamp='0.339' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca2c510:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4cc60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010ca2c660: mov    0x8(%rsi),%r10d
  0x000000010ca2c664: shl    $0x3,%r10
  0x000000010ca2c668: cmp    %r10,%rax
  0x000000010ca2c66b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca2c671: data32 xchg %ax,%ax
  0x000000010ca2c674: nopl   0x0(%rax,%rax,1)
  0x000000010ca2c67c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca2c680: mov    %eax,-0x14000(%rsp)
  0x000000010ca2c687: push   %rbp
  0x000000010ca2c688: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x000000010ca2c68c: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010ca2c690: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x000000010ca2c6a1
  0x000000010ca2c695: add    $0x10,%rsp
  0x000000010ca2c699: pop    %rbp
  0x000000010ca2c69a: test   %eax,-0x21316a0(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca2c6a0: retq   
  0x000000010ca2c6a1: mov    $0xfffffff6,%esi
  0x000000010ca2c6a6: nop
  0x000000010ca2c6a7: callq  0x000000010c9a71a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010ca2c6ac: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010ca2c6b1: hlt    
  0x000000010ca2c6b2: hlt    
  0x000000010ca2c6b3: hlt    
  0x000000010ca2c6b4: hlt    
  0x000000010ca2c6b5: hlt    
  0x000000010ca2c6b6: hlt    
  0x000000010ca2c6b7: hlt    
  0x000000010ca2c6b8: hlt    
  0x000000010ca2c6b9: hlt    
  0x000000010ca2c6ba: hlt    
  0x000000010ca2c6bb: hlt    
  0x000000010ca2c6bc: hlt    
  0x000000010ca2c6bd: hlt    
  0x000000010ca2c6be: hlt    
  0x000000010ca2c6bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca2c6c0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca2c6c5: callq  0x000000010ca2c6ca
  0x000000010ca2c6ca: subq   $0x5,(%rsp)
  0x000000010ca2c6cf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca2c6d4: hlt    
  0x000000010ca2c6d5: hlt    
  0x000000010ca2c6d6: hlt    
  0x000000010ca2c6d7: hlt    
<nmethod compile_id='67' compiler='C2' entry='0x000000010ca2c660' size='616' address='0x000000010ca2c510' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='496' dependencies_offset='592' nul_chk_table_offset='600' method='java/lang/String length ()I' bytes='6' count='5042' backedge_count='1' iicount='10042' stamp='0.340'/>
<writer thread='7171'/>
<task_queued compile_id='68' method='java/lang/Math min (II)I' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.340' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca32250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011103cf98} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x000000010ca32380: sub    $0x18,%rsp
  0x000000010ca32387: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x000000010ca3238c: cmp    %edx,%esi
  0x000000010ca3238e: mov    %edx,%eax
  0x000000010ca32390: cmovle %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010ca32393: add    $0x10,%rsp
  0x000000010ca32397: pop    %rbp
  0x000000010ca32398: test   %eax,-0x213739e(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca3239e: retq   
  0x000000010ca3239f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca323a0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca323a5: callq  0x000000010ca323aa
  0x000000010ca323aa: subq   $0x5,(%rsp)
  0x000000010ca323af: 
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor20 from __JVM_DefineClass__]
<writer thread='19715'/>
jmpq   0x000000010c9e93c0                       ;   {runtime_call}
  0x000000010ca323b4: hlt    
  0x000000010ca323b5: hlt    
  0x000000010ca323b6: hlt    
  0x000000010ca323b7: hlt    
<nmethod compile_id='68' compiler='C2' entry='0x000000010ca32380' size='456' address='0x000000010ca32250' relocation_offset='296' insts_offset='304' stub_offset='336' scopes_data_offset='368' scopes_pcs_offset='384' dependencies_offset='448' method='java/lang/Math min (II)I' bytes='11' count='5204' backedge_count='1' iicount='10204' stamp='0.341'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor21 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor22 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor23 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor24 from __JVM_DefineClass__]
[Loaded java.util.TreeMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.SortedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.NavigableSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor25 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.WorkloadParams$Value from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor26 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor27 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.ForkedRunner$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BaseRunner$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.BlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ExecutionException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CompletionService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Callable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$5 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ThreadFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.util.ClassUtils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.net.MalformedURLException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_benchmarkHolder_jmhTest from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.CsvContent from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='69' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='140' backedge_count='5601' iicount='563' decompiles='1' unstable_if_traps='1' osr_bci='69' stamp='0.355' comment='backedge_count' hot_count='5601'/>
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.FailureAssistException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.Result from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.ThroughputResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.AverageTimeResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.SampleTimeResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.SingleShotResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControl from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca33310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110f4e7e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  0x000000010ca33480: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca33485: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca33490: mov    %eax,-0x14000(%rsp)
  0x000000010ca33497: push   %rbp
  0x000000010ca33498: sub    $0x50,%rsp
  0x000000010ca3349c: mov    0x18(%rsi),%r13d
  0x000000010ca334a0: mov    0x20(%rsi),%r14d
  0x000000010ca334a4: mov    0x60(%rsi),%rbp
  0x000000010ca334a8: mov    0x48(%rsi),%r10
  0x000000010ca334ac: mov    %r10,(%rsp)
  0x000000010ca334b0: mov    0x28(%rsi),%ebx
  0x000000010ca334b3: mov    0x58(%rsi),%r10d
  0x000000010ca334b7: mov    %r10d,0x10(%rsp)
  0x000000010ca334bc: mov    0x40(%rsi),%r11d
  0x000000010ca334c0: mov    %r11d,0x18(%rsp)
  0x000000010ca334c5: mov    0x38(%rsi),%r10d
  0x000000010ca334c9: mov    %r10d,0x1c(%rsp)
  0x000000010ca334ce: mov    %rsi,%rdi
  0x000000010ca334d1: movabs $0x10bee473e,%r10
  0x000000010ca334db: callq  *%r10
  0x000000010ca334de: test   %rbp,%rbp
  0x000000010ca334e1: je     0x000000010ca336ee
  0x000000010ca334e7: mov    0x8(%rbp),%r11d
  0x000000010ca334eb: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010ca334f2: jne    0x000000010ca338ad
  0x000000010ca334f8: mov    %rbp,%r11
  0x000000010ca334fb: mov    (%rsp),%r8
  0x000000010ca334ff: test   %r8,%r8
  0x000000010ca33502: je     0x000000010ca336f6
  0x000000010ca33508: mov    0x8(%r8),%r10d
  0x000000010ca3350c: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x000000010ca33513: jne    0x000000010ca338b1  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca33519: mov    %r8,%rdx
  0x000000010ca3351c: add    $0xc,%rdx          ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000010ca33520: movslq 0x18(%rsp),%rsi
  0x000000010ca33525: mov    0x18(%rsp),%edi
  0x000000010ca33529: inc    %edi               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x000000010ca3352b: jmpq   0x000000010ca33603  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=176}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x000000010ca33530: test   %eax,-0x2138536(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {poll}
  0x000000010ca33536: mov    %eax,%ecx
  0x000000010ca33538: mov    %ecx,%eax
  0x000000010ca3353a: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca3353c: cmp    %r14d,%eax
  0x000000010ca3353f: jg     0x000000010ca33558  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca33541: cmp    %r9d,%eax
  0x000000010ca33544: jae    0x000000010ca33703  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca3354a: movslq %ecx,%r10
  0x000000010ca3354d: movzwl 0x12(%r11,%r10,2),%r13d
  0x000000010ca33553: cmp    %ebx,%r13d
  0x000000010ca33556: jne    0x000000010ca33530  ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x000000010ca33558: mov    %eax,%r13d
  0x000000010ca3355b: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca3355e: movslq %eax,%r9           ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca33561: cmp    %r14d,%eax
  0x000000010ca33564: jg     0x000000010ca335c7  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000010ca33566: vmovd  %edi,%xmm0
  0x000000010ca3356a: mov    %eax,%ecx
  0x000000010ca3356c: add    0x1c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca33570: mov    %ecx,0x34(%rsp)
  0x000000010ca33574: cmp    %ecx,%r13d
  0x000000010ca33577: jge    0x000000010ca335c0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010ca33579: mov    0xc(%r11),%ecx     ; implicit exception: dispatches to 0x000000010ca339a5
  0x000000010ca3357d: cmp    %ecx,%r13d
  0x000000010ca33580: jae    0x000000010ca337bd  ;*caload
                                                ; - java.lang.String::
<writer thread='7171'/>
[Loaded org.openjdk.jmh.infra.ThreadParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
indexOf@129 (line 1779)

  0x000000010ca33586: test   %r8,%r8
  0x000000010ca33589: je     0x000000010ca33825  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010ca3358f: vmovq  %r8,%xmm2
  0x000000010ca33594: movzwl 0x12(%r11,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010ca3359a: mov    %r10d,%r8d
  0x000000010ca3359d: mov    (%rdx),%r10d
  0x000000010ca335a0: cmp    %r10d,%edi
  0x000000010ca335a3: jae    0x000000010ca33839
  0x000000010ca335a9: vmovq  %xmm2,%r10
  0x000000010ca335ae: movzwl 0x12(%r10,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010ca335b4: cmp    %ebp,%r8d
  0x000000010ca335b7: je     0x000000010ca33909  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x000000010ca335bd: mov    %r10,%r8           ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x000000010ca335c0: cmp    0x34(%rsp),%r13d
  0x000000010ca335c5: je     0x000000010ca335dc  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=327}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010ca335c7: test   %eax,-0x21385cd(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x000000010ca335cd: cmp    %r14d,%r13d
  0x000000010ca335d0: jle    0x000000010ca335ec  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000010ca335d2: mov    $0xffffffff,%eax
  0x000000010ca335d7: jmp    0x000000010ca335e0
  0x000000010ca335d9: mov    %r13d,%eax
  0x000000010ca335dc: sub    0x10(%rsp),%eax    ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca335e0: add    $0x50,%rsp
  0x000000010ca335e4: pop    %rbp
  0x000000010ca335e5: test   %eax,-0x21385eb(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca335eb: retq   
  0x000000010ca335ec: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x000000010ca33991
  0x000000010ca335f0: cmp    %r10d,%r13d
  0x000000010ca335f3: jae    0x000000010ca33761  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca335f9: movzwl 0x12(%r11,%r9,2),%ecx
  0x000000010ca335ff: cmp    %ebx,%ecx
  0x000000010ca33601: je     0x000000010ca33637
  0x000000010ca33603: mov    %r13d,%ecx
  0x000000010ca33606: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca33608: cmp    %r14d,%ecx
  0x000000010ca3360b: jg     0x000000010ca336e7  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca33611: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x000000010ca33980
  0x000000010ca33615: cmp    %r9d,%ecx
  0x000000010ca33618: jae    0x000000010ca33705  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca3361e: movslq %r13d,%r10
  0x000000010ca33621: movzwl 0x12(%r11,%r10,2),%r10d
  0x000000010ca33627: cmp    %ebx,%r10d
  0x000000010ca3362a: jne    0x000000010ca33538  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca33630: mov    %ecx,%eax
  0x000000010ca33632: jmpq   0x000000010ca33558
  0x000000010ca33637: vmovd  %edi,%xmm0         ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x000000010ca3363b: movslq %r13d,%rdi         ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca3363e: mov    %r13d,%ecx
  0x000000010ca33641: inc    %ecx               ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca33643: vmovd  %ecx,%xmm1
  0x000000010ca33647: cmp    %r14d,%r13d
  0x000000010ca3364a: jg     0x000000010ca336b3  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000010ca3364c: mov    %r13d,%ecx
  0x000000010ca3364f: add    0x1c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca33653: mov    %ecx,0x34(%rsp)
  0x000000010ca33657: vmovd  %xmm1,%ecx
  0x000000010ca3365b: cmp    0x34(%rsp),%ecx
  0x000000010ca3365f: jge    0x000000010ca336a5  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010ca33661: cmp    %r10d,%ecx
  0x000000010ca33664: jae    0x000000010ca3395d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010ca3366a: test   %r8,%r8
  0x000000010ca3366d: je     0x000000010ca33825  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010ca33673: vmovq  %r8,%xmm2
  0x000000010ca33678: movzwl 0x12(%r11,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010ca3367e: mov    (%rdx),%r9d
  0x000000010ca33681: vmovd  %xmm0,%ecx
  0x000000010ca33685: cmp    %r9d,%ecx
  0x000000010ca33688: jae    0x000000010ca33968
  0x000000010ca3368e: vmovq  %xmm2,%r9
  0x000000010ca33693: movzwl 0x12(%r9,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010ca33699: cmp    %ebp,%r8d
  0x000000010ca3369c: je     0x000000010ca33975  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x000000010ca336a2: mov    %r9,%r8            ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x000000010ca336a5: vmovd  %xmm1,%ecx
  0x000000010ca336a9: cmp    0x34(%rsp),%ecx
  0x000000010ca336ad: je     0x000000010ca335d9  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=563}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010ca336b3: test   %eax,-0x21386b9(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x000000010ca336b9: vmovd  %xmm1,%r13d
  0x000000010ca336be: cmp    %r14d,%r13d
  0x000000010ca336c1: jg     0x000000010ca335d2  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000010ca336c7: cmp    %r10d,%r13d
  0x000000010ca336ca: jae    0x000000010ca33761  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca336d0: movzwl 0x12(%r11,%rdi,2),%ecx
  0x000000010ca336d6: cmp    %ebx,%ecx
  0x000000010ca336d8: je     0x000000010ca3363b  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x000000010ca336de: vmovd  %xmm0,%edi
  0x000000010ca336e2: jmpq   0x000000010ca33603
  0x000000010ca336e7: mov    %ecx,%eax
  0x000000010ca336e9: jmpq   0x000000010ca33558
  0x000000010ca336ee: xor    %r11d,%r11d
  0x000000010ca336f1: jmpq   0x000000010ca334fb
  0x000000010ca336f6: mov    $0xc,%edx
  0x000000010ca336fb: xor    %r8d,%r8d
  0x000000010ca336fe: jmpq   0x000000010ca33520
  0x000000010ca33703: mov    %eax,%ecx
  0x000000010ca33705: mov    $0xffffffe4,%esi
  0x000000010ca3370a: mov    %rax,-0x8(%rsp)
  0x000000010ca3370f: mov    0x10(%rsp),%eax
  0x000000010ca33713: mov    %eax,(%rsp)
  0x000000010ca33716: mov    -0x8(%rsp),%rax
  0x000000010ca3371b: mov    %r8,0x8(%rsp)
  0x000000010ca33720: mov    %rax,-0x8(%rsp)
  0x000000010ca33725: mov    0x18(%rsp),%eax
  0x000000010ca33729: mov    %eax,0x4(%rsp)
  0x000000010ca3372d: mov    -0x8(%rsp),%rax
  0x000000010ca33732: mov    %rax,-0x8(%rsp)
  0x000000010ca33737: mov    0x1c(%rsp),%eax
  0x000000010ca3373b: mov    %eax,0x10(%rsp)
  0x000000010ca3373f: mov    -0x8(%rsp),%rax
  0x000000010ca33744: mov    %ebx,0x14(%rsp)
  0x000000010ca33748: mov    %r14d,0x18(%rsp)
  0x000000010ca3374d: mov    %r11,0x20(%rsp)
  0x000000010ca33752: mov    %ecx,0x28(%rsp)
  0x000000010ca33756: nop
  0x000000010ca33757: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [32]=Oop off=732}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca3375c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca33761: mov    $0xffffffe4,%esi
  0x000000010ca33766: mov    %rax,-0x8(%rsp)
  0x000000010ca3376b: mov    0x10(%rsp),%eax
  0x000000010ca3376f: mov    %eax,(%rsp)
  0x000000010ca33772: mov    -0x8(%rsp),%rax
  0x000000010ca33777: mov    %r8,0x8(%rsp)
  0x000000010ca3377c: mov    %rax,-0x8(%rsp)
  0x000000010ca33781: mov    0x18(%rsp),%eax
  0x000000010ca33785: mov    %eax,0x4(%rsp)
  0x000000010ca33789: mov    -0x8(%rsp),%rax
  0x000000010ca3378e: mov    %rax,-0x8(%rsp)
  0x000000010ca33793: mov    0x1c(%rsp),%eax
  0x000000010ca33797: mov    %eax,0x10(%rsp)
  0x000000010ca3379b: mov    -0x8(%rsp),%rax
  0x000000010ca337a0: mov    %ebx,0x14(%rsp)
  0x000000010ca337a4: mov    %r14d,0x18(%rsp)
  0x000000010ca337a9: mov    %r11,0x20(%rsp)
  0x000000010ca337ae: mov    %r13d,0x28(%rsp)
  0x000000010ca337b3: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [32]=Oop off=824}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca337b8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca337bd: mov    %eax,%ebp
  0x000000010ca337bf: mov    $0xffffffe4,%esi
  0x000000010ca337c4: mov    %rax,-0x8(%rsp)
  0x000000010ca337c9: mov    0x10(%rsp),%eax
  0x000000010ca337cd: mov    %eax,0x8(%rsp)
  0x000000010ca337d1: mov    -0x8(%rsp),%rax
  0x000000010ca337d6: mov    %r8,0x10(%rsp)
  0x000000010ca337db: mov    %rax,-0x8(%rsp)
  0x000000010ca337e0: mov    0x18(%rsp),%eax
  0x000000010ca337e4: mov    %eax,0xc(%rsp)
  0x000000010ca337e8: mov    -0x8(%rsp),%rax
  0x000000010ca337ed: mov    %rax,-0x8(%rsp)
  0x000000010ca337f2: mov    0x1c(%rsp),%eax
  0x000000010ca337f6: mov    %eax,0x18(%rsp)
  0x000000010ca337fa: mov    -0x8(%rsp),%rax
  0x000000010ca337ff: mov    %ebx,0x1c(%rsp)
  0x000000010ca33803: mov    %r14d,0x20(%rsp)
  0x000000010ca33808: mov    %r11,0x28(%rsp)
  0x000000010ca3380d: mov    %r13d,0x30(%rsp)
  0x000000010ca33812: vmovss %xmm0,0x38(%rsp)
  0x000000010ca33818: data32 xchg %ax,%ax
  0x000000010ca3381b: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop [40]=Oop off=928}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca33820: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca33825: mov    $0xfffffff6,%esi
  0x000000010ca3382a: vmovd  %xmm0,%ebp
  0x000000010ca3382e: nop
  0x000000010ca3382f: callq  0x000000010c9a71a0  ; OopMap{off=948}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca33834: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca33839: mov    %eax,%ebp
  0x000000010ca3383b: mov    $0xffffffe4,%esi
  0x000000010ca33840: mov    %r11,(%rsp)
  0x000000010ca33844: mov    %rax,-0x8(%rsp)
  0x000000010ca33849: mov    0x10(%rsp),%eax
  0x000000010ca3384d: mov    %eax,0x8(%rsp)
  0x000000010ca33851: mov    -0x8(%rsp),%rax
  0x000000010ca33856: mov    %rax,-0x8(%rsp)
  0x000000010ca3385b: mov    0x18(%rsp),%eax
  0x000000010ca3385f: mov    %eax,0xc(%rsp)
  0x000000010ca33863: mov    -0x8(%rsp),%rax
  0x000000010ca33868: mov    %rax,-0x8(%rsp)
  0x000000010ca3386d: mov    0x1c(%rsp),%eax
  0x000000010ca33871: mov    %eax,0x18(%rsp)
  0x000000010ca33875: mov    -0x8(%rsp),%rax
  0x000000010ca3387a: mov    %ebx,0x1c(%rsp)
  0x000000010ca3387e: mov    %r14d,0x20(%rsp)
  0x000000010ca33883: mov    %r13d,0x24(%rsp)
  0x000000010ca33888: vmovsd %xmm2,0x28(%rsp)
  0x000000010ca3388e: mov    0x34(%rsp),%r10d
  0x000000010ca33893: mov    %r10d,0x30(%rsp)
  0x000000010ca33898: mov    %r8d,0x38(%rsp)
  0x000000010ca3389d: vmovss %xmm0,0x3c(%rsp)
  0x000000010ca338a3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [40]=Oop off=1064}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca338a8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca338ad: mov    (%rsp),%r8
  0x000000010ca338b1: mov    $0xffffff9d,%esi
  0x000000010ca338b6: mov    %rax,-0x8(%rsp)
  0x000000010ca338bb: mov    0x10(%rsp),%eax
  0x000000010ca338bf: mov    %eax,(%rsp)
  0x000000010ca338c2: mov    -0x8(%rsp),%rax
  0x000000010ca338c7: mov    %r8,0x8(%rsp)
  0x000000010ca338cc: mov    %rax,-0x8(%rsp)
  0x000000010ca338d1: mov    0x18(%rsp),%eax
  0x000000010ca338d5: mov    %eax,0x4(%rsp)
  0x000000010ca338d9: mov    -0x8(%rsp),%rax
  0x000000010ca338de: mov    %rax,-0x8(%rsp)
  0x000000010ca338e3: mov    0x1c(%rsp),%eax
  0x000000010ca338e7: mov    %eax,0x10(%rsp)
  0x000000010ca338eb: mov    -0x8(%rsp),%rax
  0x000000010ca338f0: mov    %ebx,0x14(%rsp)
  0x000000010ca338f4: mov    %r14d,0x18(%rsp)
  0x000000010ca338f9: mov    %r13d,0x1c(%rsp)
  0x000000010ca338fe: nop
  0x000000010ca338ff: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1156}
                                                ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca33904: callq  0x000000010be85e14  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca33909: mov    %eax,(%rsp)        ;*aload_0
                                                ; - java.lang.String::indexOf@126 (line 1779)

  0x000000010ca3390c: mov    $0xffffff65,%esi
  0x000000010ca33911: mov    %r11,0x8(%rsp)
  0x000000010ca33916: mov    %rax,-0x8(%rsp)
  0x000000010ca3391b: mov    0x10(%rsp),%eax
  0x000000010ca3391f: mov    %eax,0x4(%rsp)
  0x000000010ca33923: mov    -0x8(%rsp),%rax
  0x000000010ca33928: vmovsd %xmm2,0x10(%rsp)
  0x000000010ca3392e: mov    %ebx,0x20(%rsp)
  0x000000010ca33932: mov    %r14d,0x24(%rsp)
  0x000000010ca33937: mov    %r13d,0x28(%rsp)
  0x000000010ca3393c: mov    0x34(%rsp),%r10d
  0x000000010ca33941: mov    %r10d,0x2c(%rsp)
  0x000000010ca33946: vmovss %xmm0,0x30(%rsp)
  0x000000010ca3394c: mov    %r8d,0x34(%rsp)
  0x000000010ca33951: xchg   %ax,%ax
  0x000000010ca33953: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop off=1240}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca33958: callq  0x000000010be85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca3395d: mov    %r13d,%ebp
  0x000000010ca33960: mov    %ecx,%r13d
  0x000000010ca33963: jmpq   0x000000010ca337bf
  0x000000010ca33968: mov    %r13d,%ebp
  0x000000010ca3396b: vmovd  %xmm1,%r13d
  0x000000010ca33970: jmpq   0x000000010ca3383b
  0x000000010ca33975: mov    %r13d,(%rsp)
  0x000000010ca33979: vmovd  %xmm1,%r13d
  0x000000010ca3397e: jmp    0x000000010ca3390c
  0x000000010ca33980: mov    $0xfffffff6,%esi
  0x000000010ca33985: mov    %ecx,%ebp
  0x000000010ca33987: callq  0x000000010c9a71a0  ; OopMap{off=1292}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca3398c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca33991: mov    $0xfffffff6,%esi
  0x000000010ca33996: mov    %r13d,%ebp
  0x000000010ca33999: xchg   %ax,%ax
  0x000000010ca3399b: callq  0x000000010c9a71a0  ; OopMap{off=1312}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca339a0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca339a5: mov    $0xfffffff6,%esi
  0x000000010ca339aa: mov    %r13d,%ebp
  0x000000010ca339ad: xchg   %ax,%ax
  0x000000010ca339af: callq  0x000000010c9a71a0  ; OopMap{off=1332}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca339b4: callq  0x000000010be85e14  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca339b9: hlt    
  0x000000010ca339ba: hlt    
  0x000000010ca339bb: hlt    
  0x000000010ca339bc: hlt    
  0x000000010ca339bd: hlt    
  0x000000010ca339be: hlt    
  0x000000010ca339bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca339c0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca339c5: callq  0x000000010ca339ca
  0x000000010ca339ca: subq   $0x5,(%rsp)
  0x000000010ca339cf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca339d4: hlt    
  0x000000010ca339d5: hlt    
  0x000000010ca339d6: hlt    
  0x000000010ca339d7: hlt    
<nmethod compile_id='69' compile_kind='osr' compiler='C2' entry='0x000000010ca33480' size='3368' address='0x000000010ca33310' relocation_offset='296' insts_offset='368' stub_offset='1712' scopes_data_offset='1752' scopes_pcs_offset='2304' dependencies_offset='3328' nul_chk_table_offset='3336' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5037' iicount='601' decompiles='1' unstable_if_traps='1' stamp='0.364'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.infra.ThreadParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='70' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5000' iicount='602' decompiles='1' unstable_if_traps='1' stamp='0.365' comment='count' hot_count='5001'/>
[Loaded org.openjdk.jmh.results.BenchmarkTaskResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.RawResults from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.Blackhole from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.Control from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='71' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5000' backedge_count='1' iicount='10000' stamp='0.369' comment='count' hot_count='10000'/>
[Loaded org.github.arnaudroger.SimplifiedBenchmark from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca35cd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110f4e7e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x60]   = int  (sp of caller)
  0x000000010ca35e40: mov    %eax,-0x14000(%rsp)
  0x000000010ca35e47: push   %rbp
  0x000000010ca35e48: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)

  0x000000010ca35e4c: 
<writer thread='7171'/>
[Loaded org.openjdk.jmh.util.SampleBuffer from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
mov    %edx,0x14(%rsp)
  0x000000010ca35e50: mov    %ecx,%r11d
  0x000000010ca35e53: mov    0x60(%rsp),%r10d
  0x000000010ca35e58: cmp    %ecx,%r10d
  0x000000010ca35e5b: jge    0x000000010ca3627d  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x000000010ca35e61: test   %r10d,%r10d
  0x000000010ca35e64: jl     0x000000010ca362ad  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010ca35e6a: mov    %edi,%ecx
  0x000000010ca35e6c: test   %edi,%edi
  0x000000010ca35e6e: je     0x000000010ca362d9  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x000000010ca35e74: mov    %r8,%r14
  0x000000010ca35e77: mov    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x000000010ca36309
  0x000000010ca35e7b: mov    %r9d,%edi
  0x000000010ca35e7e: cmp    %ebx,%r9d
  0x000000010ca35e81: jae    0x000000010ca36205  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010ca35e87: mov    %edx,%r9d
  0x000000010ca35e8a: add    0x60(%rsp),%r9d    ;*iadd
                                                ; - java.lang.String::indexOf@50 (line 1769)

  0x000000010ca35e8f: mov    %r11d,%edx
  0x000000010ca35e92: sub    %ecx,%edx
  0x000000010ca35e94: add    0x14(%rsp),%edx    ;*iadd
                                                ; - java.lang.String::indexOf@44 (line 1767)

  0x000000010ca35e98: cmp    %edx,%r9d
  0x000000010ca35e9b: jg     0x000000010ca35f7a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x000000010ca35ea1: movzwl 0x10(%r8,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010ca35ea7: mov    0xc(%rsi),%r11d    ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ; implicit exception: dispatches to 0x000000010ca3631d
  0x000000010ca35eab: mov    %r11d,(%rsp)
  0x000000010ca35eaf: mov    %ebx,0x60(%rsp)
  0x000000010ca35eb3: mov    %edx,%r11d
  0x000000010ca35eb6: inc    %r11d
  0x000000010ca35eb9: mov    %r11d,0x4(%rsp)
  0x000000010ca35ebe: mov    %edx,%ebx
  0x000000010ca35ec0: add    $0xfffffffffffffffe,%ebx
  0x000000010ca35ec3: movslq %edi,%r10
  0x000000010ca35ec6: vmovq  %r10,%xmm0
  0x000000010ca35ecb: mov    %edi,%r13d
  0x000000010ca35ece: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x000000010ca35ed1: mov    $0x80000000,%r11d
  0x000000010ca35ed7: mov    0x4(%rsp),%r10d
  0x000000010ca35edc: cmp    %ebx,%r10d
  0x000000010ca35edf: cmovl  %r11d,%ebx
  0x000000010ca35ee3: jmpq   0x000000010ca35f8b
  0x000000010ca35ee8: nopl   0x0(%rax,%rax,1)
  0x000000010ca35ef0: mov    %r9d,%eax
  0x000000010ca35ef3: jmpq   0x000000010ca35ff8
  0x000000010ca35ef8: mov    %eax,%r10d
  0x000000010ca35efb: inc    %r10d
  0x000000010ca35efe: mov    %eax,%r11d
  0x000000010ca35f01: mov    %r10d,%eax
  0x000000010ca35f04: jmp    0x000000010ca35f10
  0x000000010ca35f06: mov    %eax,%r11d
  0x000000010ca35f09: add    $0x2,%r11d
  0x000000010ca35f0d: add    $0x3,%eax
  0x000000010ca35f10: mov    %eax,%r9d
  0x000000010ca35f13: mov    %r11d,%eax
  0x000000010ca35f16: jmp    0x000000010ca35f28
  0x000000010ca35f18: mov    %eax,%r10d
  0x000000010ca35f1b: inc    %r10d
  0x000000010ca35f1e: mov    %eax,%r9d
  0x000000010ca35f21: add    $0x2,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca35f25: mov    %r10d,%eax
  0x000000010ca35f28: cmp    %edx,%eax
  0x000000010ca35f2a: jg     0x000000010ca35f6f  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca35f2c: mov    %eax,%r10d
  0x000000010ca35f2f: add    %ecx,%r10d         ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca35f32: cmp    %r10d,%r9d
  0x000000010ca35f35: jge    0x000000010ca35f66  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010ca35f37: cmp    (%rsp),%r9d
  0x000000010ca35f3b: jae    0x000000010ca3617c
  0x000000010ca35f41: movzwl 0x10(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x000000010ca35f47: cmp    0x60(%rsp),%r13d
  0x000000010ca35f4c: jae    0x000000010ca361b9
  0x000000010ca35f52: vmovq  %xmm0,%rbp
  0x000000010ca35f57: movzwl 0x12(%r14,%rbp,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x000000010ca35f5d: cmp    %ebp,%r11d
  0x000000010ca35f60: je     0x000000010ca36231  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x000000010ca35f66: cmp    %r10d,%r9d
  0x000000010ca35f69: je     0x000000010ca360b0  ; OopMap{rsi=Oop r14=Oop off=303}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x000000010ca35f6f: test   %eax,-0x213af75(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x000000010ca35f75: cmp    %edx,%r9d
  0x000000010ca35f78: jle    0x000000010ca35f8b  ;*iconst_m1
                                                ; - java.lang.String::indexOf@164 (line 1788)

  0x000000010ca35f7a: mov    $0xffffffff,%eax   ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010ca35f7f: add    $0x50,%rsp
  0x000000010ca35f83: pop    %rbp
  0x000000010ca35f84: test   %eax,-0x213af8a(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca35f8a: retq                      ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)

  0x000000010ca35f8b: cmp    (%rsp),%r9d
  0x000000010ca35f8f: jae    0x000000010ca360c7  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x000000010ca35f95: movzwl 0x10(%rsi,%r9,2),%r11d
  0x000000010ca35f9b: mov    %r9d,%r10d
  0x000000010ca35f9e: inc    %r10d              ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca35fa1: cmp    %r8d,%r11d
  0x000000010ca35fa4: je     0x000000010ca3608d  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x000000010ca35faa: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca35fae: cmp    %edx,%r10d
  0x000000010ca35fb1: jg     0x000000010ca35f6f  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca35fb3: cmp    (%rsp),%r10d
  0x000000010ca35fb7: jae    0x000000010ca36101
  0x000000010ca35fbd: cmp    (%rsp),%edx
  0x000000010ca35fc0: jae    0x000000010ca36101
  0x000000010ca35fc6: cmp    $0x7ffffffe,%edx
  0x000000010ca35fcc: jg     0x000000010ca36139  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca35fd2: movzwl 0x10(%rsi,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca35fd8: mov    %r10d,%eax
  0x000000010ca35fdb: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca35fdd: cmp    %r8d,%r11d
  0x000000010ca35fe0: je     0x000000010ca360a5  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca35fe6: cmp    %r9d,%eax
  0x000000010ca35fe9: jge    0x000000010ca35ff0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca35feb: mov    %eax,%r10d
  0x000000010ca35fee: jmp    0x000000010ca35fd2
  0x000000010ca35ff0: cmp    %ebx,%eax
  0x000000010ca35ff2: jge    0x000000010ca36171  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca35ff8: movzwl 0x10(%rsi,%rax,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca35ffe: cmp    %r8d,%r11d
  0x000000010ca36001: je     0x000000010ca35ef8  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca36007: movslq %eax,%r9
  0x000000010ca3600a: movzwl 0x12(%rsi,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca36010: cmp    %r8d,%r10d
  0x000000010ca36013: je     0x000000010ca35f18  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca36019: movzwl 0x14(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca3601f: cmp    %r8d,%r11d
  0x000000010ca36022: je     0x000000010ca35f06  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca36028: movzwl 0x16(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca3602e: mov    %eax,%r9d
  0x000000010ca36031: add    $0x4,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca36035: cmp    %r8d,%r11d
  0x000000010ca36038: je     0x000000010ca36085  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca3603a: cmp    %ebx,%r9d
  0x000000010ca3603d: jl     0x000000010ca35ef0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca36043: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca36046: cmp    0x4(%rsp),%r9d
  0x000000010ca3604b: jge    0x000000010ca3606b
  0x000000010ca3604d: data32 xchg %ax,%ax       ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x000000010ca36050: movzwl 0x10(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010ca36056: mov    %r9d,%eax
  0x000000010ca36059: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca3605b: cmp    %r8d,%r11d
  0x000000010ca3605e: je     0x000000010ca360b9  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010ca36060: cmp    0x4(%rsp),%eax
  0x000000010ca36064: jge    0x000000010ca36074  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010ca36066: mov    %eax,%r9d
  0x000000010ca36069: jmp    0x000000010ca36050
  0x000000010ca3606b: mov    %r9d,%r11d
  0x000000010ca3606e: mov    %eax,%r9d
  0x000000010ca36071: mov    %r11d,%eax
  0x000000010ca36074: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010ca36078: cmp    %edx,%eax
  0x000000010ca3607a: jg     0x000000010ca35f6f  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000010ca36080: jmpq   0x000000010ca35f2c
  0x000000010ca36085: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010ca36088: jmpq   0x000000010ca35f28
  0x000000010ca3608d: cmp    %edx,%r9d
  0x000000010ca36090: jle    0x000000010ca3609a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x000000010ca36092: mov    %r10d,%r9d
  0x000000010ca36095: jmpq   0x000000010ca35f6f
  0x000000010ca3609a: mov    %r9d,%eax
  0x000000010ca3609d: mov    %r10d,%r9d
  0x000000010ca360a0: jmpq   0x000000010ca35f2c
  0x000000010ca360a5: mov    %eax,%r9d
  0x000000010ca360a8: mov    %r10d,%eax
  0x000000010ca360ab: jmpq   0x000000010ca35f28
  0x000000010ca360b0: sub    0x14(%rsp),%eax    ;*isub
                                                ; - java.lang.String::indexOf@156 (line 1784)

  0x000000010ca360b4: jmpq   0x000000010ca35f7f
  0x000000010ca360b9: mov    %eax,%r10d
  0x000000010ca360bc: mov    %r9d,%eax
  0x000000010ca360bf: mov    %r10d,%r9d
  0x000000010ca360c2: jmpq   0x000000010ca35f28
  0x000000010ca360c7: mov    %r8d,0x60(%rsp)
  0x000000010ca360cc: mov    %rsi,0x8(%rsp)
  0x000000010ca360d1: mov    %r9d,0x4(%rsp)
  0x000000010ca360d6: mov    0x14(%rsp),%r11d
  0x000000010ca360db: mov    %r11d,0x10(%rsp)
  0x000000010ca360e0: mov    %r14,0x18(%rsp)
  0x000000010ca360e5: mov    %edi,0x14(%rsp)
  0x000000010ca360e9: mov    %ecx,0x20(%rsp)
  0x000000010ca360ed: mov    %edx,0x24(%rsp)
  0x000000010ca360f1: mov    $0xffffffe4,%esi
  0x000000010ca360f6: nop
  0x000000010ca360f7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [24]=Oop off=700}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca360fc: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca36101: mov    %rsi,%rbp
  0x000000010ca36104: mov    %r8d,0x60(%rsp)
  0x000000010ca36109: mov    %r10d,(%rsp)
  0x000000010ca3610d: mov    0x14(%rsp),%r10d
  0x000000010ca36112: mov    %r10d,0x4(%rsp)
  0x000000010ca36117: mov    %r14,0x8(%rsp)
  0x000000010ca3611c: mov    %edi,0x10(%rsp)
  0x000000010ca36120: mov    %ecx,0x14(%rsp)
  0x000000010ca36124: mov    %edx,0x18(%rsp)
  0x000000010ca36128: mov    $0xffffff86,%esi
  0x000000010ca3612d: xchg   %ax,%ax
  0x000000010ca3612f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=756}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca36134: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca36139: mov    %rsi,%rbp
  0x000000010ca3613c: mov    %r8d,0x60(%rsp)
  0x000000010ca36141: mov    %r10d,(%rsp)
  0x000000010ca36145: mov    0x14(%rsp),%r10d
  0x000000010ca3614a: mov    %r10d,0x4(%rsp)
  0x000000010ca3614f: mov    %r14,0x8(%rsp)
  0x000000010ca36154: mov    %edi,0x10(%rsp)
  0x000000010ca36158: mov    %ecx,0x14(%rsp)
  0x000000010ca3615c: mov    %edx,0x18(%rsp)
  0x000000010ca36160: mov    $0xffffff7e,%esi
  0x000000010ca36165: xchg   %ax,%ax
  0x000000010ca36167: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=812}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca3616c: callq  0x000000010be85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x000000010ca36171: mov    %eax,%r9d
  0x000000010ca36174: mov    %r10d,%eax
  0x000000010ca36177: jmpq   0x000000010ca36046
  0x000000010ca3617c: mov    %r8d,0x60(%rsp)
  0x000000010ca36181: mov    %eax,(%rsp)
  0x000000010ca36184: mov    %rsi,0x8(%rsp)
  0x000000010ca36189: mov    %r9d,0x10(%rsp)
  0x000000010ca3618e: mov    %r14,0x18(%rsp)
  0x000000010ca36193: mov    %edi,0x20(%rsp)
  0x000000010ca36197: mov    %ecx,0x24(%rsp)
  0x000000010ca3619b: mov    %edx,0x28(%rsp)
  0x000000010ca3619f: mov    %r10d,0x2c(%rsp)
  0x000000010ca361a4: mov    %r13d,0x30(%rsp)
  0x000000010ca361a9: mov    $0xffffffe4,%esi
  0x000000010ca361ae: nop
  0x000000010ca361af: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [24]=Oop off=884}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca361b4: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca361b9: mov    %rsi,%rbp
  0x000000010ca361bc: mov    %r8d,0x60(%rsp)
  0x000000010ca361c1: mov    %eax,(%rsp)
  0x000000010ca361c4: mov    %r9d,0x4(%rsp)
  0x000000010ca361c9: mov    0x14(%rsp),%r8d
  0x000000010ca361ce: mov    %r8d,0x8(%rsp)
  0x000000010ca361d3: mov    %edi,0xc(%rsp)
  0x000000010ca361d7: mov    %ecx,0x18(%rsp)
  0x000000010ca361db: mov    %edx,0x1c(%rsp)
  0x000000010ca361df: mov    %r10d,0x20(%rsp)
  0x000000010ca361e4: mov    %r11d,0x28(%rsp)
  0x000000010ca361e9: mov    %r14,0x30(%rsp)
  0x000000010ca361ee: mov    %r13d,0x2c(%rsp)
  0x000000010ca361f3: mov    $0xffffffe4,%esi
  0x000000010ca361f8: data32 xchg %ax,%ax
  0x000000010ca361fb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [48]=Oop off=960}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca36200: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca36205: mov    %rsi,%rbp
  0x000000010ca36208: mov    %edx,0x60(%rsp)
  0x000000010ca3620c: mov    %r11d,(%rsp)
  0x000000010ca36210: mov    %ecx,0x10(%rsp)
  0x000000010ca36214: mov    %r10d,0x14(%rsp)
  0x000000010ca36219: mov    %r8,0x18(%rsp)
  0x000000010ca3621e: mov    %edi,0x20(%rsp)
  0x000000010ca36222: mov    $0xffffffe4,%esi
  0x000000010ca36227: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [24]=Oop off=1004}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca3622c: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca36231: mov    %rsi,(%rsp)
  0x000000010ca36235: mov    %r8d,0x60(%rsp)
  0x000000010ca3623a: mov    %eax,0x8(%rsp)
  0x000000010ca3623e: mov    %r9d,0xc(%rsp)
  0x000000010ca36243: mov    0x14(%rsp),%r9d
  0x000000010ca36248: mov    %r9d,0x10(%rsp)
  0x000000010ca3624d: mov    %r14,0x18(%rsp)
  0x000000010ca36252: mov    %edi,0x14(%rsp)
  0x000000010ca36256: mov    %ecx,0x20(%rsp)
  0x000000010ca3625a: mov    %edx,0x24(%rsp)
  0x000000010ca3625e: mov    %r10d,0x28(%rsp)
  0x000000010ca36263: mov    %r13d,0x2c(%rsp)
  0x000000010ca36268: mov    %r11d,0x30(%rsp)
  0x000000010ca3626d: mov    $0xffffff65,%esi
  0x000000010ca36272: nop
  0x000000010ca36273: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [24]=Oop off=1080}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca36278: callq  0x000000010be85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x000000010ca3627d: mov    %rsi,%rbp
  0x000000010ca36280: mov    %edx,0x60(%rsp)
  0x000000010ca36284: mov    %r8,0x8(%rsp)
  0x000000010ca36289: mov    %r9d,0x4(%rsp)
  0x000000010ca3628e: mov    %edi,0x10(%rsp)
  0x000000010ca36292: mov    %r10d,0x18(%rsp)
  0x000000010ca36297: mov    %ecx,0x1c(%rsp)
  0x000000010ca3629b: mov    $0xffffff65,%esi
  0x000000010ca362a0: data32 xchg %ax,%ax
  0x000000010ca362a3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1128}
                                                ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x000000010ca362a8: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x000000010ca362ad: mov    %rsi,%rbp
  0x000000010ca362b0: mov    %edx,0x60(%rsp)
  0x000000010ca362b4: mov    %ecx,(%rsp)
  0x000000010ca362b7: mov    %r8,0x8(%rsp)
  0x000000010ca362bc: mov    %r9d,0x4(%rsp)
  0x000000010ca362c1: mov    %edi,0x10(%rsp)
  0x000000010ca362c5: mov    %r10d,0x18(%rsp)
  0x000000010ca362ca: mov    $0xffffff65,%esi
  0x000000010ca362cf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1172}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x000000010ca362d4: callq  0x000000010be85e14  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x000000010ca362d9: mov    %rsi,%rbp
  0x000000010ca362dc: mov    %edx,0x60(%rsp)
  0x000000010ca362e0: mov    %r11d,(%rsp)
  0x000000010ca362e4: mov    %r8,0x8(%rsp)
  0x000000010ca362e9: mov    %r9d,0x4(%rsp)
  0x000000010ca362ee: mov    %r10d,0x14(%rsp)
  0x000000010ca362f3: mov    %ecx,0x18(%rsp)
  0x000000010ca362f7: mov    $0xffffff65,%esi
  0x000000010ca362fc: data32 xchg %ax,%ax
  0x000000010ca362ff: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1220}
                                                ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x000000010ca36304: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x000000010ca36309: mov    $0xfffffff6,%esi
  0x000000010ca3630e: mov    %r9d,%ebp
  0x000000010ca36311: xchg   %ax,%ax
  0x000000010ca36313: callq  0x000000010c9a71a0  ; OopMap{off=1240}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca36318: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010ca3631d: mov    %rsi,%rbp
  0x000000010ca36320: mov    %r8d,0x60(%rsp)
  0x000000010ca36325: mov    %r9d,(%rsp)
  0x000000010ca36329: mov    0x14(%rsp),%r11d
  0x000000010ca3632e: mov    %r11d,0x4(%rsp)
  0x000000010ca36333: mov    %r14,0x8(%rsp)
  0x000000010ca36338: mov    %edi,0x10(%rsp)
  0x000000010ca3633c: mov    %ecx,0x14(%rsp)
  0x000000010ca36340: mov    %edx,0x18(%rsp)
  0x000000010ca36344: mov    $0xffffff86,%esi
  0x000000010ca36349: xchg   %ax,%ax
  0x000000010ca3634b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=1296}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x000000010ca36350: callq  0x000000010be85e14  ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)
                                                ;   {runtime_call}
  0x000000010ca36355: hlt    
  0x000000010ca36356: hlt    
  0x000000010ca36357: hlt    
  0x000000010ca36358: hlt    
  0x000000010ca36359: hlt    
  0x000000010ca3635a: hlt    
  0x000000010ca3635b: hlt    
  0x000000010ca3635c: hlt    
  0x000000010ca3635d: hlt    
  0x000000010ca3635e: hlt    
  0x000000010ca3635f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca36360: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca36365: callq  0x000000010ca3636a
  0x000000010ca3636a: subq   $0x5,(%rsp)
  0x000000010ca3636f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca36374: hlt    
  0x000000010ca36375: hlt    
  0x000000010ca36376: hlt    
  0x000000010ca36377: hlt    
<nmethod compile_id='70' compiler='C2' entry='0x000000010ca35e40' size='3680' address='0x000000010ca35cd0' relocation_offset='296' insts_offset='368' stub_offset='1680' scopes_data_offset='1712' scopes_pcs_offset='2368' dependencies_offset='3648' nul_chk_table_offset='3656' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5034' iicount='641' decompiles='1' unstable_if_traps='1' stamp='0.374'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.profile.ProfilerFactory from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.reflect.InvocationTargetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.profile.ProfilerException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.Profiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.InternalProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ClassloaderProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.CompilerProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca315d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110fbd698} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010ca31720: mov    0x8(%rsi),%r10d
  0x000000010ca31724: shl    $0x3,%r10
  0x000000010ca31728: cmp    %r10,%rax
  0x000000010ca3172b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca31731: data32 xchg %ax,%ax
  0x000000010ca31734: nopl   0x0(%rax,%rax,1)
  0x000000010ca3173c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca31740: 
<writer thread='7171'/>
[Loaded org.openjdk.jmh.profile.GCProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
mov    %eax,-0x14000(%rsp)
  0x000000010ca31747: push   %rbp
  0x000000010ca31748: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010ca3174c: mov    %rsi,(%rsp)
  0x000000010ca31750: mov    0x10(%rsi),%r8d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010ca31754: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010ca31997
  0x000000010ca31759: mov    %edx,%r9d
  0x000000010ca3175c: sub    %r11d,%r9d
  0x000000010ca3175f: test   %r9d,%r9d
  0x000000010ca31762: jle    0x000000010ca318a9  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010ca31768: mov    %r11d,%r10d
  0x000000010ca3176b: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca3176e: mov    %r10d,%ecx
  0x000000010ca31771: sub    %edx,%ecx
  0x000000010ca31773: add    $0x2,%ecx
  0x000000010ca31776: test   %ecx,%ecx
  0x000000010ca31778: jl     0x000000010ca31780  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca3177a: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca3177e: jmp    0x000000010ca31783
  0x000000010ca31780: mov    %edx,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca31783: test   %r10d,%r10d
  0x000000010ca31786: jle    0x000000010ca31794  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca31788: mov    $0x7ffffff7,%ecx
  0x000000010ca3178d: sub    %r10d,%ecx
  0x000000010ca31790: test   %ecx,%ecx
  0x000000010ca31792: jge    0x000000010ca317af  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca31794: mov    %r11d,0x8(%rsp)
  0x000000010ca31799: mov    %r8d,%ebp
  0x000000010ca3179c: data32 xchg %ax,%ax
  0x000000010ca3179f: callq  0x000000010c9e8020  ; OopMap{rbp=NarrowOop [0]=Oop off=132}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010ca317a4: mov    %eax,%r10d
  0x000000010ca317a7: mov    %ebp,%r8d
  0x000000010ca317aa: mov    0x8(%rsp),%r11d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca317af: cmp    $0x80000,%r10d
  0x000000010ca317b6: ja     0x000000010ca31959
  0x000000010ca317bc: movslq %r10d,%rbx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca317bf: shl    %rbx
  0x000000010ca317c2: lea    (%r12,%r8,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010ca317c6: add    $0x17,%rbx
  0x000000010ca317ca: mov    %rbx,%rax
  0x000000010ca317cd: and    $0xfffffffffffffff8,%rax
  0x000000010ca317d1: cmp    $0x80000,%r10d
  0x000000010ca317d8: ja     0x000000010ca318f5
  0x000000010ca317de: mov    0x60(%r15),%rbp
  0x000000010ca317e2: mov    %rbp,%r9
  0x000000010ca317e5: add    %rax,%r9
  0x000000010ca317e8: cmp    0x70(%r15),%r9
  0x000000010ca317ec: jae    0x000000010ca318f5
  0x000000010ca317f2: mov    %r9,0x60(%r15)
  0x000000010ca317f6: prefetchnta 0xc0(%r9)
  0x000000010ca317fe: movq   $0x1,0x0(%rbp)
  0x000000010ca31806: prefetchnta 0x100(%r9)
  0x000000010ca3180e: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010ca31815: mov    %r10d,0xc(%rbp)
  0x000000010ca31819: prefetchnta 0x140(%r9)
  0x000000010ca31821: prefetchnta 0x180(%r9)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca31829: cmp    %r10d,%r11d
  0x000000010ca3182c: mov    %r10d,%r9d
  0x000000010ca3182f: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca31833: mov    %rbp,%rsi
  0x000000010ca31836: add    $0x10,%rsi
  0x000000010ca3183a: shr    $0x3,%rbx
  0x000000010ca3183e: mov    %rbx,%rcx
  0x000000010ca31841: add    $0xfffffffffffffffe,%rcx
  0x000000010ca31845: cmp    %r9d,%r11d
  0x000000010ca31848: jb     0x000000010ca31961
  0x000000010ca3184e: cmp    %r9d,%r10d
  0x000000010ca31851: jb     0x000000010ca31961
  0x000000010ca31857: test   %r9d,%r9d
  0x000000010ca3185a: jle    0x000000010ca31985
  0x000000010ca31860: lea    0x10(%r12,%r8,8),%r11
  0x000000010ca31865: cmp    %r10d,%r9d
  0x000000010ca31868: jl     0x000000010ca318b5
  0x000000010ca3186a: add    $0xfffffffffffffff0,%rax
  0x000000010ca3186e: shr    $0x3,%rax
  0x000000010ca31872: mov    %r11,%rdi
  0x000000010ca31875: mov    %rax,%rdx
  0x000000010ca31878: movabs $0x10c9f4780,%r10
  0x000000010ca31882: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca31885: mov    %rbp,%r10
  0x000000010ca31888: shr    $0x3,%r10
  0x000000010ca3188c: mov    (%rsp),%r11
  0x000000010ca31890: mov    %r10d,0x10(%r11)
  0x000000010ca31894: mov    %r11,%r10
  0x000000010ca31897: shr    $0x9,%r10
  0x000000010ca3189b: movabs $0x10c3a2000,%r11
  0x000000010ca318a5: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010ca318a9: add    $0x40,%rsp
  0x000000010ca318ad: pop    %rbp
  0x000000010ca318ae: test   %eax,-0x21368b4(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca318b4: retq   
  0x000000010ca318b5: movslq %r9d,%rdx
  0x000000010ca318b8: mov    %rdx,%r10
  0x000000010ca318bb: shl    %r10
  0x000000010ca318be: add    $0x10,%r10
  0x000000010ca318c2: mov    %r10,%r8
  0x000000010ca318c5: and    $0xfffffffffffffff9,%r8
  0x000000010ca318c9: mov    %rbp,%rdi
  0x000000010ca318cc: add    %r8,%rdi
  0x000000010ca318cf: shr    $0x3,%r10
  0x000000010ca318d3: sub    %r10,%rbx
  0x000000010ca318d6: mov    %rbx,%rcx
  0x000000010ca318d9: xor    %rax,%rax
  0x000000010ca318dc: shl    $0x3,%rcx
  0x000000010ca318e0: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca318e3: mov    %r11,%rdi
  0x000000010ca318e6: movabs $0x10c9f44c0,%r10
  0x000000010ca318f0: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca318f3: jmp    0x000000010ca31885
  0x000000010ca318f5: mov    %r11d,0x28(%rsp)
  0x000000010ca318fa: mov    %r8d,0xc(%rsp)
  0x000000010ca318ff: mov    %rax,0x20(%rsp)
  0x000000010ca31904: mov    %rdx,0x18(%rsp)
  0x000000010ca31909: mov    %rbx,0x10(%rsp)
  0x000000010ca3190e: mov    %r10d,0x8(%rsp)
  0x000000010ca31913: mov    (%rsp),%rbp
  0x000000010ca31917: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca31921: mov    %r10d,%edx
  0x000000010ca31924: data32 xchg %ax,%ax
  0x000000010ca31927: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [12]=NarrowOop [24]=Oop off=524}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010ca3192c: mov    %rax,%r11
  0x000000010ca3192f: mov    %rbp,(%rsp)
  0x000000010ca31933: mov    0x8(%rsp),%r10d
  0x000000010ca31938: mov    0x10(%rsp),%rbx
  0x000000010ca3193d: mov    0x18(%rsp),%rdx
  0x000000010ca31942: mov    0x20(%rsp),%rax
  0x000000010ca31947: mov    %r11,%rbp
  0x000000010ca3194a: mov    0xc(%rsp),%r8d
  0x000000010ca3194f: mov    0x28(%rsp),%r11d
  0x000000010ca31954: jmpq   0x000000010ca31829
  0x000000010ca31959: movslq %r10d,%rbx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca3195c: jmpq   0x000000010ca317bf
  0x000000010ca31961: mov    %rsi,%rdi
  0x000000010ca31964: xor    %rax,%rax
  0x000000010ca31967: shl    $0x3,%rcx
  0x000000010ca3196b: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3196e: mov    %rdx,%rsi
  0x000000010ca31971: xor    %edx,%edx
  0x000000010ca31973: mov    %rbp,%rcx
  0x000000010ca31976: xor    %r8d,%r8d
  0x000000010ca31979: xchg   %ax,%ax
  0x000000010ca3197b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop off=608}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010ca31980: jmpq   0x000000010ca31885
  0x000000010ca31985: mov    %rsi,%rdi
  0x000000010ca31988: xor    %rax,%rax
  0x000000010ca3198b: shl    $0x3,%rcx
  0x000000010ca3198f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca31992: jmpq   0x000000010ca31885
  0x000000010ca31997: mov    $0xfffffff6,%esi
  0x000000010ca3199c: data32 xchg %ax,%ax
  0x000000010ca3199f: callq  0x000000010c9a71a0  ; OopMap{off=644}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010ca319a4: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca319a9: jmp    0x000000010ca319ab  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010ca319ab: mov    %rax,%rsi
  0x000000010ca319ae: jmp    0x000000010ca319b3  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010ca319b0: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010ca319b3: add    $0x40,%rsp
  0x000000010ca319b7: pop    %rbp
  0x000000010ca319b8: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca319bd: hlt    
  0x000000010ca319be: hlt    
  0x000000010ca319bf: hlt    
[Stub Code]
  0x000000010ca319c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca319ca: jmpq   0x000000010ca319ca  ;   {runtime_call}
[Exception Handler]
  0x000000010ca319cf: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca319d4: callq  0x000000010ca319d9
  0x000000010ca319d9: subq   $0x5,(%rsp)
  0x000000010ca319de: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca319e3: hlt    
  0x000000010ca319e4: hlt    
  0x000000010ca319e5: hlt    
  0x000000010ca319e6: hlt    
  0x000000010ca319e7: hlt    
<nmethod compile_id='71' compiler='C2' entry='0x000000010ca31720' size='1832' address='0x000000010ca315d0' relocation_offset='296' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1736' handler_table_offset='1744' nul_chk_table_offset='1816' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5083' backedge_count='1' iicount='10083' stamp='0.378'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.profile.AbstractHotspotProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotClassloadingProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotCompilationProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotMemoryProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotRuntimeProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotThreadProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.StackProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ExternalProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfNormProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.AbstractPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='72' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5000' backedge_count='2184' iicount='7816' stamp='0.383' comment='count' hot_count='7816'/>
[Loaded org.openjdk.jmh.profile.WinPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.PausesProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.AbstractQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ArrayBlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractOwnableSynchronizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock$Sync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock$NonfairSync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Condition from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca31050:
Code:
<writer thread='7171'/>
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
[Entry Point]
[Constants]
  # {method} {0x0000000110f4ddf8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010ca311a0: mov    0x8(%rsi),%r10d
  0x000000010ca311a4: shl    $0x3,%r10
  0x000000010ca311a8: cmp    %r10,%rax
  0x000000010ca311ab: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca311b1: data32 xchg %ax,%ax
  0x000000010ca311b4: nopl   0x0(%rax,%rax,1)
  0x000000010ca311bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca311c0: mov    %eax,-0x14000(%rsp)
  0x000000010ca311c7: push   %rbp
  0x000000010ca311c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)

  0x000000010ca311cc: mov    %rsi,%r10
  0x000000010ca311cf: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ; implicit exception: dispatches to 0x000000010ca31299
  0x000000010ca311d3: mov    0xc(%r12,%r8,8),%ebx  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010ca312a9
  0x000000010ca311d8: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010ca311db: test   %ecx,%ecx
  0x000000010ca311dd: jl     0x000000010ca31275  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010ca311e3: mov    0xc(%r12,%rbp,8),%r9d  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010ca312b9
  0x000000010ca311e8: mov    %r9d,%r10d
  0x000000010ca311eb: sub    %ebx,%r10d
  0x000000010ca311ee: xor    %eax,%eax
  0x000000010ca311f0: cmp    %r10d,%ecx
  0x000000010ca311f3: jg     0x000000010ca3124d  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010ca311f5: mov    %ebx,%edi
  0x000000010ca311f7: dec    %edi               ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010ca311f9: test   %edi,%edi
  0x000000010ca311fb: jl     0x000000010ca31248  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010ca311fd: cmp    %r9d,%ecx
  0x000000010ca31200: jae    0x000000010ca31259  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)

  0x000000010ca31202: mov    %ecx,%r10d
  0x000000010ca31205: add    %ebx,%r10d
  0x000000010ca31208: dec    %r10d              ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)

  0x000000010ca3120b: cmp    %r9d,%r10d
  0x000000010ca3120e: jae    0x000000010ca31259
  0x000000010ca31210: test   %ebx,%ebx
  0x000000010ca31212: jbe    0x000000010ca31259
  0x000000010ca31214: cmp    %ebx,%edi
  0x000000010ca31216: jae    0x000000010ca31259
  0x000000010ca31218: movslq %ebx,%r11
  0x000000010ca3121b: lea    (%r12,%rbp,8),%r9
  0x000000010ca3121f: lea    (%r12,%r8,8),%rcx  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)

  0x000000010ca31223: mov    %r10d,%ebx
  0x000000010ca31226: sub    %edi,%ebx
  0x000000010ca31228: movzwl 0x10(%r9,%rbx,2),%r8d  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010ca3122e: movslq %edi,%rbx
  0x000000010ca31231: mov    %r11,%rdx
  0x000000010ca31234: sub    %rbx,%rdx
  0x000000010ca31237: movzwl 0xe(%rcx,%rdx,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010ca3123c: cmp    %ebx,%r8d
  0x000000010ca3123f: jne    0x000000010ca3124d  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010ca31241: dec    %edi               ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010ca31243: cmp    $0xffffffffffffffff,%edi
  0x000000010ca31246: jg     0x000000010ca31223  ;*iconst_1
                                                ; - java.lang.String::startsWith@70 (line 1417)

  0x000000010ca31248: mov    $0x1,%eax          ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)

  0x000000010ca3124d: add    $0x30,%rsp
  0x000000010ca31251: pop    %rbp
  0x000000010ca31252: test   %eax,-0x2136258(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca31258: retq   
  0x000000010ca31259: mov    $0xffffff86,%esi
  0x000000010ca3125e: mov    %edi,(%rsp)
  0x000000010ca31261: mov    %ecx,0x4(%rsp)
  0x000000010ca31265: mov    %r8d,0x8(%rsp)
  0x000000010ca3126a: nop
  0x000000010ca3126b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [8]=NarrowOop off=208}
                                                ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)
                                                ;   {runtime_call}
  0x000000010ca31270: callq  0x000000010be85e14  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)
                                                ;   {runtime_call}
  0x000000010ca31275: mov    $0xffffff65,%esi
  0x000000010ca3127a: mov    %r10,(%rsp)
  0x000000010ca3127e: mov    %ecx,0xc(%rsp)
  0x000000010ca31282: mov    %r8d,0x10(%rsp)
  0x000000010ca31287: mov    %ebx,0x14(%rsp)
  0x000000010ca3128b: mov    %ecx,0x18(%rsp)
  0x000000010ca3128f: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [16]=NarrowOop off=244}
                                                ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)
                                                ;   {runtime_call}
  0x000000010ca31294: callq  0x000000010be85e14  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)
                                                ;   {runtime_call}
  0x000000010ca31299: mov    $0xfffffff6,%esi
  0x000000010ca3129e: nop
  0x000000010ca3129f: callq  0x000000010c9a71a0  ; OopMap{off=260}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010ca312a4: callq  0x000000010be85e14  ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010ca312a9: mov    $0xfffffff6,%esi
  0x000000010ca312ae: nop
  0x000000010ca312af: callq  0x000000010c9a71a0  ; OopMap{off=276}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010ca312b4: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010ca312b9: mov    $0xfffffff6,%esi
  0x000000010ca312be: nop
  0x000000010ca312bf: callq  0x000000010c9a71a0  ; OopMap{off=292}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010ca312c4: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010ca312c9: hlt    
  0x000000010ca312ca: hlt    
  0x000000010ca312cb: hlt    
  0x000000010ca312cc: hlt    
  0x000000010ca312cd: hlt    
  0x000000010ca312ce: hlt    
  0x000000010ca312cf: hlt    
  0x000000010ca312d0: hlt    
  0x000000010ca312d1: hlt    
  0x000000010ca312d2: hlt    
  0x000000010ca312d3: hlt    
  0x000000010ca312d4: hlt    
  0x000000010ca312d5: hlt    
  0x000000010ca312d6: hlt    
  0x000000010ca312d7: hlt    
  0x000000010ca312d8: hlt    
  0x000000010ca312d9: hlt    
  0x000000010ca312da: hlt    
  0x000000010ca312db: hlt    
  0x000000010ca312dc: hlt    
  0x000000010ca312dd: hlt    
  0x000000010ca312de: hlt    
  0x000000010ca312df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca312e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca312e5: callq  0x000000010ca312ea
  0x000000010ca312ea: subq   $0x5,(%rsp)
  0x000000010ca312ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca312f4: hlt    
  0x000000010ca312f5: hlt    
  0x000000010ca312f6: hlt    
  0x000000010ca312f7: hlt    
<nmethod compile_id='72' compiler='C2' entry='0x000000010ca311a0' size='1392' address='0x000000010ca31050' relocation_offset='296' insts_offset='336' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='872' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5085' backedge_count='2198' iicount='7901' stamp='0.386'/>
<writer thread='7171'/>
[Loaded java.lang.StrictMath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='73' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='0.387' comment='count' hot_count='10000'/>
<task_queued compile_id='74' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='349' backedge_count='5000' iicount='349' stamp='0.387' comment='count' hot_count='349'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca32c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f862f0} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/reflect/Field&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010ca32da0: mov    0x8(%rsi),%r10d
  0x000000010ca32da4: shl    $0x3,%r10
  0x000000010ca32da8: cmp    %r10,%rax
  0x000000010ca32dab: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca32db1: data32 xchg %ax,%ax
  0x000000010ca32db4: nopl   0x0(%rax,%rax,1)
  0x000000010ca32dbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca32dc0: sub    $0x18,%rsp
  0x000000010ca32dc7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.reflect.Field::getName@-1 (line 171)

  0x000000010ca32dcc: mov    0x20(%rsi),%r11d
  0x000000010ca32dd0: mov    %r11,%rax
  0x000000010ca32dd3: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Field::getName@1 (line 171)

  0x000000010ca32dd7: add    $0x10,%rsp
  0x000000010ca32ddb: pop    %rbp
  0x000000010ca32ddc: test   %eax,-0x2137de2(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca32de2: retq   
  0x000000010ca32de3: hlt    
  0x000000010ca32de4: hlt    
  0x000000010ca32de5: hlt    
  0x000000010ca32de6: hlt    
  0x000000010ca32de7: hlt    
  0x000000010ca32de8: hlt    
  0x000000010ca32de9: hlt    
  0x000000010ca32dea: hlt    
  0x000000010ca32deb: hlt    
  0x000000010ca32dec: hlt    
  0x000000010ca32ded: hlt    
  0x000000010ca32dee: hlt    
  0x000000010ca32def: hlt    
  0x000000010ca32df0: hlt    
  0x000000010ca32df1: hlt    
  0x000000010ca32df2: hlt    
  0x000000010ca32df3: hlt    
  0x000000010ca32df4: hlt    
  0x000000010ca32df5: hlt    
  0x000000010ca32df6: hlt    
  0x000000010ca32df7: hlt    
  0x000000010ca32df8: hlt    
  0x000000010ca32df9: hlt    
  0x000000010ca32dfa: hlt    
  0x000000010ca32dfb: hlt    
  0x000000010ca32dfc: hlt    
  0x000000010ca32dfd: hlt    
  0x000000010ca32dfe: hlt    
  0x000000010ca32dff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca32e00: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca32e05: callq  0x000000010ca32e0a
  0x000000010ca32e0a: subq   $0x5,(%rsp)
  0x000000010ca32e0f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca32e14: hlt    
  0x000000010ca32e15: hlt    
  0x000000010ca32e16: hlt    
  0x000000010ca32e17: hlt    
<nmethod compile_id='73' compiler='C2' entry='0x000000010ca32da0' size='552' address='0x000000010ca32c50' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='8337' backedge_count='1' iicount='13337' stamp='0.387'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.WorkerThreadFactory from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.Executors from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executors$DefaultThreadFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ExecutorService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.AbstractExecutorService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.RejectedExecutionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor$AbortPolicy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.LinkedBlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.LinkedBlockingQueue$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.OutputFormatFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.ClassConventions from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor28 from __JVM_DefineClass__]
[Loaded java.io.ObjectStreamClass$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$MemberSignature from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TimSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$5 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigestSpi from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigest from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.GetInstance from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.Providers from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InheritableThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderConfig from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca29150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110f58f78} &apos;searchFields&apos;
<writer thread='7171'/>
[Loaded sun.security.jca.ProviderList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
 &apos;([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;&apos; in &apos;java/lang/Class&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/lang/reflect/Field;&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x000000010ca292e0: mov    %eax,-0x14000(%rsp)
  0x000000010ca292e7: push   %rbp
  0x000000010ca292e8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Class::searchFields@-1 (line 2956)

  0x000000010ca292ec: mov    %rsi,%rbp
  0x000000010ca292ef: test   %rdx,%rdx
  0x000000010ca292f2: je     0x000000010ca29524
  0x000000010ca292f8: mov    %rdx,%rsi
  0x000000010ca292fb: callq  0x000000010c9e8020  ; OopMap{rbp=Oop off=32}
                                                ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {optimized virtual_call}
  0x000000010ca29300: mov    %rbp,%r9
  0x000000010ca29303: mov    0xc(%r9),%ecx      ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ; implicit exception: dispatches to 0x000000010ca29575
  0x000000010ca29307: test   %ecx,%ecx
  0x000000010ca29309: jle    0x000000010ca293d4  ;*if_icmpge
                                                ; - java.lang.Class::searchFields@10 (line 2957)

  0x000000010ca2930f: test   %ecx,%ecx
  0x000000010ca29311: jbe    0x000000010ca29535
  0x000000010ca29317: mov    %ecx,%r10d
  0x000000010ca2931a: dec    %r10d
  0x000000010ca2931d: cmp    %ecx,%r10d
  0x000000010ca29320: jae    0x000000010ca29535  ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x000000010ca29326: mov    0x10(%r9),%r11d    ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca2932a: mov    0x20(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca2932f: shl    $0x3,%r10
  0x000000010ca29333: cmp    %rax,%r10
  0x000000010ca29336: je     0x000000010ca29501  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca2933c: mov    %ecx,%r10d
  0x000000010ca2933f: add    $0xfffffffffffffffd,%r10d
  0x000000010ca29343: cmp    $0x1,%r10d
  0x000000010ca29347: jle    0x000000010ca29549
  0x000000010ca2934d: mov    $0x1,%ebp          ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x000000010ca29352: mov    0x10(%r9,%rbp,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca29357: mov    0x20(%r12,%r8,8),%r11d  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca2935c: shl    $0x3,%r11
  0x000000010ca29360: cmp    %rax,%r11
  0x000000010ca29363: je     0x000000010ca293e2  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca29365: movslq %ebp,%r11
  0x000000010ca29368: mov    0x14(%r9,%r11,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca2936d: mov    0x20(%r12,%r8,8),%ebx  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca29372: mov    %rbx,%r8
  0x000000010ca29375: shl    $0x3,%r8
  0x000000010ca29379: cmp    %rax,%r8
  0x000000010ca2937c: je     0x000000010ca293db  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca2937e: mov    0x18(%r9,%r11,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca29383: mov    0x20(%r12,%r8,8),%ebx  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca29388: mov    %rbx,%r8
  0x000000010ca2938b: shl    $0x3,%r8
  0x000000010ca2938f: cmp    %rax,%r8
  0x000000010ca29392: je     0x000000010ca293df  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca29394: mov    0x1c(%r9,%r11,4),%r11d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca29399: mov    0x20(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca2939e: mov    %r8,%r11
  0x000000010ca293a1: shl    $0x3,%r11
  0x000000010ca293a5: cmp    %rax,%r11
  0x000000010ca293a8: je     0x000000010ca293d8  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca293aa: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.Class::searchFields@33 (line 2957)

  0x000000010ca293ad: cmp    %r10d,%ebp
  0x000000010ca293b0: jl     0x000000010ca29352  ;*if_icmpge
                                                ; - java.lang.Class::searchFields@10 (line 2957)

  0x000000010ca293b2: cmp    %ecx,%ebp
  0x000000010ca293b4: jge    0x000000010ca293d4
  0x000000010ca293b6: xchg   %ax,%ax            ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x000000010ca293b8: mov    0x10(%r9,%rbp,4),%r10d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x000000010ca293bd: mov    0x20(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x000000010ca29565
  0x000000010ca293c2: mov    %r11,%r10
  0x000000010ca293c5: shl    $0x3,%r10
  0x000000010ca293c9: cmp    %rax,%r10
  0x000000010ca293cc: je     0x000000010ca293e2  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x000000010ca293ce: inc    %ebp               ;*iinc
                                                ; - java.lang.Class::searchFields@33 (line 2957)

  0x000000010ca293d0: cmp    %ecx,%ebp
  0x000000010ca293d2: jl     0x000000010ca293b8  ;*aconst_null
                                                ; - java.lang.Class::searchFields@39 (line 2962)

  0x000000010ca293d4: xor    %eax,%eax
  0x000000010ca293d6: jmp    0x000000010ca2943c
  0x000000010ca293d8: add    $0x2,%ebp
  0x000000010ca293db: inc    %ebp
  0x000000010ca293dd: jmp    0x000000010ca293e2
  0x000000010ca293df: add    $0x2,%ebp          ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x000000010ca293e2: movabs $0x76ab00ac8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x000000010ca293ec: cmp    0x70(%r10),%r12d
  0x000000010ca293f0: je     0x000000010ca29448  ;*ifnonnull
                                                ; - java.lang.Class::getReflectionFactory@3 (line 3244)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x000000010ca293f2: mov    0x10(%r9,%rbp,4),%ebp  ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x000000010ca293f7: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x000000010ca29401: mov    0x70(%r10),%r10d   ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@0 (line 415)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca29405: test   %r10d,%r10d
  0x000000010ca29408: je     0x000000010ca294f2  ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@11 (line 422)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca2940e: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x000000010ca29418: mov    0x70(%r10),%r10d
  0x000000010ca2941c: mov    %rbp,%rdx
  0x000000010ca2941f: shl    $0x3,%rdx          ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x000000010ca29423: mov    %r10,%rsi
  0x000000010ca29426: shl    $0x3,%rsi          ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@11 (line 422)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca2942a: data32 xchg %ax,%ax
  0x000000010ca2942d: movabs $0xffffffffffffffff,%rax
  0x000000010ca29437: callq  0x000000010c9e8220  ; OopMap{off=348}
                                                ;*invokeinterface copyField
                                                ; - sun.reflect.ReflectionFactory::copyField@4 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)
                                                ;   {virtual_call}
  0x000000010ca2943c: add    $0x20,%rsp
  0x000000010ca29440: pop    %rbp
  0x000000010ca29441: test   %eax,-0x212e447(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca29447: retq   
  0x000000010ca29448: mov    0x60(%r15),%rsi
  0x000000010ca2944c: mov    %rsi,%r10
  0x000000010ca2944f: add    $0x10,%r10
  0x000000010ca29453: cmp    0x70(%r15),%r10
  0x000000010ca29457: jae    0x000000010ca29508
  0x000000010ca2945d: mov    %r10,0x60(%r15)
  0x000000010ca29461: prefetchnta 0xc0(%r10)
  0x000000010ca29469: mov    $0xf80029d2,%r10d  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x000000010ca2946f: shl    $0x3,%r10
  0x000000010ca29473: mov    0xa8(%r10),%r10
  0x000000010ca2947a: mov    %r10,(%rsi)
  0x000000010ca2947d: movl   $0xf80029d2,0x8(%rsi)  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x000000010ca29484: mov    %r12d,0xc(%rsi)
  0x000000010ca29488: mov    %r9,(%rsp)         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.Class::getReflectionFactory@10 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x000000010ca2948c: data32 xchg %ax,%ax
  0x000000010ca2948f: callq  0x000000010c9e8420  ; OopMap{[0]=Oop off=436}
                                                ;*invokestatic doPrivileged
                                                ; - java.lang.Class::getReflectionFactory@13 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {static_call}
  0x000000010ca29494: mov    %rax,%r8
  0x000000010ca29497: mov    0x8(%rax),%r10d    ; implicit exception: dispatches to 0x000000010ca29585
  0x000000010ca2949b: cmp    $0xf8002de8,%r10d  ;   {metadata(&apos;sun/reflect/ReflectionFactory&apos;)}
  0x000000010ca294a2: jne    0x000000010ca29553  ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x000000010ca294a8: mov    (%rsp),%r10
  0x000000010ca294ac: mov    0x10(%r10,%rbp,4),%ebp  ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x000000010ca294b1: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x000000010ca294bb: mov    0x70(%r10),%r10d   ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@0 (line 415)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca294bf: movabs $0x76ab00ac8,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x000000010ca294c9: shr    $0x3,%r8
  0x000000010ca294cd: movabs $0x76ab00ac8,%r9   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x000000010ca294d7: mov    %r8d,0x70(%r9)
  0x000000010ca294db: shr    $0x9,%r11
  0x000000010ca294df: movabs $0x10c3a2000,%r8
  0x000000010ca294e9: mov    %r12b,(%r8,%r11,1)  ;*putstatic reflectionFactory
                                                ; - java.lang.Class::getReflectionFactory@19 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x000000010ca294ed: jmpq   0x000000010ca29405
  0x000000010ca294f2: mov    $0x1,%esi
  0x000000010ca294f7: callq  0x000000010c9e8420  ; OopMap{rbp=NarrowOop off=540}
                                                ;*invokestatic isPublic
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@7 (line 420)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)
                                                ;   {static_call}
  0x000000010ca294fc: jmpq   0x000000010ca2940e
  0x000000010ca29501: xor    %ebp,%ebp
  0x000000010ca29503: jmpq   0x000000010ca293e2
  0x000000010ca29508: mov    %r9,(%rsp)
  0x000000010ca2950c: movabs $0x7c0014e90,%rsi  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x000000010ca29516: nop
  0x000000010ca29517: callq  0x000000010ca11960  ; OopMap{[0]=Oop off=572}
                                                ;*new  ; - java.lang.Class::getReflectionFactory@6 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x000000010ca2951c: mov    %rax,%rsi
  0x000000010ca2951f: jmpq   0x000000010ca2948c
  0x000000010ca29524: mov    $0xfffffff6,%esi
  0x000000010ca29529: xchg   %ax,%ax
  0x000000010ca2952b: callq  0x000000010c9a71a0  ; OopMap{off=592}
                                                ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {runtime_call}
  0x000000010ca29530: callq  0x000000010be85e14  ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {runtime_call}
  0x000000010ca29535: mov    $0xffffff86,%esi
  0x000000010ca2953a: mov    %rax,(%rsp)
  0x000000010ca2953e: nop
  0x000000010ca2953f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop off=612}
                                                ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)
                                                ;   {runtime_call}
  0x000000010ca29544: callq  0x000000010be85e14  ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)
                                                ;   {runtime_call}
  0x000000010ca29549: mov    $0x1,%ebp
  0x000000010ca2954e: jmpq   0x000000010ca293b2
  0x000000010ca29553: mov    $0xffffffde,%esi
  0x000000010ca29558: mov    %rax,%rbp
  0x000000010ca2955b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=640}
                                                ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x000000010ca29560: callq  0x000000010be85e14  ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x000000010ca29565: mov    $0xfffffff6,%esi
  0x000000010ca2956a: nop
  0x000000010ca2956b: callq  0x000000010c9a71a0  ; OopMap{off=656}
                                                ;*invokevirtual getName
                                                ; - java.lang.Class::searchFields@16 (line 2958)
                                                ;   {runtime_call}
  0x000000010ca29570: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.lang.Class::searchFields@16 (line 2958)
                                                ;   {runtime_call}
  0x000000010ca29575: mov    $0xfffffff6,%esi
  0x000000010ca2957a: nop
  0x000000010ca2957b: callq  0x000000010c9a71a0  ; OopMap{off=672}
                                                ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ;   {runtime_call}
  0x000000010ca29580: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ;   {runtime_call}
  0x000000010ca29585: mov    $0xfffffff4,%esi
  0x000000010ca2958a: nop
  0x000000010ca2958b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=688}
                                                ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x000000010ca29590: callq  0x000000010be85e14  ;*new
                                                ; - java.lang.Class::getReflectionFactory@6 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x000000010ca29595: jmp    0x000000010ca29599  ;*invokestatic isPublic
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@7 (line 420)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca29597: jmp    0x000000010ca295a3  ;*invokestatic doPrivileged
                                                ; - java.lang.Class::getReflectionFactory@13 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x000000010ca29599: mov    %rax,%rsi
  0x000000010ca2959c: jmp    0x000000010ca295a6  ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)

  0x000000010ca2959e: mov    %rax,%rsi
  0x000000010ca295a1: jmp    0x000000010ca295a6  ;*invokeinterface copyField
                                                ; - sun.reflect.ReflectionFactory::copyField@4 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x000000010ca295a3: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.Class::searchFields@-1 (line 2956)

  0x000000010ca295a6: add    $0x20,%rsp
  0x000000010ca295aa: pop    %rbp
  0x000000010ca295ab: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca295b0: hlt    
  0x000000010ca295b1: hlt    
  0x000000010ca295b2: hlt    
  0x000000010ca295b3: hlt    
  0x000000010ca295b4: hlt    
  0x000000010ca295b5: hlt    
  0x000000010ca295b6: hlt    
  0x000000010ca295b7: hlt    
  0x000000010ca295b8: hlt    
  0x000000010ca295b9: hlt    
  0x000000010ca295ba: hlt    
  0x000000010ca295bb: hlt    
  0x000000010ca295bc: hlt    
  0x000000010ca295bd: hlt    
  0x000000010ca295be: hlt    
  0x000000010ca295bf: hlt    
[Stub Code]
  0x000000010ca295c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca295ca: jmpq   0x000000010ca295ca  ;   {runtime_call}
  0x000000010ca295cf: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca295d9: jmpq   0x000000010ca295d9  ;   {runtime_call}
  0x000000010ca295de: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca295e8: jmpq   0x000000010ca295e8  ;   {runtime_call}
[Exception Handler]
  0x000000010ca295ed: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca295f2: callq  0x000000010ca295f7
  0x000000010ca295f7: subq   $0x5,(%rsp)
  0x000000010ca295fc: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca29601: hlt    
  0x000000010ca29602: hlt    
  0x000000010ca29603: hlt    
  0x000000010ca29604: hlt    
  0x000000010ca29605: hlt    
  0x000000010ca29606: hlt    
  0x000000010ca29607: hlt    
<nmethod compile_id='74' compiler='C2' entry='0x000000010ca292e0' size='2688' address='0x000000010ca29150' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1256' scopes_pcs_offset='1560' dependencies_offset='2488' handler_table_offset='2496' nul_chk_table_offset='2616' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='435' backedge_count='7819' iicount='435' stamp='0.395'/>
<writer thread='7171'/>
[Loaded java.security.Provider$ServiceKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$EngineDescription from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIConverter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryConverter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FDBigInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='70' compiler='C2' count='1' stamp='0.397'>
<jvms bci='3' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5034' iicount='641' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='70' compiler='C2' stamp='0.397'/>
[Loaded sun.security.jca.ProviderConfig$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar]
[Loaded sun.security.provider.Sun from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar]
[Loaded sun.security.provider.SunEntries from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.SunEntries$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureRandomSpi from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$Variant from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='61' compiler='C2' count='1' stamp='0.398'>
<jvms bci='2' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5046' iicount='743' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='61' compiler='C2' stamp='0.398'/>
[Loaded sun.security.provider.NativePRNG$RandomIO from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$Blocking from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$NonBlocking from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$Service from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$UString from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.DigestBase from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.SHA from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.GetInstance$Instance from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigest$Delegate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.ByteArrayAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor29 from __JVM_DefineClass__]
[Loaded java.io.UnsupportedEncodingException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$PrivateEntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$EntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CountDownLatch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CountDownLatch$Sync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ExecutorCompletionService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Future from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.RunnableFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.FutureTask from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.FutureTask$WaitNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ExecutorCompletionService$QueueingFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executors$RunnableAdapter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor$Worker from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.LockSupport from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.Interruptible from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='21251'/>
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ThreadData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.Random from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.github.arnaudroger.SimplifiedBenchmark$Holder from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.UnsafeIntegerFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='75' method='java/lang/String getChars (II[CI)V' bytes='62' count='5000' backedge_count='1' iicount='10000' stamp='0.416' comment='count' hot_count='10000'/>
<task_queued compile_id='76' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='5000' backedge_count='1' iicount='10000' stamp='0.417' comment='count' hot_count='10000'/>
<task_queued compile_id='77' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='5000' backedge_count='1' iicount='10000' stamp='0.417' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca34290:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4d208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x000000010ca343e0: mov    0x8(%rsi),%r10d
  0x000000010ca343e4: shl    $0x3,%r10
  0x000000010ca343e8: cmp    %r10,%rax
  0x000000010ca343eb: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca343f1: data32 xchg %ax,%ax
  0x000000010ca343f4: nopl   0x0(%rax,%rax,1)
  0x000000010ca343fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca34400: mov    %eax,-0x14000(%rsp)
  0x000000010ca34407: push   %rbp
  0x000000010ca34408: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)

  0x000000010ca3440c: test   %edx,%edx
  0x000000010ca3440e: jl     0x000000010ca34486  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010ca34410: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010ca34413: mov    0xc(%r12,%rdi,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010ca344f9
  0x000000010ca34418: cmp    %ebp,%ecx
  0x000000010ca3441a: jg     0x000000010ca344ad  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010ca34420: cmp    %ecx,%edx
  0x000000010ca34422: jg     0x000000010ca344d5  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010ca34428: mov    %ecx,%ebx
  0x000000010ca3442a: sub    %edx,%ebx          ;*isub
                                                ; - java.lang.String::getChars@57 (line 826)

  0x000000010ca3442c: mov    0xc(%r8),%r11d     ; implicit exception: dispatches to 0x000000010ca34509
  0x000000010ca34430: lea    (%r12,%rdi,8),%rsi  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010ca34434: test   %r9d,%r9d
  0x000000010ca34437: jl     0x000000010ca34476
  0x000000010ca34439: cmp    %ecx,%ebp
  0x000000010ca3443b: jb     0x000000010ca34476
  0x000000010ca3443d: mov    %r9d,%r10d
  0x000000010ca34440: add    %ebx,%r10d
  0x000000010ca34443: cmp    %r10d,%r11d
  0x000000010ca34446: jb     0x000000010ca34476
  0x000000010ca34448: test   %ebx,%ebx
  0x000000010ca3444a: jle    0x000000010ca34472
  0x000000010ca3444c: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010ca34451: lea    0x10(%r8,%r9,2),%rsi
  0x000000010ca34456: movslq %ebx,%rdx
  0x000000010ca34459: movabs $0x10c9f4580,%r10
  0x000000010ca34463: callq  *%r10
  0x000000010ca34466: add    $0x30,%rsp
  0x000000010ca3446a: pop    %rbp
  0x000000010ca3446b: test   %eax,-0x2139471(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca34471: retq   
  0x000000010ca34472: test   %ebx,%ebx
  0x000000010ca34474: jge    0x000000010ca34466
  0x000000010ca34476: mov    %r8,%rcx
  0x000000010ca34479: mov    %r9d,%r8d
  0x000000010ca3447c: mov    %ebx,%r9d
  0x000000010ca3447f: callq  0x000000010ca0f560  ; OopMap{off=164}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010ca34484: jmp    0x000000010ca34466
  0x000000010ca34486: mov    %rsi,%rbp
  0x000000010ca34489: mov    %ecx,0x4(%rsp)
  0x000000010ca3448d: mov    %r8,0x8(%rsp)
  0x000000010ca34492: mov    %r9d,0x10(%rsp)
  0x000000010ca34497: mov    %edx,0x14(%rsp)
  0x000000010ca3449b: mov    $0xffffff65,%esi
  0x000000010ca344a0: data32 xchg %ax,%ax
  0x000000010ca344a3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=200}
                                                ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ;   {runtime_call}
  0x000000010ca344a8: callq  0x000000010be85e14  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ;   {runtime_call}
  0x000000010ca344ad: mov    %rsi,(%rsp)
  0x000000010ca344b1: mov    %edx,0x8(%rsp)
  0x000000010ca344b5: mov    %r8,0x10(%rsp)
  0x000000010ca344ba: mov    %r9d,0x18(%rsp)
  0x000000010ca344bf: mov    %ecx,0x1c(%rsp)
  0x000000010ca344c3: mov    $0xffffff65,%esi
  0x000000010ca344c8: data32 xchg %ax,%ax
  0x000000010ca344cb: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [16]=Oop off=240}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ;   {runtime_call}
  0x000000010ca344d0: callq  0x000000010be85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ;   {runtime_call}
  0x000000010ca344d5: mov    %rsi,%rbp
  0x000000010ca344d8: mov    %r8,0x8(%rsp)
  0x000000010ca344dd: mov    %r9d,0x10(%rsp)
  0x000000010ca344e2: mov    %edx,0x14(%rsp)
  0x000000010ca344e6: mov    %ecx,0x18(%rsp)
  0x000000010ca344ea: mov    $0xffffff65,%esi
  0x000000010ca344ef: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=276}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)
                                                ;   {runtime_call}
  0x000000010ca344f4: callq  0x000000010be85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)
                                                ;   {runtime_call}
  0x000000010ca344f9: mov    $0xfffffff6,%esi
  0x000000010ca344fe: nop
  0x000000010ca344ff: callq  0x000000010c9a71a0  ; OopMap{off=292}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010ca34504: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010ca34509: mov    $0xfffffff6,%esi
  0x000000010ca3450e: mov    %edx,%ebp
  0x000000010ca34510: mov    %r9d,(%rsp)
  0x000000010ca34514: mov    %edi,0x4(%rsp)
  0x000000010ca34518: mov    %ebx,0x8(%rsp)
  0x000000010ca3451c: data32 xchg %ax,%ax
  0x000000010ca3451f: callq  0x000000010c9a71a0  ; OopMap{[4]=NarrowOop off=324}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010ca34524: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010ca34529: mov    %rax,%rsi
  0x000000010ca3452c: add    $0x30,%rsp
  0x000000010ca34530: pop    %rbp
  0x000000010ca34531: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca34536: hlt    
  0x000000010ca34537: hlt    
  0x000000010ca34538: hlt    
  0x000000010ca34539: hlt    
  0x000000010ca3453a: hlt    
  0x000000010ca3453b: hlt    
  0x000000010ca3453c: hlt    
  0x000000010ca3453d: hlt    
  0x000000010ca3453e: hlt    
  0x000000010ca3453f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca34540: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca34545: callq  0x000000010ca3454a
  0x000000010ca3454a: subq   $0x5,(%rsp)
  0x000000010ca3454f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca34554: hlt    
  0x000000010ca34555: hlt    
  0x000000010ca34556: hlt    
  0x000000010ca34557: hlt    
<nmethod compile_id='75' compiler='C2' entry='0x000000010ca343e0' size='1280' address='0x000000010ca34290' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='888' dependencies_offset='1224' handler_table_offset='1232' nul_chk_table_offset='1256' method='java/lang/String getChars (II[CI)V' bytes='62' count='8887' backedge_count='1' iicount='13889' stamp='0.419'/>
<writer thread='21251'/>
<task_queued compile_id='78' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='4237' backedge_count='5000' iicount='4237' stamp='0.420' comment='count' hot_count='4237'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca39210:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110fbdff0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000010ca39380: mov    0x8(%rsi),%r10d
  0x000000010ca39384: shl    $0x3,%r10
  0x000000010ca39388: cmp    %r10,%rax
  0x000000010ca3938b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca39391: data32 xchg %ax,%ax
  0x000000010ca39394: nopl   0x0(%rax,%rax,1)
  0x000000010ca3939c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca393a0: mov    %eax,-0x14000(%rsp)
  0x000000010ca393a7: push   %rbp
  0x000000010ca393a8: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010ca393ac: mov    %rsi,(%rsp)
  0x000000010ca393b0: mov    %rdx,0x8(%rsp)
  0x000000010ca393b5: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010ca39739
  0x000000010ca393b9: mov    0xc(%r12,%r11,8),%ebx  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010ca396eb
  0x000000010ca393be: mov    0x10(%rsi),%r10d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca393c2: mov    %r10d,0x14(%rsp)
  0x000000010ca393c7: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x000000010ca396fd
  0x000000010ca393cc: mov    %r8d,0x1c(%rsp)
  0x000000010ca393d1: mov    0xc(%rsi),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000010ca393d5: mov    %ebx,%edx
  0x000000010ca393d7: add    %r10d,%edx         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)

  0x000000010ca393da: mov    %edx,%r8d
  0x000000010ca393dd: sub    0x1c(%rsp),%r8d
  0x000000010ca393e2: test   %r8d,%r8d
  0x000000010ca393e5: jle    0x000000010ca3954e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca393eb: mov    0x1c(%rsp),%edi
  0x000000010ca393ef: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca393f1: mov    %edi,%r10d
  0x000000010ca393f4: sub    %edx,%r10d
  0x000000010ca393f7: add    $0x2,%r10d
  0x000000010ca393fb: test   %r10d,%r10d
  0x000000010ca393fe: jl     0x000000010ca39405  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39400: add    $0x2,%edi          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39403: jmp    0x000000010ca39407
  0x000000010ca39405: mov    %edx,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39407: test   %edi,%edi
  0x000000010ca39409: jle    0x000000010ca39419  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca3940b: mov    $0x7ffffff7,%r10d
  0x000000010ca39411: sub    %edi,%r10d
  0x000000010ca39414: test   %r10d,%r10d
  0x000000010ca39417: jge    0x000000010ca3942e  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39419: mov    %ebx,0x18(%rsp)
  0x000000010ca3941d: mov    %rsi,%rbp
  0x000000010ca39420: data32 xchg %ax,%ax
  0x000000010ca39423: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop off=168}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000010ca39428: mov    %eax,%edi
  0x000000010ca3942a: mov    0x18(%rsp),%ebx    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca3942e: cmp    $0x80000,%edi
  0x000000010ca39434: ja     0x000000010ca396a5
  0x000000010ca3943a: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca3943d: shl    %rsi
  0x000000010ca39440: mov    0x14(%rsp),%r10d
  0x000000010ca39445: lea    (%r12,%r10,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39449: add    $0x17,%rsi
  0x000000010ca3944d: mov    %rsi,%r8
  0x000000010ca39450: and    $0xfffffffffffffff8,%r8
  0x000000010ca39454: cmp    $0x80000,%edi
  0x000000010ca3945a: ja     0x000000010ca39612
  0x000000010ca39460: mov    0x60(%r15),%rbp
  0x000000010ca39464: mov    %rbp,%r10
  0x000000010ca39467: add    %r8,%r10
  0x000000010ca3946a: cmp    0x70(%r15),%r10
  0x000000010ca3946e: jae    0x000000010ca39612
  0x000000010ca39474: mov    %r10,0x60(%r15)
  0x000000010ca39478: prefetchnta 0xc0(%r10)
  0x000000010ca39480: movq   $0x1,0x0(%rbp)
  0x000000010ca39488: prefetchnta 0x100(%r10)
  0x000000010ca39490: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010ca39497: mov    %edi,0xc(%rbp)
  0x000000010ca3949a: prefetchnta 0x140(%r10)
  0x000000010ca394a2: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca394aa: mov    0x1c(%rsp),%r10d
  0x000000010ca394af: cmp    %edi,%r10d
  0x000000010ca394b2: mov    %edi,%r9d
  0x000000010ca394b5: cmovl  %r10d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca394b9: mov    %rbp,%r13
  0x000000010ca394bc: add    $0x10,%r13
  0x000000010ca394c0: shr    $0x3,%rsi
  0x000000010ca394c4: mov    %rsi,%rcx
  0x000000010ca394c7: add    $0xfffffffffffffffe,%rcx
  0x000000010ca394cb: cmp    %r9d,%r10d
  0x000000010ca394ce: jb     0x000000010ca396ad
  0x000000010ca394d4: cmp    %r9d,%edi
  0x000000010ca394d7: jb     0x000000010ca396ad
  0x000000010ca394dd: test   %r9d,%r9d
  0x000000010ca394e0: jle    0x000000010ca396d9
  0x000000010ca394e6: mov    0x14(%rsp),%r10d
  0x000000010ca394eb: lea    0x10(%r12,%r10,8),%r10
  0x000000010ca394f0: cmp    %edi,%r9d
  0x000000010ca394f3: jl     0x000000010ca395cc
  0x000000010ca394f9: add    $0xfffffffffffffff0,%r8
  0x000000010ca394fd: shr    $0x3,%r8
  0x000000010ca39501: mov    %r10,%rdi
  0x000000010ca39504: mov    %r13,%rsi
  0x000000010ca39507: mov    %r8,%rdx
  0x000000010ca3950a: movabs $0x10c9f4780,%r10
  0x000000010ca39514: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39517: mov    0x8(%rsp),%r10
  0x000000010ca3951c: mov    0xc(%r10),%r11d    ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca39520: mov    (%rsp),%r10
  0x000000010ca39524: mov    0xc(%r10),%r10d
  0x000000010ca39528: mov    %rbp,%r9
  0x000000010ca3952b: shr    $0x3,%r9
  0x000000010ca3952f: mov    %r9d,0x14(%rsp)
  0x000000010ca39534: mov    (%rsp),%r8
  0x000000010ca39538: mov    %r9d,0x10(%r8)
  0x000000010ca3953c: shr    $0x9,%r8
  0x000000010ca39540: movabs $0x10c3a2000,%r9
  0x000000010ca3954a: mov    %r12b,(%r9,%r8,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x000000010ca3954e: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; implicit exception: dispatches to 0x000000010ca3970d
  0x000000010ca39553: cmp    %ebp,%ebx
  0x000000010ca39555: jg     0x000000010ca39689  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca3955b: mov    0x14(%rsp),%r8d
  0x000000010ca39560: mov    0xc(%r12,%r8,8),%r8d  ; implicit exception: dispatches to 0x000000010ca3971d
  0x000000010ca39565: lea    (%r12,%r11,8),%r9  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca39569: mov    0x14(%rsp),%edi
  0x000000010ca3956d: lea    (%r12,%rdi,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010ca39571: test   %r10d,%r10d
  0x000000010ca39574: jl     0x000000010ca39668
  0x000000010ca3957a: cmp    %ebx,%ebp
  0x000000010ca3957c: jb     0x000000010ca39668
  0x000000010ca39582: mov    %r10d,%edi
  0x000000010ca39585: add    %ebx,%edi
  0x000000010ca39587: cmp    %edi,%r8d
  0x000000010ca3958a: jb     0x000000010ca39668
  0x000000010ca39590: test   %ebx,%ebx
  0x000000010ca39592: jle    0x000000010ca395ae
  0x000000010ca39594: lea    0x10(%rcx,%r10,2),%rsi
  0x000000010ca39599: lea    0x10(%r12,%r11,8),%rdi
  0x000000010ca3959e: movslq %ebx,%rdx
  0x000000010ca395a1: movabs $0x10c9f4580,%r10
  0x000000010ca395ab: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca395ae: mov    (%rsp),%r10
  0x000000010ca395b2: mov    0xc(%r10),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x000000010ca395b6: add    %ebx,%r11d
  0x000000010ca395b9: mov    %r11d,0xc(%r10)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010ca395bd: mov    %r10,%rax
  0x000000010ca395c0: add    $0x50,%rsp
  0x000000010ca395c4: pop    %rbp
  0x000000010ca395c5: test   %eax,-0x213e5cb(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca395cb: retq   
  0x000000010ca395cc: movslq %r9d,%rdx
  0x000000010ca395cf: mov    %rdx,%r11
  0x000000010ca395d2: shl    %r11
  0x000000010ca395d5: add    $0x10,%r11
  0x000000010ca395d9: mov    %r11,%r8
  0x000000010ca395dc: and    $0xfffffffffffffff9,%r8
  0x000000010ca395e0: mov    %rbp,%rdi
  0x000000010ca395e3: add    %r8,%rdi
  0x000000010ca395e6: shr    $0x3,%r11
  0x000000010ca395ea: sub    %r11,%rsi
  0x000000010ca395ed: mov    %rsi,%rcx
  0x000000010ca395f0: xor    %rax,%rax
  0x000000010ca395f3: shl    $0x3,%rcx
  0x000000010ca395f7: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca395fa: mov    %r10,%rdi
  0x000000010ca395fd: mov    %r13,%rsi
  0x000000010ca39600: movabs $0x10c9f44c0,%r10
  0x000000010ca3960a: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca3960d: jmpq   0x000000010ca39517
  0x000000010ca39612: mov    %r8,0x30(%rsp)
  0x000000010ca39617: mov    %rdx,0x28(%rsp)
  0x000000010ca3961c: mov    %rsi,0x20(%rsp)
  0x000000010ca39621: mov    %edi,0x18(%rsp)
  0x000000010ca39625: mov    %ebx,0x10(%rsp)
  0x000000010ca39629: mov    0x8(%rsp),%rbp
  0x000000010ca3962e: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca39638: mov    %edi,%edx
  0x000000010ca3963a: nop
  0x000000010ca3963b: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [20]=NarrowOop [40]=Oop off=704}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010ca39640: mov    %rbp,0x8(%rsp)
  0x000000010ca39645: mov    0x10(%rsp),%r9d
  0x000000010ca3964a: mov    0x18(%rsp),%edi
  0x000000010ca3964e: mov    0x20(%rsp),%rsi
  0x000000010ca39653: mov    0x28(%rsp),%rdx
  0x000000010ca39658: mov    0x30(%rsp),%r8
  0x000000010ca3965d: mov    %rax,%rbp
  0x000000010ca39660: mov    %r9d,%ebx
  0x000000010ca39663: jmpq   0x000000010ca394aa
  0x000000010ca39668: mov    %r9,%rsi
  0x000000010ca3966b: xor    %edx,%edx
  0x000000010ca3966d: mov    %r10d,%r8d
  0x000000010ca39670: mov    %ebx,%r9d
  0x000000010ca39673: mov    (%rsp),%rbp
  0x000000010ca39677: mov    %ebx,0xc(%rsp)
  0x000000010ca3967b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop off=768}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca39680: mov    0xc(%rsp),%ebx
  0x000000010ca39684: jmpq   0x000000010ca395ae  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca39689: mov    $0xffffff65,%esi
  0x000000010ca3968e: mov    %ebx,0x18(%rsp)
  0x000000010ca39692: mov    %r10d,0x1c(%rsp)
  0x000000010ca39697: mov    %ebx,0x20(%rsp)
  0x000000010ca3969b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=800}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca396a0: callq  0x000000010be85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca396a5: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca396a8: jmpq   0x000000010ca3943d
  0x000000010ca396ad: mov    %r13,%rdi
  0x000000010ca396b0: xor    %rax,%rax
  0x000000010ca396b3: shl    $0x3,%rcx
  0x000000010ca396b7: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca396ba: mov    %rdx,%rsi
  0x000000010ca396bd: xor    %edx,%edx
  0x000000010ca396bf: mov    %rbp,%rcx
  0x000000010ca396c2: xor    %r8d,%r8d
  0x000000010ca396c5: mov    %ebx,0x14(%rsp)
  0x000000010ca396c9: xchg   %ax,%ax
  0x000000010ca396cb: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=848}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010ca396d0: mov    0x14(%rsp),%ebx
  0x000000010ca396d4: jmpq   0x000000010ca39517
  0x000000010ca396d9: mov    %r13,%rdi
  0x000000010ca396dc: xor    %rax,%rax
  0x000000010ca396df: shl    $0x3,%rcx
  0x000000010ca396e3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca396e6: jmpq   0x000000010ca39517
  0x000000010ca396eb: mov    $0xfffffff6,%esi
  0x000000010ca396f0: data32 xchg %ax,%ax
  0x000000010ca396f3: callq  0x000000010c9a71a0  ; OopMap{off=888}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010ca396f8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010ca396fd: mov    $0xfffffff6,%esi
  0x000000010ca39702: nop
  0x000000010ca39703: callq  0x000000010c9a71a0  ; OopMap{off=904}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010ca39708: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3970d: mov    $0xfffffff6,%esi
  0x000000010ca39712: nop
  0x000000010ca39713: callq  0x000000010c9a71a0  ; OopMap{off=920}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca39718: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3971d: mov    $0xfffffff6,%esi
  0x000000010ca39722: mov    %r11d,%ebp
  0x000000010ca39725: mov    %r10d,(%rsp)
  0x000000010ca39729: mov    %ebx,0x4(%rsp)
  0x000000010ca3972d: xchg   %ax,%ax
  0x000000010ca3972f: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=948}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca39734: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010ca39739: mov    $0xffffff65,%esi
  0x000000010ca3973e: mov    (%rsp),%rbp
  0x000000010ca39742: nop
  0x000000010ca39743: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [8]=Oop off=968}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ;   {runtime_call}
  0x000000010ca39748: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010ca3974d: jmp    0x000000010ca39756  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010ca3974f: mov    %rax,%rsi
  0x000000010ca39752: jmp    0x000000010ca39759  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39754: jmp    0x000000010ca39756  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010ca39756: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010ca39759: add    $0x50,%rsp
  0x000000010ca3975d: pop    %rbp
  0x000000010ca3975e: jmpq   0x000000010ca0f620  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010ca39763: hlt    
  0x000000010ca39764: hlt    
  0x000000010ca39765: hlt    
  0x000000010ca39766: hlt    
  0x000000010ca39767: hlt    
  0x000000010ca39768: hlt    
  0x000000010ca39769: hlt    
  0x000000010ca3976a: hlt    
  0x000000010ca3976b: hlt    
  0x000000010ca3976c: hlt    
  0x000000010ca3976d: hlt    
  0x000000010ca3976e: hlt    
  0x000000010ca3976f: hlt    
  0x000000010ca39770: hlt    
  0x000000010ca39771: hlt    
  0x000000010ca39772: hlt    
  0x000000010ca39773: hlt    
  0x000000010ca39774: hlt    
  0x000000010ca39775: hlt    
  0x000000010ca39776: hlt    
  0x000000010ca39777: hlt    
  0x000000010ca39778: hlt    
  0x000000010ca39779: hlt    
  0x000000010ca3977a: hlt    
  0x000000010ca3977b: hlt    
  0x000000010ca3977c: hlt    
  0x000000010ca3977d: hlt    
  0x000000010ca3977e: hlt    
  0x000000010ca3977f: hlt    
[Stub Code]
  0x000000010ca39780: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca3978a: jmpq   0x000000010ca3978a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca3978f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca39794: callq  0x000000010ca39799
  0x000000010ca39799: subq   $0x5,(%rsp)
  0x000000010ca3979e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca397a3: hlt    
  0x000000010ca397a4: hlt    
  0x000000010ca397a5: hlt    
  0x000000010ca397a6: hlt    
  0x000000010ca397a7: hlt    
<nmethod compile_id='76' compiler='C2' entry='0x000000010ca39380' size='3008' address='0x000000010ca39210' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1488' scopes_pcs_offset='1992' dependencies_offset='2856' handler_table_offset='2864' nul_chk_table_offset='2960' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='6713' backedge_count='1' iicount='21711' stamp='0.428'/>
<writer thread='21251'/>
<task_queued compile_id='79' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='5000' backedge_count='1' iicount='10000' stamp='0.429' comment='count' hot_count='10000'/>
<task_queued compile_id='80' method='java/lang/Math max (II)I' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.433' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca38590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110fc1400} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000010ca38700: mov    0x8(%rsi),%r10d
  0x000000010ca38704: shl    $0x3,%r10
  0x000000010ca38708: cmp    %r10,%rax
  0x000000010ca3870b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca38711: data32 xchg %ax,%ax
  0x000000010ca38714: nopl   0x0(%rax,%rax,1)
  0x000000010ca3871c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca38720: mov    %eax,-0x14000(%rsp)
  0x000000010ca38727: push   %rbp
  0x000000010ca38728: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010ca3872c: mov    %rsi,(%rsp)
  0x000000010ca38730: mov    %rdx,0x10(%rsp)
  0x000000010ca38735: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010ca38ac9
  0x000000010ca38739: mov    0xc(%r12,%r8,8),%ebx  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010ca38a7b
  0x000000010ca3873e: mov    0x10(%rsi),%r10d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38742: mov    %r10d,0x18(%rsp)
  0x000000010ca38747: mov    0xc(%r12,%r10,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010ca38a8d
  0x000000010ca3874c: mov    %r11d,0x40(%rsp)
  0x000000010ca38751: mov    0xc(%rsi),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38755: mov    %ebx,%edx
  0x000000010ca38757: add    %r10d,%edx         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3875a: mov    %edx,%r9d
  0x000000010ca3875d: sub    %r11d,%r9d
  0x000000010ca38760: test   %r9d,%r9d
  0x000000010ca38763: jle    0x000000010ca388ca  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38769: mov    %r11d,%edi
  0x000000010ca3876c: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3876e: mov    %edi,%r11d
  0x000000010ca38771: sub    %edx,%r11d
  0x000000010ca38774: add    $0x2,%r11d
  0x000000010ca38778: test   %r11d,%r11d
  0x000000010ca3877b: jl     0x000000010ca38782  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3877d: add    $0x2,%edi          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38780: jmp    0x000000010ca38784
  0x000000010ca38782: mov    %edx,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38784: test   %edi,%edi
  0x000000010ca38786: jle    0x000000010ca38796  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38788: mov    $0x7ffffff7,%r8d
  0x000000010ca3878e: sub    %edi,%r8d
  0x000000010ca38791: test   %r8d,%r8d
  0x000000010ca38794: jge    0x000000010ca387aa  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38796: mov    %ebx,0xc(%rsp)
  0x000000010ca3879a: mov    %rsi,%rbp
  0x000000010ca3879d: xchg   %ax,%ax
  0x000000010ca3879f: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop off=164}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010ca387a4: mov    %eax,%edi
  0x000000010ca387a6: mov    0xc(%rsp),%ebx     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca387aa: cmp    $0x80000,%edi
  0x000000010ca387b0: ja     0x000000010ca38a35
  0x000000010ca387b6: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca387b9: shl    %rsi
  0x000000010ca387bc: mov    0x18(%rsp),%r10d
  0x000000010ca387c1: lea    (%r12,%r10,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca387c5: add    $0x17,%rsi
  0x000000010ca387c9: mov    %rsi,%r8
  0x000000010ca387cc: and    $0xfffffffffffffff8,%r8
  0x000000010ca387d0: cmp    $0x80000,%edi
  0x000000010ca387d6: ja     0x000000010ca3898f
  0x000000010ca387dc: mov    0x60(%r15),%rbp
  0x000000010ca387e0: mov    %rbp,%r10
  0x000000010ca387e3: add    %r8,%r10
  0x000000010ca387e6: cmp    0x70(%r15),%r10
  0x000000010ca387ea: jae    0x000000010ca3898f
  0x000000010ca387f0: mov    %r10,0x60(%r15)
  0x000000010ca387f4: prefetchnta 0xc0(%r10)
  0x000000010ca387fc: movq   $0x1,0x0(%rbp)
  0x000000010ca38804: prefetchnta 0x100(%r10)
  0x000000010ca3880c: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010ca38813: mov    %edi,0xc(%rbp)
  0x000000010ca38816: prefetchnta 0x140(%r10)
  0x000000010ca3881e: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38826: mov    0x40(%rsp),%r11d
  0x000000010ca3882b: cmp    %edi,%r11d
  0x000000010ca3882e: mov    %edi,%r9d
  0x000000010ca38831: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38835: mov    %rbp,%r13
  0x000000010ca38838: add    $0x10,%r13
  0x000000010ca3883c: shr    $0x3,%rsi
  0x000000010ca38840: mov    %rsi,%rcx
  0x000000010ca38843: add    $0xfffffffffffffffe,%rcx
  0x000000010ca38847: cmp    %r9d,%r11d
  0x000000010ca3884a: jb     0x000000010ca38a3d
  0x000000010ca38850: cmp    %r9d,%edi
  0x000000010ca38853: jb     0x000000010ca38a3d
  0x000000010ca38859: test   %r9d,%r9d
  0x000000010ca3885c: jle    0x000000010ca38a69
  0x000000010ca38862: mov    0x18(%rsp),%r10d
  0x000000010ca38867: lea    0x10(%r12,%r10,8),%r10
  0x000000010ca3886c: cmp    %edi,%r9d
  0x000000010ca3886f: jl     0x000000010ca38949
  0x000000010ca38875: add    $0xfffffffffffffff0,%r8
  0x000000010ca38879: shr    $0x3,%r8
  0x000000010ca3887d: mov    %r10,%rdi
  0x000000010ca38880: mov    %r13,%rsi
  0x000000010ca38883: mov    %r8,%rdx
  0x000000010ca38886: movabs $0x10c9f4780,%r10
  0x000000010ca38890: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38893: mov    0x10(%rsp),%r10
  0x000000010ca38898: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3889c: mov    (%rsp),%r10
  0x000000010ca388a0: mov    0xc(%r10),%r10d
  0x000000010ca388a4: mov    %rbp,%r9
  0x000000010ca388a7: shr    $0x3,%r9
  0x000000010ca388ab: mov    %r9d,0x18(%rsp)
  0x000000010ca388b0: mov    (%rsp),%r11
  0x000000010ca388b4: mov    %r9d,0x10(%r11)
  0x000000010ca388b8: shr    $0x9,%r11
  0x000000010ca388bc: movabs $0x10c3a2000,%r9
  0x000000010ca388c6: mov    %r12b,(%r9,%r11,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca388ca: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010ca38a9d
  0x000000010ca388cf: cmp    %ebp,%ebx
  0x000000010ca388d1: jg     0x000000010ca38a19  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca388d7: mov    0x18(%rsp),%r11d
  0x000000010ca388dc: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010ca38aad
  0x000000010ca388e1: lea    (%r12,%r8,8),%rdi  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca388e5: lea    (%r12,%r11,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca388e9: test   %r10d,%r10d
  0x000000010ca388ec: jl     0x000000010ca389f8
  0x000000010ca388f2: cmp    %ebx,%ebp
  0x000000010ca388f4: jb     0x000000010ca389f8
  0x000000010ca388fa: mov    %r10d,%r11d
  0x000000010ca388fd: add    %ebx,%r11d
  0x000000010ca38900: cmp    %r11d,%r9d
  0x000000010ca38903: jb     0x000000010ca389f8
  0x000000010ca38909: test   %ebx,%ebx
  0x000000010ca3890b: jle    0x000000010ca38927
  0x000000010ca3890d: lea    0x10(%rcx,%r10,2),%rsi
  0x000000010ca38912: lea    0x10(%r12,%r8,8),%rdi
  0x000000010ca38917: movslq %ebx,%rdx
  0x000000010ca3891a: movabs $0x10c9f4580,%r10
  0x000000010ca38924: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38927: mov    (%rsp),%r10
  0x000000010ca3892b: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3892f: add    %ebx,%r10d
  0x000000010ca38932: mov    (%rsp),%r11
  0x000000010ca38936: mov    %r10d,0xc(%r11)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010ca3893a: mov    %r11,%rax
  0x000000010ca3893d: add    $0x60,%rsp
  0x000000010ca38941: pop    %rbp
  0x000000010ca38942: test   %eax,-0x213d948(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca38948: retq   
  0x000000010ca38949: movslq %r9d,%rdx
  0x000000010ca3894c: mov    %rdx,%r11
  0x000000010ca3894f: shl    %r11
  0x000000010ca38952: add    $0x10,%r11
  0x000000010ca38956: mov    %r11,%r8
  0x000000010ca38959: and    $0xfffffffffffffff9,%r8
  0x000000010ca3895d: mov    %rbp,%rdi
  0x000000010ca38960: add    %r8,%rdi
  0x000000010ca38963: shr    $0x3,%r11
  0x000000010ca38967: sub    %r11,%rsi
  0x000000010ca3896a: mov    %rsi,%rcx
  0x000000010ca3896d: xor    %rax,%rax
  0x000000010ca38970: shl    $0x3,%rcx
  0x000000010ca38974: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca38977: mov    %r10,%rdi
  0x000000010ca3897a: mov    %r13,%rsi
  0x000000010ca3897d: movabs $0x10c9f44c0,%r10
  0x000000010ca38987: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca3898a: jmpq   0x000000010ca38893
  0x000000010ca3898f: mov    %r8,0x30(%rsp)
  0x000000010ca38994: mov    %rdx,0x28(%rsp)
  0x000000010ca38999: mov    %rsi,0x20(%rsp)
  0x000000010ca3899e: mov    %edi,0x1c(%rsp)
  0x000000010ca389a2: mov    0x18(%rsp),%r10d
  0x000000010ca389a7: mov    %r10d,0xc(%rsp)
  0x000000010ca389ac: mov    %ebx,0x8(%rsp)
  0x000000010ca389b0: mov    0x10(%rsp),%rbp
  0x000000010ca389b5: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca389bf: mov    %edi,%edx
  0x000000010ca389c1: xchg   %ax,%ax
  0x000000010ca389c3: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [12]=NarrowOop [40]=Oop off=712}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca389c8: mov    %rbp,0x10(%rsp)
  0x000000010ca389cd: mov    0x8(%rsp),%ecx
  0x000000010ca389d1: mov    0xc(%rsp),%r11d
  0x000000010ca389d6: mov    %r11d,0x18(%rsp)
  0x000000010ca389db: mov    0x1c(%rsp),%edi
  0x000000010ca389df: mov    0x20(%rsp),%rsi
  0x000000010ca389e4: mov    0x28(%rsp),%rdx
  0x000000010ca389e9: mov    0x30(%rsp),%r8
  0x000000010ca389ee: mov    %rax,%rbp
  0x000000010ca389f1: mov    %ecx,%ebx
  0x000000010ca389f3: jmpq   0x000000010ca38826
  0x000000010ca389f8: mov    %rdi,%rsi
  0x000000010ca389fb: xor    %edx,%edx
  0x000000010ca389fd: mov    %r10d,%r8d
  0x000000010ca38a00: mov    %ebx,%r9d
  0x000000010ca38a03: mov    (%rsp),%rbp
  0x000000010ca38a07: mov    %ebx,0xc(%rsp)
  0x000000010ca38a0b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop off=784}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a10: mov    0xc(%rsp),%ebx
  0x000000010ca38a14: jmpq   0x000000010ca38927  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38a19: mov    $0xffffff65,%esi
  0x000000010ca38a1e: mov    %ebx,0x20(%rsp)
  0x000000010ca38a22: mov    %r10d,0x24(%rsp)
  0x000000010ca38a27: mov    %ebx,0x28(%rsp)
  0x000000010ca38a2b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [16]=Oop [24]=NarrowOop off=816}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a30: callq  0x000000010be85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a35: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38a38: jmpq   0x000000010ca387b9
  0x000000010ca38a3d: mov    %r13,%rdi
  0x000000010ca38a40: xor    %rax,%rax
  0x000000010ca38a43: shl    $0x3,%rcx
  0x000000010ca38a47: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca38a4a: mov    %rdx,%rsi
  0x000000010ca38a4d: xor    %edx,%edx
  0x000000010ca38a4f: mov    %rbp,%rcx
  0x000000010ca38a52: xor    %r8d,%r8d
  0x000000010ca38a55: mov    %ebx,0x1c(%rsp)
  0x000000010ca38a59: xchg   %ax,%ax
  0x000000010ca38a5b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop off=864}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a60: mov    0x1c(%rsp),%ebx
  0x000000010ca38a64: jmpq   0x000000010ca38893
  0x000000010ca38a69: mov    %r13,%rdi
  0x000000010ca38a6c: xor    %rax,%rax
  0x000000010ca38a6f: shl    $0x3,%rcx
  0x000000010ca38a73: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38a76: jmpq   0x000000010ca38893
  0x000000010ca38a7b: mov    $0xfffffff6,%esi
  0x000000010ca38a80: data32 xchg %ax,%ax
  0x000000010ca38a83: callq  0x000000010c9a71a0  ; OopMap{off=904}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a88: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a8d: mov    $0xfffffff6,%esi
  0x000000010ca38a92: nop
  0x000000010ca38a93: callq  0x000000010c9a71a0  ; OopMap{off=920}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38a98: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca38a9d: mov    $0xfffffff6,%esi
  0x000000010ca38aa2: nop
  0x000000010ca38aa3: callq  0x000000010c9a71a0  ; OopMap{off=936}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38aa8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca38aad: mov    $0xfffffff6,%esi
  0x000000010ca38ab2: mov    %r8d,%ebp
  0x000000010ca38ab5: mov    %r10d,(%rsp)
  0x000000010ca38ab9: mov    %ebx,0x4(%rsp)
  0x000000010ca38abd: xchg   %ax,%ax
  0x000000010ca38abf: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=964}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38ac4: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38ac9: mov    $0xffffff65,%esi
  0x000000010ca38ace: mov    (%rsp),%rbp
  0x000000010ca38ad2: nop
  0x000000010ca38ad3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop off=984}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38ad8: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38add: jmp    0x000000010ca38ae6  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38adf: mov    %rax,%rsi
  0x000000010ca38ae2: jmp    0x000000010ca38ae9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38ae4: jmp    0x000000010ca38ae6  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010ca38ae6: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010ca38ae9: add    $0x60,%rsp
  0x000000010ca38aed: pop    %rbp
  0x000000010ca38aee: jmpq   0x000000010ca0f620  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010ca38af3: hlt    
  0x000000010ca38af4: hlt    
  0x000000010ca38af5: hlt    
  0x000000010ca38af6: hlt    
  0x000000010ca38af7: hlt    
  0x000000010ca38af8: hlt    
  0x000000010ca38af9: hlt    
  0x000000010ca38afa: hlt    
  0x000000010ca38afb: hlt    
  0x000000010ca38afc: hlt    
  0x000000010ca38afd: hlt    
  0x000000010ca38afe: hlt    
  0x000000010ca38aff: hlt    
[Stub Code]
  0x000000010ca38b00: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca38b0a: jmpq   0x000000010ca38b0a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca38b0f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca38b14: callq  0x000000010ca38b19
  0x000000010ca38b19: subq   $0x5,(%rsp)
  0x000000010ca38b1e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca38b23: hlt    
  0x000000010ca38b24: hlt    
  0x000000010ca38b25: hlt    
  0x000000010ca38b26: hlt    
  0x000000010ca38b27: hlt    
<nmethod compile_id='77' compiler='C2' entry='0x000000010ca38700' size='3064' address='0x000000010ca38590' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1496' scopes_pcs_offset='2048' dependencies_offset='2912' handler_table_offset='2920' nul_chk_table_offset='3016' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='5786' backedge_count='1' iicount='25783' stamp='0.439'/>
<writer thread='21251'/>
<task_queued compile_id='81' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='5000' backedge_count='1' iicount='10000' stamp='0.439' comment='count' hot_count='10000'/>
<task_queued compile_id='82' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='5000' backedge_count='1' iicount='10000' stamp='0.439' comment='count' hot_count='10000'/>
<task_queued compile_id='83' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='5000' backedge_count='1' iicount='10000' stamp='0.440' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca42250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110ff1620} &apos;formatUnsignedLong&apos; &apos;(JI[CII)I&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;[C&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x000000010ca423a0: mov    %eax,-0x14000(%rsp)
  0x000000010ca423a7: push   %rbp
  0x000000010ca423a8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::formatUnsignedLong@-1 (line 372)

  0x000000010ca423ac: mov    %rcx,%r11
  0x000000010ca423af: vmovd  %edx,%xmm0
  0x000000010ca423b3: mov    %r8d,%edx
  0x000000010ca423b6: add    %r9d,%edx          ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x000000010ca423b9: mov    %esi,%ebx
  0x000000010ca423bb: mov    %edx,%edi
  0x000000010ca423bd: dec    %edi               ;*iadd
                                                ; - java.lang.Long::formatUnsignedLong@23 (line 376)

  0x000000010ca423bf: mov    %r9d,%eax
  0x000000010ca423c2: dec    %eax               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x000000010ca423c4: mov    $0x1,%r10d
  0x000000010ca423ca: vmovd  %xmm0,%ecx
  0x000000010ca423ce: shl    %cl,%r10d
  0x000000010ca423d1: dec    %r10d              ;*isub
                                                ; - java.lang.Long::formatUnsignedLong@12 (line 374)

  0x000000010ca423d4: and    %r10d,%ebx         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)

  0x000000010ca423d7: cmp    $0x24,%ebx
  0x000000010ca423da: jae    0x000000010ca42505
  0x000000010ca423e0: movabs $0x76ab2e5d8,%r13  ;   {oop([C)}
  0x000000010ca423ea: movzwl 0x10(%r13,%rbx,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)

  0x000000010ca423f0: mov    0xc(%r11),%ebx     ; implicit exception: dispatches to 0x000000010ca42565
  0x000000010ca423f4: cmp    %ebx,%edi
  0x000000010ca423f6: jae    0x000000010ca42535
  0x000000010ca423fc: mov    %bp,0xe(%r11,%rdx,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)

  0x000000010ca42402: shr    %cl,%rsi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)

  0x000000010ca42405: test   %rsi,%rsi
  0x000000010ca42408: je     0x000000010ca42453  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)

  0x000000010ca4240a: test   %eax,%eax
  0x000000010ca4240c: jle    0x000000010ca42473  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x000000010ca4240e: add    $0xfffffffffffffffe,%r9d
  0x000000010ca42412: jmp    0x000000010ca4241f
  0x000000010ca42414: mov    %r9d,%edi
  0x000000010ca42417: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x000000010ca42419: mov    %r9d,%eax
  0x000000010ca4241c: mov    %edi,%r9d          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)

  0x000000010ca4241f: add    %r8d,%eax          ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x000000010ca42422: mov    %esi,%ecx
  0x000000010ca42424: and    %r10d,%ecx         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)

  0x000000010ca42427: mov    %eax,%edi
  0x000000010ca42429: dec    %edi               ;*iadd
                                                ; - java.lang.Long::formatUnsignedLong@23 (line 376)

  0x000000010ca4242b: cmp    $0x24,%ecx
  0x000000010ca4242e: jae    0x000000010ca4249d
  0x000000010ca42430: movzwl 0x10(%r13,%rcx,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)

  0x000000010ca42436: cmp    %ebx,%edi
  0x000000010ca42438: jae    0x000000010ca424d1
  0x000000010ca4243e: mov    %bp,0xe(%r11,%rax,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)

  0x000000010ca42444: vmovd  %xmm0,%ecx
  0x000000010ca42448: shr    %cl,%rsi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)

  0x000000010ca4244b: test   %rsi,%rsi
  0x000000010ca4244e: jne    0x000000010ca4245f  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)

  0x000000010ca42450: mov    %r9d,%eax          ;*synchronization entry
                                                ; - java.lang.Long::formatUnsignedLong@-1 (line 372)

  0x000000010ca42453: add    $0x40,%rsp
  0x000000010ca42457: pop    %rbp
  0x000000010ca42458: test   %eax,-0x214745e(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca4245e: retq                      ; OopMap{r11=Oop r13=Oop off=191}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x000000010ca4245f: test   %eax,-0x2147465(%rip)        # 0x000000010a8fb000
                                                ;   {poll}
  0x000000010ca42465: test   %r9d,%r9d
  0x000000010ca42468: jg     0x000000010ca42414  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x000000010ca4246a: mov    %r9d,(%rsp)
  0x000000010ca4246e: mov    %rsi,%rbp
  0x000000010ca42471: jmp    0x000000010ca42479
  0x000000010ca42473: mov    %eax,(%rsp)
  0x000000010ca42476: mov    %rsi,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)

  0x000000010ca42479: mov    $0xffffff65,%esi
  0x000000010ca4247e: mov    %r8d,0x4(%rsp)
  0x000000010ca42483: mov    %r10d,0x8(%rsp)
  0x000000010ca42488: vmovss %xmm0,0xc(%rsp)
  0x000000010ca4248e: mov    %r11,0x10(%rsp)
  0x000000010ca42493: callq  0x000000010c9a71a0  ; OopMap{[16]=Oop off=248}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ;   {runtime_call}
  0x000000010ca42498: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4249d: mov    %rsi,%rbp
  0x000000010ca424a0: mov    %r8d,(%rsp)
  0x000000010ca424a4: mov    %r9d,0x4(%rsp)
  0x000000010ca424a9: mov    %r10d,0x8(%rsp)
  0x000000010ca424ae: mov    %edi,0xc(%rsp)
  0x000000010ca424b2: mov    %ecx,0x10(%rsp)
  0x000000010ca424b6: vmovss %xmm0,0x14(%rsp)
  0x000000010ca424bc: mov    %r11,0x20(%rsp)
  0x000000010ca424c1: mov    $0xffffffe4,%esi
  0x000000010ca424c6: nop
  0x000000010ca424c7: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop off=300}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x000000010ca424cc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca424d1: mov    %rsi,(%rsp)
  0x000000010ca424d5: mov    %r8d,0x8(%rsp)
  0x000000010ca424da: mov    %r9d,0xc(%rsp)
  0x000000010ca424df: mov    %r10d,0x10(%rsp)
  0x000000010ca424e4: mov    %edi,0x14(%rsp)
  0x000000010ca424e8: vmovss %xmm0,0x18(%rsp)
  0x000000010ca424ee: mov    %r11,0x28(%rsp)
  0x000000010ca424f3: mov    $0xffffffe4,%esi
  0x000000010ca424f8: data32 xchg %ax,%ax
  0x000000010ca424fb: callq  0x000000010c9a71a0  ; OopMap{[40]=Oop off=352}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42500: callq  0x000000010be85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42505: mov    %rsi,%rbp
  0x000000010ca42508: mov    %r8d,(%rsp)
  0x000000010ca4250c: mov    %eax,0x4(%rsp)
  0x000000010ca42510: mov    %r10d,0x8(%rsp)
  0x000000010ca42515: mov    %ecx,0xc(%rsp)
  0x000000010ca42519: mov    %r11,0x18(%rsp)
  0x000000010ca4251e: mov    %edi,0x20(%rsp)
  0x000000010ca42522: mov    %ebx,0x24(%rsp)
  0x000000010ca42526: mov    $0xffffffe4,%esi
  0x000000010ca4252b: callq  0x000000010c9a71a0  ; OopMap{[24]=Oop off=400}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42530: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42535: mov    %rsi,(%rsp)
  0x000000010ca42539: mov    %r8d,0x8(%rsp)
  0x000000010ca4253e: mov    %eax,0xc(%rsp)
  0x000000010ca42542: mov    %r10d,0x10(%rsp)
  0x000000010ca42547: mov    %ecx,0x14(%rsp)
  0x000000010ca4254b: mov    %r11,0x20(%rsp)
  0x000000010ca42550: mov    %edi,0x28(%rsp)
  0x000000010ca42554: mov    $0xffffffe4,%esi
  0x000000010ca42559: xchg   %ax,%ax
  0x000000010ca4255b: callq  0x000000010c9a71a0  ; OopMap{[32]=Oop off=448}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42560: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca42565: mov    $0xfffffff6,%esi
  0x000000010ca4256a: mov    %edi,(%rsp)
  0x000000010ca4256d: xchg   %ax,%ax
  0x000000010ca4256f: callq  0x000000010c9a71a0  ; OopMap{off=468}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42574: callq  0x000000010be85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x000000010ca42579: hlt    
  0x000000010ca4257a: hlt    
  0x000000010ca4257b: hlt    
  0x000000010ca4257c: hlt    
  0x000000010ca4257d: hlt    
  0x000000010ca4257e: hlt    
  0x000000010ca4257f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca42580: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca42585: callq  0x000000010ca4258a
  0x000000010ca4258a: subq   $0x5,(%rsp)
  0x000000010ca4258f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca42594: hlt    
  0x000000010ca42595: hlt    
  0x000000010ca42596: hlt    
  0x000000010ca42597: hlt    
<nmethod compile_id='78' compiler='C2' entry='0x000000010ca423a0' size='1760' address='0x000000010ca42250' relocation_offset='296' insts_offset='336' stub_offset='816' scopes_data_offset='856' scopes_pcs_offset='1176' dependencies_offset='1736' nul_chk_table_offset='1744' oops_offset='840' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='5000' backedge_count='5000' iicount='11597' stamp='0.443'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca42950:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011131d4d8} &apos;matchFields&apos; &apos;([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;&apos; in &apos;java/io/ObjectStreamClass&apos;
  0x000000010ca42d40: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca42d45: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca42d50: mov    %eax,-0x14000(%rsp)
  0x000000010ca42d57: push   %rbp
  0x000000010ca42d58: sub    $0xd0,%rsp         ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x000000010ca42d5f: mov    0x8(%rsi),%r11d
  0x000000010ca42d63: mov    %r11d,0x1c(%rsp)
  0x000000010ca42d68: mov    0x20(%rsi),%r10d
  0x000000010ca42d6c: mov    %r10d,0x28(%rsp)
  0x000000010ca42d71: mov    0x40(%rsi),%rbx
  0x000000010ca42d75: mov    0x38(%rsi),%rbp
  0x000000010ca42d79: mov    0x10(%rsi),%r10
  0x000000010ca42d7d: mov    %r10,(%rsp)
  0x000000010ca42d81: mov    0x30(%rsi),%r14
  0x000000010ca42d85: mov    0x28(%rsi),%r10
  0x000000010ca42d89: mov    %r10,0x8(%rsp)
  0x000000010ca42d8e: mov    0x18(%rsi),%r10    ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42d92: mov    %r10,0x10(%rsp)
  0x000000010ca42d97: mov    %rsi,%rdi
  0x000000010ca42d9a: movabs $0x10bee473e,%r10
  0x000000010ca42da4: callq  *%r10              ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca42da7: test   %rbx,%rbx
  0x000000010ca42daa: je     0x000000010ca45197  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42db0: mov    0x8(%rbx),%r10d
  0x000000010ca42db4: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010ca42dbb: jne    0x000000010ca45e9b  ;*putfield unshared
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@16 (line 136)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42dc1: mov    %rbx,%rdx          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42dc4: mov    %rbp,%r13
  0x000000010ca42dc7: test   %rbp,%rbp
  0x000000010ca42dca: je     0x000000010ca4519e  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42dd0: mov    0x8(%rbp),%r11d
  0x000000010ca42dd4: cmp    $0xf80125df,%r11d  ;   {metadata(&apos;java/io/ObjectStreamClass&apos;)}
  0x000000010ca42ddb: jne    0x000000010ca45ee1  ;*putfield unshared
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@16 (line 136)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42de1: mov    %rbp,%rdi          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42de4: test   %r14,%r14
  0x000000010ca42de7: je     0x000000010ca451a5  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42ded: mov    0x8(%r14),%r10d
  0x000000010ca42df1: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010ca42df8: jne    0x000000010ca45eed  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42dfe: mov    %r14,%r11          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42e01: mov    0x8(%rsp),%r9
  0x000000010ca42e06: test   %r9,%r9
  0x000000010ca42e09: je     0x000000010ca451ad  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e0f: mov    0x8(%r9),%r10d
  0x000000010ca42e13: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010ca42e1a: jne    0x000000010ca45ef9  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e20: mov    %r9,%rcx           ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@46 (line 2292)

  0x000000010ca42e23: mov    0x10(%rsp),%r10
  0x000000010ca42e28: test   %r10,%r10
  0x000000010ca42e2b: je     0x000000010ca451b4  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e31: mov    0x8(%r10),%r8d
  0x000000010ca42e35: cmp    $0xf80025ef,%r8d   ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca42e3c: jne    0x000000010ca45ea8  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e42: mov    %r10,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42e45: mov    (%rsp),%rsi
  0x000000010ca42e49: test   %rsi,%rsi
  0x000000010ca42e4c: je     0x000000010ca451bc  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e52: mov    %r8,%rax
  0x000000010ca42e55: mov    %r11,%r8
  0x000000010ca42e58: mov    0x8(%rsi),%r11d
  0x000000010ca42e5c: cmp    $0xf80025ef,%r11d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca42e63: jne    0x000000010ca45ea8  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42e69: mov    %rsi,%rbx
  0x000000010ca42e6c: mov    %r8,%r11
  0x000000010ca42e6f: mov    %rax,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca42e72: mov    0xc(%r11),%r9d     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca461f1
  0x000000010ca42e76: mov    %r9d,0x10(%rsp)
  0x000000010ca42e7b: mov    %r8,(%rsp)
  0x000000010ca42e7f: mov    %rcx,0x40(%rsp)
  0x000000010ca42e84: mov    %r11,0x38(%rsp)
  0x000000010ca42e89: mov    %rdi,0x8(%rsp)
  0x000000010ca42e8e: mov    %rdx,0x20(%rsp)
  0x000000010ca42e93: mov    %rbx,0x30(%rsp)
  0x000000010ca42e98: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca42e9e: shl    $0x3,%r10
  0x000000010ca42ea2: mov    %r10,0x48(%rsp)
  0x000000010ca42ea7: mov    $0xf8001b4b,%r10d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca42ead: shl    $0x3,%r10
  0x000000010ca42eb1: mov    %r10,0x50(%rsp)
  0x000000010ca42eb6: mov    $0xf80025ef,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca42ebc: shl    $0x3,%r10
  0x000000010ca42ec0: mov    %r10,0x58(%rsp)
  0x000000010ca42ec5: xor    %r10d,%r10d
  0x000000010ca42ec8: mov    %r10,0xb8(%rsp)
  0x000000010ca42ed0: jmpq   0x000000010ca433ce
  0x000000010ca42ed5: mov    0x14(%r12,%rbp,8),%ebp
  0x000000010ca42eda: mov    0x68(%rsp),%r10
  0x000000010ca42edf: mov    %r10,0x98(%rsp)
  0x000000010ca42ee7: jmp    0x000000010ca42ef4
  0x000000010ca42ee9: mov    0x14(%rcx),%ebp    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42eec: mov    %rcx,0x98(%rsp)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42ef4: mov    0x60(%r15),%rax    ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42ef8: mov    %rax,%r10
  0x000000010ca42efb: add    $0x18,%r10
  0x000000010ca42eff: cmp    0x70(%r15),%r10
  0x000000010ca42f03: jae    0x000000010ca452e3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f09: mov    %r10,0x60(%r15)
  0x000000010ca42f0d: prefetchnta 0xc0(%r10)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f15: mov    0x50(%rsp),%r10
  0x000000010ca42f1a: mov    0xa8(%r10),%r10    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f21: mov    %r10,(%rax)        ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f24: movl   $0xf8001b4b,0x8(%rax)  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca42f2b: mov    %r12d,0xc(%rax)
  0x000000010ca42f2f: mov    %r12,0x10(%rax)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca42f33: mov    %rax,0x68(%rsp)
  0x000000010ca42f38: mov    0x60(%r15),%rax
  0x000000010ca42f3c: mov    %rax,%r10
  0x000000010ca42f3f: add    $0x30,%r10
  0x000000010ca42f43: cmp    0x70(%r15),%r10
  0x000000010ca42f47: jae    0x000000010ca452f9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f4d: mov    %r10,0x60(%r15)
  0x000000010ca42f51: prefetchnta 0xc0(%r10)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f59: movq   $0x1,(%rax)
  0x000000010ca42f60: prefetchnta 0x100(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f68: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010ca42f6f: prefetchnta 0x140(%r10)
  0x000000010ca42f77: movl   $0x10,0xc(%rax)
  0x000000010ca42f7e: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f86: mov    %r12,0x18(%rax)
  0x000000010ca42f8a: mov    %r12,0x20(%rax)
  0x000000010ca42f8e: mov    %r12,0x28(%rax)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f92: movq   $0x4c,0x10(%rax)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42f9a: mov    0x68(%rsp),%r10
  0x000000010ca42f9f: movl   $0x1,0xc(%r10)
  0x000000010ca42fa7: mov    %rax,%r10
  0x000000010ca42faa: shr    $0x3,%r10
  0x000000010ca42fae: mov    0x68(%rsp),%r11
  0x000000010ca42fb3: mov    %r10d,0x10(%r11)
  0x000000010ca42fb7: mov    %r11,%r10
  0x000000010ca42fba: shr    $0x9,%r10
  0x000000010ca42fbe: movabs $0x10c3a2000,%r11
  0x000000010ca42fc8: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42fcc: test   %ebp,%ebp
  0x000000010ca42fce: je     0x000000010ca44eb0  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42fd4: lea    (%r12,%rbp,8),%rsi  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca42fd8: mov    $0x2e,%edx
  0x000000010ca42fdd: mov    $0x2f,%ecx
  0x000000010ca42fe2: mov    0x30(%rsp),%r10
  0x000000010ca42fe7: mov    %r10,0x18(%rsp)
  0x000000010ca42fec: mov    0x70(%rsp),%rbp
  0x000000010ca42ff1: xchg   %ax,%ax
  0x000000010ca42ff3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=696}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca42ff8: mov    0x68(%rsp),%rsi
  0x000000010ca42ffd: mov    %rax,%rdx
  0x000000010ca43000: data32 xchg %ax,%ax
  0x000000010ca43003: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=712}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca43008: mov    0x68(%rsp),%r10
  0x000000010ca4300d: mov    0x10(%r10),%r11d   ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43011: mov    %r11d,0x14(%rsp)
  0x000000010ca43016: mov    0xc(%r12,%r11,8),%r10d  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca461d1
  0x000000010ca4301b: mov    %r10d,0x18(%rsp)
  0x000000010ca43020: mov    0x68(%rsp),%r10
  0x000000010ca43025: mov    0xc(%r10),%r11d    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43029: mov    %r11d,0x60(%rsp)
  0x000000010ca4302e: sub    0x18(%rsp),%r11d
  0x000000010ca43033: mov    0x14(%rsp),%r8d
  0x000000010ca43038: mov    %r8,%rbp
  0x000000010ca4303b: shl    $0x3,%rbp
  0x000000010ca4303f: inc    %r11d
  0x000000010ca43042: mov    0x60(%rsp),%edx
  0x000000010ca43046: inc    %edx               ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca43048: test   %r11d,%r11d
  0x000000010ca4304b: jle    0x000000010ca43070  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4304d: mov    0x18(%rsp),%r11d
  0x000000010ca43052: shl    %r11d              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43055: mov    %r11d,%r10d
  0x000000010ca43058: sub    0x60(%rsp),%r10d
  0x000000010ca4305d: inc    %r10d
  0x000000010ca43060: test   %r10d,%r10d
  0x000000010ca43063: jl     0x000000010ca43081  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43065: add    $0x2,%r11d
  0x000000010ca43069: mov    %r11d,0x1c(%rsp)
  0x000000010ca4306e: jmp    0x000000010ca43085
  0x000000010ca43070: mov    %edx,0x78(%rsp)
  0x000000010ca43074: mov    %rbp,0x98(%rsp)
  0x000000010ca4307c: jmpq   0x000000010ca43240
  0x000000010ca43081: mov    %edx,0x1c(%rsp)    ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43085: mov    0x1c(%rsp),%r11d
  0x000000010ca4308a: test   %r11d,%r11d
  0x000000010ca4308d: jle    0x000000010ca4309f
  0x000000010ca4308f: mov    $0x7ffffff7,%r10d
  0x000000010ca43095: sub    0x1c(%rsp),%r10d
  0x000000010ca4309a: test   %r10d,%r10d
  0x000000010ca4309d: jge    0x000000010ca430b0  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca4309f: mov    0x68(%rsp),%rsi
  0x000000010ca430a4: data32 xchg %ax,%ax
  0x000000010ca430a7: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=876}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca430ac: mov    %eax,0x1c(%rsp)    ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430b0: mov    0x1c(%rsp),%r10d
  0x000000010ca430b5: cmp    $0x80000,%r10d
  0x000000010ca430bc: ja     0x000000010ca45d61  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430c2: movslq 0x1c(%rsp),%r10    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430c7: mov    0x18(%rsp),%r8d
  0x000000010ca430cc: cmp    0x1c(%rsp),%r8d
  0x000000010ca430d1: mov    0x1c(%rsp),%r11d
  0x000000010ca430d6: cmovl  %r8d,%r11d         ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430da: mov    %r11d,0x60(%rsp)
  0x000000010ca430df: shl    %r10
  0x000000010ca430e2: mov    0x14(%rsp),%r8d
  0x000000010ca430e7: lea    (%r12,%r8,8),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430eb: mov    %r11,0x78(%rsp)
  0x000000010ca430f0: add    $0x17,%r10         ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430f4: mov    %r10,%r11
  0x000000010ca430f7: shr    $0x3,%r11          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca430fb: mov    %r11,0x80(%rsp)
  0x000000010ca43103: and    $0xfffffffffffffff8,%r10
  0x000000010ca43107: mov    %r10,0x88(%rsp)
  0x000000010ca4310f: mov    %r11,%r10
  0x000000010ca43112: add    $0xfffffffffffffffe,%r10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43116: mov    %r10,0x90(%rsp)
  0x000000010ca4311e: mov    0x1c(%rsp),%r10d
  0x000000010ca43123: cmp    $0x80000,%r10d
  0x000000010ca4312a: ja     0x000000010ca4542d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43130: mov    0x60(%r15),%r11    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43134: mov    %r11,%r10
  0x000000010ca43137: mov    0x88(%rsp),%r8
  0x000000010ca4313f: add    %r8,%r10
  0x000000010ca43142: cmp    0x70(%r15),%r10
  0x000000010ca43146: jae    0x000000010ca4542d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4314c: mov    %r10,0x60(%r15)
  0x000000010ca43150: prefetchnta 0xc0(%r10)
  0x000000010ca43158: movq   $0x1,(%r11)
  0x000000010ca4315f: prefetchnta 0x100(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43167: movl   $0xf8000041,0x8(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca4316f: mov    0x1c(%rsp),%ebp
  0x000000010ca43173: mov    %ebp,0xc(%r11)
  0x000000010ca43177: prefetchnta 0x140(%r10)
  0x000000010ca4317f: prefetchnta 0x180(%r10)   ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x000000010ca43187: mov    %r11,0x98(%rsp)
  0x000000010ca4318f: mov    %r11,%r10
  0x000000010ca43192: add    $0x10,%r10         ;*isub
                                                ; - java.lang.String::&lt;init&gt;@54 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43196: mov    0x18(%rsp),%r11d
  0x000000010ca4319b: cmp    0x60(%rsp),%r11d
  0x000000010ca431a0: jb     0x000000010ca45d6b
  0x000000010ca431a6: mov    0x1c(%rsp),%ebp
  0x000000010ca431aa: cmp    0x60(%rsp),%ebp
  0x000000010ca431ae: jb     0x000000010ca45d6b
  0x000000010ca431b4: mov    0x60(%rsp),%ebp
  0x000000010ca431b8: test   %ebp,%ebp
  0x000000010ca431ba: jle    0x000000010ca45da9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca431c0: mov    0x14(%rsp),%r8d
  0x000000010ca431c5: lea    0x10(%r12,%r8,8),%r8  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca431ca: mov    %ebp,%r11d
  0x000000010ca431cd: cmp    0x1c(%rsp),%r11d
  0x000000010ca431d2: jl     0x000000010ca45069
  0x000000010ca431d8: mov    0x88(%rsp),%rdx
  0x000000010ca431e0: add    $0xfffffffffffffff0,%rdx
  0x000000010ca431e4: shr    $0x3,%rdx          ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca431e8: mov    %r8,%rdi
  0x000000010ca431eb: mov    %r10,%rsi
  0x000000010ca431ee: movabs $0x10c9f4780,%r10
  0x000000010ca431f8: callq  *%r10              ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca431fb: mov    0x68(%rsp),%r10
  0x000000010ca43200: mov    0xc(%r10),%r11d    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43204: mov    %r11d,0x60(%rsp)
  0x000000010ca43209: mov    0x98(%rsp),%r10
  0x000000010ca43211: mov    %r10,%r11
  0x000000010ca43214: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43218: mov    0x68(%rsp),%r10
  0x000000010ca4321d: mov    %r11d,0x10(%r10)   ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43221: mov    0x60(%rsp),%r11d
  0x000000010ca43226: inc    %r11d              ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43229: mov    %r11d,0x78(%rsp)
  0x000000010ca4322e: shr    $0x9,%r10
  0x000000010ca43232: movabs $0x10c3a2000,%r11
  0x000000010ca4323c: mov    %r12b,(%r11,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca43240: mov    0x68(%rsp),%r10
  0x000000010ca43245: mov    0x78(%rsp),%r11d
  0x000000010ca4324a: mov    %r11d,0xc(%r10)    ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca4324e: mov    0x98(%rsp),%r10
  0x000000010ca43256: mov    0xc(%r10),%ebp     ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca461e1
  0x000000010ca4325a: mov    0x60(%rsp),%r11d
  0x000000010ca4325f: cmp    %ebp,%r11d
  0x000000010ca43262: jae    0x000000010ca458bd  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)

  0x000000010ca43268: mov    $0x3b,%r9d
  0x000000010ca4326e: mov    %r9w,0x10(%r10,%r11,2)
  0x000000010ca43274: mov    0x60(%r15),%rax
  0x000000010ca43278: mov    %rax,%r10
  0x000000010ca4327b: add    $0x18,%r10
  0x000000010ca4327f: cmp    0x70(%r15),%r10
  0x000000010ca43283: jae    0x000000010ca45315  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43289: mov    %r10,0x60(%r15)
  0x000000010ca4328d: prefetchnta 0xc0(%r10)
  0x000000010ca43295: mov    0x48(%rsp),%r10
  0x000000010ca4329a: mov    0xa8(%r10),%r10
  0x000000010ca432a1: mov    %r10,(%rax)
  0x000000010ca432a4: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca432ab: mov    %r12d,0xc(%rax)
  0x000000010ca432af: mov    %r12,0x10(%rax)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca432b3: mov    %rax,0x68(%rsp)
  0x000000010ca432b8: mov    0x78(%rsp),%r10d
  0x000000010ca432bd: test   %r10d,%r10d
  0x000000010ca432c0: jg     0x000000010ca43309  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca432c2: test   %r10d,%r10d
  0x000000010ca432c5: jl     0x000000010ca45c39  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca432cb: movl   $0xed561523,0xc(%rax)  ;   {oop([C)}
  0x000000010ca432d2: mov    %rax,%r10
  0x000000010ca432d5: shr    $0x9,%r10
  0x000000010ca432d9: movabs $0x10c3a2000,%r11
  0x000000010ca432e3: mov    %r12b,(%r11,%r10,1)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca432e7: mov    0x70(%rsp),%rsi
  0x000000010ca432ec: mov    0x68(%rsp),%rdx
  0x000000010ca432f1: mov    0x30(%rsp),%r10
  0x000000010ca432f6: mov    %r10,0x18(%rsp)
  0x000000010ca432fb: mov    %rsi,%rbp
  0x000000010ca432fe: nop
  0x000000010ca432ff: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=1476}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca43304: jmpq   0x000000010ca43a68
  0x000000010ca43309: sub    0x60(%rsp),%ebp
  0x000000010ca4330d: dec    %ebp
  0x000000010ca4330f: test   %ebp,%ebp
  0x000000010ca43311: jl     0x000000010ca45be9  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca43317: mov    0x98(%rsp),%rsi
  0x000000010ca4331f: xor    %edx,%edx
  0x000000010ca43321: mov    0x78(%rsp),%ecx
  0x000000010ca43325: mov    0x30(%rsp),%r10
  0x000000010ca4332a: mov    %r10,0x18(%rsp)
  0x000000010ca4332f: mov    %rax,%rbp
  0x000000010ca43332: nop
  0x000000010ca43333: callq  0x000000010c9e8420  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=1528}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {static_call}
  0x000000010ca43338: mov    %rbp,%r10
  0x000000010ca4333b: mov    %rax,%r11
  0x000000010ca4333e: shr    $0x3,%r11
  0x000000010ca43342: mov    %r11d,0xc(%rbp)
  0x000000010ca43346: shr    $0x9,%r10
  0x000000010ca4334a: movabs $0x10c3a2000,%r11
  0x000000010ca43354: mov    %r12b,(%r11,%r10,1)  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43358: jmp    0x000000010ca432e7
  0x000000010ca4335a: test   %r10d,%r10d
  0x000000010ca4335d: jl     0x000000010ca456bd
  0x000000010ca43363: test   %r8d,%r8d
  0x000000010ca43366: je     0x000000010ca456ad  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca4336c: movl   $0xed561523,0xc(%rax)  ;   {oop([C)}
  0x000000010ca43373: mov    %rax,%r10
  0x000000010ca43376: shr    $0x9,%r10
  0x000000010ca4337a: movabs $0x10c3a2000,%r11
  0x000000010ca43384: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43388: mov    0x68(%rsp),%rsi
  0x000000010ca4338d: xchg   %ax,%ax
  0x000000010ca4338f: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop off=1620}
                                                ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca43394: mov    0x30(%rsp),%r10
  0x000000010ca43399: mov    %rax,%r11
  0x000000010ca4339c: shr    $0x3,%r11
  0x000000010ca433a0: mov    0x30(%rsp),%r8
  0x000000010ca433a5: mov    %r11d,0x18(%r8)    ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x000000010ca433a9: shr    $0x9,%r10
  0x000000010ca433ad: movabs $0x10c3a2000,%r11
  0x000000010ca433b7: mov    %r12b,(%r11,%r10,1)
  0x000000010ca433bb: mov    0x64(%rsp),%r13d   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca433c0: inc    %r13d              ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca433c3: mov    %r13d,0x1c(%rsp)   ; OopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop off=1672}
                                                ;*goto
                                                ; - java.io.ObjectStreamClass::matchFields@195 (line 2292)

  0x000000010ca433c8: test   %eax,-0x21483ce(%rip)        # 0x000000010a8fb000
                                                ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {poll}
  0x000000010ca433ce: mov    (%rsp),%r10
  0x000000010ca433d2: mov    %r10,%r11
  0x000000010ca433d5: shr    $0x3,%r11          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca433d9: mov    %r11d,0x2c(%rsp)
  0x000000010ca433de: mov    0x1c(%rsp),%r10d
  0x000000010ca433e3: cmp    0x10(%rsp),%r10d
  0x000000010ca433e8: jge    0x000000010ca43b11  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca433ee: mov    0x1c(%rsp),%r13d   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca433f3: cmp    0x10(%rsp),%r13d
  0x000000010ca433f8: jae    0x000000010ca44f4f  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca433fe: mov    0x2c(%rsp),%r10d
  0x000000010ca43403: mov    0x14(%r12,%r10,8),%r8d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca4608b
  0x000000010ca43408: mov    0x38(%rsp),%r10
  0x000000010ca4340d: mov    0x10(%r10,%r13,4),%r10d  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43412: mov    %r10d,0x60(%rsp)
  0x000000010ca43417: mov    0x14(%r12,%r10,8),%r11d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ; implicit exception: dispatches to 0x000000010ca4609d
  0x000000010ca4341c: mov    0xc(%r12,%r8,8),%r10d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ; implicit exception: dispatches to 0x000000010ca460ad
  0x000000010ca43421: mov    0x2c(%rsp),%ecx
  0x000000010ca43425: lea    (%r12,%rcx,8),%r9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43429: mov    %r9,(%rsp)
  0x000000010ca4342d: cmp    %r11d,%r8d
  0x000000010ca43430: je     0x000000010ca4350a
  0x000000010ca43436: mov    0xc(%r12,%r11,8),%r9d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca460c1
  0x000000010ca4343b: mov    0xc(%r12,%r9,8),%r11d
  0x000000010ca43440: mov    0xc(%r12,%r10,8),%ecx  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43445: cmp    %r11d,%ecx
  0x000000010ca43448: jne    0x000000010ca433c0  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4344e: lea    (%r12,%r9,8),%r11  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43452: lea    0x10(%r12,%r9,8),%rsi
  0x000000010ca43457: lea    (%r12,%r10,8),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4345b: lea    0x10(%r12,%r10,8),%rdi
  0x000000010ca43460: cmp    %rsi,%rdi
  0x000000010ca43463: je     0x000000010ca434f1
  0x000000010ca43469: test   %ecx,%ecx
  0x000000010ca4346b: je     0x000000010ca434f1
  0x000000010ca43471: shl    %ecx
  0x000000010ca43473: mov    %ecx,%eax
  0x000000010ca43475: and    $0x1e,%eax
  0x000000010ca43478: and    $0xffffffffffffffe0,%ecx
  0x000000010ca4347b: je     0x000000010ca434c0
  0x000000010ca4347d: lea    (%rdi,%rcx,1),%rdi
  0x000000010ca43481: lea    (%rsi,%rcx,1),%rsi
  0x000000010ca43485: neg    %rcx
  0x000000010ca43488: vmovdqu (%rdi,%rcx,1),%ymm1
  0x000000010ca4348d: vmovdqu (%rsi,%rcx,1),%ymm0
  0x000000010ca43492: (bad)  
  0x000000010ca43495: enterq $0xe2c4,$0x7d
  0x000000010ca43499: (bad)  
  0x000000010ca4349a: leaveq 
  0x000000010ca4349b: jne    0x000000010ca434f8
  0x000000010ca4349d: add    $0x20,%rcx
  0x000000010ca434a1: jne    0x000000010ca43488
  0x000000010ca434a3: test   %eax,%eax
  0x000000010ca434a5: je     0x000000010ca434f1
  0x000000010ca434a7: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x000000010ca434ad: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x000000010ca434b3: (bad)  
  0x000000010ca434b6: enterq $0xe2c4,$0x7d
  0x000000010ca434ba: (bad)  
  0x000000010ca434bb: leaveq 
  0x000000010ca434bc: jne    0x000000010ca434f8
  0x000000010ca434be: jmp    0x000000010ca434f1
  0x000000010ca434c0: mov    %eax,%ecx
  0x000000010ca434c2: and    $0xfffffffffffffffc,%ecx
  0x000000010ca434c5: je     0x000000010ca434e0
  0x000000010ca434c7: lea    (%rdi,%rcx,1),%rdi
  0x000000010ca434cb: lea    (%rsi,%rcx,1),%rsi
  0x000000010ca434cf: neg    %rcx
  0x000000010ca434d2: mov    (%rdi,%rcx,1),%ebx
  0x000000010ca434d5: cmp    (%rsi,%rcx,1),%ebx
  0x000000010ca434d8: jne    0x000000010ca434f8
  0x000000010ca434da: add    $0x4,%rcx
  0x000000010ca434de: jne    0x000000010ca434d2
  0x000000010ca434e0: test   $0x2,%eax
  0x000000010ca434e5: je     0x000000010ca434f1
  0x000000010ca434e7: movzwl (%rdi),%ebx
  0x000000010ca434ea: movzwl (%rsi),%ecx
  0x000000010ca434ed: cmp    %ecx,%ebx
  0x000000010ca434ef: jne    0x000000010ca434f8
  0x000000010ca434f1: mov    $0x1,%eax
  0x000000010ca434f6: jmp    0x000000010ca434fa
  0x000000010ca434f8: xor    %eax,%eax
  0x000000010ca434fa: (bad)  
  0x000000010ca434fd: leaveq 
  0x000000010ca434fe: (bad)  
  0x000000010ca43501: rolb   $0xfe,-0x497bf040(%rbp)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43508: (bad)  
  0x000000010ca43509: incl   0x5c(%rbx,%rcx,4)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4350d: and    $0x2c,%al
  0x000000010ca4350f: mov    0x18(%r12,%r11,8),%r8d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43514: mov    0xc(%r12,%r8,8),%r10d  ;*synchronization entry
                                                ; - java.lang.reflect.Field::getType@-1 (line 218)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46131
  0x000000010ca43519: mov    0xc(%r12,%r10,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010ca46141
  0x000000010ca4351e: test   %ebp,%ebp
  0x000000010ca43520: jle    0x000000010ca4573d
  0x000000010ca43526: test   %ebp,%ebp
  0x000000010ca43528: jbe    0x000000010ca45589  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca4352e: movzwl 0x10(%r12,%r10,8),%r10d  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca43534: cmp    $0x4c,%r10d
  0x000000010ca43538: je     0x000000010ca45564  ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4353e: cmp    $0x5b,%r10d
  0x000000010ca43542: je     0x000000010ca45564  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43548: mov    0x60(%rsp),%r8d
  0x000000010ca4354d: mov    0x18(%r12,%r8,8),%r9d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43552: mov    0xc(%r12,%r9,8),%ecx  ;*ifne
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@35 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46151
  0x000000010ca43557: mov    0xc(%r12,%rcx,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010ca46161
  0x000000010ca4355c: test   %ebp,%ebp
  0x000000010ca4355e: jle    0x000000010ca45775
  0x000000010ca43564: test   %ebp,%ebp
  0x000000010ca43566: jbe    0x000000010ca455bd  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca4356c: movzwl 0x10(%r12,%rcx,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca43572: cmp    %ebp,%r10d
  0x000000010ca43575: jne    0x000000010ca457b1
  0x000000010ca4357b: mov    %r8d,%r10d
  0x000000010ca4357e: mov    0x20(%r12,%r10,8),%ebp
  0x000000010ca43583: test   %ebp,%ebp
  0x000000010ca43585: je     0x000000010ca457e9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4358b: mov    0x60(%r15),%r11    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4358f: mov    %r11,%r10
  0x000000010ca43592: add    $0x28,%r10
  0x000000010ca43596: cmp    0x70(%r15),%r10
  0x000000010ca4359a: jae    0x000000010ca44fb4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca435a0: mov    %r10,0x60(%r15)
  0x000000010ca435a4: prefetchnta 0xc0(%r10)
  0x000000010ca435ac: mov    0x58(%rsp),%r10
  0x000000010ca435b1: mov    0xa8(%r10),%r10
  0x000000010ca435b8: mov    %r10,(%r11)        ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca435bb: movl   $0xf80025ef,0x8(%r11)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca435c3: mov    %r12d,0xc(%r11)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca435c7: mov    %r12,0x10(%r11)
  0x000000010ca435cb: mov    %r12,0x18(%r11)
  0x000000010ca435cf: mov    %r12,0x20(%r11)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca435d3: mov    %r13d,0x64(%rsp)   ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca435d8: mov    %r11,0x30(%rsp)
  0x000000010ca435dd: mov    0x60(%rsp),%r10d
  0x000000010ca435e2: movzbl 0x10(%r12,%r10,8),%r10d
  0x000000010ca435e8: mov    %r10b,0x10(%r11)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca435ec: mov    0x60(%rsp),%r11d
  0x000000010ca435f1: mov    0x20(%r12,%r11,8),%r11d  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca435f6: mov    0x30(%rsp),%r10
  0x000000010ca435fb: mov    %r11d,0x20(%r10)
  0x000000010ca435ff: shr    $0x9,%r10
  0x000000010ca43603: movabs $0x10c3a2000,%r8
  0x000000010ca4360d: mov    %r12b,(%r8,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca43611: mov    0x24(%r12,%r11,8),%ebp  ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46171
  0x000000010ca43616: mov    0x20(%r12,%r11,8),%r11d  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4361b: mov    0x30(%rsp),%r10
  0x000000010ca43620: mov    %r11d,0x14(%r10)   ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca43624: shr    $0x9,%r10
  0x000000010ca43628: movabs $0x10c3a2000,%r11
  0x000000010ca43632: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getTypeCode@-1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca43636: mov    0x48(%r12,%rbp,8),%r10  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46181
  0x000000010ca4363b: mov    %r10,0x18(%rsp)
  0x000000010ca43640: mov    0x30(%rsp),%r10
  0x000000010ca43645: lea    (%r12,%rbp,8),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43649: mov    %r11,0x68(%rsp)
  0x000000010ca4364e: mov    0x18(%rsp),%r11
  0x000000010ca43653: test   %r11,%r11
  0x000000010ca43656: mov    0x68(%rsp),%r11
  0x000000010ca4365b: movabs $0x76ab006f8,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x000000010ca43665: cmovne %r8,%r11
  0x000000010ca43669: shr    $0x9,%r10
  0x000000010ca4366d: movabs $0x10c3a2000,%r8
  0x000000010ca43677: mov    %r12b,(%r8,%r10,1)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4367b: mov    0x60(%r15),%rax
  0x000000010ca4367f: mov    %rax,%r10
  0x000000010ca43682: add    $0x18,%r10         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43686: shr    $0x3,%r11
  0x000000010ca4368a: mov    0x30(%rsp),%r8
  0x000000010ca4368f: mov    %r11d,0x1c(%r8)
  0x000000010ca43693: cmp    0x70(%r15),%r10
  0x000000010ca43697: jae    0x000000010ca44ff0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4369d: mov    %r10,0x60(%r15)
  0x000000010ca436a1: prefetchnta 0xc0(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436a9: mov    0x50(%rsp),%r10
  0x000000010ca436ae: mov    0xa8(%r10),%r10
  0x000000010ca436b5: mov    %r10,(%rax)        ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436b8: movl   $0xf8001b4b,0x8(%rax)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca436bf: mov    %r12d,0xc(%rax)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436c3: mov    %r12,0x10(%rax)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca436c7: mov    %rax,0x70(%rsp)
  0x000000010ca436cc: mov    0x60(%r15),%r11
  0x000000010ca436d0: mov    %r11,%r10
  0x000000010ca436d3: add    $0x30,%r10
  0x000000010ca436d7: cmp    0x70(%r15),%r10
  0x000000010ca436db: jae    0x000000010ca44fd4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436e1: mov    %r10,0x60(%r15)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436e5: prefetchnta 0xc0(%r10)    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436ed: movq   $0x1,(%r11)        ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436f4: prefetchnta 0x100(%r10)   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca436fc: movl   $0xf8000041,0x8(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca43704: prefetchnta 0x140(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4370c: movl   $0x10,0xc(%r11)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43714: prefetchnta 0x180(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4371c: mov    %r12,0x10(%r11)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43720: mov    %r12,0x18(%r11)    ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43724: mov    %r12,0x20(%r11)
  0x000000010ca43728: mov    %r12,0x28(%r11)    ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4372c: mov    %r11,0x78(%rsp)
  0x000000010ca43731: mov    0x70(%rsp),%r10
  0x000000010ca43736: mov    %r10,%r11
  0x000000010ca43739: mov    0x78(%rsp),%r10
  0x000000010ca4373e: shr    $0x3,%r10
  0x000000010ca43742: mov    0x70(%rsp),%r8
  0x000000010ca43747: mov    %r10d,0x10(%r8)    ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca4374b: shr    $0x9,%r11
  0x000000010ca4374f: movabs $0x10c3a2000,%r10
  0x000000010ca43759: mov    %r12b,(%r10,%r11,1)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca4375d: mov    0x18(%rsp),%r10
  0x000000010ca43762: test   %r10,%r10
  0x000000010ca43765: je     0x000000010ca43774  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43767: mov    0x8(%r10),%r10d
  0x000000010ca4376b: test   %r10d,%r10d
  0x000000010ca4376e: jl     0x000000010ca43bf3  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43774: mov    0x18(%rsp),%r10
  0x000000010ca43779: test   %r10,%r10
  0x000000010ca4377c: jne    0x000000010ca42ed5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43782: mov    $0x1,%edx
  0x000000010ca43787: xor    %r10d,%r10d
  0x000000010ca4378a: jmp    0x000000010ca437ad  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4378c: test   %r11,%r11
  0x000000010ca4378f: jne    0x000000010ca42ee9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43795: mov    %r10d,%edx
  0x000000010ca43798: inc    %edx
  0x000000010ca4379a: mov    0x14(%rsp),%r11d
  0x000000010ca4379f: shl    $0x3,%r11          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca437a3: mov    %r11,0x78(%rsp)
  0x000000010ca437a8: mov    %rcx,0x68(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca437ad: mov    0x70(%rsp),%r11
  0x000000010ca437b2: mov    0xc(%r11),%r8d
  0x000000010ca437b6: mov    %r8d,%r11d
  0x000000010ca437b9: inc    %r11d              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca437bc: mov    0x68(%rsp),%r9
  0x000000010ca437c1: movabs $0x76ab00010,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x000000010ca437cb: cmp    %rcx,%r9
  0x000000010ca437ce: je     0x000000010ca43e2d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca437d4: movabs $0x76ab00148,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = byte)}
  0x000000010ca437de: cmp    %rcx,%r9
  0x000000010ca437e1: je     0x000000010ca4404d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca437e7: movabs $0x76ab00280,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x000000010ca437f1: cmp    %rcx,%r9
  0x000000010ca437f4: je     0x000000010ca44251
  0x000000010ca437fa: movabs $0x76ab00078,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = float)}
  0x000000010ca43804: cmp    %rcx,%r9
  0x000000010ca43807: je     0x000000010ca44451  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4380d: movabs $0x76ab000e0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x000000010ca43817: cmp    %rcx,%r9
  0x000000010ca4381a: je     0x000000010ca44655  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43820: movabs $0x76ab002e8,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = short)}
  0x000000010ca4382a: cmp    %rcx,%r9
  0x000000010ca4382d: je     0x000000010ca44855  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43833: movabs $0x76ab00218,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = char)}
  0x000000010ca4383d: cmp    %rcx,%r9
  0x000000010ca43840: je     0x000000010ca44a59  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43846: movabs $0x76ab001b0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = boolean)}
  0x000000010ca43850: cmp    %rcx,%r9
  0x000000010ca43853: je     0x000000010ca44c59  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43859: movabs $0x76ab00350,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x000000010ca43863: cmp    %rcx,%r9
  0x000000010ca43866: jne    0x000000010ca45889  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca4386c: mov    0x78(%rsp),%r9
  0x000000010ca43871: test   %r9,%r9
  0x000000010ca43874: je     0x000000010ca4581d  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4387a: mov    %r9,0x18(%rsp)
  0x000000010ca4387f: mov    0xc(%r9),%ebp      ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43883: mov    %r10d,%ecx
  0x000000010ca43886: sub    %ebp,%ecx
  0x000000010ca43888: inc    %ecx
  0x000000010ca4388a: test   %ecx,%ecx
  0x000000010ca4388c: jle    0x000000010ca438ad  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4388e: mov    %ebp,%r9d
  0x000000010ca43891: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43894: mov    %r9d,%r11d
  0x000000010ca43897: sub    %r10d,%r11d
  0x000000010ca4389a: inc    %r11d
  0x000000010ca4389d: test   %r11d,%r11d
  0x000000010ca438a0: jl     0x000000010ca438bb  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438a2: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438a6: mov    %r9d,0x14(%rsp)
  0x000000010ca438ab: jmp    0x000000010ca438bf
  0x000000010ca438ad: mov    0x70(%rsp),%r10
  0x000000010ca438b2: mov    %r11d,0xc(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438b6: jmpq   0x000000010ca43a45
  0x000000010ca438bb: mov    %edx,0x14(%rsp)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438bf: mov    0x14(%rsp),%r10d
  0x000000010ca438c4: test   %r10d,%r10d
  0x000000010ca438c7: jle    0x000000010ca438d9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438c9: mov    $0x7ffffff7,%r10d
  0x000000010ca438cf: sub    0x14(%rsp),%r10d
  0x000000010ca438d4: test   %r10d,%r10d
  0x000000010ca438d7: jge    0x000000010ca438e8  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca438d9: mov    0x70(%rsp),%rsi
  0x000000010ca438de: nop
  0x000000010ca438df: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=2980}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca438e4: mov    %eax,0x14(%rsp)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438e8: mov    0x14(%rsp),%r11d
  0x000000010ca438ed: cmp    $0x80000,%r11d
  0x000000010ca438f4: ja     0x000000010ca45985  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438fa: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca438ff: shl    %r10
  0x000000010ca43902: add    $0x17,%r10         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43906: mov    %r10,0x68(%rsp)
  0x000000010ca4390b: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4390f: mov    %r10,0x80(%rsp)
  0x000000010ca43917: cmp    $0x80000,%r11d
  0x000000010ca4391e: ja     0x000000010ca45379
  0x000000010ca43924: mov    0x60(%r15),%r8
  0x000000010ca43928: mov    %r8,%r10
  0x000000010ca4392b: mov    0x80(%rsp),%r11
  0x000000010ca43933: add    %r11,%r10
  0x000000010ca43936: cmp    0x70(%r15),%r10
  0x000000010ca4393a: jae    0x000000010ca45379  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43940: mov    %r10,0x60(%r15)
  0x000000010ca43944: prefetchnta 0xc0(%r10)
  0x000000010ca4394c: movq   $0x1,(%r8)
  0x000000010ca43953: prefetchnta 0x100(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4395b: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca43963: mov    0x14(%rsp),%r11d
  0x000000010ca43968: mov    %r11d,0xc(%r8)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4396c: prefetchnta 0x140(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43974: prefetchnta 0x180(%r10)   ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4397c: mov    %r8,0x88(%rsp)
  0x000000010ca43984: cmp    0x14(%rsp),%ebp
  0x000000010ca43988: mov    0x14(%rsp),%r9d
  0x000000010ca4398d: cmovl  %ebp,%r9d          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43991: mov    %r8,%rsi
  0x000000010ca43994: add    $0x10,%rsi         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43998: mov    0x68(%rsp),%r10
  0x000000010ca4399d: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439a1: mov    %r10,%rcx
  0x000000010ca439a4: add    $0xfffffffffffffffe,%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439a8: cmp    %r9d,%ebp
  0x000000010ca439ab: jb     0x000000010ca4598f
  0x000000010ca439b1: mov    0x14(%rsp),%ebp
  0x000000010ca439b5: cmp    %r9d,%ebp
  0x000000010ca439b8: jb     0x000000010ca4598f  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439be: test   %r9d,%r9d
  0x000000010ca439c1: jle    0x000000010ca459b9  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439c7: mov    0x18(%rsp),%r8
  0x000000010ca439cc: add    $0x10,%r8          ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439d0: cmp    0x14(%rsp),%r9d
  0x000000010ca439d5: jl     0x000000010ca45021  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439db: mov    0x80(%rsp),%rdx
  0x000000010ca439e3: add    $0xfffffffffffffff0,%rdx
  0x000000010ca439e7: shr    $0x3,%rdx          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439eb: mov    %r8,%rdi
  0x000000010ca439ee: movabs $0x10c9f4780,%r10
  0x000000010ca439f8: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca439fb: mov    0x70(%rsp),%r10
  0x000000010ca43a00: mov    0xc(%r10),%r8d     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a04: mov    0x88(%rsp),%r10
  0x000000010ca43a0c: mov    %r10,%r11
  0x000000010ca43a0f: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a13: mov    0x70(%rsp),%r10
  0x000000010ca43a18: mov    %r11d,0x10(%r10)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a1c: mov    %r8d,%r11d
  0x000000010ca43a1f: inc    %r11d
  0x000000010ca43a22: mov    %r11d,0xc(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a26: shr    $0x9,%r10
  0x000000010ca43a2a: movabs $0x10c3a2000,%r11
  0x000000010ca43a34: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a38: mov    0x88(%rsp),%r10
  0x000000010ca43a40: mov    %r10,0x78(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a45: mov    0x78(%rsp),%r10
  0x000000010ca43a4a: mov    0xc(%r10),%r10d
  0x000000010ca43a4e: cmp    %r10d,%r8d
  0x000000010ca43a51: jae    0x000000010ca4582d  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a57: mov    0x78(%rsp),%r10
  0x000000010ca43a5c: mov    $0x56,%r9d
  0x000000010ca43a62: mov    %r9w,0x10(%r10,%r8,2)
  0x000000010ca43a68: mov    0x60(%r15),%rax
  0x000000010ca43a6c: mov    %rax,%r10
  0x000000010ca43a6f: add    $0x18,%r10
  0x000000010ca43a73: cmp    0x70(%r15),%r10
  0x000000010ca43a77: jae    0x000000010ca45005  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43a7d: mov    %r10,0x60(%r15)
  0x000000010ca43a81: prefetchnta 0xc0(%r10)
  0x000000010ca43a89: mov    0x48(%rsp),%r10
  0x000000010ca43a8e: mov    0xa8(%r10),%r10
  0x000000010ca43a95: mov    %r10,(%rax)
  0x000000010ca43a98: movl   $0xf80002da,0x8(%rax)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca43a9f: mov    %r12d,0xc(%rax)
  0x000000010ca43aa3: mov    %r12,0x10(%rax)
  0x000000010ca43aa7: mov    %rax,0x68(%rsp)
  0x000000010ca43aac: mov    0x70(%rsp),%r10
  0x000000010ca43ab1: mov    0xc(%r10),%r10d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca43ab5: mov    0x70(%rsp),%r11
  0x000000010ca43aba: mov    0x10(%r11),%r8d    ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43abe: test   %r10d,%r10d
  0x000000010ca43ac1: jle    0x000000010ca4335a  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ac7: mov    0xc(%r12,%r8,8),%r9d  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca461c1
  0x000000010ca43acc: sub    %r10d,%r9d
  0x000000010ca43acf: test   %r9d,%r9d
  0x000000010ca43ad2: jl     0x000000010ca456fd  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca43ad8: lea    (%r12,%r8,8),%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43adc: xor    %edx,%edx
  0x000000010ca43ade: mov    %r10d,%ecx
  0x000000010ca43ae1: mov    %rax,%rbp
  0x000000010ca43ae4: data32 xchg %ax,%ax
  0x000000010ca43ae7: callq  0x000000010c9e8420  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [104]=Oop off=3500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {static_call}
  0x000000010ca43aec: mov    %rbp,%r10
  0x000000010ca43aef: mov    %rax,%r8
  0x000000010ca43af2: shr    $0x3,%r8
  0x000000010ca43af6: mov    %r8d,0xc(%rbp)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43afa: shr    $0x9,%r10
  0x000000010ca43afe: movabs $0x10c3a2000,%r11
  0x000000010ca43b08: mov    %r12b,(%r11,%r10,1)
  0x000000010ca43b0c: jmpq   0x000000010ca43388
  0x000000010ca43b11: mov    0x30(%rsp),%r10
  0x000000010ca43b16: test   %r10,%r10
  0x000000010ca43b19: je     0x000000010ca45671  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b1f: mov    (%rsp),%r10
  0x000000010ca43b23: mov    0xc(%r10),%r11d    ; implicit exception: dispatches to 0x000000010ca46191
  0x000000010ca43b27: mov    0x30(%rsp),%r10
  0x000000010ca43b2c: mov    %r11d,0xc(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b30: mov    0x40(%rsp),%r10
  0x000000010ca43b35: mov    0xc(%r10),%r10d    ; implicit exception: dispatches to 0x000000010ca461a1
  0x000000010ca43b39: mov    0x28(%rsp),%r8d
  0x000000010ca43b3e: cmp    %r10d,%r8d
  0x000000010ca43b41: jae    0x000000010ca45620  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b47: mov    0x40(%rsp),%r10
  0x000000010ca43b4c: lea    0x10(%r10,%r8,4),%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b51: mov    0x30(%rsp),%r11
  0x000000010ca43b56: shr    $0x3,%r11
  0x000000010ca43b5a: mov    %r11d,(%r10)       ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b5d: shr    $0x9,%r10
  0x000000010ca43b61: movabs $0x10c3a2000,%r11
  0x000000010ca43b6b: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b6f: mov    0x20(%rsp),%r10
  0x000000010ca43b74: mov    0xc(%r10),%r8d     ; implicit exception: dispatches to 0x000000010ca461b1
  0x000000010ca43b78: mov    0x28(%rsp),%r10d
  0x000000010ca43b7d: inc    %r10d              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b80: cmp    %r8d,%r10d
  0x000000010ca43b83: jge    0x000000010ca44e9c  ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b89: cmp    %r8d,%r10d
  0x000000010ca43b8c: jae    0x000000010ca4564d  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43b92: movslq 0x28(%rsp),%r11
  0x000000010ca43b97: mov    0x20(%rsp),%r8
  0x000000010ca43b9c: mov    0x14(%r8,%r11,4),%r8d  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ba1: mov    %r8d,0x2c(%rsp)
  0x000000010ca43ba6: mov    0x10(%rsp),%r11d
  0x000000010ca43bab: test   %r11d,%r11d
  0x000000010ca43bae: jle    0x000000010ca4567e  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43bb4: mov    %r10d,0x28(%rsp)
  0x000000010ca43bb9: xor    %r13d,%r13d
  0x000000010ca43bbc: xor    %r10d,%r10d
  0x000000010ca43bbf: mov    %r10,0x30(%rsp)
  0x000000010ca43bc4: jmpq   0x000000010ca433f3
  0x000000010ca43bc9: xor    %ecx,%ecx          ; OopMap{rcx=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=3723}
                                                ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43bcb: test   %eax,-0x2148bd1(%rip)        # 0x000000010a8fb000
                                                ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {poll}
  0x000000010ca43bd1: mov    0x48(%rcx),%r11    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46121
  0x000000010ca43bd5: test   %r11,%r11
  0x000000010ca43bd8: je     0x000000010ca4378c
  0x000000010ca43bde: mov    %r11,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43be1: mov    0x8(%r8),%r9d
  0x000000010ca43be5: test   %r9d,%r9d
  0x000000010ca43be8: jge    0x000000010ca4378c  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43bee: mov    %rcx,0x68(%rsp)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca43bf3: mov    0x70(%rsp),%r10
  0x000000010ca43bf8: mov    0x10(%r10),%r10d   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43bfc: mov    %r10d,0x14(%rsp)
  0x000000010ca43c01: mov    0xc(%r12,%r10,8),%r11d  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca46101
  0x000000010ca43c06: mov    %r11d,0x18(%rsp)
  0x000000010ca43c0b: mov    0x70(%rsp),%r10
  0x000000010ca43c10: mov    0xc(%r10),%ebp     ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c14: mov    %ebp,%r8d
  0x000000010ca43c17: sub    %r11d,%r8d
  0x000000010ca43c1a: mov    0x14(%rsp),%r10d
  0x000000010ca43c1f: shl    $0x3,%r10
  0x000000010ca43c23: mov    %r10,0x78(%rsp)
  0x000000010ca43c28: inc    %r8d
  0x000000010ca43c2b: mov    %ebp,%r10d
  0x000000010ca43c2e: inc    %r10d
  0x000000010ca43c31: test   %r8d,%r8d
  0x000000010ca43c34: jle    0x000000010ca43dd6  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c3a: mov    %r11d,%r9d
  0x000000010ca43c3d: shl    %r9d               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c40: mov    %r9d,%r11d
  0x000000010ca43c43: sub    %ebp,%r11d
  0x000000010ca43c46: inc    %r11d
  0x000000010ca43c49: test   %r11d,%r11d
  0x000000010ca43c4c: jl     0x000000010ca43c57  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c4e: add    $0x2,%r9d
  0x000000010ca43c52: mov    %r9d,%ebp
  0x000000010ca43c55: jmp    0x000000010ca43c5a
  0x000000010ca43c57: mov    %r10d,%ebp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c5a: test   %ebp,%ebp
  0x000000010ca43c5c: jle    0x000000010ca43c6c  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c5e: mov    $0x7ffffff7,%r11d
  0x000000010ca43c64: sub    %ebp,%r11d
  0x000000010ca43c67: test   %r11d,%r11d
  0x000000010ca43c6a: jge    0x000000010ca43c7e  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca43c6c: mov    0x70(%rsp),%rsi
  0x000000010ca43c71: mov    %r10d,%edx
  0x000000010ca43c74: mov    %rsi,%rbp
  0x000000010ca43c77: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=3900}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca43c7c: mov    %eax,%ebp          ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c7e: cmp    $0x80000,%ebp
  0x000000010ca43c84: ja     0x000000010ca454fc  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c8a: movslq %ebp,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c8d: shl    %r10
  0x000000010ca43c90: mov    0x14(%rsp),%r11d
  0x000000010ca43c95: shl    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43c99: mov    %r11,0x80(%rsp)
  0x000000010ca43ca1: add    $0x17,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ca5: mov    %r10,0x88(%rsp)
  0x000000010ca43cad: and    $0xfffffffffffffff8,%r10  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43cb1: mov    %r10,0x90(%rsp)
  0x000000010ca43cb9: cmp    $0x80000,%ebp
  0x000000010ca43cbf: ja     0x000000010ca44f99
  0x000000010ca43cc5: mov    0x60(%r15),%r11
  0x000000010ca43cc9: mov    %r11,%r10
  0x000000010ca43ccc: mov    0x90(%rsp),%r8
  0x000000010ca43cd4: add    %r8,%r10
  0x000000010ca43cd7: cmp    0x70(%r15),%r10
  0x000000010ca43cdb: jae    0x000000010ca44f99  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ce1: mov    %r10,0x60(%r15)    ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ce5: prefetchnta 0xc0(%r10)
  0x000000010ca43ced: movq   $0x1,(%r11)
  0x000000010ca43cf4: prefetchnta 0x100(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43cfc: movl   $0xf8000041,0x8(%r11)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca43d04: mov    %ebp,0xc(%r11)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d08: prefetchnta 0x140(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d10: prefetchnta 0x180(%r10)   ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d18: mov    %r11,0x78(%rsp)
  0x000000010ca43d1d: mov    0x18(%rsp),%r11d
  0x000000010ca43d22: cmp    %ebp,%r11d
  0x000000010ca43d25: mov    %ebp,%r9d
  0x000000010ca43d28: cmovl  %r11d,%r9d         ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d2c: mov    0x78(%rsp),%rsi
  0x000000010ca43d31: add    $0x10,%rsi         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d35: mov    0x88(%rsp),%r8
  0x000000010ca43d3d: shr    $0x3,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d41: mov    %r8,%rcx
  0x000000010ca43d44: add    $0xfffffffffffffffe,%rcx
  0x000000010ca43d48: cmp    %r9d,%r11d
  0x000000010ca43d4b: jb     0x000000010ca45504
  0x000000010ca43d51: cmp    %r9d,%ebp
  0x000000010ca43d54: jb     0x000000010ca45504
  0x000000010ca43d5a: test   %r9d,%r9d
  0x000000010ca43d5d: jle    0x000000010ca45535  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d63: mov    0x14(%rsp),%r11d
  0x000000010ca43d68: lea    0x10(%r12,%r11,8),%rbx  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d6d: cmp    %ebp,%r9d
  0x000000010ca43d70: jl     0x000000010ca44f0a  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d76: mov    0x90(%rsp),%rdx
  0x000000010ca43d7e: add    $0xfffffffffffffff0,%rdx
  0x000000010ca43d82: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d86: mov    %rbx,%rdi
  0x000000010ca43d89: movabs $0x10c9f4780,%r10
  0x000000010ca43d93: callq  *%r10              ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d96: mov    0x70(%rsp),%r10
  0x000000010ca43d9b: mov    0xc(%r10),%ebp     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43d9f: mov    0x78(%rsp),%r10
  0x000000010ca43da4: mov    %r10,%r11
  0x000000010ca43da7: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43dab: mov    %r11d,0x14(%rsp)
  0x000000010ca43db0: mov    0x70(%rsp),%r10
  0x000000010ca43db5: mov    %r11d,0x10(%r10)   ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43db9: mov    %ebp,%r10d
  0x000000010ca43dbc: inc    %r10d              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43dbf: mov    0x70(%rsp),%r11
  0x000000010ca43dc4: shr    $0x9,%r11
  0x000000010ca43dc8: movabs $0x10c3a2000,%r8
  0x000000010ca43dd2: mov    %r12b,(%r8,%r11,1)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43dd6: mov    0x70(%rsp),%r11
  0x000000010ca43ddb: mov    %r10d,0xc(%r11)
  0x000000010ca43ddf: mov    0x78(%rsp),%r11
  0x000000010ca43de4: mov    0xc(%r11),%r11d    ; implicit exception: dispatches to 0x000000010ca46111
  0x000000010ca43de8: cmp    %r11d,%ebp
  0x000000010ca43deb: jae    0x000000010ca45394
  0x000000010ca43df1: mov    0x78(%rsp),%r11
  0x000000010ca43df6: mov    $0x5b,%r9d
  0x000000010ca43dfc: mov    %r9w,0x10(%r11,%rbp,2)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca43e02: mov    0x68(%rsp),%r11
  0x000000010ca43e07: mov    0x48(%r11),%r11    ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e0b: test   %r11,%r11
  0x000000010ca43e0e: je     0x000000010ca453e5
  0x000000010ca43e14: mov    0x8(%r11),%r9d
  0x000000010ca43e18: test   %r9d,%r9d
  0x000000010ca43e1b: jge    0x000000010ca43bc9  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e21: mov    0xe0(%r11),%rcx    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e28: jmpq   0x000000010ca43bcb
  0x000000010ca43e2d: mov    0x78(%rsp),%r9
  0x000000010ca43e32: test   %r9,%r9
  0x000000010ca43e35: je     0x000000010ca45919  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010ca43e3b: mov    %r9,0x18(%rsp)
  0x000000010ca43e40: mov    0xc(%r9),%ecx      ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e44: mov    %ecx,0xa8(%rsp)
  0x000000010ca43e4b: mov    %r10d,%ecx
  0x000000010ca43e4e: sub    0xa8(%rsp),%ecx
  0x000000010ca43e55: inc    %ecx
  0x000000010ca43e57: test   %ecx,%ecx
  0x000000010ca43e59: jle    0x000000010ca43e7f  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e5b: mov    0xa8(%rsp),%r9d
  0x000000010ca43e63: shl    %r9d               ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e66: mov    %r9d,%r11d
  0x000000010ca43e69: sub    %r10d,%r11d
  0x000000010ca43e6c: inc    %r11d
  0x000000010ca43e6f: test   %r11d,%r11d
  0x000000010ca43e72: jl     0x000000010ca43e8d  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e74: add    $0x2,%r9d          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e78: mov    %r9d,0x14(%rsp)
  0x000000010ca43e7d: jmp    0x000000010ca43e91
  0x000000010ca43e7f: mov    0x70(%rsp),%r10
  0x000000010ca43e84: mov    %r11d,0xc(%r10)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e88: jmpq   0x000000010ca4402a
  0x000000010ca43e8d: mov    %edx,0x14(%rsp)    ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43e91: mov    0x14(%rsp),%r10d
  0x000000010ca43e96: test   %r10d,%r10d
  0x000000010ca43e99: jle    0x000000010ca43eab
  0x000000010ca43e9b: mov    $0x7ffffff7,%r10d
  0x000000010ca43ea1: sub    0x14(%rsp),%r10d
  0x000000010ca43ea6: test   %r10d,%r10d
  0x000000010ca43ea9: jge    0x000000010ca43ebc  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca43eab: mov    0x70(%rsp),%rsi
  0x000000010ca43eb0: mov    %rsi,%rbp
  0x000000010ca43eb3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=4472}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca43eb8: mov    %eax,0x14(%rsp)    ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010ca43ebc: mov    0x14(%rsp),%r11d
  0x000000010ca43ec1: cmp    $0x80000,%r11d
  0x000000010ca43ec8: ja     0x000000010ca45dc3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ece: movslq 0x14(%rsp),%r10    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ed3: shl    %r10
  0x000000010ca43ed6: add    $0x17,%r10         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43eda: mov    %r10,0x68(%rsp)
  0x000000010ca43edf: and    $0xfffffffffffffff8,%r10  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010ca43ee3: mov    %r10,0x80(%rsp)
  0x000000010ca43eeb: cmp    $0x80000,%r11d
  0x000000010ca43ef2: ja     0x000000010ca45450
  0x000000010ca43ef8: mov    0x60(%r15),%r11
  0x000000010ca43efc: mov    %r11,%r10
  0x000000010ca43eff: mov    0x80(%rsp),%r8
  0x000000010ca43f07: add    %r8,%r10
  0x000000010ca43f0a: cmp    0x70(%r15),%r10
  0x000000010ca43f0e: jae    0x000000010ca45450  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43f14: mov    %r10,0x60(%r15)
  0x000000010ca43f18: prefetchnta 0xc0(%r10)
  0x000000010ca43f20: movq   $0x1,(%r11)
  0x000000010ca43f27: prefetchnta 0x100(%r10)
  0x000000010ca43f2f: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010ca43f37: mov    0x14(%rsp),%ebp
  0x000000010ca43f3b: mov    %ebp,0xc(%r11)
  0x000000010ca43f3f: prefetchnta 0x140(%r10)
  0x000000010ca43f47: prefetchnta 0x180(%r10)
  0x000000010ca43f4f: mov    %r11,0x88(%rsp)
  0x000000010ca43f57: mov    0xa8(%rsp),%r11d
  0x000000010ca43f5f: cmp    0x14(%rsp),%r11d
  0x000000010ca43f64: mov    0x14(%rsp),%r9d
  0x000000010ca43f69: cmovl  %r11d,%r9d         ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010ca43f6d: mov    0x88(%rsp),%rbx
  0x000000010ca43f75: add    $0x10,%rbx         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43f79: mov    0x88(%rsp),%r10
  0x000000010ca43f81: mov    %r10,%rbp
  0x000000010ca43f84: shr    $0x3,%rbp          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43f88: mov    0x68(%rsp),%r8
  0x000000010ca43f8d: shr    $0x3,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43f91: mov    %r8,%rcx
  0x000000010ca43f94: add    $0xfffffffffffffffe,%rcx
  0x000000010ca43f98: cmp    %r9d,%r11d
  0x000000010ca43f9b: jb     0x000000010ca45dcd
  0x000000010ca43fa1: mov    0x14(%rsp),%r10d
  0x000000010ca43fa6: cmp    %r9d,%r10d
  0x000000010ca43fa9: jb     0x000000010ca45dcd
  0x000000010ca43faf: test   %r9d,%r9d
  0x000000010ca43fb2: jle    0x000000010ca45df9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43fb8: mov    0x18(%rsp),%r11
  0x000000010ca43fbd: add    $0x10,%r11
  0x000000010ca43fc1: cmp    0x14(%rsp),%r9d
  0x000000010ca43fc6: jl     0x000000010ca450bc
  0x000000010ca43fcc: mov    0x80(%rsp),%rdx
  0x000000010ca43fd4: add    $0xfffffffffffffff0,%rdx
  0x000000010ca43fd8: shr    $0x3,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43fdc: mov    %r11,%rdi
  0x000000010ca43fdf: mov    %rbx,%rsi
  0x000000010ca43fe2: movabs $0x10c9f4780,%r10
  0x000000010ca43fec: callq  *%r10              ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43fef: mov    0x70(%rsp),%r10
  0x000000010ca43ff4: mov    %ebp,0x10(%r10)    ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca43ff8: mov    0xc(%r10),%r8d
  0x000000010ca43ffc: mov    %r8d,%r11d
  0x000000010ca43fff: inc    %r11d
  0x000000010ca44002: mov    0x70(%rsp),%r9
  0x000000010ca44007: mov    %r11d,0xc(%r9)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4400b: shr    $0x9,%r10
  0x000000010ca4400f: movabs $0x10c3a2000,%r11
  0x000000010ca44019: mov    %r12b,(%r11,%r10,1)  ;*new
                                                ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4401d: mov    0x88(%rsp),%r10
  0x000000010ca44025: mov    %r10,0x78(%rsp)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4402a: mov    0x78(%rsp),%r10
  0x000000010ca4402f: mov    0xc(%r10),%r11d
  0x000000010ca44033: cmp    %r11d,%r8d
  0x000000010ca44036: jae    0x000000010ca45929  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca4403c: mov    $0x49,%r9d
  0x000000010ca44042: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44048: jmpq   0x000000010ca43a68
  0x000000010ca4404d: mov    0x78(%rsp),%r9
  0x000000010ca44052: test   %r9,%r9
  0x000000010ca44055: je     0x000000010ca459cb  ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x000000010ca4405b: mov    %r9,0x18(%rsp)
  0x000000010ca44060: mov    0xc(%r9),%ebp      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44064: mov    %r10d,%r9d
  0x000000010ca44067: sub    %ebp,%r9d
  0x000000010ca4406a: inc    %r9d
  0x000000010ca4406d: test   %r9d,%r9d
  0x000000010ca44070: jle    0x000000010ca44091  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44072: mov    %ebp,%r11d
  0x000000010ca44075: shl    %r11d              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44078: mov    %r11d,%r8d
  0x000000010ca4407b: sub    %r10d,%r8d
  0x000000010ca4407e: inc    %r8d
  0x000000010ca44081: test   %r8d,%r8d
  0x000000010ca44084: jl     0x000000010ca4409f  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44086: add    $0x2,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4408a: mov    %r11d,0x14(%rsp)
  0x000000010ca4408f: jmp    0x000000010ca440a3
  0x000000010ca44091: mov    0x70(%rsp),%r10
  0x000000010ca44096: mov    %r11d,0xc(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4409a: jmpq   0x000000010ca4422e
  0x000000010ca4409f: mov    %edx,0x14(%rsp)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca440a3: mov    0x14(%rsp),%r11d
  0x000000010ca440a8: test   %r11d,%r11d
  0x000000010ca440ab: jle    0x000000010ca440bd
  0x000000010ca440ad: mov    $0x7ffffff7,%r11d
  0x000000010ca440b3: sub    0x14(%rsp),%r11d
  0x000000010ca440b8: test   %r11d,%r11d
  0x000000010ca440bb: jge    0x000000010ca440cc  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca440bd: mov    0x70(%rsp),%rsi
  0x000000010ca440c2: nop
  0x000000010ca440c3: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=5000}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca440c8: mov    %eax,0x14(%rsp)    ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x000000010ca440cc: mov    0x14(%rsp),%r10d
  0x000000010ca440d1: cmp    $0x80000,%r10d
  0x000000010ca440d8: ja     0x000000010ca45e0b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca440de: movslq 0x14(%rsp),%r10    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca440e3: shl    %r10
  0x000000010ca440e6: add    $0x17,%r10         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca440ea: mov    %r10,0x68(%rsp)
  0x000000010ca440ef: and    $0xfffffffffffffff8,%r10  ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x000000010ca440f3: mov    %r10,0x80(%rsp)
  0x000000010ca440fb: mov    0x14(%rsp),%r11d
  0x000000010ca44100: cmp    $0x80000,%r11d
  0x000000010ca44107: ja     0x000000010ca45470
  0x000000010ca4410d: mov    0x60(%r15),%r8
  0x000000010ca44111: mov    %r8,%r10
  0x000000010ca44114: mov    0x80(%rsp),%r11
  0x000000010ca4411c: add    %r11,%r10
  0x000000010ca4411f: cmp    0x70(%r15),%r10
  0x000000010ca44123: jae    0x000000010ca45470  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44129: mov    %r10,0x60(%r15)
  0x000000010ca4412d: prefetchnta 0xc0(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44135: movq   $0x1,(%r8)
  0x000000010ca4413c: prefetchnta 0x100(%r10)
  0x000000010ca44144: movl   $0xf8000041,0x8(%r8)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca4414c: mov    0x14(%rsp),%r11d
  0x000000010ca44151: mov    %r11d,0xc(%r8)
  0x000000010ca44155: prefetchnta 0x140(%r10)
  0x000000010ca4415d: prefetchnta 0x180(%r10)   ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44165: mov    %r8,0x88(%rsp)
  0x000000010ca4416d: cmp    0x14(%rsp),%ebp
  0x000000010ca44171: mov    0x14(%rsp),%r9d
  0x000000010ca44176: cmovl  %ebp,%r9d
  0x000000010ca4417a: mov    %r8,%rsi
  0x000000010ca4417d: add    $0x10,%rsi         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44181: mov    0x68(%rsp),%r10
  0x000000010ca44186: shr    $0x3,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4418a: mov    %r10,%rcx
  0x000000010ca4418d: add    $0xfffffffffffffffe,%rcx
  0x000000010ca44191: cmp    %r9d,%ebp
  0x000000010ca44194: jb     0x000000010ca45e15
  0x000000010ca4419a: mov    0x14(%rsp),%ebp
  0x000000010ca4419e: cmp    %r9d,%ebp
  0x000000010ca441a1: jb     0x000000010ca45e15
  0x000000010ca441a7: test   %r9d,%r9d
  0x000000010ca441aa: jle    0x000000010ca45e41  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441b0: mov    0x18(%rsp),%r8
  0x000000010ca441b5: add    $0x10,%r8          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441b9: cmp    0x14(%rsp),%r9d
  0x000000010ca441be: jl     0x000000010ca45107
  0x000000010ca441c4: mov    0x80(%rsp),%rdx
  0x000000010ca441cc: add    $0xfffffffffffffff0,%rdx
  0x000000010ca441d0: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441d4: mov    %r8,%rdi
  0x000000010ca441d7: movabs $0x10c9f4780,%r10
  0x000000010ca441e1: callq  *%r10              ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441e4: mov    0x70(%rsp),%r10
  0x000000010ca441e9: mov    0xc(%r10),%r8d     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441ed: mov    0x88(%rsp),%r10
  0x000000010ca441f5: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca441f9: mov    0x70(%rsp),%r11
  0x000000010ca441fe: mov    %r10d,0x10(%r11)   ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44202: mov    %r8d,%r10d
  0x000000010ca44205: inc    %r10d
  0x000000010ca44208: mov    %r10d,0xc(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4420c: mov    %r11,%r10
  0x000000010ca4420f: shr    $0x9,%r10
  0x000000010ca44213: movabs $0x10c3a2000,%r11
  0x000000010ca4421d: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44221: mov    0x88(%rsp),%r10
  0x000000010ca44229: mov    %r10,0x78(%rsp)    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4422e: mov    0x78(%rsp),%r10
  0x000000010ca44233: mov    0xc(%r10),%r11d
  0x000000010ca44237: cmp    %r11d,%r8d
  0x000000010ca4423a: jae    0x000000010ca459dd  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)

  0x000000010ca44240: mov    $0x42,%r11d
  0x000000010ca44246: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4424c: jmpq   0x000000010ca43a68
  0x000000010ca44251: mov    0x78(%rsp),%r9
  0x000000010ca44256: test   %r9,%r9
  0x000000010ca44259: je     0x000000010ca45a39  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4425f: mov    %r9,0x18(%rsp)
  0x000000010ca44264: mov    0xc(%r9),%ebp      ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44268: mov    %r10d,%ecx
  0x000000010ca4426b: sub    %ebp,%ecx
  0x000000010ca4426d: inc    %ecx
  0x000000010ca4426f: test   %ecx,%ecx
  0x000000010ca44271: jle    0x000000010ca44292  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44273: mov    %ebp,%r9d
  0x000000010ca44276: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44279: mov    %r9d,%r11d
  0x000000010ca4427c: sub    %r10d,%r11d
  0x000000010ca4427f: inc    %r11d
  0x000000010ca44282: test   %r11d,%r11d
  0x000000010ca44285: jl     0x000000010ca442a0  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44287: add    $0x2,%r9d          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4428b: mov    %r9d,0x14(%rsp)
  0x000000010ca44290: jmp    0x000000010ca442a4
  0x000000010ca44292: mov    0x70(%rsp),%r10
  0x000000010ca44297: mov    %r11d,0xc(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4429b: jmpq   0x000000010ca44429
  0x000000010ca442a0: mov    %edx,0x14(%rsp)    ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442a4: mov    0x14(%rsp),%r10d
  0x000000010ca442a9: test   %r10d,%r10d
  0x000000010ca442ac: jle    0x000000010ca442be
  0x000000010ca442ae: mov    $0x7ffffff7,%r10d
  0x000000010ca442b4: sub    0x14(%rsp),%r10d
  0x000000010ca442b9: test   %r10d,%r10d
  0x000000010ca442bc: jge    0x000000010ca442cc  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca442be: mov    0x70(%rsp),%rsi
  0x000000010ca442c3: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=5512}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca442c8: mov    %eax,0x14(%rsp)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442cc: mov    0x14(%rsp),%r11d
  0x000000010ca442d1: cmp    $0x80000,%r11d
  0x000000010ca442d8: ja     0x000000010ca45e53  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442de: movslq 0x14(%rsp),%r10    ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442e3: shl    %r10
  0x000000010ca442e6: add    $0x17,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442ea: mov    %r10,0x68(%rsp)
  0x000000010ca442ef: and    $0xfffffffffffffff8,%r10  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca442f3: mov    %r10,0x80(%rsp)
  0x000000010ca442fb: cmp    $0x80000,%r11d
  0x000000010ca44302: ja     0x000000010ca4548c  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44308: mov    0x60(%r15),%r8     ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4430c: mov    %r8,%r10
  0x000000010ca4430f: mov    0x80(%rsp),%r11
  0x000000010ca44317: add    %r11,%r10
  0x000000010ca4431a: cmp    0x70(%r15),%r10
  0x000000010ca4431e: jae    0x000000010ca4548c  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44324: mov    %r10,0x60(%r15)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44328: prefetchnta 0xc0(%r10)
  0x000000010ca44330: movq   $0x1,(%r8)
  0x000000010ca44337: prefetchnta 0x100(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4433f: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca44347: mov    0x14(%rsp),%r11d
  0x000000010ca4434c: mov    %r11d,0xc(%r8)     ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44350: prefetchnta 0x140(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44358: prefetchnta 0x180(%r10)
  0x000000010ca44360: mov    %r8,0x88(%rsp)
  0x000000010ca44368: cmp    0x14(%rsp),%ebp
  0x000000010ca4436c: mov    0x14(%rsp),%r9d
  0x000000010ca44371: cmovl  %ebp,%r9d          ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44375: mov    %r8,%rsi
  0x000000010ca44378: add    $0x10,%rsi         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4437c: mov    0x68(%rsp),%r10
  0x000000010ca44381: shr    $0x3,%r10          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44385: mov    %r10,%rcx
  0x000000010ca44388: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4438c: cmp    %r9d,%ebp
  0x000000010ca4438f: jb     0x000000010ca45e5d
  0x000000010ca44395: mov    0x14(%rsp),%ebp
  0x000000010ca44399: cmp    %r9d,%ebp
  0x000000010ca4439c: jb     0x000000010ca45e5d
  0x000000010ca443a2: test   %r9d,%r9d
  0x000000010ca443a5: jle    0x000000010ca45e89  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443ab: mov    0x18(%rsp),%r8
  0x000000010ca443b0: add    $0x10,%r8          ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443b4: cmp    0x14(%rsp),%r9d
  0x000000010ca443b9: jl     0x000000010ca4514f  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443bf: mov    0x80(%rsp),%rdx
  0x000000010ca443c7: add    $0xfffffffffffffff0,%rdx
  0x000000010ca443cb: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443cf: mov    %r8,%rdi
  0x000000010ca443d2: movabs $0x10c9f4780,%r10
  0x000000010ca443dc: callq  *%r10              ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443df: mov    0x70(%rsp),%r10
  0x000000010ca443e4: mov    0xc(%r10),%r8d     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443e8: mov    0x88(%rsp),%r10
  0x000000010ca443f0: mov    %r10,%r11
  0x000000010ca443f3: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca443f7: mov    0x70(%rsp),%r10
  0x000000010ca443fc: mov    %r11d,0x10(%r10)   ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44400: mov    %r8d,%r11d
  0x000000010ca44403: inc    %r11d
  0x000000010ca44406: mov    %r11d,0xc(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4440a: shr    $0x9,%r10
  0x000000010ca4440e: movabs $0x10c3a2000,%r11
  0x000000010ca44418: mov    %r12b,(%r11,%r10,1)  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4441c: mov    0x88(%rsp),%r10
  0x000000010ca44424: mov    %r10,0x78(%rsp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44429: mov    0x78(%rsp),%r10
  0x000000010ca4442e: mov    0xc(%r10),%r10d
  0x000000010ca44432: cmp    %r10d,%r8d
  0x000000010ca44435: jae    0x000000010ca45a49  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x000000010ca4443b: mov    0x78(%rsp),%r10
  0x000000010ca44440: mov    $0x4a,%r9d
  0x000000010ca44446: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4444c: jmpq   0x000000010ca43a68
  0x000000010ca44451: mov    0x78(%rsp),%r9
  0x000000010ca44456: test   %r9,%r9
  0x000000010ca44459: je     0x000000010ca45aa5  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4445f: mov    %r9,0x18(%rsp)
  0x000000010ca44464: mov    0xc(%r9),%ebp
  0x000000010ca44468: mov    %r10d,%r9d
  0x000000010ca4446b: sub    %ebp,%r9d
  0x000000010ca4446e: inc    %r9d
  0x000000010ca44471: test   %r9d,%r9d
  0x000000010ca44474: jle    0x000000010ca44495  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44476: mov    %ebp,%r11d
  0x000000010ca44479: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4447c: mov    %r11d,%r8d
  0x000000010ca4447f: sub    %r10d,%r8d
  0x000000010ca44482: inc    %r8d
  0x000000010ca44485: test   %r8d,%r8d
  0x000000010ca44488: jl     0x000000010ca444a3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4448a: add    $0x2,%r11d         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4448e: mov    %r11d,0x14(%rsp)
  0x000000010ca44493: jmp    0x000000010ca444a7
  0x000000010ca44495: mov    0x70(%rsp),%r10
  0x000000010ca4449a: mov    %r11d,0xc(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4449e: jmpq   0x000000010ca44632
  0x000000010ca444a3: mov    %edx,0x14(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444a7: mov    0x14(%rsp),%r11d
  0x000000010ca444ac: test   %r11d,%r11d
  0x000000010ca444af: jle    0x000000010ca444c1
  0x000000010ca444b1: mov    $0x7ffffff7,%r11d
  0x000000010ca444b7: sub    0x14(%rsp),%r11d
  0x000000010ca444bc: test   %r11d,%r11d
  0x000000010ca444bf: jge    0x000000010ca444d0  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca444c1: mov    0x70(%rsp),%rsi
  0x000000010ca444c6: nop
  0x000000010ca444c7: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=6028}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca444cc: mov    %eax,0x14(%rsp)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444d0: mov    0x14(%rsp),%r10d
  0x000000010ca444d5: cmp    $0x80000,%r10d
  0x000000010ca444dc: ja     0x000000010ca45f00  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444e2: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444e7: shl    %r10
  0x000000010ca444ea: add    $0x17,%r10         ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444ee: mov    %r10,0x68(%rsp)
  0x000000010ca444f3: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca444f7: mov    %r10,0x80(%rsp)
  0x000000010ca444ff: mov    0x14(%rsp),%r11d
  0x000000010ca44504: cmp    $0x80000,%r11d
  0x000000010ca4450b: ja     0x000000010ca454a8  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44511: mov    0x60(%r15),%r8     ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44515: mov    %r8,%r10
  0x000000010ca44518: mov    0x80(%rsp),%r11
  0x000000010ca44520: add    %r11,%r10
  0x000000010ca44523: cmp    0x70(%r15),%r10
  0x000000010ca44527: jae    0x000000010ca454a8  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4452d: mov    %r10,0x60(%r15)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44531: prefetchnta 0xc0(%r10)    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44539: movq   $0x1,(%r8)
  0x000000010ca44540: prefetchnta 0x100(%r10)   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44548: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca44550: mov    0x14(%rsp),%r11d
  0x000000010ca44555: mov    %r11d,0xc(%r8)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44559: prefetchnta 0x140(%r10)   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44561: prefetchnta 0x180(%r10)
  0x000000010ca44569: mov    %r8,0x88(%rsp)
  0x000000010ca44571: cmp    0x14(%rsp),%ebp
  0x000000010ca44575: mov    0x14(%rsp),%r9d
  0x000000010ca4457a: cmovl  %ebp,%r9d          ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4457e: mov    %r8,%rsi
  0x000000010ca44581: add    $0x10,%rsi         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44585: mov    0x68(%rsp),%r10
  0x000000010ca4458a: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4458e: mov    %r10,%rcx
  0x000000010ca44591: add    $0xfffffffffffffffe,%rcx
  0x000000010ca44595: cmp    %r9d,%ebp
  0x000000010ca44598: jb     0x000000010ca45f0a  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4459e: mov    0x14(%rsp),%ebp
  0x000000010ca445a2: cmp    %r9d,%ebp
  0x000000010ca445a5: jb     0x000000010ca45f0a  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445ab: test   %r9d,%r9d
  0x000000010ca445ae: jle    0x000000010ca45f35  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445b4: mov    0x18(%rsp),%r8
  0x000000010ca445b9: add    $0x10,%r8          ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445bd: cmp    0x14(%rsp),%r9d
  0x000000010ca445c2: jl     0x000000010ca451c3  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445c8: mov    0x80(%rsp),%rdx
  0x000000010ca445d0: add    $0xfffffffffffffff0,%rdx
  0x000000010ca445d4: shr    $0x3,%rdx          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445d8: mov    %r8,%rdi
  0x000000010ca445db: movabs $0x10c9f4780,%r10
  0x000000010ca445e5: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445e8: mov    0x70(%rsp),%r10
  0x000000010ca445ed: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445f1: mov    0x88(%rsp),%r10
  0x000000010ca445f9: shr    $0x3,%r10          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca445fd: mov    0x70(%rsp),%r11
  0x000000010ca44602: mov    %r10d,0x10(%r11)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44606: mov    %r8d,%r10d
  0x000000010ca44609: inc    %r10d
  0x000000010ca4460c: mov    %r10d,0xc(%r11)    ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44610: mov    %r11,%r10
  0x000000010ca44613: shr    $0x9,%r10
  0x000000010ca44617: movabs $0x10c3a2000,%r11
  0x000000010ca44621: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44625: mov    0x88(%rsp),%r10
  0x000000010ca4462d: mov    %r10,0x78(%rsp)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44632: mov    0x78(%rsp),%r10
  0x000000010ca44637: mov    0xc(%r10),%r11d
  0x000000010ca4463b: cmp    %r11d,%r8d
  0x000000010ca4463e: jae    0x000000010ca45ab5
  0x000000010ca44644: mov    $0x46,%r11d
  0x000000010ca4464a: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44650: jmpq   0x000000010ca43a68
  0x000000010ca44655: mov    0x78(%rsp),%r9
  0x000000010ca4465a: test   %r9,%r9
  0x000000010ca4465d: je     0x000000010ca45b11  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44663: mov    %r9,0x18(%rsp)
  0x000000010ca44668: mov    0xc(%r9),%ebp      ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4466c: mov    %r10d,%ecx
  0x000000010ca4466f: sub    %ebp,%ecx
  0x000000010ca44671: inc    %ecx
  0x000000010ca44673: test   %ecx,%ecx
  0x000000010ca44675: jle    0x000000010ca44696  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44677: mov    %ebp,%r9d
  0x000000010ca4467a: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4467d: mov    %r9d,%r11d
  0x000000010ca44680: sub    %r10d,%r11d
  0x000000010ca44683: inc    %r11d
  0x000000010ca44686: test   %r11d,%r11d
  0x000000010ca44689: jl     0x000000010ca446a4  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4468b: add    $0x2,%r9d          ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4468f: mov    %r9d,0x14(%rsp)
  0x000000010ca44694: jmp    0x000000010ca446a8
  0x000000010ca44696: mov    0x70(%rsp),%r10
  0x000000010ca4469b: mov    %r11d,0xc(%r10)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4469f: jmpq   0x000000010ca4482d
  0x000000010ca446a4: mov    %edx,0x14(%rsp)    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446a8: mov    0x14(%rsp),%r10d
  0x000000010ca446ad: test   %r10d,%r10d
  0x000000010ca446b0: jle    0x000000010ca446c2
  0x000000010ca446b2: mov    $0x7ffffff7,%r10d
  0x000000010ca446b8: sub    0x14(%rsp),%r10d
  0x000000010ca446bd: test   %r10d,%r10d
  0x000000010ca446c0: jge    0x000000010ca446d0  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca446c2: mov    0x70(%rsp),%rsi
  0x000000010ca446c7: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=6540}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca446cc: mov    %eax,0x14(%rsp)    ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446d0: mov    0x14(%rsp),%r11d
  0x000000010ca446d5: cmp    $0x80000,%r11d
  0x000000010ca446dc: ja     0x000000010ca45f47  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446e2: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446e7: shl    %r10
  0x000000010ca446ea: add    $0x17,%r10         ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446ee: mov    %r10,0x68(%rsp)
  0x000000010ca446f3: and    $0xfffffffffffffff8,%r10  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca446f7: mov    %r10,0x80(%rsp)
  0x000000010ca446ff: cmp    $0x80000,%r11d
  0x000000010ca44706: ja     0x000000010ca454c4
  0x000000010ca4470c: mov    0x60(%r15),%r8
  0x000000010ca44710: mov    %r8,%r10
  0x000000010ca44713: mov    0x80(%rsp),%r11
  0x000000010ca4471b: add    %r11,%r10
  0x000000010ca4471e: cmp    0x70(%r15),%r10
  0x000000010ca44722: jae    0x000000010ca454c4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44728: mov    %r10,0x60(%r15)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4472c: prefetchnta 0xc0(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44734: movq   $0x1,(%r8)
  0x000000010ca4473b: prefetchnta 0x100(%r10)   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44743: movl   $0xf8000041,0x8(%r8)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca4474b: mov    0x14(%rsp),%r11d
  0x000000010ca44750: mov    %r11d,0xc(%r8)     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44754: prefetchnta 0x140(%r10)   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4475c: prefetchnta 0x180(%r10)
  0x000000010ca44764: mov    %r8,0x88(%rsp)
  0x000000010ca4476c: cmp    0x14(%rsp),%ebp
  0x000000010ca44770: mov    0x14(%rsp),%r9d
  0x000000010ca44775: cmovl  %ebp,%r9d          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44779: mov    %r8,%rsi
  0x000000010ca4477c: add    $0x10,%rsi
  0x000000010ca44780: mov    0x68(%rsp),%r10
  0x000000010ca44785: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44789: mov    %r10,%rcx
  0x000000010ca4478c: add    $0xfffffffffffffffe,%rcx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44790: cmp    %r9d,%ebp
  0x000000010ca44793: jb     0x000000010ca45f51  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44799: mov    0x14(%rsp),%ebp
  0x000000010ca4479d: cmp    %r9d,%ebp
  0x000000010ca447a0: jb     0x000000010ca45f51  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447a6: test   %r9d,%r9d
  0x000000010ca447a9: jle    0x000000010ca45f7d  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447af: mov    0x18(%rsp),%r8
  0x000000010ca447b4: add    $0x10,%r8          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447b8: cmp    0x14(%rsp),%r9d
  0x000000010ca447bd: jl     0x000000010ca4520b
  0x000000010ca447c3: mov    0x80(%rsp),%rdx
  0x000000010ca447cb: add    $0xfffffffffffffff0,%rdx
  0x000000010ca447cf: shr    $0x3,%rdx          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447d3: mov    %r8,%rdi
  0x000000010ca447d6: movabs $0x10c9f4780,%r10
  0x000000010ca447e0: callq  *%r10              ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@75 (line 304)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447e3: mov    0x70(%rsp),%r10
  0x000000010ca447e8: mov    0xc(%r10),%r8d     ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447ec: mov    0x88(%rsp),%r10
  0x000000010ca447f4: mov    %r10,%r11
  0x000000010ca447f7: shr    $0x3,%r11          ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca447fb: mov    0x70(%rsp),%r10
  0x000000010ca44800: mov    %r11d,0x10(%r10)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44804: mov    %r8d,%r11d
  0x000000010ca44807: inc    %r11d
  0x000000010ca4480a: mov    %r11d,0xc(%r10)    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4480e: shr    $0x9,%r10
  0x000000010ca44812: movabs $0x10c3a2000,%r11
  0x000000010ca4481c: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44820: mov    0x88(%rsp),%r10
  0x000000010ca44828: mov    %r10,0x78(%rsp)    ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4482d: mov    0x78(%rsp),%r10
  0x000000010ca44832: mov    0xc(%r10),%r10d
  0x000000010ca44836: cmp    %r10d,%r8d
  0x000000010ca44839: jae    0x000000010ca45b21  ;*putfield offset
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@6 (line 57)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4483f: mov    0x78(%rsp),%r10
  0x000000010ca44844: mov    $0x44,%r9d
  0x000000010ca4484a: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44850: jmpq   0x000000010ca43a68
  0x000000010ca44855: mov    0x78(%rsp),%r9
  0x000000010ca4485a: test   %r9,%r9
  0x000000010ca4485d: je     0x000000010ca45b7d  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44863: mov    %r9,0x18(%rsp)
  0x000000010ca44868: mov    0xc(%r9),%ebp      ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4486c: mov    %r10d,%r9d
  0x000000010ca4486f: sub    %ebp,%r9d
  0x000000010ca44872: inc    %r9d
  0x000000010ca44875: test   %r9d,%r9d
  0x000000010ca44878: jle    0x000000010ca44899  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4487a: mov    %ebp,%r11d
  0x000000010ca4487d: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44880: mov    %r11d,%r8d
  0x000000010ca44883: sub    %r10d,%r8d
  0x000000010ca44886: inc    %r8d
  0x000000010ca44889: test   %r8d,%r8d
  0x000000010ca4488c: jl     0x000000010ca448a7  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4488e: add    $0x2,%r11d         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44892: mov    %r11d,0x14(%rsp)
  0x000000010ca44897: jmp    0x000000010ca448ab
  0x000000010ca44899: mov    0x70(%rsp),%r10
  0x000000010ca4489e: mov    %r11d,0xc(%r10)    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448a2: jmpq   0x000000010ca44a36
  0x000000010ca448a7: mov    %edx,0x14(%rsp)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448ab: mov    0x14(%rsp),%r11d
  0x000000010ca448b0: test   %r11d,%r11d
  0x000000010ca448b3: jle    0x000000010ca448c5
  0x000000010ca448b5: mov    $0x7ffffff7,%r11d
  0x000000010ca448bb: sub    0x14(%rsp),%r11d
  0x000000010ca448c0: test   %r11d,%r11d
  0x000000010ca448c3: jge    0x000000010ca448d4  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca448c5: mov    0x70(%rsp),%rsi
  0x000000010ca448ca: nop
  0x000000010ca448cb: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=7056}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca448d0: mov    %eax,0x14(%rsp)    ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448d4: mov    0x14(%rsp),%r10d
  0x000000010ca448d9: cmp    $0x80000,%r10d
  0x000000010ca448e0: ja     0x000000010ca45f8f  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448e6: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448eb: shl    %r10
  0x000000010ca448ee: add    $0x17,%r10         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448f2: mov    %r10,0x68(%rsp)
  0x000000010ca448f7: and    $0xfffffffffffffff8,%r10  ;*new
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca448fb: mov    %r10,0x80(%rsp)
  0x000000010ca44903: mov    0x14(%rsp),%r11d
  0x000000010ca44908: cmp    $0x80000,%r11d
  0x000000010ca4490f: ja     0x000000010ca454e0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44915: mov    0x60(%r15),%r8     ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44919: mov    %r8,%r10
  0x000000010ca4491c: mov    0x80(%rsp),%r11
  0x000000010ca44924: add    %r11,%r10
  0x000000010ca44927: cmp    0x70(%r15),%r10
  0x000000010ca4492b: jae    0x000000010ca454e0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44931: mov    %r10,0x60(%r15)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44935: prefetchnta 0xc0(%r10)
  0x000000010ca4493d: movq   $0x1,(%r8)
  0x000000010ca44944: prefetchnta 0x100(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4494c: movl   $0xf8000041,0x8(%r8)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca44954: mov    0x14(%rsp),%r11d
  0x000000010ca44959: mov    %r11d,0xc(%r8)
  0x000000010ca4495d: prefetchnta 0x140(%r10)
  0x000000010ca44965: prefetchnta 0x180(%r10)
  0x000000010ca4496d: mov    %r8,0x88(%rsp)
  0x000000010ca44975: cmp    0x14(%rsp),%ebp
  0x000000010ca44979: mov    0x14(%rsp),%r9d
  0x000000010ca4497e: cmovl  %ebp,%r9d          ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44982: mov    %r8,%rsi
  0x000000010ca44985: add    $0x10,%rsi         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44989: mov    0x68(%rsp),%r10
  0x000000010ca4498e: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44992: mov    %r10,%rcx
  0x000000010ca44995: add    $0xfffffffffffffffe,%rcx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44999: cmp    %r9d,%ebp
  0x000000010ca4499c: jb     0x000000010ca45f99  ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449a2: mov    0x14(%rsp),%ebp
  0x000000010ca449a6: cmp    %r9d,%ebp
  0x000000010ca449a9: jb     0x000000010ca45f99  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449af: test   %r9d,%r9d
  0x000000010ca449b2: jle    0x000000010ca45fc5  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449b8: mov    0x18(%rsp),%r8
  0x000000010ca449bd: add    $0x10,%r8          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449c1: cmp    0x14(%rsp),%r9d
  0x000000010ca449c6: jl     0x000000010ca45253  ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449cc: mov    0x80(%rsp),%rdx
  0x000000010ca449d4: add    $0xfffffffffffffff0,%rdx
  0x000000010ca449d8: shr    $0x3,%rdx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449dc: mov    %r8,%rdi
  0x000000010ca449df: movabs $0x10c9f4780,%r10
  0x000000010ca449e9: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449ec: mov    0x70(%rsp),%r10
  0x000000010ca449f1: mov    0xc(%r10),%r8d     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca449f5: mov    0x88(%rsp),%r10
  0x000000010ca449fd: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a01: mov    0x70(%rsp),%r11
  0x000000010ca44a06: mov    %r10d,0x10(%r11)   ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@68 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a0a: mov    %r8d,%r10d
  0x000000010ca44a0d: inc    %r10d
  0x000000010ca44a10: mov    %r10d,0xc(%r11)    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a14: mov    %r11,%r10
  0x000000010ca44a17: shr    $0x9,%r10
  0x000000010ca44a1b: movabs $0x10c3a2000,%r11
  0x000000010ca44a25: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a29: mov    0x88(%rsp),%r10
  0x000000010ca44a31: mov    %r10,0x78(%rsp)    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a36: mov    0x78(%rsp),%r10
  0x000000010ca44a3b: mov    0xc(%r10),%r11d
  0x000000010ca44a3f: cmp    %r11d,%r8d
  0x000000010ca44a42: jae    0x000000010ca45b8d  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@1 (line 134)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a48: mov    $0x53,%r11d
  0x000000010ca44a4e: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a54: jmpq   0x000000010ca43a68
  0x000000010ca44a59: mov    0x78(%rsp),%r9
  0x000000010ca44a5e: test   %r9,%r9
  0x000000010ca44a61: je     0x000000010ca45c89  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a67: mov    %r9,0x18(%rsp)
  0x000000010ca44a6c: mov    0xc(%r9),%ebp      ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a70: mov    %r10d,%ecx
  0x000000010ca44a73: sub    %ebp,%ecx
  0x000000010ca44a75: inc    %ecx
  0x000000010ca44a77: test   %ecx,%ecx
  0x000000010ca44a79: jle    0x000000010ca44a9a  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a7b: mov    %ebp,%r9d
  0x000000010ca44a7e: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a81: mov    %r9d,%r11d
  0x000000010ca44a84: sub    %r10d,%r11d
  0x000000010ca44a87: inc    %r11d
  0x000000010ca44a8a: test   %r11d,%r11d
  0x000000010ca44a8d: jl     0x000000010ca44aa8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a8f: add    $0x2,%r9d          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44a93: mov    %r9d,0x14(%rsp)
  0x000000010ca44a98: jmp    0x000000010ca44aac
  0x000000010ca44a9a: mov    0x70(%rsp),%r10
  0x000000010ca44a9f: mov    %r11d,0xc(%r10)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44aa3: jmpq   0x000000010ca44c31
  0x000000010ca44aa8: mov    %edx,0x14(%rsp)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44aac: mov    0x14(%rsp),%r10d
  0x000000010ca44ab1: test   %r10d,%r10d
  0x000000010ca44ab4: jle    0x000000010ca44ac6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ab6: mov    $0x7ffffff7,%r10d
  0x000000010ca44abc: sub    0x14(%rsp),%r10d
  0x000000010ca44ac1: test   %r10d,%r10d
  0x000000010ca44ac4: jge    0x000000010ca44ad4  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca44ac6: mov    0x70(%rsp),%rsi
  0x000000010ca44acb: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=7568}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca44ad0: mov    %eax,0x14(%rsp)    ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ad4: mov    0x14(%rsp),%r11d
  0x000000010ca44ad9: cmp    $0x80000,%r11d
  0x000000010ca44ae0: ja     0x000000010ca45fd7  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ae6: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44aeb: shl    %r10
  0x000000010ca44aee: add    $0x17,%r10         ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44af2: mov    %r10,0x68(%rsp)
  0x000000010ca44af7: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44afb: mov    %r10,0x80(%rsp)
  0x000000010ca44b03: cmp    $0x80000,%r11d
  0x000000010ca44b0a: ja     0x000000010ca45547
  0x000000010ca44b10: mov    0x60(%r15),%r8
  0x000000010ca44b14: mov    %r8,%r10
  0x000000010ca44b17: mov    0x80(%rsp),%r11
  0x000000010ca44b1f: add    %r11,%r10
  0x000000010ca44b22: cmp    0x70(%r15),%r10
  0x000000010ca44b26: jae    0x000000010ca45547  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b2c: mov    %r10,0x60(%r15)    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b30: prefetchnta 0xc0(%r10)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b38: movq   $0x1,(%r8)
  0x000000010ca44b3f: prefetchnta 0x100(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b47: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca44b4f: mov    0x14(%rsp),%r11d
  0x000000010ca44b54: mov    %r11d,0xc(%r8)     ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b58: prefetchnta 0x140(%r10)
  0x000000010ca44b60: prefetchnta 0x180(%r10)
  0x000000010ca44b68: mov    %r8,0x88(%rsp)
  0x000000010ca44b70: cmp    0x14(%rsp),%ebp
  0x000000010ca44b74: mov    0x14(%rsp),%r9d
  0x000000010ca44b79: cmovl  %ebp,%r9d          ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b7d: mov    %r8,%rsi
  0x000000010ca44b80: add    $0x10,%rsi         ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b84: mov    0x68(%rsp),%r10
  0x000000010ca44b89: shr    $0x3,%r10          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b8d: mov    %r10,%rcx
  0x000000010ca44b90: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44b94: cmp    %r9d,%ebp
  0x000000010ca44b97: jb     0x000000010ca45fe1
  0x000000010ca44b9d: mov    0x14(%rsp),%ebp
  0x000000010ca44ba1: cmp    %r9d,%ebp
  0x000000010ca44ba4: jb     0x000000010ca45fe1  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44baa: test   %r9d,%r9d
  0x000000010ca44bad: jle    0x000000010ca4600d  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44bb3: mov    0x18(%rsp),%r8
  0x000000010ca44bb8: add    $0x10,%r8          ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44bbc: cmp    0x14(%rsp),%r9d
  0x000000010ca44bc1: jl     0x000000010ca4529b
  0x000000010ca44bc7: mov    0x80(%rsp),%rdx
  0x000000010ca44bcf: add    $0xfffffffffffffff0,%rdx
  0x000000010ca44bd3: shr    $0x3,%rdx          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44bd7: mov    %r8,%rdi
  0x000000010ca44bda: movabs $0x10c9f4780,%r10
  0x000000010ca44be4: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44be7: mov    0x70(%rsp),%r10
  0x000000010ca44bec: mov    0xc(%r10),%r8d     ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44bf0: mov    0x88(%rsp),%r10
  0x000000010ca44bf8: mov    %r10,%r11
  0x000000010ca44bfb: shr    $0x3,%r11          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44bff: mov    0x70(%rsp),%r10
  0x000000010ca44c04: mov    %r11d,0x10(%r10)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c08: mov    %r8d,%r11d
  0x000000010ca44c0b: inc    %r11d
  0x000000010ca44c0e: mov    %r11d,0xc(%r10)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c12: shr    $0x9,%r10
  0x000000010ca44c16: movabs $0x10c3a2000,%r11
  0x000000010ca44c20: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c24: mov    0x88(%rsp),%r10
  0x000000010ca44c2c: mov    %r10,0x78(%rsp)    ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c31: mov    0x78(%rsp),%r10
  0x000000010ca44c36: mov    0xc(%r10),%r10d
  0x000000010ca44c3a: cmp    %r10d,%r8d
  0x000000010ca44c3d: jae    0x000000010ca45c99
  0x000000010ca44c43: mov    0x78(%rsp),%r10
  0x000000010ca44c48: mov    $0x43,%r9d
  0x000000010ca44c4e: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c54: jmpq   0x000000010ca43a68
  0x000000010ca44c59: mov    0x78(%rsp),%r9
  0x000000010ca44c5e: test   %r9,%r9
  0x000000010ca44c61: je     0x000000010ca45cf5  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c67: mov    %r9,0x18(%rsp)
  0x000000010ca44c6c: mov    0xc(%r9),%r9d      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c70: mov    %r9d,0xb0(%rsp)
  0x000000010ca44c78: mov    %r10d,%r9d
  0x000000010ca44c7b: sub    0xb0(%rsp),%r9d
  0x000000010ca44c83: inc    %r9d
  0x000000010ca44c86: test   %r9d,%r9d
  0x000000010ca44c89: jle    0x000000010ca44caf  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c8b: mov    0xb0(%rsp),%r11d
  0x000000010ca44c93: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44c96: mov    %r11d,%r8d
  0x000000010ca44c99: sub    %r10d,%r8d
  0x000000010ca44c9c: inc    %r8d
  0x000000010ca44c9f: test   %r8d,%r8d
  0x000000010ca44ca2: jl     0x000000010ca44cbd  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ca4: add    $0x2,%r11d         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ca8: mov    %r11d,0x14(%rsp)
  0x000000010ca44cad: jmp    0x000000010ca44cc1
  0x000000010ca44caf: mov    0x70(%rsp),%r10
  0x000000010ca44cb4: mov    %r11d,0xc(%r10)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44cb8: jmpq   0x000000010ca44e79
  0x000000010ca44cbd: mov    %edx,0x14(%rsp)    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44cc1: mov    0x14(%rsp),%r11d
  0x000000010ca44cc6: test   %r11d,%r11d
  0x000000010ca44cc9: jle    0x000000010ca44cdb
  0x000000010ca44ccb: mov    $0x7ffffff7,%r11d
  0x000000010ca44cd1: sub    0x14(%rsp),%r11d
  0x000000010ca44cd6: test   %r11d,%r11d
  0x000000010ca44cd9: jge    0x000000010ca44cec  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca44cdb: mov    0x70(%rsp),%rsi
  0x000000010ca44ce0: mov    %rsi,%rbp
  0x000000010ca44ce3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=8104}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca44ce8: mov    %eax,0x14(%rsp)    ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44cec: mov    0x14(%rsp),%r10d
  0x000000010ca44cf1: cmp    $0x80000,%r10d
  0x000000010ca44cf8: ja     0x000000010ca46031  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44cfe: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d03: mov    0xb0(%rsp),%r11d
  0x000000010ca44d0b: cmp    0x14(%rsp),%r11d
  0x000000010ca44d10: mov    0x14(%rsp),%r8d
  0x000000010ca44d15: cmovl  %r11d,%r8d         ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d19: mov    %r8d,0x60(%rsp)
  0x000000010ca44d1e: shl    %r10
  0x000000010ca44d21: add    $0x17,%r10         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d25: mov    %r10,%r11
  0x000000010ca44d28: shr    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d2c: mov    %r11,0x68(%rsp)
  0x000000010ca44d31: and    $0xfffffffffffffff8,%r10
  0x000000010ca44d35: mov    %r10,0x80(%rsp)
  0x000000010ca44d3d: mov    %r11,%r10
  0x000000010ca44d40: add    $0xfffffffffffffffe,%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d44: mov    %r10,0x88(%rsp)
  0x000000010ca44d4c: mov    0x14(%rsp),%r10d
  0x000000010ca44d51: cmp    $0x80000,%r10d
  0x000000010ca44d58: ja     0x000000010ca455fd
  0x000000010ca44d5e: mov    0x60(%r15),%r8
  0x000000010ca44d62: mov    %r8,%r11
  0x000000010ca44d65: mov    0x80(%rsp),%r10
  0x000000010ca44d6d: add    %r10,%r11
  0x000000010ca44d70: cmp    0x70(%r15),%r11
  0x000000010ca44d74: jae    0x000000010ca455fd  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d7a: mov    %r11,0x60(%r15)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d7e: prefetchnta 0xc0(%r11)
  0x000000010ca44d86: movq   $0x1,(%r8)
  0x000000010ca44d8d: prefetchnta 0x100(%r11)   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44d95: movl   $0xf8000041,0x8(%r8)  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca44d9d: mov    0x14(%rsp),%r10d
  0x000000010ca44da2: mov    %r10d,0xc(%r8)     ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44da6: prefetchnta 0x140(%r11)   ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44dae: prefetchnta 0x180(%r11)   ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44db6: mov    %r8,0x90(%rsp)
  0x000000010ca44dbe: add    $0x10,%r8          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44dc2: mov    0x90(%rsp),%r10
  0x000000010ca44dca: mov    %r10,%rbp
  0x000000010ca44dcd: shr    $0x3,%rbp          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44dd1: mov    0xb0(%rsp),%r10d
  0x000000010ca44dd9: cmp    0x60(%rsp),%r10d
  0x000000010ca44dde: jb     0x000000010ca4603b
  0x000000010ca44de4: mov    0x14(%rsp),%r10d
  0x000000010ca44de9: cmp    0x60(%rsp),%r10d
  0x000000010ca44dee: jb     0x000000010ca4603b
  0x000000010ca44df4: mov    0x60(%rsp),%r11d
  0x000000010ca44df9: test   %r11d,%r11d
  0x000000010ca44dfc: jle    0x000000010ca46071  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e02: mov    0x18(%rsp),%r11
  0x000000010ca44e07: add    $0x10,%r11         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e0b: mov    0x60(%rsp),%r9d
  0x000000010ca44e10: cmp    0x14(%rsp),%r9d
  0x000000010ca44e15: jl     0x000000010ca45329
  0x000000010ca44e1b: mov    0x80(%rsp),%rdx
  0x000000010ca44e23: add    $0xfffffffffffffff0,%rdx
  0x000000010ca44e27: shr    $0x3,%rdx          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e2b: mov    %r11,%rdi
  0x000000010ca44e2e: mov    %r8,%rsi
  0x000000010ca44e31: movabs $0x10c9f4780,%r10
  0x000000010ca44e3b: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e3e: mov    0x70(%rsp),%r10
  0x000000010ca44e43: mov    %ebp,0x10(%r10)    ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@58 (line 302)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e47: mov    0xc(%r10),%r8d     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e4b: mov    %r8d,%r11d
  0x000000010ca44e4e: inc    %r11d
  0x000000010ca44e51: mov    0x70(%rsp),%r9
  0x000000010ca44e56: mov    %r11d,0xc(%r9)     ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e5a: shr    $0x9,%r10
  0x000000010ca44e5e: movabs $0x10c3a2000,%r11
  0x000000010ca44e68: mov    %r12b,(%r11,%r10,1)
  0x000000010ca44e6c: mov    0x90(%rsp),%r10
  0x000000010ca44e74: mov    %r10,0x78(%rsp)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e79: mov    0x78(%rsp),%r10
  0x000000010ca44e7e: mov    0xc(%r10),%r11d
  0x000000010ca44e82: cmp    %r11d,%r8d
  0x000000010ca44e85: jae    0x000000010ca45d05  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e8b: mov    $0x5a,%r11d
  0x000000010ca44e91: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44e97: jmpq   0x000000010ca43a68  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x000000010ca44e9c: mov    0x40(%rsp),%rax
  0x000000010ca44ea1: add    $0xd0,%rsp
  0x000000010ca44ea8: pop    %rbp
  0x000000010ca44ea9: test   %eax,-0x2149eaf(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca44eaf: retq   
  0x000000010ca44eb0: mov    0x98(%rsp),%rsi
  0x000000010ca44eb8: mov    0x30(%rsp),%r10
  0x000000010ca44ebd: mov    %r10,0x18(%rsp)
  0x000000010ca44ec2: mov    0x70(%rsp),%rbp
  0x000000010ca44ec7: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=8588}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca44ecc: mov    0x98(%rsp),%r10
  0x000000010ca44ed4: mov    %rax,%r8
  0x000000010ca44ed7: shr    $0x3,%r8
  0x000000010ca44edb: mov    0x98(%rsp),%r11
  0x000000010ca44ee3: mov    %r8d,0x14(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ee7: shr    $0x9,%r10
  0x000000010ca44eeb: movabs $0x10c3a2000,%r11
  0x000000010ca44ef5: mov    %r12b,(%r11,%r10,1)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44ef9: test   %rax,%rax
  0x000000010ca44efc: je     0x000000010ca4601f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f02: mov    %rax,%rsi
  0x000000010ca44f05: jmpq   0x000000010ca42fd8
  0x000000010ca44f0a: movslq %r9d,%rdx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f0d: mov    %rdx,%r10
  0x000000010ca44f10: shl    %r10
  0x000000010ca44f13: add    $0x10,%r10         ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f17: mov    %r10,%r11
  0x000000010ca44f1a: and    $0xfffffffffffffff9,%r11
  0x000000010ca44f1e: mov    0x78(%rsp),%rdi
  0x000000010ca44f23: add    %r11,%rdi
  0x000000010ca44f26: shr    $0x3,%r10
  0x000000010ca44f2a: sub    %r10,%r8
  0x000000010ca44f2d: mov    %r8,%rcx
  0x000000010ca44f30: xor    %rax,%rax
  0x000000010ca44f33: shl    $0x3,%rcx
  0x000000010ca44f37: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f3a: mov    %rbx,%rdi
  0x000000010ca44f3d: movabs $0x10c9f44c0,%r10
  0x000000010ca44f47: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f4a: jmpq   0x000000010ca43d96  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca44f4f: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44f54: mov    0x20(%rsp),%rbp
  0x000000010ca44f59: mov    0x8(%rsp),%r10
  0x000000010ca44f5e: mov    %r10,(%rsp)
  0x000000010ca44f62: mov    0x38(%rsp),%r10
  0x000000010ca44f67: mov    %r10,0x8(%rsp)
  0x000000010ca44f6c: mov    0x28(%rsp),%r11d
  0x000000010ca44f71: mov    %r11d,0x18(%rsp)
  0x000000010ca44f76: mov    0x2c(%rsp),%r10d
  0x000000010ca44f7b: mov    %r10d,0x1c(%rsp)
  0x000000010ca44f80: mov    0x30(%rsp),%r10
  0x000000010ca44f85: mov    %r10,0x20(%rsp)
  0x000000010ca44f8a: mov    %r13d,0x2c(%rsp)
  0x000000010ca44f8f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [64]=Oop off=8788}
                                                ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@53 (line 2293)
                                                ;   {runtime_call}
  0x000000010ca44f94: callq  0x000000010be85e14  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca44f99: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca44fa3: mov    %ebp,%edx
  0x000000010ca44fa5: xchg   %ax,%ax
  0x000000010ca44fa7: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [128]=Oop off=8812}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca44fac: mov    %rax,%r11
  0x000000010ca44faf: jmpq   0x000000010ca43d18
  0x000000010ca44fb4: mov    %r13d,0x64(%rsp)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca44fb9: lea    (%r12,%r8,8),%rbp
  0x000000010ca44fbd: movabs $0x7c0012f78,%rsi  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca44fc7: callq  0x000000010ca11960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=8844}
                                                ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ;   {runtime_call}
  0x000000010ca44fcc: mov    %rax,%r11
  0x000000010ca44fcf: jmpq   0x000000010ca435d8  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca44fd4: movabs $0x7c0000208,%rsi  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca44fde: mov    $0x10,%edx
  0x000000010ca44fe3: callq  0x000000010ca11a60  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=8872}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca44fe8: mov    %rax,%r11
  0x000000010ca44feb: jmpq   0x000000010ca4372c
  0x000000010ca44ff0: movabs $0x7c000da58,%rsi  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca44ffa: nop
  0x000000010ca44ffb: callq  0x000000010ca11960  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop off=8896}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45000: jmpq   0x000000010ca436c7
  0x000000010ca45005: movabs $0x7c00016d0,%rsi  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca4500f: mov    0x20(%rsp),%rbp
  0x000000010ca45014: data32 xchg %ax,%ax
  0x000000010ca45017: callq  0x000000010ca11960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=8924}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4501c: jmpq   0x000000010ca43aa7
  0x000000010ca45021: movslq %r9d,%rdx          ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45024: mov    %rdx,%r11
  0x000000010ca45027: shl    %r11
  0x000000010ca4502a: add    $0x10,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4502e: mov    %r11,%r9
  0x000000010ca45031: and    $0xfffffffffffffff9,%r9
  0x000000010ca45035: mov    0x88(%rsp),%rdi
  0x000000010ca4503d: add    %r9,%rdi
  0x000000010ca45040: shr    $0x3,%r11
  0x000000010ca45044: sub    %r11,%r10
  0x000000010ca45047: mov    %r10,%rcx
  0x000000010ca4504a: xor    %rax,%rax
  0x000000010ca4504d: shl    $0x3,%rcx
  0x000000010ca45051: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45054: mov    %r8,%rdi
  0x000000010ca45057: movabs $0x10c9f44c0,%r10
  0x000000010ca45061: callq  *%r10              ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45064: jmpq   0x000000010ca439fb
  0x000000010ca45069: movslq %r11d,%rdx         ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4506c: mov    %rdx,%r11
  0x000000010ca4506f: shl    %r11
  0x000000010ca45072: add    $0x10,%r11         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45076: mov    %r11,%r9
  0x000000010ca45079: and    $0xfffffffffffffff9,%r9
  0x000000010ca4507d: mov    0x98(%rsp),%rdi
  0x000000010ca45085: add    %r9,%rdi
  0x000000010ca45088: shr    $0x3,%r11
  0x000000010ca4508c: mov    0x80(%rsp),%r9
  0x000000010ca45094: sub    %r11,%r9
  0x000000010ca45097: mov    %r9,%rcx
  0x000000010ca4509a: xor    %rax,%rax
  0x000000010ca4509d: shl    $0x3,%rcx
  0x000000010ca450a1: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca450a4: mov    %r8,%rdi
  0x000000010ca450a7: mov    %r10,%rsi
  0x000000010ca450aa: movabs $0x10c9f44c0,%r10
  0x000000010ca450b4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca450b7: jmpq   0x000000010ca431fb
  0x000000010ca450bc: movslq %r9d,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca450bf: mov    %rdx,%r10
  0x000000010ca450c2: shl    %r10
  0x000000010ca450c5: add    $0x10,%r10         ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca450c9: mov    %r10,%r9
  0x000000010ca450cc: and    $0xfffffffffffffff9,%r9
  0x000000010ca450d0: mov    0x88(%rsp),%rdi
  0x000000010ca450d8: add    %r9,%rdi
  0x000000010ca450db: shr    $0x3,%r10
  0x000000010ca450df: sub    %r10,%r8
  0x000000010ca450e2: mov    %r8,%rcx
  0x000000010ca450e5: xor    %rax,%rax
  0x000000010ca450e8: shl    $0x3,%rcx
  0x000000010ca450ec: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca450ef: mov    %r11,%rdi
  0x000000010ca450f2: mov    %rbx,%rsi
  0x000000010ca450f5: movabs $0x10c9f44c0,%r10
  0x000000010ca450ff: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45102: jmpq   0x000000010ca43fef
  0x000000010ca45107: movslq %r9d,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4510a: mov    %rdx,%r11
  0x000000010ca4510d: shl    %r11
  0x000000010ca45110: add    $0x10,%r11         ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45114: mov    %r11,%r9
  0x000000010ca45117: and    $0xfffffffffffffff9,%r9
  0x000000010ca4511b: mov    0x88(%rsp),%rdi
  0x000000010ca45123: add    %r9,%rdi
  0x000000010ca45126: shr    $0x3,%r11
  0x000000010ca4512a: sub    %r11,%r10
  0x000000010ca4512d: mov    %r10,%rcx
  0x000000010ca45130: xor    %rax,%rax
  0x000000010ca45133: shl    $0x3,%rcx
  0x000000010ca45137: rep rex.W stos %al,%es:(%rdi)  ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4513a: mov    %r8,%rdi
  0x000000010ca4513d: movabs $0x10c9f44c0,%r10
  0x000000010ca45147: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4514a: jmpq   0x000000010ca441e4
  0x000000010ca4514f: movslq %r9d,%rdx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45152: mov    %rdx,%r11
  0x000000010ca45155: shl    %r11
  0x000000010ca45158: add    $0x10,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4515c: mov    %r11,%r9
  0x000000010ca4515f: and    $0xfffffffffffffff9,%r9
  0x000000010ca45163: mov    0x88(%rsp),%rdi
  0x000000010ca4516b: add    %r9,%rdi
  0x000000010ca4516e: shr    $0x3,%r11
  0x000000010ca45172: sub    %r11,%r10
  0x000000010ca45175: mov    %r10,%rcx
  0x000000010ca45178: xor    %rax,%rax
  0x000000010ca4517b: shl    $0x3,%rcx
  0x000000010ca4517f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45182: mov    %r8,%rdi
  0x000000010ca45185: movabs $0x10c9f44c0,%r10
  0x000000010ca4518f: callq  *%r10              ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45192: jmpq   0x000000010ca443df
  0x000000010ca45197: xor    %edx,%edx
  0x000000010ca45199: jmpq   0x000000010ca42dc4
  0x000000010ca4519e: xor    %edi,%edi
  0x000000010ca451a0: jmpq   0x000000010ca42de4
  0x000000010ca451a5: xor    %r11d,%r11d
  0x000000010ca451a8: jmpq   0x000000010ca42e01
  0x000000010ca451ad: xor    %ecx,%ecx
  0x000000010ca451af: jmpq   0x000000010ca42e23
  0x000000010ca451b4: xor    %r8d,%r8d
  0x000000010ca451b7: jmpq   0x000000010ca42e45
  0x000000010ca451bc: xor    %ebx,%ebx
  0x000000010ca451be: jmpq   0x000000010ca42e72
  0x000000010ca451c3: movslq %r9d,%rdx          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca451c6: mov    %rdx,%r11
  0x000000010ca451c9: shl    %r11
  0x000000010ca451cc: add    $0x10,%r11         ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca451d0: mov    %r11,%r9
  0x000000010ca451d3: and    $0xfffffffffffffff9,%r9
  0x000000010ca451d7: mov    0x88(%rsp),%rdi
  0x000000010ca451df: add    %r9,%rdi
  0x000000010ca451e2: shr    $0x3,%r11
  0x000000010ca451e6: sub    %r11,%r10
  0x000000010ca451e9: mov    %r10,%rcx
  0x000000010ca451ec: xor    %rax,%rax
  0x000000010ca451ef: shl    $0x3,%rcx
  0x000000010ca451f3: rep rex.W stos %al,%es:(%rdi)  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca451f6: mov    %r8,%rdi
  0x000000010ca451f9: movabs $0x10c9f44c0,%r10
  0x000000010ca45203: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45206: jmpq   0x000000010ca445e8
  0x000000010ca4520b: movslq %r9d,%rdx          ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4520e: mov    %rdx,%r11
  0x000000010ca45211: shl    %r11
  0x000000010ca45214: add    $0x10,%r11         ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45218: mov    %r11,%r9
  0x000000010ca4521b: and    $0xfffffffffffffff9,%r9
  0x000000010ca4521f: mov    0x88(%rsp),%rdi
  0x000000010ca45227: add    %r9,%rdi
  0x000000010ca4522a: shr    $0x3,%r11
  0x000000010ca4522e: sub    %r11,%r10
  0x000000010ca45231: mov    %r10,%rcx
  0x000000010ca45234: xor    %rax,%rax
  0x000000010ca45237: shl    $0x3,%rcx
  0x000000010ca4523b: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4523e: mov    %r8,%rdi
  0x000000010ca45241: movabs $0x10c9f44c0,%r10
  0x000000010ca4524b: callq  *%r10              ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4524e: jmpq   0x000000010ca447e3
  0x000000010ca45253: movslq %r9d,%rdx          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45256: mov    %rdx,%r11
  0x000000010ca45259: shl    %r11
  0x000000010ca4525c: add    $0x10,%r11         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45260: mov    %r11,%r9
  0x000000010ca45263: and    $0xfffffffffffffff9,%r9
  0x000000010ca45267: mov    0x88(%rsp),%rdi
  0x000000010ca4526f: add    %r9,%rdi
  0x000000010ca45272: shr    $0x3,%r11
  0x000000010ca45276: sub    %r11,%r10
  0x000000010ca45279: mov    %r10,%rcx
  0x000000010ca4527c: xor    %rax,%rax
  0x000000010ca4527f: shl    $0x3,%rcx
  0x000000010ca45283: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45286: mov    %r8,%rdi
  0x000000010ca45289: movabs $0x10c9f44c0,%r10
  0x000000010ca45293: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45296: jmpq   0x000000010ca449ec
  0x000000010ca4529b: movslq %r9d,%rdx          ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4529e: mov    %rdx,%r11
  0x000000010ca452a1: shl    %r11
  0x000000010ca452a4: add    $0x10,%r11         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca452a8: mov    %r11,%r9
  0x000000010ca452ab: and    $0xfffffffffffffff9,%r9
  0x000000010ca452af: mov    0x88(%rsp),%rdi
  0x000000010ca452b7: add    %r9,%rdi
  0x000000010ca452ba: shr    $0x3,%r11
  0x000000010ca452be: sub    %r11,%r10
  0x000000010ca452c1: mov    %r10,%rcx
  0x000000010ca452c4: xor    %rax,%rax
  0x000000010ca452c7: shl    $0x3,%rcx
  0x000000010ca452cb: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca452ce: mov    %r8,%rdi
  0x000000010ca452d1: movabs $0x10c9f44c0,%r10
  0x000000010ca452db: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca452de: jmpq   0x000000010ca44be7
  0x000000010ca452e3: movabs $0x7c000da58,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca452ed: xchg   %ax,%ax
  0x000000010ca452ef: callq  0x000000010ca11960  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [152]=Oop off=9652}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca452f4: jmpq   0x000000010ca42f33  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca452f9: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca45303: mov    $0x10,%edx
  0x000000010ca45308: data32 xchg %ax,%ax
  0x000000010ca4530b: callq  0x000000010ca11a60  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=9680}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45310: jmpq   0x000000010ca42f92
  0x000000010ca45315: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca4531f: callq  0x000000010ca11960  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=9700}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45324: jmpq   0x000000010ca432b3
  0x000000010ca45329: movslq %r9d,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4532c: mov    %rdx,%r10
  0x000000010ca4532f: shl    %r10
  0x000000010ca45332: add    $0x10,%r10         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45336: mov    %r10,%r9
  0x000000010ca45339: and    $0xfffffffffffffff9,%r9
  0x000000010ca4533d: mov    0x90(%rsp),%rdi
  0x000000010ca45345: add    %r9,%rdi
  0x000000010ca45348: shr    $0x3,%r10
  0x000000010ca4534c: mov    0x68(%rsp),%r9
  0x000000010ca45351: sub    %r10,%r9
  0x000000010ca45354: mov    %r9,%rcx
  0x000000010ca45357: xor    %rax,%rax
  0x000000010ca4535a: shl    $0x3,%rcx
  0x000000010ca4535e: rep rex.W stos %al,%es:(%rdi)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45361: mov    %r11,%rdi
  0x000000010ca45364: mov    %r8,%rsi
  0x000000010ca45367: movabs $0x10c9f44c0,%r10
  0x000000010ca45371: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45374: jmpq   0x000000010ca44e3e  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45379: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca45383: mov    0x14(%rsp),%edx
  0x000000010ca45387: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=9804}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4538c: mov    %rax,%r8
  0x000000010ca4538f: jmpq   0x000000010ca4397c  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca45394: mov    $0xffffffe4,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45399: mov    0x20(%rsp),%r10
  0x000000010ca4539e: mov    %r10,(%rsp)
  0x000000010ca453a2: mov    0x38(%rsp),%r10
  0x000000010ca453a7: mov    %r10,0x10(%rsp)
  0x000000010ca453ac: mov    0x40(%rsp),%r10
  0x000000010ca453b1: mov    %r10,0x18(%rsp)
  0x000000010ca453b6: mov    0x28(%rsp),%r10d
  0x000000010ca453bb: mov    %r10d,0x20(%rsp)
  0x000000010ca453c0: mov    0x64(%rsp),%r10d
  0x000000010ca453c5: mov    %r10d,0x28(%rsp)
  0x000000010ca453ca: mov    0x70(%rsp),%r10
  0x000000010ca453cf: mov    %r10,0x50(%rsp)
  0x000000010ca453d4: mov    %r10,0x58(%rsp)
  0x000000010ca453d9: xchg   %ax,%ax
  0x000000010ca453db: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [44]=NarrowOop [48]=Oop [80]=Oop [88]=Oop [104]=Oop [120]=Oop off=9888}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca453e0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca453e5: mov    $0xfffffff4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca453ea: mov    0x20(%rsp),%rbp
  0x000000010ca453ef: mov    0x8(%rsp),%r10
  0x000000010ca453f4: mov    %r10,(%rsp)
  0x000000010ca453f8: mov    0x38(%rsp),%r10
  0x000000010ca453fd: mov    %r10,0x8(%rsp)
  0x000000010ca45402: mov    0x40(%rsp),%r10
  0x000000010ca45407: mov    %r10,0x10(%rsp)
  0x000000010ca4540c: mov    0x28(%rsp),%r11d
  0x000000010ca45411: mov    %r11d,0x18(%rsp)
  0x000000010ca45416: mov    0x2c(%rsp),%r10d
  0x000000010ca4541b: mov    %r10d,0x1c(%rsp)
  0x000000010ca45420: data32 xchg %ax,%ax
  0x000000010ca45423: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [104]=Oop [112]=Oop off=9960}
                                                ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45428: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4542d: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca45437: mov    0x1c(%rsp),%edx
  0x000000010ca4543b: mov    0x20(%rsp),%rbp
  0x000000010ca45440: data32 xchg %ax,%ax
  0x000000010ca45443: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=9992}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45448: mov    %rax,%r11
  0x000000010ca4544b: jmpq   0x000000010ca43187  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45450: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca4545a: mov    0x14(%rsp),%edx
  0x000000010ca4545e: mov    0x20(%rsp),%rbp
  0x000000010ca45463: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10024}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45468: mov    %rax,%r11
  0x000000010ca4546b: jmpq   0x000000010ca43f4f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45470: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca4547a: mov    0x14(%rsp),%edx
  0x000000010ca4547e: nop
  0x000000010ca4547f: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10052}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45484: mov    %rax,%r8
  0x000000010ca45487: jmpq   0x000000010ca44165  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4548c: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca45496: mov    0x14(%rsp),%edx
  0x000000010ca4549a: nop
  0x000000010ca4549b: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10080}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca454a0: mov    %rax,%r8
  0x000000010ca454a3: jmpq   0x000000010ca44360  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca454a8: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca454b2: mov    0x14(%rsp),%edx
  0x000000010ca454b6: nop
  0x000000010ca454b7: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10108}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca454bc: mov    %rax,%r8
  0x000000010ca454bf: jmpq   0x000000010ca44569  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca454c4: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca454ce: mov    0x14(%rsp),%edx
  0x000000010ca454d2: nop
  0x000000010ca454d3: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10136}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca454d8: mov    %rax,%r8
  0x000000010ca454db: jmpq   0x000000010ca44764  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca454e0: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca454ea: mov    0x14(%rsp),%edx
  0x000000010ca454ee: nop
  0x000000010ca454ef: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10164}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca454f4: mov    %rax,%r8
  0x000000010ca454f7: jmpq   0x000000010ca4496d
  0x000000010ca454fc: movslq %ebp,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca454ff: jmpq   0x000000010ca43c8d
  0x000000010ca45504: mov    %rsi,%rdi
  0x000000010ca45507: xor    %rax,%rax
  0x000000010ca4550a: shl    $0x3,%rcx
  0x000000010ca4550e: rep rex.W stos %al,%es:(%rdi)  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45511: mov    0x80(%rsp),%rsi
  0x000000010ca45519: xor    %edx,%edx
  0x000000010ca4551b: mov    0x78(%rsp),%rcx
  0x000000010ca45520: xor    %r8d,%r8d
  0x000000010ca45523: mov    0x20(%rsp),%rbp
  0x000000010ca45528: data32 xchg %ax,%ax
  0x000000010ca4552b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=10224}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45530: jmpq   0x000000010ca43d96
  0x000000010ca45535: mov    %rsi,%rdi
  0x000000010ca45538: xor    %rax,%rax
  0x000000010ca4553b: shl    $0x3,%rcx
  0x000000010ca4553f: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45542: jmpq   0x000000010ca43d96  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45547: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca45551: mov    0x14(%rsp),%edx
  0x000000010ca45555: xchg   %ax,%ax
  0x000000010ca45557: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10268}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4555c: mov    %rax,%r8
  0x000000010ca4555f: jmpq   0x000000010ca44b68  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca45564: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45569: mov    0x20(%rsp),%rbp
  0x000000010ca4556e: mov    0x8(%rsp),%r10
  0x000000010ca45573: mov    %r10,(%rsp)
  0x000000010ca45577: mov    %r13d,0x20(%rsp)
  0x000000010ca4557c: data32 xchg %ax,%ax
  0x000000010ca4557f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10308}
                                                ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45584: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca45589: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4558e: mov    0x20(%rsp),%rbp
  0x000000010ca45593: mov    0x8(%rsp),%r11
  0x000000010ca45598: mov    %r11,(%rsp)
  0x000000010ca4559c: mov    0x28(%rsp),%r8d
  0x000000010ca455a1: mov    %r8d,0x18(%rsp)
  0x000000010ca455a6: mov    %r13d,0x20(%rsp)
  0x000000010ca455ab: mov    %r10d,0x28(%rsp)
  0x000000010ca455b0: data32 xchg %ax,%ax
  0x000000010ca455b3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [40]=NarrowOop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10360}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca455b8: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca455bd: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca455c2: mov    0x20(%rsp),%rbp
  0x000000010ca455c7: mov    0x8(%rsp),%r11
  0x000000010ca455cc: mov    %r11,(%rsp)
  0x000000010ca455d0: mov    0x28(%rsp),%r11d
  0x000000010ca455d5: mov    %r11d,0x18(%rsp)
  0x000000010ca455da: mov    0x2c(%rsp),%r11d
  0x000000010ca455df: mov    %r11d,0x1c(%rsp)
  0x000000010ca455e4: mov    %r13d,0x20(%rsp)
  0x000000010ca455e9: mov    %r10d,0x28(%rsp)
  0x000000010ca455ee: mov    %ecx,0x2c(%rsp)
  0x000000010ca455f2: nop
  0x000000010ca455f3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10424}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca455f8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca455fd: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca45607: mov    0x14(%rsp),%edx
  0x000000010ca4560b: mov    0x20(%rsp),%rbp
  0x000000010ca45610: data32 xchg %ax,%ax
  0x000000010ca45613: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10456}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45618: mov    %rax,%r8
  0x000000010ca4561b: jmpq   0x000000010ca44db6  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca45620: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45625: mov    0x20(%rsp),%rbp
  0x000000010ca4562a: mov    0x8(%rsp),%r10
  0x000000010ca4562f: mov    %r10,(%rsp)
  0x000000010ca45633: mov    0x40(%rsp),%r10
  0x000000010ca45638: mov    %r10,0x10(%rsp)
  0x000000010ca4563d: mov    %r8d,0x1c(%rsp)
  0x000000010ca45642: nop
  0x000000010ca45643: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [48]=Oop [56]=Oop off=10504}
                                                ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)
                                                ;   {runtime_call}
  0x000000010ca45648: callq  0x000000010be85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca4564d: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45652: mov    0x20(%rsp),%rbp
  0x000000010ca45657: mov    0x8(%rsp),%r11
  0x000000010ca4565c: mov    %r11,(%rsp)
  0x000000010ca45660: mov    %r10d,0x1c(%rsp)
  0x000000010ca45665: xchg   %ax,%ax
  0x000000010ca45667: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [56]=Oop [64]=Oop off=10540}
                                                ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)
                                                ;   {runtime_call}
  0x000000010ca4566c: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45671: mov    %r10,0xb8(%rsp)
  0x000000010ca45679: mov    0x28(%rsp),%r10d   ;*iinc
                                                ; - java.io.ObjectStreamClass::matchFields@192 (line 2292)

  0x000000010ca4567e: mov    $0xffffff65,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca45683: mov    0x20(%rsp),%rbp
  0x000000010ca45688: mov    0x8(%rsp),%r11
  0x000000010ca4568d: mov    %r11,(%rsp)
  0x000000010ca45691: mov    %r10d,0x18(%rsp)
  0x000000010ca45696: mov    0x2c(%rsp),%r11d
  0x000000010ca4569b: mov    %r11d,0x1c(%rsp)
  0x000000010ca456a0: data32 xchg %ax,%ax
  0x000000010ca456a3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [56]=Oop [64]=Oop [184]=Oop off=10600}
                                                ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)
                                                ;   {runtime_call}
  0x000000010ca456a8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca456ad: mov    $0xfffffff6,%esi   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca456b2: nop
  0x000000010ca456b3: callq  0x000000010c9a71a0  ; OopMap{off=10616}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca456b8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca456bd: mov    $0x6,%esi          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca456c2: mov    0x20(%rsp),%rbp
  0x000000010ca456c7: mov    0x8(%rsp),%r11
  0x000000010ca456cc: mov    %r11,(%rsp)
  0x000000010ca456d0: mov    0x38(%rsp),%r11
  0x000000010ca456d5: mov    %r11,0x8(%rsp)
  0x000000010ca456da: mov    0x28(%rsp),%r11d
  0x000000010ca456df: mov    %r11d,0x18(%rsp)
  0x000000010ca456e4: mov    0x2c(%rsp),%r11d
  0x000000010ca456e9: mov    %r11d,0x1c(%rsp)
  0x000000010ca456ee: mov    %r10d,0x24(%rsp)
  0x000000010ca456f3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop off=10680}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca456f8: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca456fd: mov    $0x6,%esi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45702: mov    0x20(%rsp),%rbp
  0x000000010ca45707: mov    0x8(%rsp),%r11
  0x000000010ca4570c: mov    %r11,(%rsp)
  0x000000010ca45710: mov    0x38(%rsp),%r11
  0x000000010ca45715: mov    %r11,0x8(%rsp)
  0x000000010ca4571a: mov    0x28(%rsp),%r8d
  0x000000010ca4571f: mov    %r8d,0x18(%rsp)
  0x000000010ca45724: mov    0x2c(%rsp),%r11d
  0x000000010ca45729: mov    %r11d,0x1c(%rsp)
  0x000000010ca4572e: mov    %r10d,0x24(%rsp)
  0x000000010ca45733: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop off=10744}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45738: callq  0x000000010be85e14  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca4573d: mov    $0xffffff65,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45742: mov    0x20(%rsp),%r10
  0x000000010ca45747: mov    %r10,(%rsp)
  0x000000010ca4574b: mov    0x28(%rsp),%r11d
  0x000000010ca45750: mov    %r11d,0x20(%rsp)
  0x000000010ca45755: mov    0x2c(%rsp),%r11d
  0x000000010ca4575a: mov    %r11d,0x24(%rsp)
  0x000000010ca4575f: mov    %r13d,0x28(%rsp)
  0x000000010ca45764: mov    %r8d,0x30(%rsp)
  0x000000010ca45769: xchg   %ax,%ax
  0x000000010ca4576b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [48]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10800}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45770: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca45775: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4577a: mov    0x20(%rsp),%r11
  0x000000010ca4577f: mov    %r11,(%rsp)
  0x000000010ca45783: mov    0x28(%rsp),%r11d
  0x000000010ca45788: mov    %r11d,0x20(%rsp)
  0x000000010ca4578d: mov    0x2c(%rsp),%r11d
  0x000000010ca45792: mov    %r11d,0x24(%rsp)
  0x000000010ca45797: mov    %r13d,0x28(%rsp)
  0x000000010ca4579c: mov    %r10d,0x30(%rsp)
  0x000000010ca457a1: mov    %r9d,0x34(%rsp)
  0x000000010ca457a6: nop
  0x000000010ca457a7: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [52]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10860}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca457ac: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca457b1: mov    $0xffffff65,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca457b6: mov    0x20(%rsp),%r11
  0x000000010ca457bb: mov    %r11,(%rsp)
  0x000000010ca457bf: mov    0x28(%rsp),%r8d
  0x000000010ca457c4: mov    %r8d,0x20(%rsp)
  0x000000010ca457c9: mov    0x2c(%rsp),%r11d
  0x000000010ca457ce: mov    %r11d,0x24(%rsp)
  0x000000010ca457d3: mov    %r13d,0x28(%rsp)
  0x000000010ca457d8: mov    %r10d,0x30(%rsp)
  0x000000010ca457dd: xchg   %ax,%ax
  0x000000010ca457df: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10916}
                                                ;*if_icmpeq
                                                ; - java.io.ObjectStreamClass::matchFields@98 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca457e4: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca457e9: mov    $0xffffff65,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca457ee: mov    0x20(%rsp),%r10
  0x000000010ca457f3: mov    %r10,(%rsp)
  0x000000010ca457f7: mov    0x28(%rsp),%r11d
  0x000000010ca457fc: mov    %r11d,0x20(%rsp)
  0x000000010ca45801: mov    0x2c(%rsp),%r10d
  0x000000010ca45806: mov    %r10d,0x24(%rsp)
  0x000000010ca4580b: mov    %r13d,0x28(%rsp)
  0x000000010ca45810: data32 xchg %ax,%ax
  0x000000010ca45813: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [36]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10968}
                                                ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ;   {runtime_call}
  0x000000010ca45818: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca4581d: mov    $0xfffffff6,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45822: nop
  0x000000010ca45823: callq  0x000000010c9a71a0  ; OopMap{off=10984}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45828: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca4582d: mov    $0xffffffe4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca45832: mov    0x20(%rsp),%rbp
  0x000000010ca45837: mov    0x8(%rsp),%r10
  0x000000010ca4583c: mov    %r10,(%rsp)
  0x000000010ca45840: mov    0x38(%rsp),%r10
  0x000000010ca45845: mov    %r10,0x8(%rsp)
  0x000000010ca4584a: mov    0x40(%rsp),%r10
  0x000000010ca4584f: mov    %r10,0x10(%rsp)
  0x000000010ca45854: mov    0x28(%rsp),%r11d
  0x000000010ca45859: mov    %r11d,0x18(%rsp)
  0x000000010ca4585e: mov    0x2c(%rsp),%r11d
  0x000000010ca45863: mov    %r11d,0x1c(%rsp)
  0x000000010ca45868: mov    0x70(%rsp),%r10
  0x000000010ca4586d: mov    %r10,0x40(%rsp)
  0x000000010ca45872: mov    %r10,0x48(%rsp)
  0x000000010ca45877: mov    %r8d,0x24(%rsp)
  0x000000010ca4587c: data32 xchg %ax,%ax
  0x000000010ca4587f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11076}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45884: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45889: mov    $0x2d,%esi         ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca4588e: mov    0x20(%rsp),%rbp
  0x000000010ca45893: mov    0x8(%rsp),%r10
  0x000000010ca45898: mov    %r10,(%rsp)
  0x000000010ca4589c: mov    0x28(%rsp),%r11d
  0x000000010ca458a1: mov    %r11d,0x18(%rsp)
  0x000000010ca458a6: mov    0x2c(%rsp),%r10d
  0x000000010ca458ab: mov    %r10d,0x1c(%rsp)
  0x000000010ca458b0: data32 xchg %ax,%ax
  0x000000010ca458b3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [48]=Oop [56]=Oop [64]=Oop off=11128}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@190 (line 319)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca458b8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca458bd: mov    $0xffffffe4,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca458c2: mov    0x20(%rsp),%rbp
  0x000000010ca458c7: mov    0x8(%rsp),%r10
  0x000000010ca458cc: mov    %r10,(%rsp)
  0x000000010ca458d0: mov    0x38(%rsp),%r10
  0x000000010ca458d5: mov    %r10,0x8(%rsp)
  0x000000010ca458da: mov    0x40(%rsp),%r10
  0x000000010ca458df: mov    %r10,0x10(%rsp)
  0x000000010ca458e4: mov    0x28(%rsp),%r11d
  0x000000010ca458e9: mov    %r11d,0x18(%rsp)
  0x000000010ca458ee: mov    0x2c(%rsp),%r10d
  0x000000010ca458f3: mov    %r10d,0x1c(%rsp)
  0x000000010ca458f8: mov    0x70(%rsp),%r10
  0x000000010ca458fd: mov    %r10,0x40(%rsp)
  0x000000010ca45902: mov    0x68(%rsp),%r10
  0x000000010ca45907: mov    %r10,0x50(%rsp)
  0x000000010ca4590c: data32 xchg %ax,%ax
  0x000000010ca4590f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [104]=Oop [112]=Oop [152]=Oop off=11220}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45914: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45919: mov    $0xfffffff6,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4591e: nop
  0x000000010ca4591f: callq  0x000000010c9a71a0  ; OopMap{off=11236}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45924: callq  0x000000010be85e14  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca45929: mov    $0xffffffe4,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4592e: mov    0x20(%rsp),%rbp
  0x000000010ca45933: mov    0x8(%rsp),%r10
  0x000000010ca45938: mov    %r10,(%rsp)
  0x000000010ca4593c: mov    0x38(%rsp),%r10
  0x000000010ca45941: mov    %r10,0x8(%rsp)
  0x000000010ca45946: mov    0x40(%rsp),%r10
  0x000000010ca4594b: mov    %r10,0x10(%rsp)
  0x000000010ca45950: mov    0x28(%rsp),%r11d
  0x000000010ca45955: mov    %r11d,0x18(%rsp)
  0x000000010ca4595a: mov    0x2c(%rsp),%r11d
  0x000000010ca4595f: mov    %r11d,0x1c(%rsp)
  0x000000010ca45964: mov    0x70(%rsp),%r10
  0x000000010ca45969: mov    %r10,0x40(%rsp)
  0x000000010ca4596e: mov    %r10,0x48(%rsp)
  0x000000010ca45973: mov    %r8d,0x24(%rsp)
  0x000000010ca45978: data32 xchg %ax,%ax
  0x000000010ca4597b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11328}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45980: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca45985: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4598a: jmpq   0x000000010ca438ff  ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4598f: mov    %rsi,%rdi
  0x000000010ca45992: xor    %rax,%rax
  0x000000010ca45995: shl    $0x3,%rcx
  0x000000010ca45999: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4599c: mov    0x78(%rsp),%rsi    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca459a1: xor    %edx,%edx
  0x000000010ca459a3: mov    %r8,%rcx
  0x000000010ca459a6: xor    %r8d,%r8d
  0x000000010ca459a9: mov    0x20(%rsp),%rbp
  0x000000010ca459ae: nop
  0x000000010ca459af: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=11380}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca459b4: jmpq   0x000000010ca439fb
  0x000000010ca459b9: mov    %rsi,%rdi
  0x000000010ca459bc: xor    %rax,%rax
  0x000000010ca459bf: shl    $0x3,%rcx
  0x000000010ca459c3: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca459c6: jmpq   0x000000010ca439fb
  0x000000010ca459cb: mov    $0xfffffff6,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca459d0: data32 xchg %ax,%ax
  0x000000010ca459d3: callq  0x000000010c9a71a0  ; OopMap{off=11416}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca459d8: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca459dd: mov    $0xffffffe4,%esi   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca459e2: mov    0x20(%rsp),%rbp
  0x000000010ca459e7: mov    0x8(%rsp),%r10
  0x000000010ca459ec: mov    %r10,(%rsp)
  0x000000010ca459f0: mov    0x38(%rsp),%r10
  0x000000010ca459f5: mov    %r10,0x8(%rsp)
  0x000000010ca459fa: mov    0x40(%rsp),%r10
  0x000000010ca459ff: mov    %r10,0x10(%rsp)
  0x000000010ca45a04: mov    0x28(%rsp),%r10d
  0x000000010ca45a09: mov    %r10d,0x18(%rsp)
  0x000000010ca45a0e: mov    0x2c(%rsp),%r10d
  0x000000010ca45a13: mov    %r10d,0x1c(%rsp)
  0x000000010ca45a18: mov    0x70(%rsp),%r10
  0x000000010ca45a1d: mov    %r10,0x40(%rsp)
  0x000000010ca45a22: mov    %r10,0x48(%rsp)
  0x000000010ca45a27: mov    %r8d,0x24(%rsp)
  0x000000010ca45a2c: data32 xchg %ax,%ax
  0x000000010ca45a2f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11508}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45a34: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca45a39: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45a3e: nop
  0x000000010ca45a3f: callq  0x000000010c9a71a0  ; OopMap{off=11524}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45a44: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45a49: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45a4e: mov    0x20(%rsp),%rbp
  0x000000010ca45a53: mov    0x8(%rsp),%r10
  0x000000010ca45a58: mov    %r10,(%rsp)
  0x000000010ca45a5c: mov    0x38(%rsp),%r10
  0x000000010ca45a61: mov    %r10,0x8(%rsp)
  0x000000010ca45a66: mov    0x40(%rsp),%r10
  0x000000010ca45a6b: mov    %r10,0x10(%rsp)
  0x000000010ca45a70: mov    0x28(%rsp),%r11d
  0x000000010ca45a75: mov    %r11d,0x18(%rsp)
  0x000000010ca45a7a: mov    0x2c(%rsp),%r11d
  0x000000010ca45a7f: mov    %r11d,0x1c(%rsp)
  0x000000010ca45a84: mov    0x70(%rsp),%r10
  0x000000010ca45a89: mov    %r10,0x40(%rsp)
  0x000000010ca45a8e: mov    %r10,0x48(%rsp)
  0x000000010ca45a93: mov    %r8d,0x24(%rsp)
  0x000000010ca45a98: data32 xchg %ax,%ax
  0x000000010ca45a9b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11616}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45aa0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca45aa5: mov    $0xfffffff6,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca45aaa: nop
  0x000000010ca45aab: callq  0x000000010c9a71a0  ; OopMap{off=11632}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45ab0: callq  0x000000010be85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::getTypeCode@1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca45ab5: mov    $0xffffffe4,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45aba: mov    0x20(%rsp),%rbp
  0x000000010ca45abf: mov    0x8(%rsp),%r10
  0x000000010ca45ac4: mov    %r10,(%rsp)
  0x000000010ca45ac8: mov    0x38(%rsp),%r10
  0x000000010ca45acd: mov    %r10,0x8(%rsp)
  0x000000010ca45ad2: mov    0x40(%rsp),%r10
  0x000000010ca45ad7: mov    %r10,0x10(%rsp)
  0x000000010ca45adc: mov    0x28(%rsp),%r10d
  0x000000010ca45ae1: mov    %r10d,0x18(%rsp)
  0x000000010ca45ae6: mov    0x2c(%rsp),%r10d
  0x000000010ca45aeb: mov    %r10d,0x1c(%rsp)
  0x000000010ca45af0: mov    0x70(%rsp),%r10
  0x000000010ca45af5: mov    %r10,0x40(%rsp)
  0x000000010ca45afa: mov    %r10,0x48(%rsp)
  0x000000010ca45aff: mov    %r8d,0x24(%rsp)
  0x000000010ca45b04: data32 xchg %ax,%ax
  0x000000010ca45b07: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11724}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45b0c: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45b11: mov    $0xfffffff6,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45b16: nop
  0x000000010ca45b17: callq  0x000000010c9a71a0  ; OopMap{off=11740}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45b1c: callq  0x000000010be85e14  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca45b21: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45b26: mov    0x20(%rsp),%rbp
  0x000000010ca45b2b: mov    0x8(%rsp),%r10
  0x000000010ca45b30: mov    %r10,(%rsp)
  0x000000010ca45b34: mov    0x38(%rsp),%r10
  0x000000010ca45b39: mov    %r10,0x8(%rsp)
  0x000000010ca45b3e: mov    0x40(%rsp),%r10
  0x000000010ca45b43: mov    %r10,0x10(%rsp)
  0x000000010ca45b48: mov    0x28(%rsp),%r11d
  0x000000010ca45b4d: mov    %r11d,0x18(%rsp)
  0x000000010ca45b52: mov    0x2c(%rsp),%r11d
  0x000000010ca45b57: mov    %r11d,0x1c(%rsp)
  0x000000010ca45b5c: mov    0x70(%rsp),%r10
  0x000000010ca45b61: mov    %r10,0x40(%rsp)
  0x000000010ca45b66: mov    %r10,0x48(%rsp)
  0x000000010ca45b6b: mov    %r8d,0x24(%rsp)
  0x000000010ca45b70: data32 xchg %ax,%ax
  0x000000010ca45b73: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11832}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45b78: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45b7d: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45b82: nop
  0x000000010ca45b83: callq  0x000000010c9a71a0  ; OopMap{off=11848}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45b88: callq  0x000000010be85e14  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45b8d: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45b92: mov    0x20(%rsp),%rbp
  0x000000010ca45b97: mov    0x8(%rsp),%r10
  0x000000010ca45b9c: mov    %r10,(%rsp)
  0x000000010ca45ba0: mov    0x38(%rsp),%r10
  0x000000010ca45ba5: mov    %r10,0x8(%rsp)
  0x000000010ca45baa: mov    0x40(%rsp),%r10
  0x000000010ca45baf: mov    %r10,0x10(%rsp)
  0x000000010ca45bb4: mov    0x28(%rsp),%r10d
  0x000000010ca45bb9: mov    %r10d,0x18(%rsp)
  0x000000010ca45bbe: mov    0x2c(%rsp),%r10d
  0x000000010ca45bc3: mov    %r10d,0x1c(%rsp)
  0x000000010ca45bc8: mov    0x70(%rsp),%r10
  0x000000010ca45bcd: mov    %r10,0x40(%rsp)
  0x000000010ca45bd2: mov    %r10,0x48(%rsp)
  0x000000010ca45bd7: mov    %r8d,0x24(%rsp)
  0x000000010ca45bdc: data32 xchg %ax,%ax
  0x000000010ca45bdf: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11940}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45be4: callq  0x000000010be85e14  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45be9: mov    $0x6,%esi          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca45bee: mov    0x20(%rsp),%rbp
  0x000000010ca45bf3: mov    0x8(%rsp),%r10
  0x000000010ca45bf8: mov    %r10,(%rsp)
  0x000000010ca45bfc: mov    0x38(%rsp),%r10
  0x000000010ca45c01: mov    %r10,0x8(%rsp)
  0x000000010ca45c06: mov    0x40(%rsp),%r10
  0x000000010ca45c0b: mov    %r10,0x10(%rsp)
  0x000000010ca45c10: mov    0x28(%rsp),%r10d
  0x000000010ca45c15: mov    %r10d,0x18(%rsp)
  0x000000010ca45c1a: mov    0x2c(%rsp),%r10d
  0x000000010ca45c1f: mov    %r10d,0x1c(%rsp)
  0x000000010ca45c24: mov    0x70(%rsp),%r10
  0x000000010ca45c29: mov    %r10,0x40(%rsp)
  0x000000010ca45c2e: nop
  0x000000010ca45c2f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop [112]=Oop off=12020}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45c34: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45c39: mov    $0x6,%esi          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45c3e: mov    0x20(%rsp),%rbp
  0x000000010ca45c43: mov    0x8(%rsp),%r10
  0x000000010ca45c48: mov    %r10,(%rsp)
  0x000000010ca45c4c: mov    0x38(%rsp),%r10
  0x000000010ca45c51: mov    %r10,0x8(%rsp)
  0x000000010ca45c56: mov    0x40(%rsp),%r10
  0x000000010ca45c5b: mov    %r10,0x10(%rsp)
  0x000000010ca45c60: mov    0x28(%rsp),%r10d
  0x000000010ca45c65: mov    %r10d,0x18(%rsp)
  0x000000010ca45c6a: mov    0x2c(%rsp),%r10d
  0x000000010ca45c6f: mov    %r10d,0x1c(%rsp)
  0x000000010ca45c74: mov    0x70(%rsp),%r10
  0x000000010ca45c79: mov    %r10,0x40(%rsp)
  0x000000010ca45c7e: nop
  0x000000010ca45c7f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop [112]=Oop off=12100}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45c84: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca45c89: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45c8e: nop
  0x000000010ca45c8f: callq  0x000000010c9a71a0  ; OopMap{off=12116}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45c94: callq  0x000000010be85e14  ;*ireturn
                                                ; - java.io.ObjectStreamField::isPrimitive@26 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45c99: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45c9e: mov    0x20(%rsp),%rbp
  0x000000010ca45ca3: mov    0x8(%rsp),%r10
  0x000000010ca45ca8: mov    %r10,(%rsp)
  0x000000010ca45cac: mov    0x38(%rsp),%r10
  0x000000010ca45cb1: mov    %r10,0x8(%rsp)
  0x000000010ca45cb6: mov    0x40(%rsp),%r10
  0x000000010ca45cbb: mov    %r10,0x10(%rsp)
  0x000000010ca45cc0: mov    0x28(%rsp),%r11d
  0x000000010ca45cc5: mov    %r11d,0x18(%rsp)
  0x000000010ca45cca: mov    0x2c(%rsp),%r11d
  0x000000010ca45ccf: mov    %r11d,0x1c(%rsp)
  0x000000010ca45cd4: mov    0x70(%rsp),%r10
  0x000000010ca45cd9: mov    %r10,0x40(%rsp)
  0x000000010ca45cde: mov    %r10,0x48(%rsp)
  0x000000010ca45ce3: mov    %r8d,0x24(%rsp)
  0x000000010ca45ce8: data32 xchg %ax,%ax
  0x000000010ca45ceb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=12208}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45cf0: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45cf5: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45cfa: nop
  0x000000010ca45cfb: callq  0x000000010c9a71a0  ; OopMap{off=12224}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45d00: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca45d05: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45d0a: mov    0x20(%rsp),%rbp
  0x000000010ca45d0f: mov    0x8(%rsp),%r10
  0x000000010ca45d14: mov    %r10,(%rsp)
  0x000000010ca45d18: mov    0x38(%rsp),%r10
  0x000000010ca45d1d: mov    %r10,0x8(%rsp)
  0x000000010ca45d22: mov    0x40(%rsp),%r10
  0x000000010ca45d27: mov    %r10,0x10(%rsp)
  0x000000010ca45d2c: mov    0x28(%rsp),%r10d
  0x000000010ca45d31: mov    %r10d,0x18(%rsp)
  0x000000010ca45d36: mov    0x2c(%rsp),%r10d
  0x000000010ca45d3b: mov    %r10d,0x1c(%rsp)
  0x000000010ca45d40: mov    0x70(%rsp),%r10
  0x000000010ca45d45: mov    %r10,0x40(%rsp)
  0x000000010ca45d4a: mov    %r10,0x48(%rsp)
  0x000000010ca45d4f: mov    %r8d,0x24(%rsp)
  0x000000010ca45d54: data32 xchg %ax,%ax
  0x000000010ca45d57: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=12316}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45d5c: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45d61: movslq 0x1c(%rsp),%r10    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45d66: jmpq   0x000000010ca430c7
  0x000000010ca45d6b: mov    0x90(%rsp),%rcx
  0x000000010ca45d73: mov    %r10,%rdi
  0x000000010ca45d76: xor    %rax,%rax
  0x000000010ca45d79: shl    $0x3,%rcx
  0x000000010ca45d7d: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45d80: mov    0x78(%rsp),%rsi
  0x000000010ca45d85: xor    %edx,%edx
  0x000000010ca45d87: mov    0x98(%rsp),%rcx
  0x000000010ca45d8f: xor    %r8d,%r8d
  0x000000010ca45d92: mov    0x60(%rsp),%r9d
  0x000000010ca45d97: mov    0x20(%rsp),%rbp
  0x000000010ca45d9c: data32 xchg %ax,%ax
  0x000000010ca45d9f: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=12388}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45da4: jmpq   0x000000010ca431fb
  0x000000010ca45da9: mov    0x90(%rsp),%rcx
  0x000000010ca45db1: mov    %r10,%rdi
  0x000000010ca45db4: xor    %rax,%rax
  0x000000010ca45db7: shl    $0x3,%rcx
  0x000000010ca45dbb: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45dbe: jmpq   0x000000010ca431fb
  0x000000010ca45dc3: movslq 0x14(%rsp),%r10    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45dc8: jmpq   0x000000010ca43ed3  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010ca45dcd: mov    %rbx,%rdi
  0x000000010ca45dd0: xor    %rax,%rax
  0x000000010ca45dd3: shl    $0x3,%rcx
  0x000000010ca45dd7: rep rex.W stos %al,%es:(%rdi)  ;*aload
                                                ; - java.io.ObjectStreamClass::matchFields@223 (line 2314)

  0x000000010ca45dda: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45ddf: xor    %edx,%edx
  0x000000010ca45de1: mov    0x88(%rsp),%rcx
  0x000000010ca45de9: xor    %r8d,%r8d
  0x000000010ca45dec: data32 xchg %ax,%ax
  0x000000010ca45def: callq  0x000000010ca0f560  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12468}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45df4: jmpq   0x000000010ca43fef
  0x000000010ca45df9: mov    %rbx,%rdi
  0x000000010ca45dfc: xor    %rax,%rax
  0x000000010ca45dff: shl    $0x3,%rcx
  0x000000010ca45e03: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e06: jmpq   0x000000010ca43fef
  0x000000010ca45e0b: movslq 0x14(%rsp),%r10    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e10: jmpq   0x000000010ca440e3  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x000000010ca45e15: mov    %rsi,%rdi
  0x000000010ca45e18: xor    %rax,%rax
  0x000000010ca45e1b: shl    $0x3,%rcx
  0x000000010ca45e1f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e22: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e27: xor    %edx,%edx
  0x000000010ca45e29: mov    %r8,%rcx
  0x000000010ca45e2c: xor    %r8d,%r8d
  0x000000010ca45e2f: mov    0x20(%rsp),%rbp
  0x000000010ca45e34: data32 xchg %ax,%ax
  0x000000010ca45e37: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12540}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45e3c: jmpq   0x000000010ca441e4
  0x000000010ca45e41: mov    %rsi,%rdi
  0x000000010ca45e44: xor    %rax,%rax
  0x000000010ca45e47: shl    $0x3,%rcx
  0x000000010ca45e4b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e4e: jmpq   0x000000010ca441e4
  0x000000010ca45e53: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e58: jmpq   0x000000010ca442e3
  0x000000010ca45e5d: mov    %rsi,%rdi
  0x000000010ca45e60: xor    %rax,%rax
  0x000000010ca45e63: shl    $0x3,%rcx
  0x000000010ca45e67: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e6a: mov    0x78(%rsp),%rsi
  0x000000010ca45e6f: xor    %edx,%edx
  0x000000010ca45e71: mov    %r8,%rcx
  0x000000010ca45e74: xor    %r8d,%r8d
  0x000000010ca45e77: mov    0x20(%rsp),%rbp
  0x000000010ca45e7c: data32 xchg %ax,%ax
  0x000000010ca45e7f: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12612}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45e84: jmpq   0x000000010ca443df
  0x000000010ca45e89: mov    %rsi,%rdi
  0x000000010ca45e8c: xor    %rax,%rax
  0x000000010ca45e8f: shl    $0x3,%rcx
  0x000000010ca45e93: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45e96: jmpq   0x000000010ca443df
  0x000000010ca45e9b: mov    %rbp,%r13
  0x000000010ca45e9e: mov    0x8(%rsp),%r9
  0x000000010ca45ea3: mov    0x10(%rsp),%r10
  0x000000010ca45ea8: mov    $0xffffff9d,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca45ead: mov    0x28(%rsp),%ebp
  0x000000010ca45eb1: mov    0x1c(%rsp),%r11d
  0x000000010ca45eb6: mov    %r11d,0x8(%rsp)
  0x000000010ca45ebb: mov    %rbx,0x10(%rsp)
  0x000000010ca45ec0: mov    %r13,0x18(%rsp)
  0x000000010ca45ec5: mov    %r14,0x20(%rsp)
  0x000000010ca45eca: mov    %r9,0x28(%rsp)
  0x000000010ca45ecf: mov    %r10,0x30(%rsp)
  0x000000010ca45ed4: data32 xchg %ax,%ax
  0x000000010ca45ed7: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=12700}
                                                ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca45edc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca45ee1: mov    0x8(%rsp),%r9
  0x000000010ca45ee6: mov    0x10(%rsp),%r10
  0x000000010ca45eeb: jmp    0x000000010ca45ea8
  0x000000010ca45eed: mov    0x8(%rsp),%r9
  0x000000010ca45ef2: mov    0x10(%rsp),%r10
  0x000000010ca45ef7: jmp    0x000000010ca45ea8
  0x000000010ca45ef9: mov    0x10(%rsp),%r10
  0x000000010ca45efe: jmp    0x000000010ca45ea8
  0x000000010ca45f00: movslq 0x14(%rsp),%r10    ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f05: jmpq   0x000000010ca444e7  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f0a: mov    %rsi,%rdi
  0x000000010ca45f0d: xor    %rax,%rax
  0x000000010ca45f10: shl    $0x3,%rcx
  0x000000010ca45f14: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f17: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f1c: xor    %edx,%edx
  0x000000010ca45f1e: mov    %r8,%rcx
  0x000000010ca45f21: xor    %r8d,%r8d
  0x000000010ca45f24: mov    0x20(%rsp),%rbp
  0x000000010ca45f29: xchg   %ax,%ax
  0x000000010ca45f2b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12784}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45f30: jmpq   0x000000010ca445e8
  0x000000010ca45f35: mov    %rsi,%rdi
  0x000000010ca45f38: xor    %rax,%rax
  0x000000010ca45f3b: shl    $0x3,%rcx
  0x000000010ca45f3f: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f42: jmpq   0x000000010ca445e8
  0x000000010ca45f47: movslq 0x14(%rsp),%r10
  0x000000010ca45f4c: jmpq   0x000000010ca446e7  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f51: mov    %rsi,%rdi
  0x000000010ca45f54: xor    %rax,%rax
  0x000000010ca45f57: shl    $0x3,%rcx
  0x000000010ca45f5b: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f5e: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f63: xor    %edx,%edx
  0x000000010ca45f65: mov    %r8,%rcx
  0x000000010ca45f68: xor    %r8d,%r8d
  0x000000010ca45f6b: mov    0x20(%rsp),%rbp
  0x000000010ca45f70: data32 xchg %ax,%ax
  0x000000010ca45f73: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12856}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45f78: jmpq   0x000000010ca447e3
  0x000000010ca45f7d: mov    %rsi,%rdi
  0x000000010ca45f80: xor    %rax,%rax
  0x000000010ca45f83: shl    $0x3,%rcx
  0x000000010ca45f87: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f8a: jmpq   0x000000010ca447e3
  0x000000010ca45f8f: movslq 0x14(%rsp),%r10    ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f94: jmpq   0x000000010ca448eb  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45f99: mov    %rsi,%rdi
  0x000000010ca45f9c: xor    %rax,%rax
  0x000000010ca45f9f: shl    $0x3,%rcx
  0x000000010ca45fa3: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45fa6: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45fab: xor    %edx,%edx
  0x000000010ca45fad: mov    %r8,%rcx
  0x000000010ca45fb0: xor    %r8d,%r8d
  0x000000010ca45fb3: mov    0x20(%rsp),%rbp
  0x000000010ca45fb8: data32 xchg %ax,%ax
  0x000000010ca45fbb: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12928}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca45fc0: jmpq   0x000000010ca449ec
  0x000000010ca45fc5: mov    %rsi,%rdi
  0x000000010ca45fc8: xor    %rax,%rax
  0x000000010ca45fcb: shl    $0x3,%rcx
  0x000000010ca45fcf: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45fd2: jmpq   0x000000010ca449ec
  0x000000010ca45fd7: movslq 0x14(%rsp),%r10
  0x000000010ca45fdc: jmpq   0x000000010ca44aeb
  0x000000010ca45fe1: mov    %rsi,%rdi
  0x000000010ca45fe4: xor    %rax,%rax
  0x000000010ca45fe7: shl    $0x3,%rcx
  0x000000010ca45feb: rep rex.W stos %al,%es:(%rdi)  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45fee: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca45ff3: xor    %edx,%edx
  0x000000010ca45ff5: mov    %r8,%rcx
  0x000000010ca45ff8: xor    %r8d,%r8d
  0x000000010ca45ffb: mov    0x20(%rsp),%rbp
  0x000000010ca46000: data32 xchg %ax,%ax
  0x000000010ca46003: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=13000}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca46008: jmpq   0x000000010ca44be7
  0x000000010ca4600d: mov    %rsi,%rdi
  0x000000010ca46010: xor    %rax,%rax
  0x000000010ca46013: shl    $0x3,%rcx
  0x000000010ca46017: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4601a: jmpq   0x000000010ca44be7  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca4601f: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46024: data32 xchg %ax,%ax
  0x000000010ca46027: callq  0x000000010c9a71a0  ; OopMap{off=13036}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4602c: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca46031: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46036: jmpq   0x000000010ca44d03  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4603b: mov    0x88(%rsp),%rcx
  0x000000010ca46043: mov    %r8,%rdi
  0x000000010ca46046: xor    %rax,%rax
  0x000000010ca46049: shl    $0x3,%rcx
  0x000000010ca4604d: rep rex.W stos %al,%es:(%rdi)  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46050: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46055: xor    %edx,%edx
  0x000000010ca46057: mov    0x90(%rsp),%rcx
  0x000000010ca4605f: xor    %r8d,%r8d
  0x000000010ca46062: mov    0x60(%rsp),%r9d
  0x000000010ca46067: callq  0x000000010ca0f560  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [144]=Oop off=13100}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4606c: jmpq   0x000000010ca44e3e
  0x000000010ca46071: mov    0x88(%rsp),%rcx
  0x000000010ca46079: mov    %r8,%rdi
  0x000000010ca4607c: xor    %rax,%rax
  0x000000010ca4607f: shl    $0x3,%rcx
  0x000000010ca46083: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46086: jmpq   0x000000010ca44e3e  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca4608b: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46090: data32 xchg %ax,%ax
  0x000000010ca46093: callq  0x000000010c9a71a0  ; OopMap{off=13144}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46098: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca4609d: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca460a2: nop
  0x000000010ca460a3: callq  0x000000010c9a71a0  ; OopMap{off=13160}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca460a8: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca460ad: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca460b2: mov    %r11d,%ebp
  0x000000010ca460b5: xchg   %ax,%ax
  0x000000010ca460b7: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=13180}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca460bc: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca460c1: mov    $0xfffffff4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca460c6: mov    0x20(%rsp),%rbp
  0x000000010ca460cb: mov    0x8(%rsp),%r10
  0x000000010ca460d0: mov    %r10,(%rsp)
  0x000000010ca460d4: mov    0x28(%rsp),%r11d
  0x000000010ca460d9: mov    %r11d,0x18(%rsp)
  0x000000010ca460de: mov    %ecx,0x1c(%rsp)
  0x000000010ca460e2: mov    0x30(%rsp),%r10
  0x000000010ca460e7: mov    %r10,0x20(%rsp)
  0x000000010ca460ec: mov    %r13d,0x28(%rsp)
  0x000000010ca460f1: mov    %r8d,0x30(%rsp)
  0x000000010ca460f6: nop
  0x000000010ca460f7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [32]=Oop [48]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=13244}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca460fc: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca46101: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46106: nop
  0x000000010ca46107: callq  0x000000010c9a71a0  ; OopMap{off=13260}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4610c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46111: mov    $0xfffffff6,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46116: nop
  0x000000010ca46117: callq  0x000000010c9a71a0  ; OopMap{off=13276}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4611c: callq  0x000000010be85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca46121: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46126: nop
  0x000000010ca46127: callq  0x000000010c9a71a0  ; OopMap{off=13292}
                                                ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4612c: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46131: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46136: nop
  0x000000010ca46137: callq  0x000000010c9a71a0  ; OopMap{off=13308}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca4613c: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46141: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46146: nop
  0x000000010ca46147: callq  0x000000010c9a71a0  ; OopMap{off=13324}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca4614c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46151: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46156: nop
  0x000000010ca46157: callq  0x000000010c9a71a0  ; OopMap{off=13340}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca4615c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46161: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46166: nop
  0x000000010ca46167: callq  0x000000010c9a71a0  ; OopMap{off=13356}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca4616c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46171: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46176: nop
  0x000000010ca46177: callq  0x000000010c9a71a0  ; OopMap{off=13372}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4617c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca46181: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46186: nop
  0x000000010ca46187: callq  0x000000010c9a71a0  ; OopMap{off=13388}
                                                ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca4618c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca46191: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46196: nop
  0x000000010ca46197: callq  0x000000010c9a71a0  ; OopMap{off=13404}
                                                ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)
                                                ;   {runtime_call}
  0x000000010ca4619c: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca461a1: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca461a6: nop
  0x000000010ca461a7: callq  0x000000010c9a71a0  ; OopMap{[48]=Oop off=13420}
                                                ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)
                                                ;   {runtime_call}
  0x000000010ca461ac: callq  0x000000010be85e14  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::isPrimitive@-1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca461b1: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca461b6: nop
  0x000000010ca461b7: callq  0x000000010c9a71a0  ; OopMap{off=13436}
                                                ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@27 (line 2290)
                                                ;   {runtime_call}
  0x000000010ca461bc: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca461c1: mov    $0xfffffff6,%esi   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca461c6: nop
  0x000000010ca461c7: callq  0x000000010c9a71a0  ; OopMap{off=13452}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca461cc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca461d1: mov    $0xfffffff6,%esi   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca461d6: nop
  0x000000010ca461d7: callq  0x000000010c9a71a0  ; OopMap{off=13468}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca461dc: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca461e1: mov    $0xfffffff6,%esi   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca461e6: nop
  0x000000010ca461e7: callq  0x000000010c9a71a0  ; OopMap{off=13484}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca461ec: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca461f1: mov    $0xffffff86,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca461f6: mov    %rdx,%rbp
  0x000000010ca461f9: mov    %rdi,(%rsp)
  0x000000010ca461fd: mov    %r11,0x8(%rsp)
  0x000000010ca46202: mov    %rcx,0x10(%rsp)
  0x000000010ca46207: mov    0x28(%rsp),%r10d
  0x000000010ca4620c: mov    %r10d,0x18(%rsp)
  0x000000010ca46211: mov    %r8,0x20(%rsp)
  0x000000010ca46216: mov    %rbx,0x28(%rsp)
  0x000000010ca4621b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop off=13536}
                                                ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010ca46220: callq  0x000000010be85e14  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca46225: jmp    0x000000010ca46282
  0x000000010ca46227: jmp    0x000000010ca46282
  0x000000010ca46229: jmp    0x000000010ca46282  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4622b: jmp    0x000000010ca46282  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4622d: jmp    0x000000010ca46282
  0x000000010ca4622f: jmp    0x000000010ca46282  ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46231: jmp    0x000000010ca46282  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46233: jmp    0x000000010ca46282  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46235: jmp    0x000000010ca46282  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46237: jmp    0x000000010ca46282
  0x000000010ca46239: jmp    0x000000010ca46282  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4623b: jmp    0x000000010ca46282  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4623d: jmp    0x000000010ca46282  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4623f: jmp    0x000000010ca46282
  0x000000010ca46241: jmp    0x000000010ca46282
  0x000000010ca46243: jmp    0x000000010ca46282  ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46245: jmp    0x000000010ca46282
  0x000000010ca46247: jmp    0x000000010ca46282  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46249: jmp    0x000000010ca46282
  0x000000010ca4624b: jmp    0x000000010ca46282  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4624d: jmp    0x000000010ca46282  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4624f: jmp    0x000000010ca46282
  0x000000010ca46251: jmp    0x000000010ca46282  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46253: jmp    0x000000010ca46282  ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46255: jmp    0x000000010ca46282  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010ca46257: jmp    0x000000010ca46282  ;*aload_1
                                                ; - java.io.ObjectStreamField::getClassSignature@15 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46259: jmp    0x000000010ca46282  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@46 (line 2292)

  0x000000010ca4625b: mov    %rax,%rsi
  0x000000010ca4625e: jmp    0x000000010ca4628a  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46260: jmp    0x000000010ca46282
  0x000000010ca46262: jmp    0x000000010ca46282
  0x000000010ca46264: jmp    0x000000010ca46282
  0x000000010ca46266: jmp    0x000000010ca46282  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46268: jmp    0x000000010ca46282  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010ca4626a: jmp    0x000000010ca46282
  0x000000010ca4626c: jmp    0x000000010ca46282  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca4626e: jmp    0x000000010ca46282  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46270: jmp    0x000000010ca46282  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46272: jmp    0x000000010ca46282
  0x000000010ca46274: jmp    0x000000010ca46282  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46276: jmp    0x000000010ca46282  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46278: jmp    0x000000010ca46282  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca4627a: jmp    0x000000010ca46282
  0x000000010ca4627c: jmp    0x000000010ca46282  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010ca4627e: jmp    0x000000010ca46282  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca46280: jmp    0x000000010ca46282
  0x000000010ca46282: mov    %rax,%rsi
  0x000000010ca46285: jmp    0x000000010ca4628a  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca46287: mov    %rax,%rsi
  0x000000010ca4628a: add    $0xd0,%rsp
  0x000000010ca46291: pop    %rbp
  0x000000010ca46292: jmpq   0x000000010ca0f620  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca46297: hlt    
  0x000000010ca46298: hlt    
  0x000000010ca46299: hlt    
  0x000000010ca4629a: hlt    
  0x000000010ca4629b: hlt    
  0x000000010ca4629c: hlt    
  0x000000010ca4629d: hlt    
  0x000000010ca4629e: hlt    
  0x000000010ca4629f: hlt    
[Stub Code]
  0x000000010ca462a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca462aa: jmpq   0x000000010ca462aa  ;   {runtime_call}
  0x000000010ca462af: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca462b9: jmpq   0x000000010ca462b9  ;   {runtime_call}
  0x000000010ca462be: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca462c8: jmpq   0x000000010ca462c8  ;   {runtime_call}
  0x000000010ca462cd: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca462d7: jmpq   0x000000010ca462d7  ;   {runtime_call}
  0x000000010ca462dc: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca462e6: jmpq   0x000000010ca462e6  ;   {runtime_call}
  0x000000010ca462eb: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca462f5: jmpq   0x000000010ca462f5  ;   {runtime_call}
  0x000000010ca462fa: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca46304: jmpq   0x000000010ca46304  ;   {runtime_call}
  0x000000010ca46309: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca46313: jmpq   0x000000010ca46313  ;   {runtime_call}
  0x000000010ca46318: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca46322: jmpq   0x000000010ca46322  ;   {runtime_call}
  0x000000010ca46327: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca46331: jmpq   0x000000010ca46331  ;   {runtime_call}
  0x000000010ca46336: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca46340: jmpq   0x000000010ca46340  ;   {runtime_call}
  0x000000010ca46345: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4634f: jmpq   0x000000010ca4634f  ;   {runtime_call}
  0x000000010ca46354: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4635e: jmpq   0x000000010ca4635e  ;   {runtime_call}
  0x000000010ca46363: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4636d: jmpq   0x000000010ca4636d  ;   {runtime_call}
  0x000000010ca46372: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4637c: jmpq   0x000000010ca4637c  ;   {runtime_call}
  0x000000010ca46381: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4638b: jmpq   0x000000010ca4638b  ;   {runtime_call}
  0x000000010ca46390: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca4639a: jmpq   0x000000010ca4639a  ;   {runtime_call}
  0x000000010ca4639f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca463a9: jmpq   0x000000010ca463a9  ;   {runtime_call}
[Exception Handler]
  0x000000010ca463ae: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca463b3: callq  0x000000010ca463b8
  0x000000010ca463b8: subq   $0x5,(%rsp)
  0x000000010ca463bd: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca463c2: hlt    
  0x000000010ca463c3: hlt    
  0x000000010ca463c4: hlt    
  0x000000010ca463c5: hlt    
  0x000000010ca463c6: hlt    
  0x000000010ca463c7: hlt    
<nmethod compile_id='66' compile_kind='osr' compiler='C2' entry='0x000000010ca42d40' size='37984' address='0x000000010ca42950' relocation_offset='296' insts_offset='1008' stub_offset='14672' scopes_data_offset='15216' scopes_pcs_offset='21720' dependencies_offset='36664' handler_table_offset='36688' nul_chk_table_offset='37816' oops_offset='14968' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5006' iicount='24' stamp='0.593'/>
<writer thread='21251'/>
<task_queued compile_id='84' compile_kind='osr' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='1' backedge_count='15690' iicount='1' osr_bci='20' stamp='0.593' comment='backedge_count' hot_count='15690'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca34050:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000110f4cbc8} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x20]  (sp of caller)
  0x000000010ca341a0: mov    0x8(%rsi),%r10d
  0x000000010ca341a4: shl    $0x3,%r10
  0x000000010ca341a8: cmp    %r10,%rax
  0x000000010ca341ab: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca341b1: data32 xchg %ax,%ax
  0x000000010ca341b4: nopl   0x0(%rax,%rax,1)
  0x000000010ca341bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca341c0: sub    $0x18,%rsp
  0x000000010ca341c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)

  0x000000010ca341cc: mov    %rsi,%r10
  0x000000010ca341cf: mov    %rdx,%r8
  0x000000010ca341d2: shr    $0x3,%r8
  0x000000010ca341d6: mov    %r8d,0xc(%rsi)
  0x000000010ca341da: shr    $0x9,%r10
  0x000000010ca341de: movabs $0x10c3a2000,%r11
  0x000000010ca341e8: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x000000010ca341ec: add    $0x10,%rsp
  0x000000010ca341f0: pop    %rbp
  0x000000010ca341f1: test   %eax,-0x21391f7(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca341f7: retq   
  0x000000010ca341f8: hlt    
  0x000000010ca341f9: hlt    
  0x000000010ca341fa: hlt    
  0x000000010ca341fb: hlt    
  0x000000010ca341fc: hlt    
  0x000000010ca341fd: hlt    
  0x000000010ca341fe: hlt    
  0x000000010ca341ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca34200: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca34205: callq  0x000000010ca3420a
  0x000000010ca3420a: subq   $0x5,(%rsp)
  0x000000010ca3420f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca34214: hlt    
  0x000000010ca34215: hlt    
  0x000000010ca34216: hlt    
  0x000000010ca34217: hlt    
<nmethod compile_id='79' compiler='C2' entry='0x000000010ca341a0' size='552' address='0x000000010ca34050' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='6737' backedge_count='1' iicount='16737' stamp='0.593'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca36d50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011103cce0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010ca36ea0: mov    %eax,-0x14000(%rsp)
  0x000000010ca36ea7: push   %rbp
  0x000000010ca36ea8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)

  0x000000010ca36eac: mov    %esi,%eax
  0x000000010ca36eae: cmp    %edx,%esi
  0x000000010ca36eb0: jl     0x000000010ca36ebe  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)

  0x000000010ca36eb2: add    $0x20,%rsp
  0x000000010ca36eb6: pop    %rbp
  0x000000010ca36eb7: test   %eax,-0x213bebd(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca36ebd: retq   
  0x000000010ca36ebe: mov    $0xffffff65,%esi
  0x000000010ca36ec3: mov    %eax,0x4(%rsp)
  0x000000010ca36ec7: mov    %edx,0x8(%rsp)
  0x000000010ca36ecb: callq  0x000000010c9a71a0  ; OopMap{off=48}
                                                ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ;   {runtime_call}
  0x000000010ca36ed0: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ;   {runtime_call}
  0x000000010ca36ed5: hlt    
  0x000000010ca36ed6: hlt    
  0x000000010ca36ed7: hlt    
  0x000000010ca36ed8: hlt    
  0x000000010ca36ed9: hlt    
  0x000000010ca36eda: hlt    
  0x000000010ca36edb: hlt    
  0x000000010ca36edc: hlt    
  0x000000010ca36edd: hlt    
  0x000000010ca36ede: hlt    
  0x000000010ca36edf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca36ee0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca36ee5: callq  0x000000010ca36eea
  0x000000010ca36eea: subq   $0x5,(%rsp)
  0x000000010ca36eef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca36ef4: hlt    
  0x000000010ca36ef5: hlt    
  0x000000010ca36ef6: hlt    
  0x000000010ca36ef7: hlt    
<nmethod compile_id='80' compiler='C2' entry='0x000000010ca36ea0' size='560' address='0x000000010ca36d50' relocation_offset='296' insts_offset='336' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='456' dependencies_offset='552' method='java/lang/Math max (II)I' bytes='11' count='6586' backedge_count='1' iicount='16585' stamp='0.594'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca3fe10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110ff1360} &apos;toHexString&apos; &apos;(J)Ljava/lang/String;&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  #           [sp+0x50]  (sp of caller)
  0x000000010ca3ff80: mov    %eax,-0x14000(%rsp)
  0x000000010ca3ff87: push   %rbp
  0x000000010ca3ff88: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)

  0x000000010ca3ff8c: mov    %rsi,(%rsp)
  0x000000010ca3ff90: lzcnt  %rsi,%r11
  0x000000010ca3ff95: mov    $0x1,%r8d
  0x000000010ca3ff9b: mov    $0x43,%r10d
  0x000000010ca3ffa1: sub    %r11d,%r10d        ;*iadd
                                                ; - java.lang.Long::toUnsignedString0@12 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca3ffa4: mov    %r10d,%ebp
  0x000000010ca3ffa7: sar    $0x1f,%ebp
  0x000000010ca3ffaa: shr    $0x1e,%ebp
  0x000000010ca3ffad: add    %r10d,%ebp
  0x000000010ca3ffb0: sar    $0x2,%ebp          ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca3ffb3: cmp    $0x1,%ebp
  0x000000010ca3ffb6: cmovl  %r8d,%ebp          ;*invokestatic max
                                                ; - java.lang.Long::toUnsignedString0@16 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca3ffba: movslq %ebp,%r11          ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca3ffbd: cmp    $0x80000,%ebp
  0x000000010ca3ffc3: ja     0x000000010ca40269
  0x000000010ca3ffc9: mov    %r11,%rcx
  0x000000010ca3ffcc: cmp    $0x80000,%ebp
  0x000000010ca3ffd2: ja     0x000000010ca40209
  0x000000010ca3ffd8: mov    0x60(%r15),%r9
  0x000000010ca3ffdc: shl    %rcx
  0x000000010ca3ffdf: add    $0x17,%rcx
  0x000000010ca3ffe3: mov    %rcx,%r10
  0x000000010ca3ffe6: and    $0xfffffffffffffff8,%r10
  0x000000010ca3ffea: mov    %r9,%r8
  0x000000010ca3ffed: add    %r10,%r8
  0x000000010ca3fff0: cmp    0x70(%r15),%r8
  0x000000010ca3fff4: jae    0x000000010ca40209
  0x000000010ca3fffa: mov    %r8,0x60(%r15)
  0x000000010ca3fffe: prefetchnta 0xc0(%r8)
  0x000000010ca40006: movq   $0x1,(%r9)
  0x000000010ca4000d: prefetchnta 0x100(%r8)
  0x000000010ca40015: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x000000010ca4001d: mov    %ebp,0xc(%r9)
  0x000000010ca40021: prefetchnta 0x140(%r8)
  0x000000010ca40029: mov    %r9,%rdi
  0x000000010ca4002c: add    $0x10,%rdi
  0x000000010ca40030: prefetchnta 0x180(%r8)
  0x000000010ca40038: shr    $0x3,%rcx
  0x000000010ca4003c: add    $0xfffffffffffffffe,%rcx
  0x000000010ca40040: xor    %rax,%rax
  0x000000010ca40043: shl    $0x3,%rcx
  0x000000010ca40047: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4004a: mov    %r9,0x8(%rsp)
  0x000000010ca4004f: mov    %ebp,%r10d
  0x000000010ca40052: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca40055: mov    (%rsp),%r8
  0x000000010ca40059: mov    %r8d,%r8d
  0x000000010ca4005c: and    $0xf,%r8d
  0x000000010ca40060: movabs $0x76ab2e5d8,%rcx  ;   {oop([C)}
  0x000000010ca4006a: movzwl 0x10(%rcx,%r8,2),%r8d  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca40070: cmp    %ebp,%r10d
  0x000000010ca40073: jae    0x000000010ca40249
  0x000000010ca40079: mov    %r8w,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4007f: mov    (%rsp),%r11
  0x000000010ca40083: shr    $0x4,%r11          ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca40087: mov    %r11,%r9
  0x000000010ca4008a: test   %r11,%r11
  0x000000010ca4008d: jne    0x000000010ca40101  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4008f: mov    0x60(%r15),%rax
  0x000000010ca40093: mov    %rax,%r10
  0x000000010ca40096: add    $0x18,%r10
  0x000000010ca4009a: cmp    0x70(%r15),%r10
  0x000000010ca4009e: jae    0x000000010ca4022d
  0x000000010ca400a4: mov    %r10,0x60(%r15)
  0x000000010ca400a8: prefetchnta 0xc0(%r10)
  0x000000010ca400b0: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca400b6: shl    $0x3,%r10
  0x000000010ca400ba: mov    0xa8(%r10),%r10
  0x000000010ca400c1: mov    %r10,(%rax)
  0x000000010ca400c4: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca400cb: mov    %r12d,0xc(%rax)
  0x000000010ca400cf: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca400d3: mov    0x8(%rsp),%r10
  0x000000010ca400d8: shr    $0x3,%r10
  0x000000010ca400dc: mov    %r10d,0xc(%rax)
  0x000000010ca400e0: mov    %rax,%r10
  0x000000010ca400e3: shr    $0x9,%r10
  0x000000010ca400e7: movabs $0x10c3a2000,%r11
  0x000000010ca400f1: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca400f5: add    $0x40,%rsp
  0x000000010ca400f9: pop    %rbp
  0x000000010ca400fa: test   %eax,-0x2145100(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca40100: retq   
  0x000000010ca40101: test   %r10d,%r10d
  0x000000010ca40104: jle    0x000000010ca40299  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4010a: mov    %r11d,%r11d
  0x000000010ca4010d: and    $0xf,%r11d
  0x000000010ca40111: movzwl 0x10(%rcx,%r11,2),%r8d  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca40117: mov    %r10d,%edi
  0x000000010ca4011a: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4011c: cmp    %ebp,%edi
  0x000000010ca4011e: jae    0x000000010ca40271
  0x000000010ca40124: mov    0x8(%rsp),%r11
  0x000000010ca40129: mov    %r8w,0xe(%r11,%r10,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4012f: shr    $0x4,%r9           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca40133: test   %r9,%r9
  0x000000010ca40136: je     0x000000010ca4008f  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4013c: mov    %ebp,%r8d
  0x000000010ca4013f: add    $0xfffffffffffffffe,%r8d
  0x000000010ca40143: mov    %r9d,%r11d
  0x000000010ca40146: and    $0xf,%r11d         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4014a: lea    0x10(%rcx,%r11,2),%r10  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4014f: xor    %r11d,%r11d
  0x000000010ca40152: cmp    %r11d,%r8d
  0x000000010ca40155: cmovl  %r11d,%r8d
  0x000000010ca40159: cmp    %r8d,%edi
  0x000000010ca4015c: jle    0x000000010ca40167  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4015e: movzwl (%r10),%r8d
  0x000000010ca40162: mov    %edi,%r10d
  0x000000010ca40165: jmp    0x000000010ca40117
  0x000000010ca40167: test   %edi,%edi
  0x000000010ca40169: jle    0x000000010ca401be
  0x000000010ca4016b: movzwl (%r10),%r11d
  0x000000010ca4016f: jmp    0x000000010ca40194
  0x000000010ca40171: data32 xchg %ax,%ax
  0x000000010ca40174: mov    %r11d,%r11d
  0x000000010ca40177: and    $0xf,%r11d
  0x000000010ca4017b: movzwl 0x10(%rcx,%r11,2),%r8d
  0x000000010ca40181: mov    %r10d,%edi
  0x000000010ca40184: jmp    0x000000010ca401c6
  0x000000010ca40186: data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca40190: movzwl (%r10),%r11d
  0x000000010ca40194: mov    0x8(%rsp),%r10
  0x000000010ca40199: mov    %r11w,0xe(%r10,%rdi,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4019f: shr    $0x4,%r9           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401a3: test   %r9,%r9
  0x000000010ca401a6: je     0x000000010ca4008f  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401ac: mov    %r9d,%r10d
  0x000000010ca401af: and    $0xf,%r10d
  0x000000010ca401b3: lea    0x10(%rcx,%r10,2),%r10  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401b8: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401ba: test   %edi,%edi
  0x000000010ca401bc: jg     0x000000010ca40190  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401be: test   %edi,%edi
  0x000000010ca401c0: jle    0x000000010ca401fe
  0x000000010ca401c2: movzwl (%r10),%r8d        ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401c6: mov    %edi,%r10d
  0x000000010ca401c9: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401cc: cmp    %ebp,%r10d
  0x000000010ca401cf: jae    0x000000010ca402b1
  0x000000010ca401d5: mov    0x8(%rsp),%r11
  0x000000010ca401da: mov    %r8w,0xe(%r11,%rdi,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401e0: mov    %r9,%r11
  0x000000010ca401e3: shr    $0x4,%r11          ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401e7: mov    %r11,%r9
  0x000000010ca401ea: test   %r11,%r11
  0x000000010ca401ed: je     0x000000010ca4008f  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401f3: test   %r10d,%r10d
  0x000000010ca401f6: jg     0x000000010ca40174  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca401fc: jmp    0x000000010ca40201
  0x000000010ca401fe: mov    %edi,%r10d
  0x000000010ca40201: mov    %r9,%rbp
  0x000000010ca40204: jmpq   0x000000010ca4029c
  0x000000010ca40209: mov    %r11,0x8(%rsp)
  0x000000010ca4020e: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca40218: mov    %ebp,%edx
  0x000000010ca4021a: nop
  0x000000010ca4021b: callq  0x000000010ca11a60  ; OopMap{off=672}
                                                ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40220: mov    0x8(%rsp),%r11
  0x000000010ca40225: mov    %rax,%r9
  0x000000010ca40228: jmpq   0x000000010ca4004a  ;*invokestatic formatUnsignedLong
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4022d: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca40237: mov    0x8(%rsp),%rbp
  0x000000010ca4023c: data32 xchg %ax,%ax
  0x000000010ca4023f: callq  0x000000010ca11960  ; OopMap{rbp=Oop [8]=Oop off=708}
                                                ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40244: jmpq   0x000000010ca400d3
  0x000000010ca40249: mov    $0xffffffe4,%esi
  0x000000010ca4024e: mov    %r9,0x18(%rsp)
  0x000000010ca40253: mov    %r10d,0x14(%rsp)
  0x000000010ca40258: mov    %r8d,0x20(%rsp)
  0x000000010ca4025d: xchg   %ax,%ax
  0x000000010ca4025f: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [24]=Oop off=740}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40264: callq  0x000000010be85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40269: movslq %ebp,%rcx          ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4026c: jmpq   0x000000010ca3ffcc
  0x000000010ca40271: mov    %edi,%r10d
  0x000000010ca40274: mov    %r9,%rbp
  0x000000010ca40277: mov    $0xffffffe4,%esi
  0x000000010ca4027c: rex.W pushq 0x8(%rsp)
  0x000000010ca40281: rex.W popq (%rsp)
  0x000000010ca40285: mov    %r10d,0x14(%rsp)
  0x000000010ca4028a: mov    %r8d,0x20(%rsp)
  0x000000010ca4028f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=788}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40294: callq  0x000000010be85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca40299: mov    %r11,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca4029c: mov    $0xffffff65,%esi
  0x000000010ca402a1: mov    %r10d,0x14(%rsp)
  0x000000010ca402a6: nop
  0x000000010ca402a7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=812}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca402ac: callq  0x000000010be85e14  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x000000010ca402b1: mov    %r9,%rbp
  0x000000010ca402b4: jmp    0x000000010ca40277  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010ca402b6: mov    %rax,%rsi
  0x000000010ca402b9: jmp    0x000000010ca402be
  0x000000010ca402bb: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)

  0x000000010ca402be: add    $0x40,%rsp
  0x000000010ca402c2: pop    %rbp
  0x000000010ca402c3: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca402c8: hlt    
  0x000000010ca402c9: hlt    
  0x000000010ca402ca: hlt    
  0x000000010ca402cb: hlt    
  0x000000010ca402cc: hlt    
  0x000000010ca402cd: hlt    
  0x000000010ca402ce: hlt    
  0x000000010ca402cf: hlt    
  0x000000010ca402d0: hlt    
  0x000000010ca402d1: hlt    
  0x000000010ca402d2: hlt    
  0x000000010ca402d3: hlt    
  0x000000010ca402d4: hlt    
  0x000000010ca402d5: hlt    
  0x000000010ca402d6: hlt    
  0x000000010ca402d7: hlt    
  0x000000010ca402d8: hlt    
  0x000000010ca402d9: hlt    
  0x000000010ca402da: hlt    
  0x000000010ca402db: hlt    
  0x000000010ca402dc: hlt    
  0x000000010ca402dd: hlt    
  0x000000010ca402de: hlt    
  0x000000010ca402df: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca402e0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca402e5: callq  0x000000010ca402ea
  0x000000010ca402ea: subq   $0x5,(%rsp)
  0x000000010ca402ef: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca402f4: hlt    
  0x000000010ca402f5: hlt    
  0x000000010ca402f6: hlt    
  0x000000010ca402f7: hlt    
<nmethod compile_id='81' compiler='C2' entry='0x000000010ca3ff80' size='2456' address='0x000000010ca3fe10' relocation_offset='296' insts_offset='368' stub_offset='1232' scopes_data_offset='1296' scopes_pcs_offset='1616' dependencies_offset='2400' handler_table_offset='2408' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='9411' backedge_count='1' iicount='29409' stamp='0.602'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca41710:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110ff1558} &apos;toUnsignedString0&apos; &apos;(JI)Ljava/lang/String;&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010ca41880: mov    %eax,-0x14000(%rsp)
  0x000000010ca41887: push   %rbp
  0x000000010ca41888: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)

  0x000000010ca4188c: mov    %edx,0x10(%rsp)
  0x000000010ca41890: mov    %rsi,0x8(%rsp)
  0x000000010ca41895: lzcnt  %rsi,%r10
  0x000000010ca4189a: mov    $0x40,%eax
  0x000000010ca4189f: sub    %r10d,%eax
  0x000000010ca418a2: add    %edx,%eax
  0x000000010ca418a4: dec    %eax               ;*iadd
                                                ; - java.lang.Long::toUnsignedString0@12 (line 355)

  0x000000010ca418a6: test   %edx,%edx
  0x000000010ca418a8: je     0x000000010ca41b29
  0x000000010ca418ae: mov    %edx,%r10d
  0x000000010ca418b1: cmp    $0x80000000,%eax
  0x000000010ca418b6: jne    0x000000010ca418c0
  0x000000010ca418b8: xor    %edx,%edx
  0x000000010ca418ba: cmp    $0xffffffffffffffff,%r10d
  0x000000010ca418be: je     0x000000010ca418c4
  0x000000010ca418c0: cltd   
  0x000000010ca418c1: idiv   %r10d              ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)

  0x000000010ca418c4: cmp    $0x1,%eax
  0x000000010ca418c7: mov    $0x1,%r10d
  0x000000010ca418cd: cmovl  %r10d,%eax         ;*invokestatic max
                                                ; - java.lang.Long::toUnsignedString0@16 (line 355)

  0x000000010ca418d1: mov    %eax,(%rsp)
  0x000000010ca418d4: movslq %eax,%rbp          ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca418d7: cmp    $0x80000,%eax
  0x000000010ca418dd: ja     0x000000010ca41b6d
  0x000000010ca418e3: mov    %rbp,%rcx
  0x000000010ca418e6: cmp    $0x80000,%eax
  0x000000010ca418ec: ja     0x000000010ca41af4
  0x000000010ca418f2: mov    0x60(%r15),%r9
  0x000000010ca418f6: shl    %rcx
  0x000000010ca418f9: add    $0x17,%rcx
  0x000000010ca418fd: mov    %rcx,%r10
  0x000000010ca41900: and    $0xfffffffffffffff8,%r10
  0x000000010ca41904: mov    %r9,%r11
  0x000000010ca41907: add    %r10,%r11
  0x000000010ca4190a: cmp    0x70(%r15),%r11
  0x000000010ca4190e: jae    0x000000010ca41af4
  0x000000010ca41914: mov    %r11,0x60(%r15)
  0x000000010ca41918: prefetchnta 0xc0(%r11)
  0x000000010ca41920: movq   $0x1,(%r9)
  0x000000010ca41927: prefetchnta 0x100(%r11)
  0x000000010ca4192f: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x000000010ca41937: mov    %eax,0xc(%r9)
  0x000000010ca4193b: prefetchnta 0x140(%r11)
  0x000000010ca41943: mov    %r9,%rdi
  0x000000010ca41946: add    $0x10,%rdi
  0x000000010ca4194a: prefetchnta 0x180(%r11)
  0x000000010ca41952: shr    $0x3,%rcx
  0x000000010ca41956: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4195a: xor    %rax,%rax
  0x000000010ca4195d: shl    $0x3,%rcx
  0x000000010ca41961: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010ca41964: mov    %r9,0x28(%rsp)
  0x000000010ca41969: mov    $0x1,%r8d
  0x000000010ca4196f: mov    0x10(%rsp),%ecx
  0x000000010ca41973: shl    %cl,%r8d
  0x000000010ca41976: mov    0x8(%rsp),%r10
  0x000000010ca4197b: mov    %r10d,%r10d
  0x000000010ca4197e: dec    %r8d               ;*isub
                                                ; - java.lang.Long::formatUnsignedLong@12 (line 374)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41981: and    %r8d,%r10d         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41984: mov    (%rsp),%r11d
  0x000000010ca41988: dec    %r11d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca4198b: cmp    $0x24,%r10d
  0x000000010ca4198f: jae    0x000000010ca41b3d
  0x000000010ca41995: movabs $0x76ab2e5d8,%rbx  ;   {oop([C)}
  0x000000010ca4199f: movzwl 0x10(%rbx,%r10,2),%r10d  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca419a5: cmp    (%rsp),%r11d
  0x000000010ca419a9: jae    0x000000010ca41b75
  0x000000010ca419af: mov    %r10w,0xe(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca419b5: mov    0x8(%rsp),%rdi
  0x000000010ca419ba: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca419bd: test   %rdi,%rdi
  0x000000010ca419c0: jne    0x000000010ca41a34  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca419c2: mov    0x60(%r15),%rax
  0x000000010ca419c6: mov    %rax,%r10
  0x000000010ca419c9: add    $0x18,%r10
  0x000000010ca419cd: cmp    0x70(%r15),%r10
  0x000000010ca419d1: jae    0x000000010ca41b10
  0x000000010ca419d7: mov    %r10,0x60(%r15)
  0x000000010ca419db: prefetchnta 0xc0(%r10)
  0x000000010ca419e3: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca419e9: shl    $0x3,%r10
  0x000000010ca419ed: mov    0xa8(%r10),%r10
  0x000000010ca419f4: mov    %r10,(%rax)
  0x000000010ca419f7: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca419fe: mov    %r12d,0xc(%rax)
  0x000000010ca41a02: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)

  0x000000010ca41a06: mov    0x28(%rsp),%r10
  0x000000010ca41a0b: shr    $0x3,%r10
  0x000000010ca41a0f: mov    %r10d,0xc(%rax)
  0x000000010ca41a13: mov    %rax,%r10
  0x000000010ca41a16: shr    $0x9,%r10
  0x000000010ca41a1a: movabs $0x10c3a2000,%r11
  0x000000010ca41a24: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)

  0x000000010ca41a28: add    $0x40,%rsp
  0x000000010ca41a2c: pop    %rbp
  0x000000010ca41a2d: test   %eax,-0x2146a33(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca41a33: retq   
  0x000000010ca41a34: test   %r11d,%r11d
  0x000000010ca41a37: jle    0x000000010ca41c65  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a3d: mov    %edi,%r9d
  0x000000010ca41a40: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a43: mov    %r11d,%r10d
  0x000000010ca41a46: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a49: cmp    $0x24,%r9d
  0x000000010ca41a4d: jae    0x000000010ca41ba5
  0x000000010ca41a53: movzwl 0x10(%rbx,%r9,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a59: cmp    (%rsp),%r10d
  0x000000010ca41a5d: jae    0x000000010ca41bdd
  0x000000010ca41a63: mov    0x28(%rsp),%r9
  0x000000010ca41a68: mov    %bp,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a6e: mov    0x10(%rsp),%ecx
  0x000000010ca41a72: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a75: test   %rdi,%rdi
  0x000000010ca41a78: je     0x000000010ca419c2  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a7e: mov    (%rsp),%r11d
  0x000000010ca41a82: add    $0xfffffffffffffffe,%r11d
  0x000000010ca41a86: xor    %r9d,%r9d
  0x000000010ca41a89: cmp    %r9d,%r11d
  0x000000010ca41a8c: cmovl  %r9d,%r11d
  0x000000010ca41a90: cmp    %r11d,%r10d
  0x000000010ca41a93: jle    0x000000010ca41a9a  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41a95: mov    %r10d,%r11d
  0x000000010ca41a98: jmp    0x000000010ca41a3d
  0x000000010ca41a9a: test   %r10d,%r10d
  0x000000010ca41a9d: jle    0x000000010ca41c0d
  0x000000010ca41aa3: jmp    0x000000010ca41ab3
  0x000000010ca41aa5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca41ab0: mov    %r11d,%r10d        ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41ab3: mov    %edi,%r9d
  0x000000010ca41ab6: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41ab9: mov    %r10d,%r11d
  0x000000010ca41abc: dec    %r11d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41abf: cmp    $0x24,%r9d
  0x000000010ca41ac3: jae    0x000000010ca41ba8  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41ac9: movzwl 0x10(%rbx,%r9,2),%r9d
  0x000000010ca41acf: mov    0x28(%rsp),%rcx
  0x000000010ca41ad4: mov    %r9w,0xe(%rcx,%r10,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41ada: mov    0x10(%rsp),%ecx
  0x000000010ca41ade: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41ae1: test   %rdi,%rdi
  0x000000010ca41ae4: je     0x000000010ca419c2  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41aea: test   %r11d,%r11d
  0x000000010ca41aed: jg     0x000000010ca41ab0  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41aef: jmpq   0x000000010ca41c10
  0x000000010ca41af4: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca41afe: mov    %eax,%edx
  0x000000010ca41b00: data32 xchg %ax,%ax
  0x000000010ca41b03: callq  0x000000010ca11a60  ; OopMap{off=648}
                                                ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ;   {runtime_call}
  0x000000010ca41b08: mov    %rax,%r9
  0x000000010ca41b0b: jmpq   0x000000010ca41964  ;*invokestatic formatUnsignedLong
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41b10: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca41b1a: mov    0x28(%rsp),%rbp
  0x000000010ca41b1f: callq  0x000000010ca11960  ; OopMap{rbp=Oop [40]=Oop off=676}
                                                ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ;   {runtime_call}
  0x000000010ca41b24: jmpq   0x000000010ca41a06
  0x000000010ca41b29: mov    $0xffffff96,%esi
  0x000000010ca41b2e: mov    %eax,%ebp
  0x000000010ca41b30: data32 xchg %ax,%ax
  0x000000010ca41b33: callq  0x000000010c9a71a0  ; OopMap{off=696}
                                                ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)
                                                ;   {runtime_call}
  0x000000010ca41b38: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca41b3d: mov    $0xffffffe4,%esi
  0x000000010ca41b42: mov    %r9,%rbp
  0x000000010ca41b45: mov    0x8(%rsp),%r9
  0x000000010ca41b4a: mov    %r9,(%rsp)
  0x000000010ca41b4e: mov    %ecx,0x8(%rsp)
  0x000000010ca41b52: mov    %r8d,0x18(%rsp)
  0x000000010ca41b57: mov    %r11d,0x1c(%rsp)
  0x000000010ca41b5c: mov    %r10d,0x28(%rsp)
  0x000000010ca41b61: xchg   %ax,%ax
  0x000000010ca41b63: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=744}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41b68: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41b6d: movslq %eax,%rcx          ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010ca41b70: jmpq   0x000000010ca418e6
  0x000000010ca41b75: mov    $0xffffffe4,%esi
  0x000000010ca41b7a: mov    %r9,%rbp
  0x000000010ca41b7d: mov    0x8(%rsp),%r9
  0x000000010ca41b82: mov    %r9,(%rsp)
  0x000000010ca41b86: mov    %ecx,0x8(%rsp)
  0x000000010ca41b8a: mov    %r8d,0x18(%rsp)
  0x000000010ca41b8f: mov    %r11d,0x1c(%rsp)
  0x000000010ca41b94: mov    %r10d,0x28(%rsp)
  0x000000010ca41b99: xchg   %ax,%ax
  0x000000010ca41b9b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=800}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41ba0: callq  0x000000010be85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41ba5: mov    %r10d,%r11d
  0x000000010ca41ba8: mov    %r11d,%r10d
  0x000000010ca41bab: mov    %rdi,%rbp
  0x000000010ca41bae: mov    $0xffffffe4,%esi
  0x000000010ca41bb3: rex.W pushq 0x28(%rsp)
  0x000000010ca41bb8: rex.W popq (%rsp)
  0x000000010ca41bbc: mov    0x10(%rsp),%ecx
  0x000000010ca41bc0: mov    %ecx,0x8(%rsp)
  0x000000010ca41bc4: mov    %r8d,0x18(%rsp)
  0x000000010ca41bc9: mov    %r10d,0x1c(%rsp)
  0x000000010ca41bce: mov    %r9d,0x28(%rsp)
  0x000000010ca41bd3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=856}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41bd8: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41bdd: mov    %rdi,(%rsp)
  0x000000010ca41be1: mov    $0xffffffe4,%esi
  0x000000010ca41be6: rex.W pushq 0x28(%rsp)
  0x000000010ca41beb: rex.W popq 0x8(%rsp)
  0x000000010ca41bf0: mov    %r8d,0x20(%rsp)
  0x000000010ca41bf5: mov    %r10d,0x24(%rsp)
  0x000000010ca41bfa: nop
  0x000000010ca41bfb: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop off=896}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41c00: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca41c05: data32 xchg %ax,%ax
  0x000000010ca41c08: mov    %r10d,%r11d
  0x000000010ca41c0b: jmp    0x000000010ca41c15
  0x000000010ca41c0d: mov    %r10d,%r11d
  0x000000010ca41c10: test   %r11d,%r11d
  0x000000010ca41c13: jle    0x000000010ca41c5d  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c15: mov    %edi,%r9d
  0x000000010ca41c18: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c1b: mov    %r11d,%r10d
  0x000000010ca41c1e: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c21: cmp    $0x24,%r9d
  0x000000010ca41c25: jae    0x000000010ca41c99
  0x000000010ca41c27: movzwl 0x10(%rbx,%r9,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c2d: mov    (%rsp),%ecx
  0x000000010ca41c30: cmp    %ecx,%r10d
  0x000000010ca41c33: jae    0x000000010ca41ca1
  0x000000010ca41c35: mov    0x28(%rsp),%r9
  0x000000010ca41c3a: mov    %bp,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c40: mov    0x10(%rsp),%ecx
  0x000000010ca41c44: mov    %rdi,%r11
  0x000000010ca41c47: shr    %cl,%r11           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c4a: mov    %r11,%rdi
  0x000000010ca41c4d: test   %r11,%r11
  0x000000010ca41c50: je     0x000000010ca419c2  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c56: test   %r10d,%r10d
  0x000000010ca41c59: jg     0x000000010ca41c08  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c5b: jmp    0x000000010ca41c60
  0x000000010ca41c5d: mov    %r11d,%r10d
  0x000000010ca41c60: mov    %rdi,%rbp
  0x000000010ca41c63: jmp    0x000000010ca41c6b
  0x000000010ca41c65: mov    %r11d,%r10d
  0x000000010ca41c68: mov    %rdi,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010ca41c6b: mov    $0xffffff65,%esi
  0x000000010ca41c70: rex.W pushq 0x28(%rsp)
  0x000000010ca41c75: rex.W popq (%rsp)
  0x000000010ca41c79: mov    0x10(%rsp),%r11d
  0x000000010ca41c7e: mov    %r11d,0x8(%rsp)
  0x000000010ca41c83: mov    %r8d,0x18(%rsp)
  0x000000010ca41c88: mov    %r10d,0x1c(%rsp)
  0x000000010ca41c8d: xchg   %ax,%ax
  0x000000010ca41c8f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=1044}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41c94: callq  0x000000010be85e14  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010ca41c99: mov    %rdi,%rbp
  0x000000010ca41c9c: jmpq   0x000000010ca41bae
  0x000000010ca41ca1: mov    %rdi,(%rsp)
  0x000000010ca41ca5: jmpq   0x000000010ca41be1  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010ca41caa: mov    %rax,%rsi
  0x000000010ca41cad: jmp    0x000000010ca41cb2
  0x000000010ca41caf: mov    %rax,%rsi          ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)

  0x000000010ca41cb2: add    $0x40,%rsp
  0x000000010ca41cb6: pop    %rbp
  0x000000010ca41cb7: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca41cbc: hlt    
  0x000000010ca41cbd: hlt    
  0x000000010ca41cbe: hlt    
  0x000000010ca41cbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca41cc0: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca41cc5: callq  0x000000010ca41cca
  0x000000010ca41cca: subq   $0x5,(%rsp)
  0x000000010ca41ccf: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca41cd4: hlt    
  0x000000010ca41cd5: hlt    
  0x000000010ca41cd6: hlt    
  0x000000010ca41cd7: hlt    
<nmethod compile_id='82' compiler='C2' entry='0x000000010ca41880' size='2864' address='0x000000010ca41710' relocation_offset='296' insts_offset='368' stub_offset='1456' scopes_data_offset='1520' scopes_pcs_offset='1880' dependencies_offset='2808' handler_table_offset='2816' oops_offset='1480' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='9422' backedge_count='1' iicount='29419' stamp='0.610'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca411d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000110ff30f0} &apos;numberOfLeadingZeros&apos; &apos;(J)I&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  #           [sp+0x30]  (sp of caller)
  0x000000010ca41320: mov    %eax,-0x14000(%rsp)
  0x000000010ca41327: push   %rbp
  0x000000010ca41328: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::numberOfLeadingZeros@-1 (line 1418)

  0x000000010ca4132c: test   %rsi,%rsi
  0x000000010ca4132f: je     0x000000010ca413dd  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)

  0x000000010ca41335: mov    %rsi,%r10
  0x000000010ca41338: shr    $0x20,%r10
  0x000000010ca4133c: mov    %r10d,%ebp         ;*l2i  ; - java.lang.Long::numberOfLeadingZeros@15 (line 1421)

  0x000000010ca4133f: test   %ebp,%ebp
  0x000000010ca41341: jne    0x000000010ca4139f  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)

  0x000000010ca41343: mov    %esi,%r11d         ;*l2i  ; - java.lang.Long::numberOfLeadingZeros@25 (line 1422)

  0x000000010ca41346: mov    %r11d,%ebp
  0x000000010ca41349: shr    $0x10,%ebp         ;*iushr
                                                ; - java.lang.Long::numberOfLeadingZeros@30 (line 1423)

  0x000000010ca4134c: test   %ebp,%ebp
  0x000000010ca4134e: jne    0x000000010ca413b5  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)

  0x000000010ca41350: shl    $0x10,%r11d        ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@40 (line 1423)

  0x000000010ca41354: mov    %r11d,%ebp
  0x000000010ca41357: shr    $0x18,%ebp         ;*iushr
                                                ; - java.lang.Long::numberOfLeadingZeros@45 (line 1424)

  0x000000010ca4135a: test   %ebp,%ebp
  0x000000010ca4135c: je     0x000000010ca41405  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)

  0x000000010ca41362: mov    %r11d,%ebp
  0x000000010ca41365: shr    $0x1c,%ebp         ;*iushr
                                                ; - java.lang.Long::numberOfLeadingZeros@60 (line 1425)

  0x000000010ca41368: test   %ebp,%ebp
  0x000000010ca4136a: jne    0x000000010ca413c9  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@61 (line 1425)

  0x000000010ca4136c: shl    $0x4,%r11d         ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@69 (line 1425)

  0x000000010ca41370: mov    %r11d,%r10d
  0x000000010ca41373: shr    $0x1e,%r10d
  0x000000010ca41377: test   %r10d,%r10d
  0x000000010ca4137a: jne    0x000000010ca41387  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@75 (line 1426)

  0x000000010ca4137c: shl    $0x2,%r11d         ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@83 (line 1426)

  0x000000010ca41380: mov    $0x37,%eax
  0x000000010ca41385: jmp    0x000000010ca4138c
  0x000000010ca41387: mov    $0x35,%eax         ;*iload_2
                                                ; - java.lang.Long::numberOfLeadingZeros@85 (line 1427)

  0x000000010ca4138c: shr    $0x1f,%r11d
  0x000000010ca41390: sub    %r11d,%eax         ;*isub
                                                ; - java.lang.Long::numberOfLeadingZeros@90 (line 1427)

  0x000000010ca41393: add    $0x20,%rsp
  0x000000010ca41397: pop    %rbp
  0x000000010ca41398: test   %eax,-0x214639e(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca4139e: retq   
  0x000000010ca4139f: mov    %rsi,(%rsp)
  0x000000010ca413a3: mov    $0xffffff65,%esi
  0x000000010ca413a8: data32 xchg %ax,%ax
  0x000000010ca413ab: callq  0x000000010c9a71a0  ; OopMap{off=144}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)
                                                ;   {runtime_call}
  0x000000010ca413b0: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)
                                                ;   {runtime_call}
  0x000000010ca413b5: mov    $0xffffff65,%esi
  0x000000010ca413ba: mov    %r11d,(%rsp)
  0x000000010ca413be: nop
  0x000000010ca413bf: callq  0x000000010c9a71a0  ; OopMap{off=164}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)
                                                ;   {runtime_call}
  0x000000010ca413c4: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)
                                                ;   {runtime_call}
  0x000000010ca413c9: mov    $0xffffff65,%esi
  0x000000010ca413ce: mov    %r11d,(%rsp)
  0x000000010ca413d2: nop
  0x000000010ca413d3: callq  0x000000010c9a71a0  ; OopMap{off=184}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@61 (line 1425)
                                                ;   {runtime_call}
  0x000000010ca413d8: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@61 (line 1425)
                                                ;   {runtime_call}
  0x000000010ca413dd: xor    %r10d,%r10d
  0x000000010ca413e0: cmp    %r10,%rsi
  0x000000010ca413e3: mov    $0xffffffff,%ebp
  0x000000010ca413e8: jl     0x000000010ca413f2
  0x000000010ca413ea: setne  %bpl
  0x000000010ca413ee: movzbl %bpl,%ebp          ;*lcmp
                                                ; - java.lang.Long::numberOfLeadingZeros@2 (line 1418)

  0x000000010ca413f2: mov    %rsi,(%rsp)
  0x000000010ca413f6: mov    $0xffffff65,%esi
  0x000000010ca413fb: callq  0x000000010c9a71a0  ; OopMap{off=224}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)
                                                ;   {runtime_call}
  0x000000010ca41400: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)
                                                ;   {runtime_call}
  0x000000010ca41405: mov    $0xffffff65,%esi
  0x000000010ca4140a: mov    %r11d,(%rsp)
  0x000000010ca4140e: nop
  0x000000010ca4140f: callq  0x000000010c9a71a0  ; OopMap{off=244}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)
                                                ;   {runtime_call}
  0x000000010ca41414: callq  0x000000010be85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)
                                                ;   {runtime_call}
  0x000000010ca41419: hlt    
  0x000000010ca4141a: hlt    
  0x000000010ca4141b: hlt    
  0x000000010ca4141c: hlt    
  0x000000010ca4141d: hlt    
  0x000000010ca4141e: hlt    
  0x000000010ca4141f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca41420: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca41425: callq  0x000000010ca4142a
  0x000000010ca4142a: subq   $0x5,(%rsp)
  0x000000010ca4142f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca41434: hlt    
  0x000000010ca41435: hlt    
  0x000000010ca41436: hlt    
  0x000000010ca41437: hlt    
<nmethod compile_id='83' compiler='C2' entry='0x000000010ca41320' size='1296' address='0x000000010ca411d0' relocation_offset='296' insts_offset='336' stub_offset='592' scopes_data_offset='624' scopes_pcs_offset='808' dependencies_offset='1288' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='9422' backedge_count='1' iicount='29419' stamp='0.611'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca3b8d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001113d99c0} &apos;setUp&apos; &apos;()V&apos; in &apos;org/github/arnaudroger/CsvContent&apos;
  0x000000010ca3bae0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3bae5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca3baf0: mov    %eax,-0x14000(%rsp)
  0x000000010ca3baf7: push   %rbp
  0x000000010ca3baf8: sub    $0x90,%rsp
  0x000000010ca3baff: mov    (%rsi),%ebp
  0x000000010ca3bb01: mov    0x18(%rsi),%rbx
  0x000000010ca3bb05: mov    0x10(%rsi),%r14
  0x000000010ca3bb09: mov    0x8(%rsi),%r13d
  0x000000010ca3bb0d: mov    %rsi,%rdi
  0x000000010ca3bb10: movabs $0x10bee473e,%r10
  0x000000010ca3bb1a: callq  *%r10
  0x000000010ca3bb1d: test   %rbx,%rbx
  0x000000010ca3bb20: je     0x000000010ca3c6ab
  0x000000010ca3bb26: mov    0x8(%rbx),%r11d
  0x000000010ca3bb2a: movabs $0x0,%r10
  0x000000010ca3bb34: lea    (%r10,%r11,8),%r10
  0x000000010ca3bb38: mov    0x30(%r10),%r10
  0x000000010ca3bb3c: movabs $0x7c00a6180,%r11  ;   {metadata(&apos;org/github/arnaudroger/CsvContent&apos;)}
  0x000000010ca3bb46: cmp    %r11,%r10
  0x000000010ca3bb49: jne    0x000000010ca3c6b3
  0x000000010ca3bb4f: mov    %rbx,%r8
  0x000000010ca3bb52: mov    0x8(%r14),%r10d    ; implicit exception: dispatches to 0x000000010ca3c775
  0x000000010ca3bb56: cmp    $0xf8001b4b,%r10d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca3bb5d: jne    0x000000010ca3c6b3
  0x000000010ca3bb63: mov    %r14,%r10          ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x000000010ca3bb66: movabs $0x76ab576e8,%r11  ;   {oop([C)}
  0x000000010ca3bb70: movabs $0x76ab576e8,%r9   ;   {oop([C)}
  0x000000010ca3bb7a: add    $0x10,%r9          ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bb7e: movabs $0x76b18c758,%r11  ;   {oop([C)}
  0x000000010ca3bb88: movabs $0x76b18c758,%rcx  ;   {oop([C)}
  0x000000010ca3bb92: add    $0x10,%rcx         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3bb96: jmpq   0x000000010ca3c190
  0x000000010ca3bb9b: mov    %r11d,0x60(%rsp)
  0x000000010ca3bba0: mov    %edi,0x2c(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bba4: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca3bbae: mov    0x28(%rsp),%edx
  0x000000010ca3bbb2: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3bbbc: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3bbc6: mov    %r10,0x68(%rsp)
  0x000000010ca3bbcb: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[104] [32]=Derived_oop_rbp [44]=NarrowOop [48]=Oop [104]=Oop off=240}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3bbd0: mov    %rax,%rbp
  0x000000010ca3bbd3: mov    0x2c(%rsp),%edi
  0x000000010ca3bbd7: mov    0x60(%rsp),%r11d
  0x000000010ca3bbdc: jmpq   0x000000010ca3bdf1
  0x000000010ca3bbe1: movslq %r9d,%rdx
  0x000000010ca3bbe4: mov    %rdx,%r9
  0x000000010ca3bbe7: shl    %r9
  0x000000010ca3bbea: add    $0x10,%r9
  0x000000010ca3bbee: mov    %r9,%rcx
  0x000000010ca3bbf1: and    $0xfffffffffffffff9,%rcx
  0x000000010ca3bbf5: mov    0x28(%rsp),%rdi
  0x000000010ca3bbfa: add    %rcx,%rdi
  0x000000010ca3bbfd: shr    $0x3,%r9
  0x000000010ca3bc01: sub    %r9,%r10
  0x000000010ca3bc04: mov    %r10,%rcx
  0x000000010ca3bc07: xor    %rax,%rax
  0x000000010ca3bc0a: shl    $0x3,%rcx
  0x000000010ca3bc0e: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3bc11: mov    %r11,%rdi
  0x000000010ca3bc14: mov    %r8,%rsi
  0x000000010ca3bc17: movabs $0x10c9f44c0,%r10
  0x000000010ca3bc21: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3bc24: jmpq   0x000000010ca3c399
  0x000000010ca3bc29: mov    %r11d,0x70(%rsp)
  0x000000010ca3bc2e: mov    %ebx,0x3c(%rsp)
  0x000000010ca3bc32: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca3bc3c: mov    0x30(%rsp),%edx
  0x000000010ca3bc40: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3bc4a: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3bc54: mov    %r10,0x78(%rsp)
  0x000000010ca3bc59: xchg   %ax,%ax
  0x000000010ca3bc5b: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[120] [32]=Derived_oop_rbp [40]=Oop [60]=NarrowOop [64]=Oop [120]=Oop off=384}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3bc60: mov    %rax,%r8
  0x000000010ca3bc63: mov    0x3c(%rsp),%ebx
  0x000000010ca3bc67: mov    0x70(%rsp),%r11d
  0x000000010ca3bc6c: jmpq   0x000000010ca3c03d
  0x000000010ca3bc71: movslq %r9d,%rdx
  0x000000010ca3bc74: mov    %rdx,%r11
  0x000000010ca3bc77: shl    %r11
  0x000000010ca3bc7a: add    $0x10,%r11
  0x000000010ca3bc7e: mov    %r11,%r8
  0x000000010ca3bc81: and    $0xfffffffffffffff9,%r8
  0x000000010ca3bc85: mov    0x48(%rsp),%rdi
  0x000000010ca3bc8a: add    %r8,%rdi
  0x000000010ca3bc8d: shr    $0x3,%r11
  0x000000010ca3bc91: sub    %r11,%rbp
  0x000000010ca3bc94: mov    %rbp,%rcx
  0x000000010ca3bc97: xor    %rax,%rax
  0x000000010ca3bc9a: shl    $0x3,%rcx
  0x000000010ca3bc9e: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3bca1: mov    %r10,%rdi
  0x000000010ca3bca4: movabs $0x10c9f44c0,%r10
  0x000000010ca3bcae: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bcb1: jmpq   0x000000010ca3be68
  0x000000010ca3bcb6: movslq %r9d,%rdx
  0x000000010ca3bcb9: mov    %rdx,%r11
  0x000000010ca3bcbc: shl    %r11
  0x000000010ca3bcbf: add    $0x10,%r11
  0x000000010ca3bcc3: mov    %r11,%r8
  0x000000010ca3bcc6: and    $0xfffffffffffffff9,%r8
  0x000000010ca3bcca: mov    0x58(%rsp),%rdi
  0x000000010ca3bccf: add    %r8,%rdi
  0x000000010ca3bcd2: shr    $0x3,%r11
  0x000000010ca3bcd6: sub    %r11,%rbp
  0x000000010ca3bcd9: mov    %rbp,%rcx
  0x000000010ca3bcdc: xor    %rax,%rax
  0x000000010ca3bcdf: shl    $0x3,%rcx
  0x000000010ca3bce3: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3bce6: mov    %r10,%rdi
  0x000000010ca3bce9: movabs $0x10c9f44c0,%r10
  0x000000010ca3bcf3: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bcf6: jmpq   0x000000010ca3c0b4
  0x000000010ca3bcfb: nopl   0x0(%rax,%rax,1)
  0x000000010ca3bd00: mov    0x10(%rsp),%r9
  0x000000010ca3bd05: mov    0x28(%rsp),%rcx
  0x000000010ca3bd0a: jmpq   0x000000010ca3be96
  0x000000010ca3bd0f: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd11: test   %eax,%eax
  0x000000010ca3bd13: jle    0x000000010ca3bd23  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd15: mov    $0x7ffffff7,%r10d
  0x000000010ca3bd1b: sub    %eax,%r10d
  0x000000010ca3bd1e: test   %r10d,%r10d
  0x000000010ca3bd21: jge    0x000000010ca3bd59  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd23: mov    %r11d,0x34(%rsp)
  0x000000010ca3bd28: mov    %edi,0x30(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd2c: mov    0x10(%rsp),%rsi
  0x000000010ca3bd31: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3bd3b: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3bd45: mov    %r10,0x38(%rsp)
  0x000000010ca3bd4a: nop
  0x000000010ca3bd4b: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [40]=Oop [48]=NarrowOop [56]=Oop off=624}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {optimized virtual_call}
  0x000000010ca3bd50: mov    0x30(%rsp),%edi
  0x000000010ca3bd54: mov    0x34(%rsp),%r11d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd59: cmp    $0x80000,%eax
  0x000000010ca3bd5f: ja     0x000000010ca3c587
  0x000000010ca3bd65: mov    %eax,0x28(%rsp)
  0x000000010ca3bd69: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bd6c: shl    %r10
  0x000000010ca3bd6f: lea    (%r12,%rdi,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3bd73: mov    %r8,0x30(%rsp)
  0x000000010ca3bd78: add    $0x17,%r10
  0x000000010ca3bd7c: mov    %r10,0x38(%rsp)
  0x000000010ca3bd81: and    $0xfffffffffffffff8,%r10
  0x000000010ca3bd85: mov    %r10,0x40(%rsp)
  0x000000010ca3bd8a: mov    0x28(%rsp),%r10d
  0x000000010ca3bd8f: cmp    $0x80000,%r10d
  0x000000010ca3bd96: ja     0x000000010ca3bb9b
  0x000000010ca3bd9c: mov    0x60(%r15),%rbp
  0x000000010ca3bda0: mov    %rbp,%r10
  0x000000010ca3bda3: mov    0x40(%rsp),%r8
  0x000000010ca3bda8: add    %r8,%r10
  0x000000010ca3bdab: cmp    0x70(%r15),%r10
  0x000000010ca3bdaf: jae    0x000000010ca3bb9b
  0x000000010ca3bdb5: mov    %r10,0x60(%r15)
  0x000000010ca3bdb9: prefetchnta 0xc0(%r10)
  0x000000010ca3bdc1: movq   $0x1,0x0(%rbp)
  0x000000010ca3bdc9: prefetchnta 0x100(%r10)
  0x000000010ca3bdd1: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010ca3bdd8: mov    0x28(%rsp),%r8d
  0x000000010ca3bddd: mov    %r8d,0xc(%rbp)
  0x000000010ca3bde1: prefetchnta 0x140(%r10)
  0x000000010ca3bde9: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bdf1: mov    %rbp,0x48(%rsp)
  0x000000010ca3bdf6: cmp    0x28(%rsp),%r11d
  0x000000010ca3bdfb: mov    0x28(%rsp),%r9d
  0x000000010ca3be00: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3be04: mov    %rbp,%rsi
  0x000000010ca3be07: add    $0x10,%rsi
  0x000000010ca3be0b: mov    0x38(%rsp),%rbp
  0x000000010ca3be10: shr    $0x3,%rbp
  0x000000010ca3be14: mov    %rbp,%rcx
  0x000000010ca3be17: add    $0xfffffffffffffffe,%rcx
  0x000000010ca3be1b: cmp    %r9d,%r11d
  0x000000010ca3be1e: jb     0x000000010ca3c593
  0x000000010ca3be24: mov    0x28(%rsp),%r11d
  0x000000010ca3be29: cmp    %r9d,%r11d
  0x000000010ca3be2c: jb     0x000000010ca3c593
  0x000000010ca3be32: test   %r9d,%r9d
  0x000000010ca3be35: jle    0x000000010ca3c5d5
  0x000000010ca3be3b: lea    0x10(%r12,%rdi,8),%r10
  0x000000010ca3be40: cmp    0x28(%rsp),%r9d
  0x000000010ca3be45: jl     0x000000010ca3bc71
  0x000000010ca3be4b: mov    0x40(%rsp),%rdx
  0x000000010ca3be50: add    $0xfffffffffffffff0,%rdx
  0x000000010ca3be54: shr    $0x3,%rdx
  0x000000010ca3be58: mov    %r10,%rdi
  0x000000010ca3be5b: movabs $0x10c9f4780,%r10
  0x000000010ca3be65: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3be68: mov    0x10(%rsp),%r9
  0x000000010ca3be6d: mov    0xc(%r9),%r8d      ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3be71: mov    0x48(%rsp),%rcx
  0x000000010ca3be76: mov    %rcx,%r11
  0x000000010ca3be79: shr    $0x3,%r11
  0x000000010ca3be7d: mov    %r11d,0x10(%r9)
  0x000000010ca3be81: mov    %r9,%r10
  0x000000010ca3be84: shr    $0x9,%r10
  0x000000010ca3be88: movabs $0x10c3a2000,%r11
  0x000000010ca3be92: mov    %r12b,(%r11,%r10,1)  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3be96: mov    0xc(%rcx),%r10d    ; implicit exception: dispatches to 0x000000010ca3c739
  0x000000010ca3be9a: test   %r8d,%r8d
  0x000000010ca3be9d: jl     0x000000010ca3c4c1
  0x000000010ca3bea3: mov    %r9,0x10(%rsp)
  0x000000010ca3bea8: mov    %r8d,%r9d
  0x000000010ca3beab: inc    %r9d
  0x000000010ca3beae: cmp    %r9d,%r10d
  0x000000010ca3beb1: jb     0x000000010ca3c4c6
  0x000000010ca3beb7: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010ca3bebc: mov    0x18(%rsp),%rdi
  0x000000010ca3bec1: mov    $0x1,%edx
  0x000000010ca3bec6: movabs $0x10c9f4580,%r10
  0x000000010ca3bed0: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3bed3: mov    0x10(%rsp),%r10
  0x000000010ca3bed8: incl   0xc(%r10)          ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)

  0x000000010ca3bedc: mov    0x8(%rsp),%r11d
  0x000000010ca3bee1: or     0xc(%rsp),%r11d
  0x000000010ca3bee6: movslq %r11d,%rsi         ;*i2l  ; - org.github.arnaudroger.CsvContent::setUp@43 (line 29)

  0x000000010ca3bee9: mov    $0x4,%edx
  0x000000010ca3beee: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3bef8: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3bf02: mov    %r10,0x28(%rsp)
  0x000000010ca3bf07: callq  0x000000010c9e8420  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[40] [32]=Derived_oop_rbp [40]=Oop off=1068}
                                                ;*invokestatic toUnsignedString0
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)
                                                ;   {static_call}
  0x000000010ca3bf0c: mov    0xc(%rax),%edi     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x000000010ca3c74d
  0x000000010ca3bf0f: mov    0xc(%r12,%rdi,8),%ebp  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x000000010ca3c6e1
  0x000000010ca3bf14: mov    %ebp,0x38(%rsp)
  0x000000010ca3bf18: mov    %rax,0x28(%rsp)
  0x000000010ca3bf1d: mov    0x10(%rsp),%r10
  0x000000010ca3bf22: mov    0x10(%r10),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf26: mov    0xc(%r12,%rbx,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x000000010ca3c6f1
  0x000000010ca3bf2b: mov    0xc(%r10),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf2f: mov    %ebp,%edx
  0x000000010ca3bf31: add    %r8d,%edx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf34: mov    %edx,%r10d
  0x000000010ca3bf37: sub    %r11d,%r10d
  0x000000010ca3bf3a: test   %r10d,%r10d
  0x000000010ca3bf3d: jle    0x000000010ca3c0ed  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf43: mov    %r11d,%eax
  0x000000010ca3bf46: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf48: mov    %eax,%r8d
  0x000000010ca3bf4b: sub    %edx,%r8d
  0x000000010ca3bf4e: add    $0x2,%r8d
  0x000000010ca3bf52: test   %r8d,%r8d
  0x000000010ca3bf55: jl     0x000000010ca3bf5c  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf57: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf5a: jmp    0x000000010ca3bf5e
  0x000000010ca3bf5c: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf5e: test   %eax,%eax
  0x000000010ca3bf60: jle    0x000000010ca3bf70  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf62: mov    $0x7ffffff7,%r10d
  0x000000010ca3bf68: sub    %eax,%r10d
  0x000000010ca3bf6b: test   %r10d,%r10d
  0x000000010ca3bf6e: jge    0x000000010ca3bfa5  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bf70: mov    %r11d,0x34(%rsp)
  0x000000010ca3bf75: mov    %ebx,0x30(%rsp)
  0x000000010ca3bf79: mov    0x10(%rsp),%rsi
  0x000000010ca3bf7e: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3bf88: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3bf92: mov    %r10,0x40(%rsp)
  0x000000010ca3bf97: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[64] [32]=Derived_oop_rbp [40]=Oop [48]=NarrowOop [64]=Oop off=1212}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {optimized virtual_call}
  0x000000010ca3bf9c: mov    0x30(%rsp),%ebx
  0x000000010ca3bfa0: mov    0x34(%rsp),%r11d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bfa5: cmp    $0x80000,%eax
  0x000000010ca3bfab: ja     0x000000010ca3c529
  0x000000010ca3bfb1: mov    %eax,0x30(%rsp)
  0x000000010ca3bfb5: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bfb8: shl    %r10
  0x000000010ca3bfbb: lea    (%r12,%rbx,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3bfbf: mov    %r8,0x40(%rsp)
  0x000000010ca3bfc4: add    $0x17,%r10
  0x000000010ca3bfc8: mov    %r10,0x48(%rsp)
  0x000000010ca3bfcd: mov    %r10,%rbp
  0x000000010ca3bfd0: and    $0xfffffffffffffff8,%rbp
  0x000000010ca3bfd4: mov    %rbp,0x50(%rsp)
  0x000000010ca3bfd9: mov    0x30(%rsp),%ebp
  0x000000010ca3bfdd: cmp    $0x80000,%ebp
  0x000000010ca3bfe3: ja     0x000000010ca3bc29
  0x000000010ca3bfe9: mov    0x60(%r15),%r8
  0x000000010ca3bfed: mov    %r8,%r10
  0x000000010ca3bff0: mov    0x50(%rsp),%rbp
  0x000000010ca3bff5: add    %rbp,%r10
  0x000000010ca3bff8: cmp    0x70(%r15),%r10
  0x000000010ca3bffc: jae    0x000000010ca3bc29
  0x000000010ca3c002: mov    %r10,0x60(%r15)
  0x000000010ca3c006: prefetchnta 0xc0(%r10)
  0x000000010ca3c00e: movq   $0x1,(%r8)
  0x000000010ca3c015: prefetchnta 0x100(%r10)
  0x000000010ca3c01d: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca3c025: mov    0x30(%rsp),%ebp
  0x000000010ca3c029: mov    %ebp,0xc(%r8)
  0x000000010ca3c02d: prefetchnta 0x140(%r10)
  0x000000010ca3c035: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c03d: mov    %r8,0x58(%rsp)
  0x000000010ca3c042: cmp    0x30(%rsp),%r11d
  0x000000010ca3c047: mov    0x30(%rsp),%r9d
  0x000000010ca3c04c: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c050: mov    %r8,%rsi
  0x000000010ca3c053: add    $0x10,%rsi
  0x000000010ca3c057: mov    0x48(%rsp),%rbp
  0x000000010ca3c05c: shr    $0x3,%rbp
  0x000000010ca3c060: mov    %rbp,%rcx
  0x000000010ca3c063: add    $0xfffffffffffffffe,%rcx
  0x000000010ca3c067: cmp    %r9d,%r11d
  0x000000010ca3c06a: jb     0x000000010ca3c535
  0x000000010ca3c070: mov    0x30(%rsp),%r10d
  0x000000010ca3c075: cmp    %r9d,%r10d
  0x000000010ca3c078: jb     0x000000010ca3c535
  0x000000010ca3c07e: test   %r9d,%r9d
  0x000000010ca3c081: jle    0x000000010ca3c575
  0x000000010ca3c087: lea    0x10(%r12,%rbx,8),%r10
  0x000000010ca3c08c: cmp    0x30(%rsp),%r9d
  0x000000010ca3c091: jl     0x000000010ca3bcb6
  0x000000010ca3c097: mov    0x50(%rsp),%rdx
  0x000000010ca3c09c: add    $0xfffffffffffffff0,%rdx
  0x000000010ca3c0a0: shr    $0x3,%rdx
  0x000000010ca3c0a4: mov    %r10,%rdi
  0x000000010ca3c0a7: movabs $0x10c9f4780,%r10
  0x000000010ca3c0b1: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c0b4: mov    0x10(%rsp),%r10
  0x000000010ca3c0b9: mov    0xc(%r10),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c0bd: mov    0x28(%rsp),%r10
  0x000000010ca3c0c2: mov    0xc(%r10),%edi     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c0c6: mov    0x58(%rsp),%r10
  0x000000010ca3c0cb: mov    %r10,%rbx
  0x000000010ca3c0ce: shr    $0x3,%rbx
  0x000000010ca3c0d2: mov    0x10(%rsp),%r10
  0x000000010ca3c0d7: mov    %ebx,0x10(%r10)
  0x000000010ca3c0db: shr    $0x9,%r10
  0x000000010ca3c0df: movabs $0x10c3a2000,%r11
  0x000000010ca3c0e9: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c0ed: mov    0xc(%r12,%rdi,8),%r10d  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x000000010ca3c701
  0x000000010ca3c0f2: mov    0x38(%rsp),%ebp
  0x000000010ca3c0f6: cmp    %r10d,%ebp
  0x000000010ca3c0f9: jg     0x000000010ca3c4fd  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c0ff: mov    0xc(%r12,%rbx,8),%r11d  ; implicit exception: dispatches to 0x000000010ca3c711
  0x000000010ca3c104: lea    (%r12,%rdi,8),%r9  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c108: lea    (%r12,%rbx,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c10c: test   %r8d,%r8d
  0x000000010ca3c10f: jl     0x000000010ca3c494
  0x000000010ca3c115: cmp    %ebp,%r10d
  0x000000010ca3c118: jb     0x000000010ca3c494
  0x000000010ca3c11e: mov    %r8d,%r10d
  0x000000010ca3c121: add    %ebp,%r10d
  0x000000010ca3c124: cmp    %r10d,%r11d
  0x000000010ca3c127: jb     0x000000010ca3c494
  0x000000010ca3c12d: test   %ebp,%ebp
  0x000000010ca3c12f: jle    0x000000010ca3c14b
  0x000000010ca3c131: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010ca3c136: lea    0x10(%r12,%rdi,8),%rdi
  0x000000010ca3c13b: movslq %ebp,%rdx
  0x000000010ca3c13e: movabs $0x10c9f4580,%r10
  0x000000010ca3c148: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c14b: mov    0x10(%rsp),%r10
  0x000000010ca3c150: mov    0xc(%r10),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c154: add    0x38(%rsp),%r11d
  0x000000010ca3c159: mov    %r11d,0xc(%r10)    ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)

  0x000000010ca3c15d: mov    0xc(%rsp),%ebp
  0x000000010ca3c161: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.CsvContent::setUp@51 (line 27)

  0x000000010ca3c163: movabs $0x76ab576e8,%r11  ;   {oop([C)}
  0x000000010ca3c16d: movabs $0x76b18c758,%r8   ; OopMap{r10=Oop r11=Oop r8=Oop [0]=Oop [16]=Oop [24]=Derived_oop_r11 [32]=Derived_oop_r8 off=1687}
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)
                                                ;   {oop([C)}
  0x000000010ca3c177: test   %eax,-0x214117d(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)
                                                ;   {poll}
  0x000000010ca3c17d: mov    0x8(%rsp),%r13d
  0x000000010ca3c182: mov    (%rsp),%r8
  0x000000010ca3c186: mov    0x18(%rsp),%r9
  0x000000010ca3c18b: mov    0x20(%rsp),%rcx    ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x000000010ca3c190: mov    0x10(%r8),%r11d    ; implicit exception: dispatches to 0x000000010ca3c6d1
  0x000000010ca3c194: mov    %rcx,0x20(%rsp)
  0x000000010ca3c199: mov    %r9,0x18(%rsp)
  0x000000010ca3c19e: mov    %r8,(%rsp)
  0x000000010ca3c1a2: mov    %r13d,0x8(%rsp)
  0x000000010ca3c1a7: mov    %ebp,0xc(%rsp)
  0x000000010ca3c1ab: mov    0xc(%r10),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c1af: mov    %r10,0x10(%rsp)
  0x000000010ca3c1b4: mov    0x10(%r10),%edi    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c1b8: mov    %r8d,%edx
  0x000000010ca3c1bb: inc    %edx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c1bd: mov    %rdi,%r10
  0x000000010ca3c1c0: shl    $0x3,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c1c4: mov    %r10,0x28(%rsp)
  0x000000010ca3c1c9: cmp    %r11d,%ebp
  0x000000010ca3c1cc: jge    0x000000010ca3c20c  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@25 (line 27)

  0x000000010ca3c1ce: test   %ebp,%ebp
  0x000000010ca3c1d0: jle    0x000000010ca3bedc  ;*ifle
                                                ; - org.github.arnaudroger.CsvContent::setUp@29 (line 28)

  0x000000010ca3c1d6: mov    0xc(%r12,%rdi,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ; implicit exception: dispatches to 0x000000010ca3c729
  0x000000010ca3c1db: mov    %r8d,%r9d
  0x000000010ca3c1de: sub    %r11d,%r9d
  0x000000010ca3c1e1: inc    %r9d
  0x000000010ca3c1e4: test   %r9d,%r9d
  0x000000010ca3c1e7: jle    0x000000010ca3bd00  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c1ed: mov    %r11d,%eax
  0x000000010ca3c1f0: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c1f2: mov    %eax,%r10d
  0x000000010ca3c1f5: sub    %r8d,%r10d
  0x000000010ca3c1f8: inc    %r10d
  0x000000010ca3c1fb: test   %r10d,%r10d
  0x000000010ca3c1fe: jl     0x000000010ca3bd0f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c204: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c207: jmpq   0x000000010ca3bd11
  0x000000010ca3c20c: mov    0xc(%r12,%rdi,8),%ebx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ; implicit exception: dispatches to 0x000000010ca3c765
  0x000000010ca3c211: mov    %r8d,%r11d
  0x000000010ca3c214: sub    %ebx,%r11d
  0x000000010ca3c217: inc    %r11d
  0x000000010ca3c21a: test   %r11d,%r11d
  0x000000010ca3c21d: jle    0x000000010ca3c236  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c21f: mov    %ebx,%eax
  0x000000010ca3c221: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c223: mov    %eax,%r11d
  0x000000010ca3c226: sub    %r8d,%r11d
  0x000000010ca3c229: inc    %r11d
  0x000000010ca3c22c: test   %r11d,%r11d
  0x000000010ca3c22f: jl     0x000000010ca3c240  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c231: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c234: jmp    0x000000010ca3c242
  0x000000010ca3c236: mov    0x10(%rsp),%rcx
  0x000000010ca3c23b: jmpq   0x000000010ca3c3c0
  0x000000010ca3c240: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c242: test   %eax,%eax
  0x000000010ca3c244: jle    0x000000010ca3c254  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c246: mov    $0x7ffffff7,%r10d
  0x000000010ca3c24c: sub    %eax,%r10d
  0x000000010ca3c24f: test   %r10d,%r10d
  0x000000010ca3c252: jge    0x000000010ca3c288  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c254: mov    %ebx,0x30(%rsp)
  0x000000010ca3c258: mov    %edi,0xc(%rsp)     ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c25c: mov    0x10(%rsp),%rsi
  0x000000010ca3c261: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c26b: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c275: mov    %r10,0x38(%rsp)
  0x000000010ca3c27a: nop
  0x000000010ca3c27b: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [40]=Oop [56]=Oop off=1952}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {optimized virtual_call}
  0x000000010ca3c280: mov    0xc(%rsp),%edi
  0x000000010ca3c284: mov    0x30(%rsp),%ebx    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c288: cmp    $0x80000,%eax
  0x000000010ca3c28e: ja     0x000000010ca3c651
  0x000000010ca3c294: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c297: mov    %eax,0xc(%rsp)
  0x000000010ca3c29b: shl    %r10
  0x000000010ca3c29e: lea    (%r12,%rdi,8),%r11  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c2a2: mov    %r11,0x38(%rsp)
  0x000000010ca3c2a7: add    $0x17,%r10
  0x000000010ca3c2ab: mov    %r10,0x30(%rsp)
  0x000000010ca3c2b0: and    $0xfffffffffffffff8,%r10
  0x000000010ca3c2b4: mov    %r10,0x40(%rsp)
  0x000000010ca3c2b9: cmp    $0x80000,%eax
  0x000000010ca3c2bf: ja     0x000000010ca3c44f
  0x000000010ca3c2c5: mov    0x60(%r15),%r11
  0x000000010ca3c2c9: mov    %r11,%r10
  0x000000010ca3c2cc: mov    0x40(%rsp),%r8
  0x000000010ca3c2d1: add    %r8,%r10
  0x000000010ca3c2d4: cmp    0x70(%r15),%r10
  0x000000010ca3c2d8: jae    0x000000010ca3c44f
  0x000000010ca3c2de: mov    %r10,0x60(%r15)
  0x000000010ca3c2e2: prefetchnta 0xc0(%r10)
  0x000000010ca3c2ea: movq   $0x1,(%r11)
  0x000000010ca3c2f1: prefetchnta 0x100(%r10)
  0x000000010ca3c2f9: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010ca3c301: mov    %eax,0xc(%r11)
  0x000000010ca3c305: prefetchnta 0x140(%r10)
  0x000000010ca3c30d: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c315: mov    %r11,0x28(%rsp)
  0x000000010ca3c31a: cmp    0xc(%rsp),%ebx
  0x000000010ca3c31e: mov    0xc(%rsp),%r9d
  0x000000010ca3c323: cmovl  %ebx,%r9d          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c327: mov    %r11,%r10
  0x000000010ca3c32a: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c32e: mov    %r10,%r8
  0x000000010ca3c331: mov    %r11,%rbp
  0x000000010ca3c334: shr    $0x3,%rbp          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c338: mov    %ebp,0x50(%rsp)
  0x000000010ca3c33c: mov    0x30(%rsp),%r10
  0x000000010ca3c341: shr    $0x3,%r10
  0x000000010ca3c345: mov    %r10,%rcx
  0x000000010ca3c348: add    $0xfffffffffffffffe,%rcx
  0x000000010ca3c34c: cmp    %r9d,%ebx
  0x000000010ca3c34f: jb     0x000000010ca3c659
  0x000000010ca3c355: mov    0xc(%rsp),%ebp
  0x000000010ca3c359: cmp    %r9d,%ebp
  0x000000010ca3c35c: jb     0x000000010ca3c659
  0x000000010ca3c362: test   %r9d,%r9d
  0x000000010ca3c365: jle    0x000000010ca3c699
  0x000000010ca3c36b: lea    0x10(%r12,%rdi,8),%r11
  0x000000010ca3c370: cmp    %ebp,%r9d
  0x000000010ca3c373: jl     0x000000010ca3bbe1
  0x000000010ca3c379: mov    0x40(%rsp),%rdx
  0x000000010ca3c37e: add    $0xfffffffffffffff0,%rdx
  0x000000010ca3c382: shr    $0x3,%rdx
  0x000000010ca3c386: mov    %r11,%rdi
  0x000000010ca3c389: mov    %r8,%rsi
  0x000000010ca3c38c: movabs $0x10c9f4780,%r10
  0x000000010ca3c396: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c399: mov    0x10(%rsp),%rcx
  0x000000010ca3c39e: mov    0x50(%rsp),%r11d
  0x000000010ca3c3a3: mov    %r11d,0x10(%rcx)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c3a7: mov    0xc(%rcx),%r8d
  0x000000010ca3c3ab: mov    %rcx,%r10
  0x000000010ca3c3ae: shr    $0x9,%r10
  0x000000010ca3c3b2: movabs $0x10c3a2000,%r11
  0x000000010ca3c3bc: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c3c0: test   %r8d,%r8d
  0x000000010ca3c3c3: jl     0x000000010ca3c5e7
  0x000000010ca3c3c9: mov    0x28(%rsp),%r11
  0x000000010ca3c3ce: mov    0xc(%r11),%r10d
  0x000000010ca3c3d2: mov    %r8d,%r9d
  0x000000010ca3c3d5: inc    %r9d
  0x000000010ca3c3d8: cmp    %r9d,%r10d
  0x000000010ca3c3db: jb     0x000000010ca3c5e7
  0x000000010ca3c3e1: mov    %rcx,0x10(%rsp)
  0x000000010ca3c3e6: lea    0x10(%r11,%r8,2),%rsi
  0x000000010ca3c3eb: mov    0x20(%rsp),%rdi
  0x000000010ca3c3f0: mov    $0x1,%edx
  0x000000010ca3c3f5: movabs $0x10c9f4580,%r10
  0x000000010ca3c3ff: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c402: mov    (%rsp),%r8
  0x000000010ca3c406: mov    0xc(%r8),%r11d     ;*getfield nbRows
                                                ; - org.github.arnaudroger.CsvContent::setUp@12 (line 26)

  0x000000010ca3c40a: mov    0x10(%rsp),%r10
  0x000000010ca3c40f: incl   0xc(%r10)          ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)

  0x000000010ca3c413: mov    0x8(%rsp),%r13d
  0x000000010ca3c418: inc    %r13d              ;*iinc
                                                ; - org.github.arnaudroger.CsvContent::setUp@64 (line 26)

  0x000000010ca3c41b: movabs $0x76ab576e8,%r9   ;   {oop([C)}
  0x000000010ca3c425: movabs $0x76b18c758,%rcx  ; OopMap{r10=Oop r8=Oop r9=Oop rcx=Oop [16]=Oop [24]=Derived_oop_r9 [32]=Derived_oop_rcx off=2383}
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)
                                                ;   {oop([C)}
  0x000000010ca3c42f: test   %eax,-0x2141435(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)
                                                ;   {poll}
  0x000000010ca3c435: cmp    %r11d,%r13d
  0x000000010ca3c438: jge    0x000000010ca3c629  ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x000000010ca3c43e: xor    %ebp,%ebp
  0x000000010ca3c440: mov    0x18(%rsp),%r9
  0x000000010ca3c445: mov    0x20(%rsp),%rcx
  0x000000010ca3c44a: jmpq   0x000000010ca3c190
  0x000000010ca3c44f: mov    %ebx,0x5c(%rsp)
  0x000000010ca3c453: mov    %edi,0x58(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c457: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca3c461: mov    %eax,%edx
  0x000000010ca3c463: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c46d: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c477: mov    %r10,0x60(%rsp)
  0x000000010ca3c47c: data32 xchg %ax,%ax
  0x000000010ca3c47f: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[96] [32]=Derived_oop_rbp [56]=Oop [88]=NarrowOop [96]=Oop off=2468}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c484: mov    %rax,%r11
  0x000000010ca3c487: mov    0x58(%rsp),%edi
  0x000000010ca3c48b: mov    0x5c(%rsp),%ebx
  0x000000010ca3c48f: jmpq   0x000000010ca3c315
  0x000000010ca3c494: mov    %r9,%rsi
  0x000000010ca3c497: xor    %edx,%edx
  0x000000010ca3c499: mov    %ebp,%r9d
  0x000000010ca3c49c: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c4a6: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c4b0: mov    %r10,0x40(%rsp)
  0x000000010ca3c4b5: xchg   %ax,%ax
  0x000000010ca3c4b7: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[64] [32]=Derived_oop_rbp [64]=Oop off=2524}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c4bc: jmpq   0x000000010ca3c14b
  0x000000010ca3c4c1: mov    %r9,0x10(%rsp)
  0x000000010ca3c4c6: movabs $0x76ab576e8,%rsi  ;   {oop([C)}
  0x000000010ca3c4d0: xor    %edx,%edx
  0x000000010ca3c4d2: mov    $0x1,%r9d
  0x000000010ca3c4d8: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c4e2: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c4ec: mov    %r10,0x38(%rsp)
  0x000000010ca3c4f1: xchg   %ax,%ax
  0x000000010ca3c4f3: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [56]=Oop off=2584}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3c4f8: jmpq   0x000000010ca3bed3  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c4fd: mov    $0xffffff65,%esi
  0x000000010ca3c502: mov    (%rsp),%rbp
  0x000000010ca3c506: mov    0x38(%rsp),%r9d
  0x000000010ca3c50b: mov    %r9d,0x24(%rsp)
  0x000000010ca3c510: mov    %ebx,0x30(%rsp)
  0x000000010ca3c514: mov    %r8d,0x34(%rsp)
  0x000000010ca3c519: mov    %r10d,0x3c(%rsp)
  0x000000010ca3c51e: nop
  0x000000010ca3c51f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop [40]=Oop [48]=NarrowOop off=2628}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c524: callq  0x000000010be85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c529: mov    %eax,0x30(%rsp)
  0x000000010ca3c52d: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c530: jmpq   0x000000010ca3bfb8
  0x000000010ca3c535: mov    %rsi,%rdi
  0x000000010ca3c538: xor    %rax,%rax
  0x000000010ca3c53b: shl    $0x3,%rcx
  0x000000010ca3c53f: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3c542: mov    0x40(%rsp),%rsi
  0x000000010ca3c547: xor    %edx,%edx
  0x000000010ca3c549: mov    %r8,%rcx
  0x000000010ca3c54c: xor    %r8d,%r8d
  0x000000010ca3c54f: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c559: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c563: mov    %r10,0x60(%rsp)
  0x000000010ca3c568: data32 xchg %ax,%ax
  0x000000010ca3c56b: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[96] [32]=Derived_oop_rbp [40]=Oop [88]=Oop [96]=Oop off=2704}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c570: jmpq   0x000000010ca3c0b4
  0x000000010ca3c575: mov    %rsi,%rdi
  0x000000010ca3c578: xor    %rax,%rax
  0x000000010ca3c57b: shl    $0x3,%rcx
  0x000000010ca3c57f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c582: jmpq   0x000000010ca3c0b4
  0x000000010ca3c587: mov    %eax,0x28(%rsp)
  0x000000010ca3c58b: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c58e: jmpq   0x000000010ca3bd6c
  0x000000010ca3c593: mov    %rsi,%rdi
  0x000000010ca3c596: xor    %rax,%rax
  0x000000010ca3c599: shl    $0x3,%rcx
  0x000000010ca3c59d: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3c5a0: mov    0x30(%rsp),%rsi
  0x000000010ca3c5a5: xor    %edx,%edx
  0x000000010ca3c5a7: mov    0x48(%rsp),%rcx
  0x000000010ca3c5ac: xor    %r8d,%r8d
  0x000000010ca3c5af: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c5b9: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c5c3: mov    %r10,0x50(%rsp)
  0x000000010ca3c5c8: data32 xchg %ax,%ax
  0x000000010ca3c5cb: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[80] [32]=Derived_oop_rbp [72]=Oop [80]=Oop off=2800}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3c5d0: jmpq   0x000000010ca3be68
  0x000000010ca3c5d5: mov    %rsi,%rdi
  0x000000010ca3c5d8: xor    %rax,%rax
  0x000000010ca3c5db: shl    $0x3,%rcx
  0x000000010ca3c5df: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c5e2: jmpq   0x000000010ca3be68
  0x000000010ca3c5e7: mov    %rcx,0x10(%rsp)
  0x000000010ca3c5ec: movabs $0x76b18c758,%rsi  ;   {oop([C)}
  0x000000010ca3c5f6: xor    %edx,%edx
  0x000000010ca3c5f8: mov    0x28(%rsp),%rcx
  0x000000010ca3c5fd: mov    $0x1,%r9d
  0x000000010ca3c603: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c60d: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c617: mov    %r10,0x38(%rsp)
  0x000000010ca3c61c: data32 xchg %ax,%ax
  0x000000010ca3c61f: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [56]=Oop off=2884}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c624: jmpq   0x000000010ca3c402  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)

  0x000000010ca3c629: mov    $0xffffff65,%esi
  0x000000010ca3c62e: mov    %r8,%rbp
  0x000000010ca3c631: rex.W pushq 0x10(%rsp)
  0x000000010ca3c636: rex.W popq (%rsp)
  0x000000010ca3c63a: mov    %r13d,0xc(%rsp)
  0x000000010ca3c63f: mov    %r11d,0x10(%rsp)
  0x000000010ca3c644: data32 xchg %ax,%ax
  0x000000010ca3c647: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop off=2924}
                                                ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)
                                                ;   {runtime_call}
  0x000000010ca3c64c: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)
                                                ;   {runtime_call}
  0x000000010ca3c651: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c654: jmpq   0x000000010ca3c297
  0x000000010ca3c659: mov    %r8,%rdi
  0x000000010ca3c65c: xor    %rax,%rax
  0x000000010ca3c65f: shl    $0x3,%rcx
  0x000000010ca3c663: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3c666: mov    0x38(%rsp),%rsi
  0x000000010ca3c66b: xor    %edx,%edx
  0x000000010ca3c66d: mov    %r11,%rcx
  0x000000010ca3c670: xor    %r8d,%r8d
  0x000000010ca3c673: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010ca3c67d: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010ca3c687: mov    %r10,0x48(%rsp)
  0x000000010ca3c68c: data32 xchg %ax,%ax
  0x000000010ca3c68f: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[72] [32]=Derived_oop_rbp [40]=Oop [72]=Oop [80]=NarrowOop off=2996}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c694: jmpq   0x000000010ca3c399
  0x000000010ca3c699: mov    %r8,%rdi
  0x000000010ca3c69c: xor    %rax,%rax
  0x000000010ca3c69f: shl    $0x3,%rcx
  0x000000010ca3c6a3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c6a6: jmpq   0x000000010ca3c399
  0x000000010ca3c6ab: xor    %r8d,%r8d
  0x000000010ca3c6ae: jmpq   0x000000010ca3bb52
  0x000000010ca3c6b3: mov    $0xffffff9d,%esi
  0x000000010ca3c6b8: mov    %r13d,(%rsp)
  0x000000010ca3c6bc: mov    %rbx,0x8(%rsp)
  0x000000010ca3c6c1: mov    %r14,0x10(%rsp)
  0x000000010ca3c6c6: nop
  0x000000010ca3c6c7: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop off=3052}
                                                ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)
                                                ;   {runtime_call}
  0x000000010ca3c6cc: callq  0x000000010be85e14  ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x000000010ca3c6d1: mov    $0xfffffff6,%esi
  0x000000010ca3c6d6: nop
  0x000000010ca3c6d7: callq  0x000000010c9a71a0  ; OopMap{off=3068}
                                                ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x000000010ca3c6dc: callq  0x000000010be85e14  ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x000000010ca3c6e1: mov    $0xfffffff6,%esi
  0x000000010ca3c6e6: nop
  0x000000010ca3c6e7: callq  0x000000010c9a71a0  ; OopMap{off=3084}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c6ec: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c6f1: mov    $0xfffffff6,%esi
  0x000000010ca3c6f6: nop
  0x000000010ca3c6f7: callq  0x000000010c9a71a0  ; OopMap{off=3100}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c6fc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c701: mov    $0xfffffff6,%esi
  0x000000010ca3c706: nop
  0x000000010ca3c707: callq  0x000000010c9a71a0  ; OopMap{off=3116}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c70c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c711: mov    $0xfffffff6,%esi
  0x000000010ca3c716: mov    %edi,%ebp
  0x000000010ca3c718: mov    %r8d,(%rsp)
  0x000000010ca3c71c: data32 xchg %ax,%ax
  0x000000010ca3c71f: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=3140}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c724: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c729: mov    $0xfffffff6,%esi
  0x000000010ca3c72e: nop
  0x000000010ca3c72f: callq  0x000000010c9a71a0  ; OopMap{off=3156}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3c734: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c739: mov    $0xfffffff6,%esi
  0x000000010ca3c73e: mov    %r8d,%ebp
  0x000000010ca3c741: xchg   %ax,%ax
  0x000000010ca3c743: callq  0x000000010c9a71a0  ; OopMap{off=3176}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3c748: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x000000010ca3c74d: mov    $0xffffff65,%esi
  0x000000010ca3c752: mov    (%rsp),%rbp
  0x000000010ca3c756: mov    %rax,0x28(%rsp)
  0x000000010ca3c75b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [16]=Oop [40]=Oop off=3200}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x000000010ca3c760: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c765: mov    $0xfffffff6,%esi
  0x000000010ca3c76a: nop
  0x000000010ca3c76b: callq  0x000000010c9a71a0  ; OopMap{off=3216}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c770: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3c775: mov    $0xffffff86,%esi
  0x000000010ca3c77a: mov    %r8,(%rsp)
  0x000000010ca3c77e: mov    %r13d,0x8(%rsp)
  0x000000010ca3c783: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=3240}
                                                ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)
                                                ;   {runtime_call}
  0x000000010ca3c788: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c78d: jmp    0x000000010ca3c79f  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c78f: jmp    0x000000010ca3c79f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c791: jmp    0x000000010ca3c7a4  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c793: jmp    0x000000010ca3c7a9  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c795: jmp    0x000000010ca3c7a4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c797: jmp    0x000000010ca3c79f  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c799: jmp    0x000000010ca3c7a9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c79b: jmp    0x000000010ca3c7a4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c79d: jmp    0x000000010ca3c7a9  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010ca3c79f: mov    %rax,%rsi
  0x000000010ca3c7a2: jmp    0x000000010ca3c7b1  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010ca3c7a4: mov    %rax,%rsi
  0x000000010ca3c7a7: jmp    0x000000010ca3c7b1  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010ca3c7a9: mov    %rax,%rsi
  0x000000010ca3c7ac: jmp    0x000000010ca3c7b1  ;*invokestatic toUnsignedString0
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)

  0x000000010ca3c7ae: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.CsvContent::setUp@-1 (line 24)

  0x000000010ca3c7b1: add    $0x90,%rsp
  0x000000010ca3c7b8: pop    %rbp
  0x000000010ca3c7b9: jmpq   0x000000010ca0f620  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x000000010ca3c7be: hlt    
  0x000000010ca3c7bf: hlt    
[Stub Code]
  0x000000010ca3c7c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca3c7ca: jmpq   0x000000010ca3c7ca  ;   {runtime_call}
  0x000000010ca3c7cf: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca3c7d9: jmpq   0x000000010ca3c7d9  ;   {runtime_call}
  0x000000010ca3c7de: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca3c7e8: jmpq   0x000000010ca3c7e8  ;   {runtime_call}
  0x000000010ca3c7ed: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca3c7f7: jmpq   0x000000010ca3c7f7  ;   {runtime_call}
[Exception Handler]
  0x000000010ca3c7fc: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca3c801: callq  0x000000010ca3c806
  0x000000010ca3c806: subq   $0x5,(%rsp)
  0x000000010ca3c80b: jmpq   0x000000010c9e93c0  ;   {runtime_call}
<nmethod compile_id='84' compile_kind='osr' compiler='C2' entry='0x000000010ca3bae0' size='8328' address='0x000000010ca3b8d0' relocation_offset='296' insts_offset='528' stub_offset='3824' scopes_data_offset='4024' scopes_pcs_offset='5520' dependencies_offset='7920' handler_table_offset='7928' nul_chk_table_offset='8240' oops_offset='3904' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='5577' iicount='1' stamp='0.643'/>
<writer thread='21251'/>
<uncommon_trap thread='21251' reason='unstable_if' action='reinterpret' compile_id='84' compile_kind='osr' compiler='C2' stamp='1.044'>
<jvms bci='15' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='6126' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='21251' compile_id='84' compile_kind='osr' compiler='C2' stamp='1.044'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='21251'/>
<task_queued compile_id='85' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5000' backedge_count='1' iicount='10000' stamp='1.134' comment='count' hot_count='10000'/>
<task_queued compile_id='86' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='1' backedge_count='14563' iicount='1' osr_bci='28' stamp='1.134' comment='backedge_count' hot_count='14563'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca40c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000111061ea8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010ca40d60: mov    %eax,-0x14000(%rsp)
  0x000000010ca40d67: push   %rbp
  0x000000010ca40d68: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)

  0x000000010ca40d6c: mov    %rsi,(%rsp)
  0x000000010ca40d70: mov    %edx,0x8(%rsp)
  0x000000010ca40d74: mov    %ecx,%ebp
  0x000000010ca40d76: sub    %edx,%ebp          ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)

  0x000000010ca40d78: test   %ebp,%ebp
  0x000000010ca40d7a: jl     0x000000010ca40f18  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x000000010ca40d80: cmp    $0x80000,%ebp
  0x000000010ca40d86: ja     0x000000010ca40ed0
  0x000000010ca40d8c: movslq %ebp,%r10
  0x000000010ca40d8f: shl    %r10
  0x000000010ca40d92: add    $0x17,%r10
  0x000000010ca40d96: mov    %r10,0x18(%rsp)
  0x000000010ca40d9b: cmp    $0x80000,%ebp
  0x000000010ca40da1: ja     0x000000010ca40eb4
  0x000000010ca40da7: and    $0xfffffffffffffff8,%r10
  0x000000010ca40dab: mov    0x60(%r15),%r8
  0x000000010ca40daf: mov    %r8,%r11
  0x000000010ca40db2: add    %r10,%r11
  0x000000010ca40db5: cmp    0x70(%r15),%r11
  0x000000010ca40db9: jae    0x000000010ca40eb4
  0x000000010ca40dbf: mov    %r11,0x60(%r15)
  0x000000010ca40dc3: prefetchnta 0xc0(%r11)
  0x000000010ca40dcb: movq   $0x1,(%r8)
  0x000000010ca40dd2: prefetchnta 0x100(%r11)
  0x000000010ca40dda: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca40de2: mov    %ebp,0xc(%r8)
  0x000000010ca40de6: prefetchnta 0x140(%r11)
  0x000000010ca40dee: prefetchnta 0x180(%r11)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010ca40df6: mov    %r8,0x10(%rsp)
  0x000000010ca40dfb: mov    (%rsp),%rbx
  0x000000010ca40dff: mov    0xc(%rbx),%edi     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000010ca40f2d
  0x000000010ca40e02: mov    %edi,%r11d
  0x000000010ca40e05: sub    0x8(%rsp),%r11d    ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)

  0x000000010ca40e0a: mov    %r8,%rsi
  0x000000010ca40e0d: add    $0x10,%rsi         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x000000010ca40e11: cmp    %ebp,%r11d
  0x000000010ca40e14: mov    %ebp,%r9d
  0x000000010ca40e17: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010ca40e1b: mov    0x18(%rsp),%r8
  0x000000010ca40e20: shr    $0x3,%r8
  0x000000010ca40e24: mov    %r8,%rcx
  0x000000010ca40e27: add    $0xfffffffffffffffe,%rcx
  0x000000010ca40e2b: mov    0x8(%rsp),%r10d
  0x000000010ca40e30: test   %r10d,%r10d
  0x000000010ca40e33: jl     0x000000010ca40ed8
  0x000000010ca40e39: mov    %r10d,%r11d
  0x000000010ca40e3c: add    %r9d,%r11d
  0x000000010ca40e3f: cmp    %r11d,%edi
  0x000000010ca40e42: jb     0x000000010ca40ed8
  0x000000010ca40e48: cmp    %r9d,%ebp
  0x000000010ca40e4b: jb     0x000000010ca40ed8
  0x000000010ca40e51: test   %r9d,%r9d
  0x000000010ca40e54: jle    0x000000010ca40f01
  0x000000010ca40e5a: movslq %r9d,%rdx
  0x000000010ca40e5d: cmp    %ebp,%r9d
  0x000000010ca40e60: jl     0x000000010ca40e85
  0x000000010ca40e62: lea    0x10(%rbx,%r10,2),%rdi
  0x000000010ca40e67: movabs $0x10c9f4580,%r10
  0x000000010ca40e71: callq  *%r10
  0x000000010ca40e74: mov    0x10(%rsp),%rax
  0x000000010ca40e79: add    $0x30,%rsp
  0x000000010ca40e7d: pop    %rbp
  0x000000010ca40e7e: test   %eax,-0x2145e84(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca40e84: retq   
  0x000000010ca40e85: mov    %rdx,%r11
  0x000000010ca40e88: shl    %r11
  0x000000010ca40e8b: add    $0x10,%r11
  0x000000010ca40e8f: mov    %r11,%r9
  0x000000010ca40e92: and    $0xfffffffffffffff9,%r9
  0x000000010ca40e96: mov    0x10(%rsp),%rdi
  0x000000010ca40e9b: add    %r9,%rdi
  0x000000010ca40e9e: shr    $0x3,%r11
  0x000000010ca40ea2: sub    %r11,%r8
  0x000000010ca40ea5: mov    %r8,%rcx
  0x000000010ca40ea8: xor    %rax,%rax
  0x000000010ca40eab: shl    $0x3,%rcx
  0x000000010ca40eaf: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x000000010ca40eb2: jmp    0x000000010ca40e62
  0x000000010ca40eb4: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca40ebe: mov    %ebp,%edx
  0x000000010ca40ec0: data32 xchg %ax,%ax
  0x000000010ca40ec3: callq  0x000000010ca101a0  ; OopMap{[0]=Oop off=360}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000010ca40ec8: mov    %rax,%r8
  0x000000010ca40ecb: jmpq   0x000000010ca40df6
  0x000000010ca40ed0: movslq %ebp,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010ca40ed3: jmpq   0x000000010ca40d8f
  0x000000010ca40ed8: mov    %rsi,%rdi
  0x000000010ca40edb: xor    %rax,%rax
  0x000000010ca40ede: shl    $0x3,%rcx
  0x000000010ca40ee2: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca40ee5: xor    %r8d,%r8d
  0x000000010ca40ee8: mov    %rbx,%rsi
  0x000000010ca40eeb: mov    %r10d,%edx
  0x000000010ca40eee: mov    0x10(%rsp),%rcx
  0x000000010ca40ef3: mov    %rcx,%rbp
  0x000000010ca40ef6: nop
  0x000000010ca40ef7: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [16]=Oop off=412}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000010ca40efc: jmpq   0x000000010ca40e74
  0x000000010ca40f01: test   %r9d,%r9d
  0x000000010ca40f04: jl     0x000000010ca40ed8
  0x000000010ca40f06: mov    %rsi,%rdi
  0x000000010ca40f09: xor    %rax,%rax
  0x000000010ca40f0c: shl    $0x3,%rcx
  0x000000010ca40f10: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x000000010ca40f13: jmpq   0x000000010ca40e74
  0x000000010ca40f18: mov    $0xffffff65,%esi
  0x000000010ca40f1d: mov    %ecx,0xc(%rsp)
  0x000000010ca40f21: xchg   %ax,%ax
  0x000000010ca40f23: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop off=456}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ;   {runtime_call}
  0x000000010ca40f28: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca40f2d: mov    $0xfffffff6,%esi
  0x000000010ca40f32: nop
  0x000000010ca40f33: callq  0x000000010c9a71a0  ; OopMap{off=472}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000010ca40f38: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x000000010ca40f3d: mov    %rax,%rsi
  0x000000010ca40f40: jmp    0x000000010ca40f45  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x000000010ca40f42: mov    %rax,%rsi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x000000010ca40f45: add    $0x30,%rsp
  0x000000010ca40f49: pop    %rbp
  0x000000010ca40f4a: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca40f4f: hlt    
  0x000000010ca40f50: hlt    
  0x000000010ca40f51: hlt    
  0x000000010ca40f52: hlt    
  0x000000010ca40f53: hlt    
  0x000000010ca40f54: hlt    
  0x000000010ca40f55: hlt    
  0x000000010ca40f56: hlt    
  0x000000010ca40f57: hlt    
  0x000000010ca40f58: hlt    
  0x000000010ca40f59: hlt    
  0x000000010ca40f5a: hlt    
  0x000000010ca40f5b: hlt    
  0x000000010ca40f5c: hlt    
  0x000000010ca40f5d: hlt    
  0x000000010ca40f5e: hlt    
  0x000000010ca40f5f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca40f60: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca40f65: callq  0x000000010ca40f6a
  0x000000010ca40f6a: subq   $0x5,(%rsp)
  0x000000010ca40f6f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca40f74: hlt    
  0x000000010ca40f75: hlt    
  0x000000010ca40f76: hlt    
  0x000000010ca40f77: hlt    
<nmethod compile_id='85' compiler='C2' entry='0x000000010ca40d60' size='1416' address='0x000000010ca40c10' relocation_offset='296' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1024' dependencies_offset='1344' handler_table_offset='1352' nul_chk_table_offset='1400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='9956' backedge_count='1' iicount='19958' stamp='1.138'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca3a2d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001113f2c08} &apos;benchmarkHolder&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  0x000000010ca3a480: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3a485: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca3a490: mov    %eax,-0x14000(%rsp)
  0x000000010ca3a497: push   %rbp
  0x000000010ca3a498: sub    $0x90,%rsp
  0x000000010ca3a49f: mov    0x10(%rsi),%ebx
  0x000000010ca3a4a2: mov    0x18(%rsi),%r10d
  0x000000010ca3a4a6: mov    %r10d,0x18(%rsp)
  0x000000010ca3a4ab: mov    0x40(%rsi),%rbp
  0x000000010ca3a4af: mov    0x30(%rsi),%r14
  0x000000010ca3a4b3: mov    0x20(%rsi),%r10
  0x000000010ca3a4b7: mov    %r10,(%rsp)
  0x000000010ca3a4bb: mov    0x28(%rsi),%r10
  0x000000010ca3a4bf: mov    %r10,0x8(%rsp)
  0x000000010ca3a4c4: mov    %rsi,%rdi
  0x000000010ca3a4c7: movabs $0x10bee473e,%r10
  0x000000010ca3a4d1: callq  *%r10
  0x000000010ca3a4d4: test   %rbp,%rbp
  0x000000010ca3a4d7: je     0x000000010ca3ac75
  0x000000010ca3a4dd: mov    %rbp,%r13
  0x000000010ca3a4e0: mov    0x8(%rbp),%r10d
  0x000000010ca3a4e4: shl    $0x3,%r10
  0x000000010ca3a4e8: mov    0x30(%r10),%r10
  0x000000010ca3a4ec: movabs $0x7c00aae10,%r11  ;   {metadata(&apos;org/github/arnaudroger/SimplifiedBenchmark&apos;)}
  0x000000010ca3a4f6: cmp    %r11,%r10
  0x000000010ca3a4f9: jne    0x000000010ca3aca0
  0x000000010ca3a4ff: mov    %rbp,%r11
  0x000000010ca3a502: test   %r14,%r14
  0x000000010ca3a505: je     0x000000010ca3ac80
  0x000000010ca3a50b: mov    0x8(%r14),%r10d
  0x000000010ca3a50f: cmp    $0xf801540f,%r10d  ;   {metadata(&apos;org/openjdk/jmh/infra/Blackhole&apos;)}
  0x000000010ca3a516: jne    0x000000010ca3acab
  0x000000010ca3a51c: mov    %r14,%r10
  0x000000010ca3a51f: mov    %r10,0x10(%rsp)
  0x000000010ca3a524: mov    0x8(%rsp),%r9
  0x000000010ca3a529: test   %r9,%r9
  0x000000010ca3a52c: je     0x000000010ca3ac8d
  0x000000010ca3a532: mov    0x8(%r9),%r8d
  0x000000010ca3a536: cmp    $0xf8000041,%r8d   ;   {metadata({type array char})}
  0x000000010ca3a53d: jne    0x000000010ca3acb6
  0x000000010ca3a543: mov    %r9,%r8
  0x000000010ca3a546: mov    %r8,%rcx
  0x000000010ca3a549: mov    %r8,%rdi
  0x000000010ca3a54c: mov    (%rsp),%rdx
  0x000000010ca3a550: test   %rdx,%rdx
  0x000000010ca3a553: je     0x000000010ca3ac99
  0x000000010ca3a559: mov    0x8(%rdx),%r10d
  0x000000010ca3a55d: cmp    $0xf801826f,%r10d  ;   {metadata({type array char}[])}
  0x000000010ca3a564: jne    0x000000010ca3acba  ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)

  0x000000010ca3a56a: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@31 (line 65)
                                                ; implicit exception: dispatches to 0x000000010ca3ad69
  0x000000010ca3a56e: jmpq   0x000000010ca3a78e  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a573: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca3a57d: mov    0x4c(%rsp),%edx
  0x000000010ca3a581: xchg   %ax,%ax
  0x000000010ca3a583: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Derived_oop_[48] off=264}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3a588: jmpq   0x000000010ca3a669
  0x000000010ca3a58d: mov    0xc(%r11),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ; implicit exception: dispatches to 0x000000010ca3ace5
  0x000000010ca3a591: mov    0xc(%r12,%r10,8),%esi  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ; implicit exception: dispatches to 0x000000010ca3acf5
  0x000000010ca3a596: mov    %ebx,%r10d
  0x000000010ca3a599: sub    %esi,%r10d         ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a59c: mov    0x18(%rsp),%ebp
  0x000000010ca3a5a0: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@61 (line 70)

  0x000000010ca3a5a2: test   %r10d,%r10d
  0x000000010ca3a5a5: jl     0x000000010ca3ab5c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a5ab: cmp    $0x80000,%r10d
  0x000000010ca3a5b2: ja     0x000000010ca3aaad
  0x000000010ca3a5b8: mov    %r10d,0x4c(%rsp)
  0x000000010ca3a5bd: mov    %esi,0x48(%rsp)
  0x000000010ca3a5c1: mov    %r9d,0x3c(%rsp)
  0x000000010ca3a5c6: mov    %r14,0x40(%rsp)
  0x000000010ca3a5cb: mov    %eax,0x38(%rsp)
  0x000000010ca3a5cf: mov    %rdx,0x30(%rsp)
  0x000000010ca3a5d4: mov    %rdi,0x28(%rsp)
  0x000000010ca3a5d9: mov    %rcx,0x8(%rsp)
  0x000000010ca3a5de: mov    %r8,0x18(%rsp)
  0x000000010ca3a5e3: mov    %r11,(%rsp)
  0x000000010ca3a5e7: mov    %r13d,0x24(%rsp)
  0x000000010ca3a5ec: mov    %ebx,0x20(%rsp)
  0x000000010ca3a5f0: movslq %r10d,%r10
  0x000000010ca3a5f3: shl    %r10
  0x000000010ca3a5f6: add    $0x17,%r10
  0x000000010ca3a5fa: mov    %r10,0x50(%rsp)
  0x000000010ca3a5ff: mov    0x4c(%rsp),%r10d
  0x000000010ca3a604: cmp    $0x80000,%r10d
  0x000000010ca3a60b: ja     0x000000010ca3a573
  0x000000010ca3a611: mov    0x60(%r15),%rax
  0x000000010ca3a615: mov    0x50(%rsp),%r11
  0x000000010ca3a61a: and    $0xfffffffffffffff8,%r11
  0x000000010ca3a61e: mov    %rax,%r10
  0x000000010ca3a621: add    %r11,%r10
  0x000000010ca3a624: cmp    0x70(%r15),%r10
  0x000000010ca3a628: jae    0x000000010ca3a573
  0x000000010ca3a62e: mov    %r10,0x60(%r15)
  0x000000010ca3a632: prefetchnta 0xc0(%r10)
  0x000000010ca3a63a: movq   $0x1,(%rax)
  0x000000010ca3a641: prefetchnta 0x100(%r10)
  0x000000010ca3a649: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010ca3a650: mov    0x4c(%rsp),%r11d
  0x000000010ca3a655: mov    %r11d,0xc(%rax)
  0x000000010ca3a659: prefetchnta 0x140(%r10)
  0x000000010ca3a661: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a669: mov    %rax,0x58(%rsp)
  0x000000010ca3a66e: mov    0x38(%rsp),%r11d
  0x000000010ca3a673: sub    0x48(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a678: mov    %rax,%r10
  0x000000010ca3a67b: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a67f: mov    %r10,%rbx
  0x000000010ca3a682: cmp    0x4c(%rsp),%r11d
  0x000000010ca3a687: mov    0x4c(%rsp),%r9d
  0x000000010ca3a68c: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a690: mov    0x50(%rsp),%r8
  0x000000010ca3a695: shr    $0x3,%r8
  0x000000010ca3a699: mov    %r8,%rcx
  0x000000010ca3a69c: add    $0xfffffffffffffffe,%rcx
  0x000000010ca3a6a0: mov    0x48(%rsp),%r11d
  0x000000010ca3a6a5: test   %r11d,%r11d
  0x000000010ca3a6a8: jl     0x000000010ca3ab1d
  0x000000010ca3a6ae: mov    %r9d,%r10d
  0x000000010ca3a6b1: add    0x48(%rsp),%r10d
  0x000000010ca3a6b6: mov    0x38(%rsp),%r11d
  0x000000010ca3a6bb: cmp    %r10d,%r11d
  0x000000010ca3a6be: jb     0x000000010ca3ab1d
  0x000000010ca3a6c4: mov    0x4c(%rsp),%r10d
  0x000000010ca3a6c9: cmp    %r9d,%r10d
  0x000000010ca3a6cc: jb     0x000000010ca3ab1d
  0x000000010ca3a6d2: test   %r9d,%r9d
  0x000000010ca3a6d5: jle    0x000000010ca3ab45
  0x000000010ca3a6db: movslq %r9d,%rdx
  0x000000010ca3a6de: cmp    0x4c(%rsp),%r9d
  0x000000010ca3a6e3: jl     0x000000010ca3a9cc
  0x000000010ca3a6e9: mov    0x18(%rsp),%r10
  0x000000010ca3a6ee: mov    0x48(%rsp),%r11d
  0x000000010ca3a6f3: lea    0x10(%r10,%r11,2),%rdi
  0x000000010ca3a6f8: mov    %rbx,%rsi
  0x000000010ca3a6fb: movabs $0x10c9f4580,%r10
  0x000000010ca3a705: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a708: mov    0x30(%rsp),%r10
  0x000000010ca3a70d: mov    0xc(%r10),%r11d    ; implicit exception: dispatches to 0x000000010ca3ad05
  0x000000010ca3a711: mov    0x24(%rsp),%r10d
  0x000000010ca3a716: cmp    %r11d,%r10d
  0x000000010ca3a719: jae    0x000000010ca3aaed  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca3a71f: mov    (%rsp),%r10
  0x000000010ca3a723: mov    0xc(%r10),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@74 (line 71)

  0x000000010ca3a727: mov    0x40(%rsp),%r11
  0x000000010ca3a72c: mov    %r11,%r8
  0x000000010ca3a72f: mov    0x58(%rsp),%r11
  0x000000010ca3a734: shr    $0x3,%r11
  0x000000010ca3a738: mov    0x40(%rsp),%r9
  0x000000010ca3a73d: mov    %r11d,(%r9)
  0x000000010ca3a740: shr    $0x9,%r8
  0x000000010ca3a744: movabs $0x10c3a2000,%r11
  0x000000010ca3a74e: mov    %r12b,(%r11,%r8,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca3a752: mov    0x3c(%rsp),%r8d
  0x000000010ca3a757: mov    %r8d,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ; implicit exception: dispatches to 0x000000010ca3ad15
  0x000000010ca3a75c: mov    %ebp,%r13d
  0x000000010ca3a75f: mov    (%rsp),%r11
  0x000000010ca3a763: mov    0x18(%rsp),%r8
  0x000000010ca3a768: mov    0x8(%rsp),%rcx
  0x000000010ca3a76d: mov    0x28(%rsp),%rdi
  0x000000010ca3a772: mov    0x30(%rsp),%rdx
  0x000000010ca3a777: mov    0x38(%rsp),%eax
  0x000000010ca3a77b: mov    0x3c(%rsp),%r9d    ; OopMap{r11=Oop r8=Oop rcx=Oop rdi=Oop rdx=Oop [16]=Oop off=768}
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@142 (line 65)

  0x000000010ca3a780: test   %eax,-0x213f786(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@142 (line 65)
                                                ;   {poll}
  0x000000010ca3a786: mov    %r9d,%ebx
  0x000000010ca3a789: mov    %r13d,0x18(%rsp)   ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)

  0x000000010ca3a78e: cmp    %eax,%ebx
  0x000000010ca3a790: jge    0x000000010ca3aa7d  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)

  0x000000010ca3a796: cmp    %eax,%ebx
  0x000000010ca3a798: jae    0x000000010ca3aa54
  0x000000010ca3a79e: movzwl 0x10(%r8,%rbx,2),%r10d  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)

  0x000000010ca3a7a4: mov    0x18(%rsp),%r13d
  0x000000010ca3a7a9: lea    0x10(%rdx,%r13,4),%r14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca3a7ae: mov    %ebx,%r9d
  0x000000010ca3a7b1: inc    %r9d               ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@80 (line 71)

  0x000000010ca3a7b4: cmp    $0x2c,%r10d
  0x000000010ca3a7b8: je     0x000000010ca3a58d  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@45 (line 68)

  0x000000010ca3a7be: cmp    $0xa,%r10d
  0x000000010ca3a7c2: jne    0x000000010ca3a780  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@91 (line 72)

  0x000000010ca3a7c4: mov    0xc(%r11),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ; implicit exception: dispatches to 0x000000010ca3ad25
  0x000000010ca3a7c8: mov    0xc(%r12,%r10,8),%esi  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ; implicit exception: dispatches to 0x000000010ca3ad35
  0x000000010ca3a7cd: mov    %ebx,%r10d
  0x000000010ca3a7d0: sub    %esi,%r10d         ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a7d3: test   %r10d,%r10d
  0x000000010ca3a7d6: jl     0x000000010ca3ac3c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a7dc: cmp    $0x80000,%r10d
  0x000000010ca3a7e3: ja     0x000000010ca3ab95
  0x000000010ca3a7e9: movslq %r10d,%rbp         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a7ec: mov    %r10d,0x4c(%rsp)
  0x000000010ca3a7f1: mov    %esi,0x48(%rsp)
  0x000000010ca3a7f5: mov    %r9d,0x24(%rsp)
  0x000000010ca3a7fa: mov    %r14,0x40(%rsp)
  0x000000010ca3a7ff: mov    %eax,0x4(%rsp)
  0x000000010ca3a803: mov    %rdx,0x38(%rsp)
  0x000000010ca3a808: mov    %rdi,0x30(%rsp)
  0x000000010ca3a80d: mov    %rcx,0x28(%rsp)
  0x000000010ca3a812: mov    %r8,0x18(%rsp)
  0x000000010ca3a817: mov    %r11,0x8(%rsp)
  0x000000010ca3a81c: mov    %r13d,(%rsp)
  0x000000010ca3a820: mov    %ebx,0x20(%rsp)
  0x000000010ca3a824: mov    %eax,%r10d
  0x000000010ca3a827: sub    %esi,%r10d         ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a82a: cmp    0x4c(%rsp),%r10d
  0x000000010ca3a82f: mov    0x4c(%rsp),%r11d
  0x000000010ca3a834: cmovl  %r10d,%r11d        ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a838: mov    %r11d,0x50(%rsp)
  0x000000010ca3a83d: shl    %rbp
  0x000000010ca3a840: add    $0x17,%rbp         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a844: mov    %rbp,%r10
  0x000000010ca3a847: shr    $0x3,%r10
  0x000000010ca3a84b: mov    %r10,0x58(%rsp)
  0x000000010ca3a850: add    $0xfffffffffffffffe,%r10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a854: mov    %r10,0x60(%rsp)
  0x000000010ca3a859: mov    0x4c(%rsp),%r10d
  0x000000010ca3a85e: cmp    $0x80000,%r10d
  0x000000010ca3a865: ja     0x000000010ca3aa33
  0x000000010ca3a86b: mov    0x60(%r15),%r11
  0x000000010ca3a86f: and    $0xfffffffffffffff8,%rbp
  0x000000010ca3a873: mov    %r11,%r10
  0x000000010ca3a876: add    %rbp,%r10
  0x000000010ca3a879: cmp    0x70(%r15),%r10
  0x000000010ca3a87d: jae    0x000000010ca3aa33
  0x000000010ca3a883: mov    %r10,0x60(%r15)
  0x000000010ca3a887: prefetchnta 0xc0(%r10)
  0x000000010ca3a88f: movq   $0x1,(%r11)
  0x000000010ca3a896: prefetchnta 0x100(%r10)
  0x000000010ca3a89e: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010ca3a8a6: mov    0x4c(%rsp),%ebp
  0x000000010ca3a8aa: mov    %ebp,0xc(%r11)
  0x000000010ca3a8ae: prefetchnta 0x140(%r10)
  0x000000010ca3a8b6: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a8be: mov    %r11,0x68(%rsp)
  0x000000010ca3a8c3: mov    %r11,%r10
  0x000000010ca3a8c6: add    $0x10,%r10
  0x000000010ca3a8ca: mov    %r10,%r8
  0x000000010ca3a8cd: mov    0x48(%rsp),%ebp
  0x000000010ca3a8d1: test   %ebp,%ebp
  0x000000010ca3a8d3: jl     0x000000010ca3abe5
  0x000000010ca3a8d9: mov    0x50(%rsp),%r10d
  0x000000010ca3a8de: add    %ebp,%r10d
  0x000000010ca3a8e1: mov    0x4(%rsp),%ebp
  0x000000010ca3a8e5: cmp    %r10d,%ebp
  0x000000010ca3a8e8: jb     0x000000010ca3abe5
  0x000000010ca3a8ee: mov    0x4c(%rsp),%ebp
  0x000000010ca3a8f2: cmp    0x50(%rsp),%ebp
  0x000000010ca3a8f6: jb     0x000000010ca3abe5
  0x000000010ca3a8fc: mov    0x50(%rsp),%ebp
  0x000000010ca3a900: test   %ebp,%ebp
  0x000000010ca3a902: jle    0x000000010ca3ac1d
  0x000000010ca3a908: movslq %ebp,%rdx
  0x000000010ca3a90b: cmp    0x4c(%rsp),%ebp
  0x000000010ca3a90f: jl     0x000000010ca3a9fc
  0x000000010ca3a915: mov    0x18(%rsp),%r10
  0x000000010ca3a91a: mov    0x48(%rsp),%ebp
  0x000000010ca3a91e: lea    0x10(%r10,%rbp,2),%rdi
  0x000000010ca3a923: mov    %r8,%rsi
  0x000000010ca3a926: movabs $0x10c9f4580,%r10
  0x000000010ca3a930: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3a933: mov    0x38(%rsp),%r11
  0x000000010ca3a938: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x000000010ca3ad45
  0x000000010ca3a93c: mov    (%rsp),%ebp
  0x000000010ca3a93f: cmp    %r10d,%ebp
  0x000000010ca3a942: jae    0x000000010ca3ab9d  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca3a948: mov    0x8(%rsp),%r8
  0x000000010ca3a94d: mov    0xc(%r8),%r10d     ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@120 (line 75)

  0x000000010ca3a951: mov    0x68(%rsp),%r9
  0x000000010ca3a956: shr    $0x3,%r9
  0x000000010ca3a95a: mov    0x40(%rsp),%rcx
  0x000000010ca3a95f: mov    %r9d,(%rcx)
  0x000000010ca3a962: mov    %rcx,%r9
  0x000000010ca3a965: shr    $0x9,%r9
  0x000000010ca3a969: movabs $0x10c3a2000,%rcx
  0x000000010ca3a973: mov    %r12b,(%rcx,%r9,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca3a977: mov    0x24(%rsp),%ebp
  0x000000010ca3a97b: mov    %ebp,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ; implicit exception: dispatches to 0x000000010ca3ad59
  0x000000010ca3a980: mov    0x10(%rsp),%r10
  0x000000010ca3a985: test   %r10,%r10
  0x000000010ca3a988: je     0x000000010ca3abd1  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)

  0x000000010ca3a98e: mov    %r11,0x8(%rsp)
  0x000000010ca3a993: mov    %r8,%rbp           ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca3a996: mov    0x10(%rsp),%rsi
  0x000000010ca3a99b: mov    %r11,%rdx
  0x000000010ca3a99e: nop
  0x000000010ca3a99f: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop off=1316}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {optimized virtual_call}
  0x000000010ca3a9a4: xor    %r13d,%r13d
  0x000000010ca3a9a7: mov    %rbp,%r11
  0x000000010ca3a9aa: mov    0x18(%rsp),%r8
  0x000000010ca3a9af: mov    0x28(%rsp),%rcx
  0x000000010ca3a9b4: mov    0x30(%rsp),%rdi
  0x000000010ca3a9b9: mov    0x8(%rsp),%rdx
  0x000000010ca3a9be: mov    0x4(%rsp),%eax
  0x000000010ca3a9c2: mov    0x24(%rsp),%r9d
  0x000000010ca3a9c7: jmpq   0x000000010ca3a780
  0x000000010ca3a9cc: mov    %rdx,%r10
  0x000000010ca3a9cf: shl    %r10
  0x000000010ca3a9d2: add    $0x10,%r10
  0x000000010ca3a9d6: mov    %r10,%r11
  0x000000010ca3a9d9: and    $0xfffffffffffffff9,%r11
  0x000000010ca3a9dd: mov    %rax,%rdi
  0x000000010ca3a9e0: add    %r11,%rdi
  0x000000010ca3a9e3: shr    $0x3,%r10
  0x000000010ca3a9e7: sub    %r10,%r8
  0x000000010ca3a9ea: mov    %r8,%rcx
  0x000000010ca3a9ed: xor    %rax,%rax
  0x000000010ca3a9f0: shl    $0x3,%rcx
  0x000000010ca3a9f4: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3a9f7: jmpq   0x000000010ca3a6e9
  0x000000010ca3a9fc: mov    %rdx,%r10
  0x000000010ca3a9ff: shl    %r10
  0x000000010ca3aa02: add    $0x10,%r10
  0x000000010ca3aa06: mov    %r10,%r11
  0x000000010ca3aa09: and    $0xfffffffffffffff9,%r11
  0x000000010ca3aa0d: mov    0x68(%rsp),%rdi
  0x000000010ca3aa12: add    %r11,%rdi
  0x000000010ca3aa15: shr    $0x3,%r10
  0x000000010ca3aa19: mov    0x58(%rsp),%rbp
  0x000000010ca3aa1e: sub    %r10,%rbp
  0x000000010ca3aa21: mov    %rbp,%rcx
  0x000000010ca3aa24: xor    %rax,%rax
  0x000000010ca3aa27: shl    $0x3,%rcx
  0x000000010ca3aa2b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3aa2e: jmpq   0x000000010ca3a915  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3aa33: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca3aa3d: mov    0x4c(%rsp),%edx
  0x000000010ca3aa41: mov    0x8(%rsp),%rbp
  0x000000010ca3aa46: nop
  0x000000010ca3aa47: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Derived_oop_[56] off=1484}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3aa4c: mov    %rax,%r11
  0x000000010ca3aa4f: jmpq   0x000000010ca3a8be
  0x000000010ca3aa54: mov    $0xffffffe4,%esi
  0x000000010ca3aa59: mov    %r11,%rbp
  0x000000010ca3aa5c: rex.W pushq 0x10(%rsp)
  0x000000010ca3aa61: rex.W popq (%rsp)
  0x000000010ca3aa65: mov    %rdx,0x10(%rsp)
  0x000000010ca3aa6a: mov    %r8,0x20(%rsp)
  0x000000010ca3aa6f: mov    %ebx,0x28(%rsp)
  0x000000010ca3aa73: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [32]=Oop off=1528}
                                                ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)
                                                ;   {runtime_call}
  0x000000010ca3aa78: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)
                                                ;   {runtime_call}
  0x000000010ca3aa7d: mov    $0xffffff65,%esi
  0x000000010ca3aa82: mov    %r11,%rbp
  0x000000010ca3aa85: rex.W pushq 0x10(%rsp)
  0x000000010ca3aa8a: rex.W popq (%rsp)
  0x000000010ca3aa8e: mov    %r8,0x8(%rsp)
  0x000000010ca3aa93: mov    %rdx,0x10(%rsp)
  0x000000010ca3aa98: mov    %ebx,0x20(%rsp)
  0x000000010ca3aa9c: mov    %eax,0x24(%rsp)
  0x000000010ca3aaa0: data32 xchg %ax,%ax
  0x000000010ca3aaa3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop off=1576}
                                                ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)
                                                ;   {runtime_call}
  0x000000010ca3aaa8: callq  0x000000010be85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)
                                                ;   {runtime_call}
  0x000000010ca3aaad: mov    %r10d,0x4c(%rsp)
  0x000000010ca3aab2: mov    %esi,0x48(%rsp)
  0x000000010ca3aab6: mov    %r9d,0x3c(%rsp)
  0x000000010ca3aabb: mov    %r14,0x40(%rsp)
  0x000000010ca3aac0: mov    %eax,0x38(%rsp)
  0x000000010ca3aac4: mov    %rdx,0x30(%rsp)
  0x000000010ca3aac9: mov    %rdi,0x28(%rsp)
  0x000000010ca3aace: mov    %rcx,0x8(%rsp)
  0x000000010ca3aad3: mov    %r8,0x18(%rsp)
  0x000000010ca3aad8: mov    %r11,(%rsp)
  0x000000010ca3aadc: mov    %r13d,0x24(%rsp)
  0x000000010ca3aae1: mov    %ebx,0x20(%rsp)
  0x000000010ca3aae5: movslq %r10d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3aae8: jmpq   0x000000010ca3a5f3
  0x000000010ca3aaed: mov    $0xffffffe4,%esi
  0x000000010ca3aaf2: rex.W pushq 0x10(%rsp)
  0x000000010ca3aaf7: rex.W popq 0x8(%rsp)
  0x000000010ca3aafc: rex.W pushq 0x18(%rsp)
  0x000000010ca3ab01: rex.W popq 0x10(%rsp)
  0x000000010ca3ab06: mov    0x30(%rsp),%r10
  0x000000010ca3ab0b: mov    %r10,0x28(%rsp)
  0x000000010ca3ab10: data32 xchg %ax,%ax
  0x000000010ca3ab13: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop [88]=Oop off=1688}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3ab18: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3ab1d: mov    %rbx,%rdi
  0x000000010ca3ab20: xor    %rax,%rax
  0x000000010ca3ab23: shl    $0x3,%rcx
  0x000000010ca3ab27: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3ab2a: mov    0x8(%rsp),%rsi
  0x000000010ca3ab2f: mov    0x48(%rsp),%edx
  0x000000010ca3ab33: mov    0x58(%rsp),%rcx
  0x000000010ca3ab38: xor    %r8d,%r8d
  0x000000010ca3ab3b: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Derived_oop_[48] [88]=Oop off=1728}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3ab40: jmpq   0x000000010ca3a708
  0x000000010ca3ab45: test   %r9d,%r9d
  0x000000010ca3ab48: jl     0x000000010ca3ab1d
  0x000000010ca3ab4a: mov    %rbx,%rdi
  0x000000010ca3ab4d: xor    %rax,%rax
  0x000000010ca3ab50: shl    $0x3,%rcx
  0x000000010ca3ab54: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3ab57: jmpq   0x000000010ca3a708  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3ab5c: mov    %r11,(%rsp)
  0x000000010ca3ab60: rex.W pushq 0x10(%rsp)
  0x000000010ca3ab65: rex.W popq 0x8(%rsp)
  0x000000010ca3ab6a: mov    %rdx,0x28(%rsp)
  0x000000010ca3ab6f: mov    %r13d,0x24(%rsp)
  0x000000010ca3ab74: mov    %r8,0x30(%rsp)
  0x000000010ca3ab79: mov    %esi,0x38(%rsp)
  0x000000010ca3ab7d: mov    %ebx,0x3c(%rsp)
  0x000000010ca3ab81: mov    %r10d,0x44(%rsp)
  0x000000010ca3ab86: mov    $0xffffff65,%esi
  0x000000010ca3ab8b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [40]=Oop [48]=Oop off=1808}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3ab90: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3ab95: movslq %r10d,%rbp         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3ab98: jmpq   0x000000010ca3a7ec
  0x000000010ca3ab9d: mov    $0xffffffe4,%esi
  0x000000010ca3aba2: mov    0x8(%rsp),%r10
  0x000000010ca3aba7: mov    %r10,(%rsp)
  0x000000010ca3abab: mov    0x10(%rsp),%r10
  0x000000010ca3abb0: mov    %r10,0x8(%rsp)
  0x000000010ca3abb5: mov    0x18(%rsp),%r10
  0x000000010ca3abba: mov    %r10,0x10(%rsp)
  0x000000010ca3abbf: mov    %r11,0x28(%rsp)
  0x000000010ca3abc4: data32 xchg %ax,%ax
  0x000000010ca3abc7: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop [56]=Oop [104]=Oop off=1868}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3abcc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3abd1: mov    $0xfffffff6,%esi
  0x000000010ca3abd6: mov    %r11,%rbp
  0x000000010ca3abd9: xchg   %ax,%ax
  0x000000010ca3abdb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop off=1888}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {runtime_call}
  0x000000010ca3abe0: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3abe5: mov    0x60(%rsp),%rcx
  0x000000010ca3abea: mov    %r8,%rdi
  0x000000010ca3abed: xor    %rax,%rax
  0x000000010ca3abf0: shl    $0x3,%rcx
  0x000000010ca3abf4: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca3abf7: mov    0x30(%rsp),%rsi
  0x000000010ca3abfc: mov    0x48(%rsp),%edx
  0x000000010ca3ac00: mov    0x68(%rsp),%rcx
  0x000000010ca3ac05: xor    %r8d,%r8d
  0x000000010ca3ac08: mov    0x50(%rsp),%r9d
  0x000000010ca3ac0d: mov    0x8(%rsp),%rbp
  0x000000010ca3ac12: nop
  0x000000010ca3ac13: callq  0x000000010ca0f560  ; OopMap{rbp=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Derived_oop_[56] [104]=Oop off=1944}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3ac18: jmpq   0x000000010ca3a933
  0x000000010ca3ac1d: mov    %ebp,%r11d
  0x000000010ca3ac20: test   %r11d,%r11d
  0x000000010ca3ac23: jl     0x000000010ca3abe5
  0x000000010ca3ac25: mov    0x60(%rsp),%rcx
  0x000000010ca3ac2a: mov    %r8,%rdi
  0x000000010ca3ac2d: xor    %rax,%rax
  0x000000010ca3ac30: shl    $0x3,%rcx
  0x000000010ca3ac34: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3ac37: jmpq   0x000000010ca3a933  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3ac3c: mov    %r11,%rbp
  0x000000010ca3ac3f: rex.W pushq 0x10(%rsp)
  0x000000010ca3ac44: rex.W popq (%rsp)
  0x000000010ca3ac48: mov    %rdx,0x20(%rsp)
  0x000000010ca3ac4d: mov    %r13d,0x1c(%rsp)
  0x000000010ca3ac52: mov    %r8,0x28(%rsp)
  0x000000010ca3ac57: mov    %esi,0x30(%rsp)
  0x000000010ca3ac5b: mov    %ebx,0x34(%rsp)
  0x000000010ca3ac5f: mov    %r10d,0x3c(%rsp)
  0x000000010ca3ac64: mov    $0xffffff65,%esi
  0x000000010ca3ac69: xchg   %ax,%ax
  0x000000010ca3ac6b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [32]=Oop [40]=Oop off=2032}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3ac70: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3ac75: xor    %r11d,%r11d
  0x000000010ca3ac78: mov    %rbp,%r13
  0x000000010ca3ac7b: jmpq   0x000000010ca3a502
  0x000000010ca3ac80: xor    %r10d,%r10d
  0x000000010ca3ac83: mov    %r10,0x10(%rsp)
  0x000000010ca3ac88: jmpq   0x000000010ca3a524
  0x000000010ca3ac8d: xor    %r8d,%r8d
  0x000000010ca3ac90: xor    %ecx,%ecx
  0x000000010ca3ac92: xor    %edi,%edi
  0x000000010ca3ac94: jmpq   0x000000010ca3a54c
  0x000000010ca3ac99: xor    %edx,%edx
  0x000000010ca3ac9b: jmpq   0x000000010ca3a56a
  0x000000010ca3aca0: mov    (%rsp),%rdx
  0x000000010ca3aca4: mov    0x8(%rsp),%r9
  0x000000010ca3aca9: jmp    0x000000010ca3acba
  0x000000010ca3acab: mov    (%rsp),%rdx
  0x000000010ca3acaf: mov    0x8(%rsp),%r9
  0x000000010ca3acb4: jmp    0x000000010ca3acba
  0x000000010ca3acb6: mov    (%rsp),%rdx
  0x000000010ca3acba: mov    $0xffffff9d,%esi
  0x000000010ca3acbf: mov    0x18(%rsp),%ebp
  0x000000010ca3acc3: mov    %ebx,(%rsp)
  0x000000010ca3acc6: mov    %r13,0x8(%rsp)
  0x000000010ca3accb: mov    %r14,0x10(%rsp)
  0x000000010ca3acd0: mov    %r9,0x18(%rsp)
  0x000000010ca3acd5: mov    %rdx,0x20(%rsp)
  0x000000010ca3acda: nop
  0x000000010ca3acdb: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop [32]=Oop off=2144}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)
                                                ;   {runtime_call}
  0x000000010ca3ace0: callq  0x000000010be85e14  ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ;   {runtime_call}
  0x000000010ca3ace5: mov    $0xfffffff6,%esi
  0x000000010ca3acea: nop
  0x000000010ca3aceb: callq  0x000000010c9a71a0  ; OopMap{off=2160}
                                                ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ;   {runtime_call}
  0x000000010ca3acf0: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca3acf5: mov    $0xfffffff6,%esi
  0x000000010ca3acfa: nop
  0x000000010ca3acfb: callq  0x000000010c9a71a0  ; OopMap{off=2176}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca3ad00: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca3ad05: mov    $0xfffffff6,%esi
  0x000000010ca3ad0a: nop
  0x000000010ca3ad0b: callq  0x000000010c9a71a0  ; OopMap{[88]=Oop off=2192}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)
                                                ;   {runtime_call}
  0x000000010ca3ad10: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca3ad15: mov    $0xfffffff6,%esi
  0x000000010ca3ad1a: nop
  0x000000010ca3ad1b: callq  0x000000010c9a71a0  ; OopMap{off=2208}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca3ad20: callq  0x000000010be85e14  ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ;   {runtime_call}
  0x000000010ca3ad25: mov    $0xfffffff6,%esi
  0x000000010ca3ad2a: nop
  0x000000010ca3ad2b: callq  0x000000010c9a71a0  ; OopMap{off=2224}
                                                ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ;   {runtime_call}
  0x000000010ca3ad30: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca3ad35: mov    $0xfffffff6,%esi
  0x000000010ca3ad3a: nop
  0x000000010ca3ad3b: callq  0x000000010c9a71a0  ; OopMap{off=2240}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca3ad40: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca3ad45: mov    $0xfffffff6,%esi
  0x000000010ca3ad4a: mov    (%rsp),%ebp
  0x000000010ca3ad4d: xchg   %ax,%ax
  0x000000010ca3ad4f: callq  0x000000010c9a71a0  ; OopMap{[104]=Oop off=2260}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3ad54: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca3ad59: mov    $0xfffffff6,%esi
  0x000000010ca3ad5e: nop
  0x000000010ca3ad5f: callq  0x000000010c9a71a0  ; OopMap{off=2276}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca3ad64: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca3ad69: mov    $0xffffff86,%esi
  0x000000010ca3ad6e: mov    %r11,%rbp
  0x000000010ca3ad71: rex.W pushq 0x10(%rsp)
  0x000000010ca3ad76: rex.W popq (%rsp)
  0x000000010ca3ad7a: mov    %r8,0x8(%rsp)
  0x000000010ca3ad7f: mov    %rdx,0x10(%rsp)
  0x000000010ca3ad84: mov    %ebx,0x1c(%rsp)
  0x000000010ca3ad88: data32 xchg %ax,%ax
  0x000000010ca3ad8b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop off=2320}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)
                                                ;   {runtime_call}
  0x000000010ca3ad90: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca3ad95: jmp    0x000000010ca3ad99  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3ad97: jmp    0x000000010ca3ad9e  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca3ad99: mov    %rax,%rsi
  0x000000010ca3ad9c: jmp    0x000000010ca3ada6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca3ad9e: mov    %rax,%rsi
  0x000000010ca3ada1: jmp    0x000000010ca3ada6  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)

  0x000000010ca3ada3: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@-1 (line 59)

  0x000000010ca3ada6: add    $0x90,%rsp
  0x000000010ca3adad: pop    %rbp
  0x000000010ca3adae: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca3adb3: hlt    
  0x000000010ca3adb4: hlt    
  0x000000010ca3adb5: hlt    
  0x000000010ca3adb6: hlt    
  0x000000010ca3adb7: hlt    
  0x000000010ca3adb8: hlt    
  0x000000010ca3adb9: hlt    
  0x000000010ca3adba: hlt    
  0x000000010ca3adbb: hlt    
  0x000000010ca3adbc: hlt    
  0x000000010ca3adbd: hlt    
  0x000000010ca3adbe: hlt    
  0x000000010ca3adbf: hlt    
[Stub Code]
  0x000000010ca3adc0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca3adca: jmpq   0x000000010ca3adca  ;   {runtime_call}
[Exception Handler]
  0x000000010ca3adcf: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca3add4: callq  0x000000010ca3add9
  0x000000010ca3add9: subq   $0x5,(%rsp)
  0x000000010ca3adde: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca3ade3: hlt    
  0x000000010ca3ade4: hlt    
  0x000000010ca3ade5: hlt    
  0x000000010ca3ade6: hlt    
  0x000000010ca3ade7: hlt    
<nmethod compile_id='86' compile_kind='osr' compiler='C2' entry='0x000000010ca3a480' size='5584' address='0x000000010ca3a2d0' relocation_offset='296' insts_offset='432' stub_offset='2800' scopes_data_offset='2888' scopes_pcs_offset='3872' dependencies_offset='5376' handler_table_offset='5384' nul_chk_table_offset='5504' oops_offset='2840' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='5668' iicount='1' stamp='1.150'/>
<writer thread='21251'/>
<task_queued compile_id='87' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='5000' backedge_count='1' iicount='10000' stamp='1.151' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010ca40910:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001113e9fd0} &apos;consume&apos; &apos;([Ljava/lang/Object;)V&apos; in &apos;org/openjdk/jmh/infra/Blackhole&apos;
  # this:     rsi:rsi   = &apos;org/openjdk/jmh/infra/Blackhole&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/lang/Object;&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010ca40a60: mov    0x8(%rsi),%r10d
  0x000000010ca40a64: shl    $0x3,%r10
  0x000000010ca40a68: cmp    %r10,%rax
  0x000000010ca40a6b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca40a71: data32 xchg %ax,%ax
  0x000000010ca40a74: nopl   0x0(%rax,%rax,1)
  0x000000010ca40a7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca40a80: sub    $0x18,%rsp
  0x000000010ca40a87: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 304)

  0x000000010ca40a8c: mov    0xc4(%rsi),%r11d   ;*getfield tlrMask
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 304)

  0x000000010ca40a93: imul   $0x19660d,0xc0(%rsi),%r10d
  0x000000010ca40a9e: add    $0x3c6ef35f,%r10d  ;*iadd
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 305)

  0x000000010ca40aa5: mov    %r10d,0xc0(%rsi)   ;*putfield tlr
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 305)

  0x000000010ca40aac: and    %r11d,%r10d
  0x000000010ca40aaf: test   %r10d,%r10d
  0x000000010ca40ab2: je     0x000000010ca40ac0  ;*return
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@41 (line 311)

  0x000000010ca40ab4: add    $0x10,%rsp
  0x000000010ca40ab8: pop    %rbp
  0x000000010ca40ab9: test   %eax,-0x2145abf(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca40abf: retq   
  0x000000010ca40ac0: shl    %r11d
  0x000000010ca40ac3: mov    %rsi,%r10
  0x000000010ca40ac6: inc    %r11d
  0x000000010ca40ac9: shr    $0x9,%r10
  0x000000010ca40acd: mov    %rdx,%r8
  0x000000010ca40ad0: shr    $0x3,%r8
  0x000000010ca40ad4: mov    %r8d,0xd8(%rsi)
  0x000000010ca40adb: movabs $0x10c3a2000,%r8
  0x000000010ca40ae5: mov    %r12b,(%r8,%r10,1)
  0x000000010ca40ae9: mov    %r11d,0xc4(%rsi)
  0x000000010ca40af0: lock addl $0x0,(%rsp)     ;*putfield tlrMask
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@38 (line 309)

  0x000000010ca40af5: jmp    0x000000010ca40ab4
  0x000000010ca40af7: hlt    
  0x000000010ca40af8: hlt    
  0x000000010ca40af9: hlt    
  0x000000010ca40afa: hlt    
  0x000000010ca40afb: hlt    
  0x000000010ca40afc: hlt    
  0x000000010ca40afd: hlt    
  0x000000010ca40afe: hlt    
  0x000000010ca40aff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010ca40b00: jmpq   0x000000010ca0e760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010ca40b05: callq  0x000000010ca40b0a
  0x000000010ca40b0a: subq   $0x5,(%rsp)
  0x000000010ca40b0f: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca40b14: hlt    
  0x000000010ca40b15: hlt    
  0x000000010ca40b16: hlt    
  0x000000010ca40b17: hlt    
<nmethod compile_id='87' compiler='C2' entry='0x000000010ca40a60' size='712' address='0x000000010ca40910' relocation_offset='296' insts_offset='336' stub_offset='496' scopes_data_offset='536' scopes_pcs_offset='576' dependencies_offset='704' oops_offset='520' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='9698' backedge_count='1' iicount='14701' stamp='1.152'/>
<writer thread='21251'/>
<uncommon_trap thread='21251' reason='unstable_if' action='reinterpret' compile_id='86' compile_kind='osr' compiler='C2' stamp='1.296'>
<jvms bci='32' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='6024' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='21251' compile_id='86' compile_kind='osr' compiler='C2' stamp='1.296'/>
<task_queued compile_id='88' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='5000' backedge_count='1' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.296' comment='count' hot_count='10001'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010ca4bdd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001113f2c08} &apos;benchmarkHolder&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  # this:     rsi:rsi   = &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  # parm0:    rdx:rdx   = &apos;org/github/arnaudroger/CsvContent&apos;
  # parm1:    rcx:rcx   = &apos;org/openjdk/jmh/infra/Blackhole&apos;
  #           [sp+0x80]  (sp of caller)
  0x000000010ca4bf60: mov    0x8(%rsi),%r10d
  0x000000010ca4bf64: shl    $0x3,%r10
  0x000000010ca4bf68: cmp    %r10,%rax
  0x000000010ca4bf6b: jne    0x000000010c9e7e20  ;   {runtime_call}
  0x000000010ca4bf71: data32 xchg %ax,%ax
  0x000000010ca4bf74: nopl   0x0(%rax,%rax,1)
  0x000000010ca4bf7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010ca4bf80: mov    %eax,-0x14000(%rsp)
  0x000000010ca4bf87: push   %rbp
  0x000000010ca4bf88: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@-1 (line 59)

  0x000000010ca4bf8c: mov    %rcx,0x8(%rsp)
  0x000000010ca4bf91: mov    %rsi,(%rsp)
  0x000000010ca4bf95: mov    0x10(%rdx),%r10d   ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@14 (line 63)
                                                ; implicit exception: dispatches to 0x000000010ca4c765
  0x000000010ca4bf99: mov    %r10d,0x10(%rsp)
  0x000000010ca4bf9e: mov    0xc(%rsi),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@6 (line 61)

  0x000000010ca4bfa2: test   %r10d,%r10d
  0x000000010ca4bfa5: je     0x000000010ca4c6dc  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@10 (line 61)

  0x000000010ca4bfab: mov    0x10(%rsp),%r8d
  0x000000010ca4bfb0: cmp    $0x40000,%r8d
  0x000000010ca4bfb7: ja     0x000000010ca4c6ed
  0x000000010ca4bfbd: movslq %r8d,%rcx          ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@17 (line 63)

  0x000000010ca4bfc0: mov    %r12d,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@10 (line 61)

  0x000000010ca4bfc5: mov    0x14(%rdx),%r11d   ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@1 (line 59)

  0x000000010ca4bfc9: mov    %r11d,0x38(%rsp)
  0x000000010ca4bfce: mov    %r8d,%r10d
  0x000000010ca4bfd1: cmp    $0x40000,%r10d
  0x000000010ca4bfd8: ja     0x000000010ca4c6a9
  0x000000010ca4bfde: mov    0x60(%r15),%rbx
  0x000000010ca4bfe2: shl    $0x2,%rcx
  0x000000010ca4bfe6: add    $0x17,%rcx
  0x000000010ca4bfea: mov    %rcx,%r10
  0x000000010ca4bfed: and    $0xfffffffffffffff8,%r10
  0x000000010ca4bff1: mov    %rbx,%r11
  0x000000010ca4bff4: add    %r10,%r11
  0x000000010ca4bff7: cmp    0x70(%r15),%r11
  0x000000010ca4bffb: jae    0x000000010ca4c6a9
  0x000000010ca4c001: mov    %r11,0x60(%r15)
  0x000000010ca4c005: prefetchnta 0xc0(%r11)
  0x000000010ca4c00d: movq   $0x1,(%rbx)
  0x000000010ca4c014: prefetchnta 0x100(%r11)
  0x000000010ca4c01c: movl   $0xf801826f,0x8(%rbx)  ;   {metadata({type array char}[])}
  0x000000010ca4c023: mov    %r8d,0xc(%rbx)
  0x000000010ca4c027: prefetchnta 0x140(%r11)
  0x000000010ca4c02f: mov    %rbx,%rdi
  0x000000010ca4c032: add    $0x10,%rdi
  0x000000010ca4c036: prefetchnta 0x180(%r11)
  0x000000010ca4c03e: shr    $0x3,%rcx
  0x000000010ca4c042: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4c046: xor    %rax,%rax
  0x000000010ca4c049: shl    $0x3,%rcx
  0x000000010ca4c04d: rep rex.W stos %al,%es:(%rdi)  ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@17 (line 63)

  0x000000010ca4c050: mov    0x38(%rsp),%r10d
  0x000000010ca4c055: mov    0xc(%r12,%r10,8),%r14d  ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@31 (line 65)
                                                ; implicit exception: dispatches to 0x000000010ca4c775
  0x000000010ca4c05a: test   %r14d,%r14d
  0x000000010ca4c05d: jle    0x000000010ca4c4ae  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)

  0x000000010ca4c063: test   %r14d,%r14d
  0x000000010ca4c066: jbe    0x000000010ca4c6f5
  0x000000010ca4c06c: mov    %r14d,%r10d
  0x000000010ca4c06f: dec    %r10d
  0x000000010ca4c072: cmp    %r14d,%r10d
  0x000000010ca4c075: jae    0x000000010ca4c6f5  ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@35 (line 66)

  0x000000010ca4c07b: mov    0x38(%rsp),%r11d
  0x000000010ca4c080: lea    (%r12,%r11,8),%rsi  ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@1 (line 59)

  0x000000010ca4c084: xor    %edi,%edi
  0x000000010ca4c086: xor    %edx,%edx
  0x000000010ca4c088: jmpq   0x000000010ca4c27b
  0x000000010ca4c08d: mov    0x40(%rsp),%r10d
  0x000000010ca4c092: mov    %r11d,0x44(%rsp)
  0x000000010ca4c097: mov    %r10d,0x40(%rsp)
  0x000000010ca4c09c: mov    %edx,0x34(%rsp)
  0x000000010ca4c0a0: mov    %edi,0x30(%rsp)
  0x000000010ca4c0a4: mov    %rsi,0x18(%rsp)
  0x000000010ca4c0a9: mov    %rbx,0x20(%rsp)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c0ae: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca4c0b8: mov    %r11d,%edx
  0x000000010ca4c0bb: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [40]=Derived_oop_[32] [56]=NarrowOop off=352}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4c0c0: jmpq   0x000000010ca4c179
  0x000000010ca4c0c5: mov    0xc(%r12,%r10,8),%r10d  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ; implicit exception: dispatches to 0x000000010ca4c723
  0x000000010ca4c0ca: mov    %edi,%r11d
  0x000000010ca4c0cd: sub    %r10d,%r11d        ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c0d0: mov    %edx,%ebp
  0x000000010ca4c0d2: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@61 (line 70)

  0x000000010ca4c0d4: test   %r11d,%r11d
  0x000000010ca4c0d7: jl     0x000000010ca4c59c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c0dd: cmp    $0x80000,%r11d
  0x000000010ca4c0e4: ja     0x000000010ca4c53a
  0x000000010ca4c0ea: movslq %r11d,%r8
  0x000000010ca4c0ed: shl    %r8
  0x000000010ca4c0f0: add    $0x17,%r8
  0x000000010ca4c0f4: cmp    $0x80000,%r11d
  0x000000010ca4c0fb: ja     0x000000010ca4c527
  0x000000010ca4c101: mov    %r10d,0x40(%rsp)
  0x000000010ca4c106: mov    %eax,0x3c(%rsp)
  0x000000010ca4c10a: mov    %edx,0x34(%rsp)
  0x000000010ca4c10e: mov    %edi,0x30(%rsp)
  0x000000010ca4c112: mov    %rsi,0x18(%rsp)
  0x000000010ca4c117: mov    %r14d,0x14(%rsp)
  0x000000010ca4c11c: mov    %rbx,0x20(%rsp)
  0x000000010ca4c121: mov    0x60(%r15),%rax
  0x000000010ca4c125: mov    %r8,0x48(%rsp)
  0x000000010ca4c12a: and    $0xfffffffffffffff8,%r8
  0x000000010ca4c12e: mov    %rax,%r10
  0x000000010ca4c131: add    %r8,%r10
  0x000000010ca4c134: cmp    0x70(%r15),%r10
  0x000000010ca4c138: jae    0x000000010ca4c08d
  0x000000010ca4c13e: mov    %r10,0x60(%r15)
  0x000000010ca4c142: prefetchnta 0xc0(%r10)
  0x000000010ca4c14a: movq   $0x1,(%rax)
  0x000000010ca4c151: prefetchnta 0x100(%r10)
  0x000000010ca4c159: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010ca4c160: mov    %r11d,0xc(%rax)
  0x000000010ca4c164: prefetchnta 0x140(%r10)
  0x000000010ca4c16c: prefetchnta 0x180(%r10)
  0x000000010ca4c174: mov    %r11d,0x44(%rsp)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c179: mov    0x14(%rsp),%r11d
  0x000000010ca4c17e: sub    0x40(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c183: mov    %rax,%rsi
  0x000000010ca4c186: add    $0x10,%rsi         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c18a: mov    %rax,0x50(%rsp)
  0x000000010ca4c18f: cmp    0x44(%rsp),%r11d
  0x000000010ca4c194: mov    0x44(%rsp),%r9d
  0x000000010ca4c199: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c19d: mov    0x48(%rsp),%r8
  0x000000010ca4c1a2: shr    $0x3,%r8
  0x000000010ca4c1a6: mov    %r8,%rcx
  0x000000010ca4c1a9: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4c1ad: mov    0x40(%rsp),%r11d
  0x000000010ca4c1b2: test   %r11d,%r11d
  0x000000010ca4c1b5: jl     0x000000010ca4c55d
  0x000000010ca4c1bb: mov    %r9d,%r10d
  0x000000010ca4c1be: add    0x40(%rsp),%r10d
  0x000000010ca4c1c3: mov    0x14(%rsp),%ebx
  0x000000010ca4c1c7: cmp    %r10d,%ebx
  0x000000010ca4c1ca: jb     0x000000010ca4c55d
  0x000000010ca4c1d0: mov    0x44(%rsp),%r10d
  0x000000010ca4c1d5: cmp    %r9d,%r10d
  0x000000010ca4c1d8: jb     0x000000010ca4c55d
  0x000000010ca4c1de: test   %r9d,%r9d
  0x000000010ca4c1e1: jle    0x000000010ca4c585
  0x000000010ca4c1e7: movslq %r9d,%rdx
  0x000000010ca4c1ea: cmp    0x44(%rsp),%r9d
  0x000000010ca4c1ef: jl     0x000000010ca4c44c
  0x000000010ca4c1f5: mov    0x18(%rsp),%r10
  0x000000010ca4c1fa: mov    0x40(%rsp),%r11d
  0x000000010ca4c1ff: lea    0x10(%r10,%r11,2),%rdi
  0x000000010ca4c204: movabs $0x10c9f4580,%r10
  0x000000010ca4c20e: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c211: mov    0x34(%rsp),%r10d
  0x000000010ca4c216: cmp    0x10(%rsp),%r10d
  0x000000010ca4c21b: jae    0x000000010ca4c542  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca4c221: mov    (%rsp),%r10
  0x000000010ca4c225: mov    0xc(%r10),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@74 (line 71)

  0x000000010ca4c229: mov    0x50(%rsp),%r11
  0x000000010ca4c22e: shr    $0x3,%r11
  0x000000010ca4c232: mov    0x28(%rsp),%r8
  0x000000010ca4c237: mov    %r11d,(%r8)
  0x000000010ca4c23a: mov    %r8,%r11
  0x000000010ca4c23d: shr    $0x9,%r11
  0x000000010ca4c241: movabs $0x10c3a2000,%r8
  0x000000010ca4c24b: mov    %r12b,(%r8,%r11,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca4c24f: mov    0x3c(%rsp),%eax
  0x000000010ca4c253: mov    %eax,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ; implicit exception: dispatches to 0x000000010ca4c735
  0x000000010ca4c258: mov    0x20(%rsp),%rbx
  0x000000010ca4c25d: mov    0x14(%rsp),%r14d
  0x000000010ca4c262: mov    0x18(%rsp),%rsi
  0x000000010ca4c267: mov    %ebp,%edx
  0x000000010ca4c269: nopl   0x0(%rax)          ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@91 (line 72)

  0x000000010ca4c270: cmp    %r14d,%eax
  0x000000010ca4c273: jge    0x000000010ca4c4ae  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)

  0x000000010ca4c279: mov    %eax,%edi          ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@35 (line 66)

  0x000000010ca4c27b: movzwl 0x10(%rsi,%rdi,2),%r11d  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)

  0x000000010ca4c281: lea    0x10(%rbx,%rdx,4),%r10  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4c286: mov    %r10,0x28(%rsp)
  0x000000010ca4c28b: mov    (%rsp),%r10
  0x000000010ca4c28f: mov    0xc(%r10),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)

  0x000000010ca4c293: mov    %edi,%eax
  0x000000010ca4c295: inc    %eax               ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@80 (line 71)

  0x000000010ca4c297: cmp    $0x2c,%r11d
  0x000000010ca4c29b: je     0x000000010ca4c0c5  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@45 (line 68)

  0x000000010ca4c2a1: cmp    $0xa,%r11d
  0x000000010ca4c2a5: jne    0x000000010ca4c270  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@91 (line 72)

  0x000000010ca4c2a7: mov    0xc(%r12,%r10,8),%r11d  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ; implicit exception: dispatches to 0x000000010ca4c745
  0x000000010ca4c2ac: mov    %edi,%r10d
  0x000000010ca4c2af: sub    %r11d,%r10d        ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c2b2: test   %r10d,%r10d
  0x000000010ca4c2b5: jl     0x000000010ca4c676  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c2bb: cmp    $0x80000,%r10d
  0x000000010ca4c2c2: ja     0x000000010ca4c5ed
  0x000000010ca4c2c8: movslq %r10d,%rbp
  0x000000010ca4c2cb: shl    %rbp
  0x000000010ca4c2ce: add    $0x17,%rbp
  0x000000010ca4c2d2: cmp    $0x80000,%r10d
  0x000000010ca4c2d9: ja     0x000000010ca4c4ba
  0x000000010ca4c2df: mov    0x60(%r15),%r13
  0x000000010ca4c2e3: mov    %rbp,%r8
  0x000000010ca4c2e6: and    $0xfffffffffffffff8,%r8
  0x000000010ca4c2ea: mov    %r13,%r9
  0x000000010ca4c2ed: add    %r8,%r9
  0x000000010ca4c2f0: cmp    0x70(%r15),%r9
  0x000000010ca4c2f4: jae    0x000000010ca4c4ba
  0x000000010ca4c2fa: mov    %r9,0x60(%r15)
  0x000000010ca4c2fe: prefetchnta 0xc0(%r9)
  0x000000010ca4c306: movq   $0x1,0x0(%r13)
  0x000000010ca4c30e: prefetchnta 0x100(%r9)
  0x000000010ca4c316: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000010ca4c31e: mov    %r10d,0xc(%r13)
  0x000000010ca4c322: prefetchnta 0x140(%r9)
  0x000000010ca4c32a: prefetchnta 0x180(%r9)    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c332: mov    %r14d,%ecx
  0x000000010ca4c335: sub    %r11d,%ecx         ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c338: mov    %r13,%r8
  0x000000010ca4c33b: add    $0x10,%r8          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c33f: cmp    %r10d,%ecx
  0x000000010ca4c342: mov    %r10d,%r9d
  0x000000010ca4c345: cmovl  %ecx,%r9d          ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c349: shr    $0x3,%rbp
  0x000000010ca4c34d: mov    %rbp,%rcx
  0x000000010ca4c350: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4c354: test   %r11d,%r11d
  0x000000010ca4c357: jl     0x000000010ca4c605
  0x000000010ca4c35d: vmovq  %r8,%xmm0
  0x000000010ca4c362: mov    %r13,0x40(%rsp)
  0x000000010ca4c367: mov    %rbp,%r13
  0x000000010ca4c36a: mov    %r10d,%r8d
  0x000000010ca4c36d: mov    %eax,0x34(%rsp)
  0x000000010ca4c371: mov    %edx,0x30(%rsp)
  0x000000010ca4c375: mov    %edi,0x14(%rsp)
  0x000000010ca4c379: mov    %rsi,0x20(%rsp)
  0x000000010ca4c37e: mov    %r14d,%ebp
  0x000000010ca4c381: mov    %rbx,0x18(%rsp)
  0x000000010ca4c386: mov    %r9d,%r10d
  0x000000010ca4c389: add    %r11d,%r10d
  0x000000010ca4c38c: cmp    %r10d,%r14d
  0x000000010ca4c38f: jb     0x000000010ca4c625
  0x000000010ca4c395: mov    %r8d,%r10d
  0x000000010ca4c398: cmp    %r9d,%r10d
  0x000000010ca4c39b: jb     0x000000010ca4c62c
  0x000000010ca4c3a1: test   %r9d,%r9d
  0x000000010ca4c3a4: jle    0x000000010ca4c659
  0x000000010ca4c3aa: movslq %r9d,%rdx
  0x000000010ca4c3ad: cmp    %r10d,%r9d
  0x000000010ca4c3b0: jl     0x000000010ca4c47c
  0x000000010ca4c3b6: lea    0x10(%rsi,%r11,2),%rdi
  0x000000010ca4c3bb: vmovq  %xmm0,%rsi
  0x000000010ca4c3c0: movabs $0x10c9f4580,%r10
  0x000000010ca4c3ca: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c3cd: mov    0x30(%rsp),%r11d
  0x000000010ca4c3d2: cmp    0x10(%rsp),%r11d
  0x000000010ca4c3d7: jae    0x000000010ca4c5c5  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4c3dd: mov    (%rsp),%r9
  0x000000010ca4c3e1: mov    0xc(%r9),%r10d     ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@120 (line 75)

  0x000000010ca4c3e5: mov    0x28(%rsp),%r11
  0x000000010ca4c3ea: mov    %r11,%rcx
  0x000000010ca4c3ed: mov    0x40(%rsp),%r8
  0x000000010ca4c3f2: shr    $0x3,%r8
  0x000000010ca4c3f6: mov    %r8d,(%r11)
  0x000000010ca4c3f9: shr    $0x9,%rcx
  0x000000010ca4c3fd: movabs $0x10c3a2000,%r11
  0x000000010ca4c407: mov    %r12b,(%r11,%rcx,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4c40b: mov    0x34(%rsp),%r11d
  0x000000010ca4c410: mov    %r11d,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ; implicit exception: dispatches to 0x000000010ca4c755
  0x000000010ca4c415: mov    0x8(%rsp),%r10
  0x000000010ca4c41a: test   %r10,%r10
  0x000000010ca4c41d: je     0x000000010ca4c5f5  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4c423: mov    0x8(%rsp),%rsi
  0x000000010ca4c428: mov    0x18(%rsp),%rdx
  0x000000010ca4c42d: xchg   %ax,%ax
  0x000000010ca4c42f: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [56]=NarrowOop off=1236}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {optimized virtual_call}
  0x000000010ca4c434: xor    %edx,%edx
  0x000000010ca4c436: mov    0x18(%rsp),%rbx
  0x000000010ca4c43b: mov    %ebp,%r14d
  0x000000010ca4c43e: mov    0x20(%rsp),%rsi
  0x000000010ca4c443: mov    0x34(%rsp),%eax
  0x000000010ca4c447: jmpq   0x000000010ca4c270
  0x000000010ca4c44c: mov    %rdx,%r10
  0x000000010ca4c44f: shl    %r10
  0x000000010ca4c452: add    $0x10,%r10
  0x000000010ca4c456: mov    %r10,%r11
  0x000000010ca4c459: and    $0xfffffffffffffff9,%r11
  0x000000010ca4c45d: mov    %rax,%rdi
  0x000000010ca4c460: add    %r11,%rdi
  0x000000010ca4c463: shr    $0x3,%r10
  0x000000010ca4c467: sub    %r10,%r8
  0x000000010ca4c46a: mov    %r8,%rcx
  0x000000010ca4c46d: xor    %rax,%rax
  0x000000010ca4c470: shl    $0x3,%rcx
  0x000000010ca4c474: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c477: jmpq   0x000000010ca4c1f5
  0x000000010ca4c47c: mov    %rdx,%r10
  0x000000010ca4c47f: shl    %r10
  0x000000010ca4c482: add    $0x10,%r10
  0x000000010ca4c486: mov    %r10,%r8
  0x000000010ca4c489: and    $0xfffffffffffffff9,%r8
  0x000000010ca4c48d: mov    0x40(%rsp),%rdi
  0x000000010ca4c492: add    %r8,%rdi
  0x000000010ca4c495: shr    $0x3,%r10
  0x000000010ca4c499: sub    %r10,%r13
  0x000000010ca4c49c: mov    %r13,%rcx
  0x000000010ca4c49f: xor    %rax,%rax
  0x000000010ca4c4a2: shl    $0x3,%rcx
  0x000000010ca4c4a6: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c4a9: jmpq   0x000000010ca4c3b6  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@10 (line 61)

  0x000000010ca4c4ae: add    $0x70,%rsp
  0x000000010ca4c4b2: pop    %rbp
  0x000000010ca4c4b3: test   %eax,-0x21514b9(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca4c4b9: retq   
  0x000000010ca4c4ba: mov    %rbp,0x40(%rsp)
  0x000000010ca4c4bf: mov    %r10d,0x3c(%rsp)
  0x000000010ca4c4c4: mov    %r11d,0x34(%rsp)
  0x000000010ca4c4c9: mov    %eax,0x30(%rsp)
  0x000000010ca4c4cd: mov    %edx,0x24(%rsp)
  0x000000010ca4c4d1: mov    %edi,0x20(%rsp)
  0x000000010ca4c4d5: mov    %rsi,0x18(%rsp)
  0x000000010ca4c4da: mov    %r14d,0x14(%rsp)
  0x000000010ca4c4df: mov    %rbx,%rbp          ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c4e2: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca4c4ec: mov    %r10d,%edx
  0x000000010ca4c4ef: callq  0x000000010ca101a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [40]=Derived_oop_rbp [56]=NarrowOop off=1428}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c4f4: mov    %rax,%r8
  0x000000010ca4c4f7: mov    %rbp,%rbx
  0x000000010ca4c4fa: mov    0x14(%rsp),%r14d
  0x000000010ca4c4ff: mov    0x18(%rsp),%rsi
  0x000000010ca4c504: mov    0x20(%rsp),%edi
  0x000000010ca4c508: mov    0x24(%rsp),%edx
  0x000000010ca4c50c: mov    0x30(%rsp),%eax
  0x000000010ca4c510: mov    0x34(%rsp),%r11d
  0x000000010ca4c515: mov    0x3c(%rsp),%r10d
  0x000000010ca4c51a: mov    0x40(%rsp),%rbp
  0x000000010ca4c51f: mov    %r8,%r13
  0x000000010ca4c522: jmpq   0x000000010ca4c332
  0x000000010ca4c527: mov    %r14d,0x14(%rsp)
  0x000000010ca4c52c: mov    %eax,0x3c(%rsp)
  0x000000010ca4c530: mov    %r8,0x48(%rsp)
  0x000000010ca4c535: jmpq   0x000000010ca4c092
  0x000000010ca4c53a: movslq %r11d,%r8          ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c53d: jmpq   0x000000010ca4c0ed
  0x000000010ca4c542: mov    $0xffffffe4,%esi
  0x000000010ca4c547: mov    0x30(%rsp),%r8d
  0x000000010ca4c54c: mov    %r8d,0x18(%rsp)
  0x000000010ca4c551: xchg   %ax,%ax
  0x000000010ca4c553: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [56]=NarrowOop [80]=Oop off=1528}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4c558: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4c55d: mov    %rsi,%rdi
  0x000000010ca4c560: xor    %rax,%rax
  0x000000010ca4c563: shl    $0x3,%rcx
  0x000000010ca4c567: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca4c56a: mov    0x18(%rsp),%rsi
  0x000000010ca4c56f: mov    0x40(%rsp),%edx
  0x000000010ca4c573: mov    0x50(%rsp),%rcx
  0x000000010ca4c578: xor    %r8d,%r8d
  0x000000010ca4c57b: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [40]=Derived_oop_[32] [56]=NarrowOop [80]=Oop off=1568}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4c580: jmpq   0x000000010ca4c211
  0x000000010ca4c585: test   %r9d,%r9d
  0x000000010ca4c588: jl     0x000000010ca4c55d
  0x000000010ca4c58a: mov    %rsi,%rdi
  0x000000010ca4c58d: xor    %rax,%rax
  0x000000010ca4c590: shl    $0x3,%rcx
  0x000000010ca4c594: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c597: jmpq   0x000000010ca4c211  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c59c: mov    $0xffffff65,%esi
  0x000000010ca4c5a1: mov    %rbx,0x20(%rsp)
  0x000000010ca4c5a6: mov    %edx,0x1c(%rsp)
  0x000000010ca4c5aa: mov    %r10d,0x28(%rsp)
  0x000000010ca4c5af: mov    %edi,0x2c(%rsp)
  0x000000010ca4c5b3: mov    %r11d,0x34(%rsp)
  0x000000010ca4c5b8: data32 xchg %ax,%ax
  0x000000010ca4c5bb: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [56]=NarrowOop off=1632}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4c5c0: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4c5c5: mov    $0xffffffe4,%esi
  0x000000010ca4c5ca: mov    (%rsp),%rbp
  0x000000010ca4c5ce: mov    0x8(%rsp),%r10
  0x000000010ca4c5d3: mov    %r10,(%rsp)
  0x000000010ca4c5d7: mov    0x14(%rsp),%r8d
  0x000000010ca4c5dc: mov    %r8d,0x10(%rsp)
  0x000000010ca4c5e1: xchg   %ax,%ax
  0x000000010ca4c5e3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop [56]=NarrowOop [64]=Oop off=1672}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c5e8: callq  0x000000010be85e14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c5ed: movslq %r10d,%rbp         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c5f0: jmpq   0x000000010ca4c2cb
  0x000000010ca4c5f5: mov    $0xfffffff6,%esi
  0x000000010ca4c5fa: nop
  0x000000010ca4c5fb: callq  0x000000010c9a71a0  ; OopMap{[24]=Oop off=1696}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {runtime_call}
  0x000000010ca4c600: callq  0x000000010be85e14  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {runtime_call}
  0x000000010ca4c605: mov    %rbx,0x18(%rsp)
  0x000000010ca4c60a: mov    %r14d,%ebp
  0x000000010ca4c60d: mov    %rsi,0x20(%rsp)
  0x000000010ca4c612: mov    %edi,0x14(%rsp)
  0x000000010ca4c616: mov    %edx,0x30(%rsp)
  0x000000010ca4c61a: mov    %eax,0x34(%rsp)
  0x000000010ca4c61e: mov    %r13,0x40(%rsp)
  0x000000010ca4c623: jmp    0x000000010ca4c631
  0x000000010ca4c625: vmovq  %xmm0,%r8
  0x000000010ca4c62a: jmp    0x000000010ca4c631
  0x000000010ca4c62c: vmovq  %xmm0,%r8
  0x000000010ca4c631: mov    %r8,%rdi
  0x000000010ca4c634: xor    %rax,%rax
  0x000000010ca4c637: shl    $0x3,%rcx
  0x000000010ca4c63b: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca4c63e: mov    0x20(%rsp),%rsi
  0x000000010ca4c643: mov    %r11d,%edx
  0x000000010ca4c646: mov    0x40(%rsp),%rcx
  0x000000010ca4c64b: xor    %r8d,%r8d
  0x000000010ca4c64e: nop
  0x000000010ca4c64f: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [40]=Derived_oop_[24] [56]=NarrowOop [64]=Oop off=1780}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c654: jmpq   0x000000010ca4c3cd
  0x000000010ca4c659: test   %r9d,%r9d
  0x000000010ca4c65c: jl     0x000000010ca4c719
  0x000000010ca4c662: vmovq  %xmm0,%rdi
  0x000000010ca4c667: xor    %rax,%rax
  0x000000010ca4c66a: shl    $0x3,%rcx
  0x000000010ca4c66e: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c671: jmpq   0x000000010ca4c3cd  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c676: mov    $0xffffff65,%esi
  0x000000010ca4c67b: mov    (%rsp),%rbp
  0x000000010ca4c67f: mov    0x8(%rsp),%r8
  0x000000010ca4c684: mov    %r8,(%rsp)
  0x000000010ca4c688: mov    %rbx,0x18(%rsp)
  0x000000010ca4c68d: mov    %edx,0x14(%rsp)
  0x000000010ca4c691: mov    %r11d,0x20(%rsp)
  0x000000010ca4c696: mov    %edi,0x24(%rsp)
  0x000000010ca4c69a: mov    %r10d,0x2c(%rsp)
  0x000000010ca4c69f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop [56]=NarrowOop off=1860}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c6a4: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4c6a9: mov    %rax,-0x8(%rsp)
  0x000000010ca4c6ae: mov    0x38(%rsp),%eax
  0x000000010ca4c6b2: mov    %eax,0x14(%rsp)
  0x000000010ca4c6b6: mov    -0x8(%rsp),%rax
  0x000000010ca4c6bb: mov    %rsi,%rbp          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@-1 (line 59)

  0x000000010ca4c6be: movabs $0x7c00c1378,%rsi  ;   {metadata({type array char}[])}
  0x000000010ca4c6c8: mov    %r8d,%edx
  0x000000010ca4c6cb: callq  0x000000010ca11a60  ; OopMap{rbp=Oop [8]=Oop [20]=NarrowOop [56]=NarrowOop off=1904}
                                                ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@17 (line 63)
                                                ;   {runtime_call}
  0x000000010ca4c6d0: mov    %rbp,(%rsp)
  0x000000010ca4c6d4: mov    %rax,%rbx
  0x000000010ca4c6d7: jmpq   0x000000010ca4c050
  0x000000010ca4c6dc: mov    $0xfffffff6,%esi
  0x000000010ca4c6e1: xchg   %ax,%ax
  0x000000010ca4c6e3: callq  0x000000010c9a71a0  ; OopMap{off=1928}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@10 (line 61)
                                                ;   {runtime_call}
  0x000000010ca4c6e8: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@10 (line 61)
                                                ;   {runtime_call}
  0x000000010ca4c6ed: movslq %r8d,%rcx          ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@17 (line 63)

  0x000000010ca4c6f0: jmpq   0x000000010ca4bfc0
  0x000000010ca4c6f5: mov    $0xffffff86,%esi
  0x000000010ca4c6fa: mov    (%rsp),%rbp
  0x000000010ca4c6fe: mov    0x8(%rsp),%r10
  0x000000010ca4c703: mov    %r10,(%rsp)
  0x000000010ca4c707: mov    %rbx,0x8(%rsp)
  0x000000010ca4c70c: data32 xchg %ax,%ax
  0x000000010ca4c70f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [56]=NarrowOop off=1972}
                                                ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@35 (line 66)
                                                ;   {runtime_call}
  0x000000010ca4c714: callq  0x000000010be85e14  ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@35 (line 66)
                                                ;   {runtime_call}
  0x000000010ca4c719: vmovq  %xmm0,%r8
  0x000000010ca4c71e: jmpq   0x000000010ca4c631  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)

  0x000000010ca4c723: mov    $0xfffffff6,%esi
  0x000000010ca4c728: data32 xchg %ax,%ax
  0x000000010ca4c72b: callq  0x000000010c9a71a0  ; OopMap{off=2000}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4c730: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca4c735: mov    $0xfffffff6,%esi
  0x000000010ca4c73a: nop
  0x000000010ca4c73b: callq  0x000000010c9a71a0  ; OopMap{off=2016}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca4c740: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4c745: mov    $0xfffffff6,%esi
  0x000000010ca4c74a: nop
  0x000000010ca4c74b: callq  0x000000010c9a71a0  ; OopMap{off=2032}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4c750: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca4c755: mov    $0xfffffff6,%esi
  0x000000010ca4c75a: nop
  0x000000010ca4c75b: callq  0x000000010c9a71a0  ; OopMap{off=2048}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca4c760: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca4c765: mov    $0xfffffff6,%esi
  0x000000010ca4c76a: nop
  0x000000010ca4c76b: callq  0x000000010c9a71a0  ; OopMap{off=2064}
                                                ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@1 (line 59)
                                                ;   {runtime_call}
  0x000000010ca4c770: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4c775: mov    $0xfffffff6,%esi
  0x000000010ca4c77a: nop
  0x000000010ca4c77b: callq  0x000000010c9a71a0  ; OopMap{off=2080}
                                                ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@31 (line 65)
                                                ;   {runtime_call}
  0x000000010ca4c780: callq  0x000000010be85e14  ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@17 (line 63)
                                                ;   {runtime_call}
  0x000000010ca4c785: mov    %rax,%rsi
  0x000000010ca4c788: jmp    0x000000010ca4c79b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c78a: jmp    0x000000010ca4c78e  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c78c: jmp    0x000000010ca4c793  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4c78e: mov    %rax,%rsi
  0x000000010ca4c791: jmp    0x000000010ca4c79b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4c793: mov    %rax,%rsi
  0x000000010ca4c796: jmp    0x000000010ca4c79b  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)

  0x000000010ca4c798: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@-1 (line 59)

  0x000000010ca4c79b: add    $0x70,%rsp
  0x000000010ca4c79f: pop    %rbp
  0x000000010ca4c7a0: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca4c7a5: hlt    
  0x000000010ca4c7a6: hlt    
  0x000000010ca4c7a7: hlt    
  0x000000010ca4c7a8: hlt    
  0x000000010ca4c7a9: hlt    
  0x000000010ca4c7aa: hlt    
  0x000000010ca4c7ab: hlt    
  0x000000010ca4c7ac: hlt    
  0x000000010ca4c7ad: hlt    
  0x000000010ca4c7ae: hlt    
  0x000000010ca4c7af: hlt    
  0x000000010ca4c7b0: hlt    
  0x000000010ca4c7b1: hlt    
  0x000000010ca4c7b2: hlt    
  0x000000010ca4c7b3: hlt    
  0x000000010ca4c7b4: hlt    
  0x000000010ca4c7b5: hlt    
  0x000000010ca4c7b6: hlt    
  0x000000010ca4c7b7: hlt    
  0x000000010ca4c7b8: hlt    
  0x000000010ca4c7b9: hlt    
  0x000000010ca4c7ba: hlt    
  0x000000010ca4c7bb: hlt    
  0x000000010ca4c7bc: hlt    
  0x000000010ca4c7bd: hlt    
  0x000000010ca4c7be: hlt    
  0x000000010ca4c7bf: hlt    
[Stub Code]
  0x000000010ca4c7c0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca4c7ca: jmpq   0x000000010ca4c7ca  ;   {runtime_call}
[Exception Handler]
  0x000000010ca4c7cf: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca4c7d4: callq  0x000000010ca4c7d9
  0x000000010ca4c7d9: subq   $0x5,(%rsp)
  0x000000010ca4c7de: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca4c7e3: hlt    
  0x000000010ca4c7e4: hlt    
  0x000000010ca4c7e5: hlt    
  0x000000010ca4c7e6: hlt    
  0x000000010ca4c7e7: hlt    
<nmethod compile_id='88' compiler='C2' entry='0x000000010ca4bf60' size='5272' address='0x000000010ca4bdd0' relocation_offset='296' insts_offset='400' stub_offset='2544' scopes_data_offset='2624' scopes_pcs_offset='3480' dependencies_offset='5064' handler_table_offset='5072' nul_chk_table_offset='5216' oops_offset='2584' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='5819' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.312'/>
<writer thread='21251'/>
<task_queued compile_id='89' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='6024' iicount='2' decompiles='1' unstable_if_traps='1' osr_bci='28' stamp='1.312' comment='backedge_count' hot_count='6024'/>
<writer thread='19203'/>
<sweeper state='finished' traversals='1'  total_blobs='342' nmethods='88' adapters='205' free_code_cache='49648640' stamp='1.312'/>
Decoding compiled method 0x000000010ca4d290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001113f2c08} &apos;benchmarkHolder&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  0x000000010ca4d440: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4d445: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010ca4d450: mov    %eax,-0x14000(%rsp)
  0x000000010ca4d457: push   %rbp
  0x000000010ca4d458: sub    $0x80,%rsp
  0x000000010ca4d45f: mov    0x10(%rsi),%ebx
  0x000000010ca4d462: mov    0x18(%rsi),%r10d
  0x000000010ca4d466: mov    %r10d,0x18(%rsp)
  0x000000010ca4d46b: mov    0x40(%rsi),%rbp
  0x000000010ca4d46f: mov    0x30(%rsi),%r14
  0x000000010ca4d473: mov    0x20(%rsi),%r10
  0x000000010ca4d477: mov    %r10,(%rsp)
  0x000000010ca4d47b: mov    0x28(%rsi),%r10
  0x000000010ca4d47f: mov    %r10,0x8(%rsp)
  0x000000010ca4d484: mov    %rsi,%rdi
  0x000000010ca4d487: movabs $0x10bee473e,%r10
  0x000000010ca4d491: callq  *%r10
  0x000000010ca4d494: test   %rbp,%rbp
  0x000000010ca4d497: je     0x000000010ca4dc21
  0x000000010ca4d49d: mov    %rbp,%r13
  0x000000010ca4d4a0: mov    0x8(%rbp),%r10d
  0x000000010ca4d4a4: shl    $0x3,%r10
  0x000000010ca4d4a8: mov    0x30(%r10),%r10
  0x000000010ca4d4ac: movabs $0x7c00aae10,%r11  ;   {metadata(&apos;org/github/arnaudroger/SimplifiedBenchmark&apos;)}
  0x000000010ca4d4b6: cmp    %r11,%r10
  0x000000010ca4d4b9: jne    0x000000010ca4dc4d
  0x000000010ca4d4bf: mov    %rbp,%r11
  0x000000010ca4d4c2: test   %r14,%r14
  0x000000010ca4d4c5: je     0x000000010ca4dc2c
  0x000000010ca4d4cb: mov    0x8(%r14),%r10d
  0x000000010ca4d4cf: cmp    $0xf801540f,%r10d  ;   {metadata(&apos;org/openjdk/jmh/infra/Blackhole&apos;)}
  0x000000010ca4d4d6: jne    0x000000010ca4dc58
  0x000000010ca4d4dc: mov    %r14,%r10
  0x000000010ca4d4df: mov    %r10,0x10(%rsp)
  0x000000010ca4d4e4: mov    0x8(%rsp),%r10
  0x000000010ca4d4e9: test   %r10,%r10
  0x000000010ca4d4ec: je     0x000000010ca4dc39
  0x000000010ca4d4f2: mov    0x8(%r10),%r9d
  0x000000010ca4d4f6: cmp    $0xf8000041,%r9d   ;   {metadata({type array char})}
  0x000000010ca4d4fd: jne    0x000000010ca4dc63
  0x000000010ca4d503: mov    %r10,%r8
  0x000000010ca4d506: mov    %r8,%r9
  0x000000010ca4d509: mov    %r8,%rdi
  0x000000010ca4d50c: mov    (%rsp),%rdx
  0x000000010ca4d510: test   %rdx,%rdx
  0x000000010ca4d513: je     0x000000010ca4dc46
  0x000000010ca4d519: mov    0x8(%rdx),%ecx
  0x000000010ca4d51c: cmp    $0xf801826f,%ecx   ;   {metadata({type array char}[])}
  0x000000010ca4d522: jne    0x000000010ca4dc67  ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)

  0x000000010ca4d528: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@31 (line 65)
                                                ; implicit exception: dispatches to 0x000000010ca4dd15
  0x000000010ca4d52c: jmpq   0x000000010ca4d74d  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d531: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca4d53b: mov    0x4c(%rsp),%edx
  0x000000010ca4d53f: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Derived_oop_[48] off=260}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4d544: jmpq   0x000000010ca4d624
  0x000000010ca4d549: mov    0xc(%r11),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ; implicit exception: dispatches to 0x000000010ca4dc91
  0x000000010ca4d54d: mov    0xc(%r12,%r10,8),%esi  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ; implicit exception: dispatches to 0x000000010ca4dca1
  0x000000010ca4d552: mov    %ebx,%r10d
  0x000000010ca4d555: sub    %esi,%r10d         ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d558: mov    0x18(%rsp),%ebp
  0x000000010ca4d55c: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@61 (line 70)

  0x000000010ca4d55e: test   %r10d,%r10d
  0x000000010ca4d561: jl     0x000000010ca4db2c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d567: cmp    $0x80000,%r10d
  0x000000010ca4d56e: ja     0x000000010ca4da81
  0x000000010ca4d574: mov    %r10d,0x4c(%rsp)
  0x000000010ca4d579: mov    %esi,0x48(%rsp)
  0x000000010ca4d57d: mov    %ecx,0x3c(%rsp)
  0x000000010ca4d581: mov    %r14,0x40(%rsp)
  0x000000010ca4d586: mov    %eax,0x38(%rsp)
  0x000000010ca4d58a: mov    %rdx,0x30(%rsp)
  0x000000010ca4d58f: mov    %rdi,0x28(%rsp)
  0x000000010ca4d594: mov    %r9,0x8(%rsp)
  0x000000010ca4d599: mov    %r8,0x18(%rsp)
  0x000000010ca4d59e: mov    %r11,(%rsp)
  0x000000010ca4d5a2: mov    %r13d,0x24(%rsp)
  0x000000010ca4d5a7: mov    %ebx,0x20(%rsp)
  0x000000010ca4d5ab: movslq %r10d,%r10
  0x000000010ca4d5ae: shl    %r10
  0x000000010ca4d5b1: add    $0x17,%r10
  0x000000010ca4d5b5: mov    %r10,0x50(%rsp)
  0x000000010ca4d5ba: mov    0x4c(%rsp),%r10d
  0x000000010ca4d5bf: cmp    $0x80000,%r10d
  0x000000010ca4d5c6: ja     0x000000010ca4d531
  0x000000010ca4d5cc: mov    0x60(%r15),%rax
  0x000000010ca4d5d0: mov    0x50(%rsp),%r11
  0x000000010ca4d5d5: and    $0xfffffffffffffff8,%r11
  0x000000010ca4d5d9: mov    %rax,%r10
  0x000000010ca4d5dc: add    %r11,%r10
  0x000000010ca4d5df: cmp    0x70(%r15),%r10
  0x000000010ca4d5e3: jae    0x000000010ca4d531
  0x000000010ca4d5e9: mov    %r10,0x60(%r15)
  0x000000010ca4d5ed: prefetchnta 0xc0(%r10)
  0x000000010ca4d5f5: movq   $0x1,(%rax)
  0x000000010ca4d5fc: prefetchnta 0x100(%r10)
  0x000000010ca4d604: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010ca4d60b: mov    0x4c(%rsp),%r11d
  0x000000010ca4d610: mov    %r11d,0xc(%rax)
  0x000000010ca4d614: prefetchnta 0x140(%r10)
  0x000000010ca4d61c: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d624: mov    %rax,0x58(%rsp)
  0x000000010ca4d629: mov    0x38(%rsp),%r11d
  0x000000010ca4d62e: sub    0x48(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d633: mov    %rax,%r10
  0x000000010ca4d636: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d63a: mov    %r10,%rbx
  0x000000010ca4d63d: cmp    0x4c(%rsp),%r11d
  0x000000010ca4d642: mov    0x4c(%rsp),%r9d
  0x000000010ca4d647: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d64b: mov    0x50(%rsp),%r8
  0x000000010ca4d650: shr    $0x3,%r8
  0x000000010ca4d654: mov    %r8,%rcx
  0x000000010ca4d657: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4d65b: mov    0x48(%rsp),%r11d
  0x000000010ca4d660: test   %r11d,%r11d
  0x000000010ca4d663: jl     0x000000010ca4daed
  0x000000010ca4d669: mov    %r9d,%r10d
  0x000000010ca4d66c: add    0x48(%rsp),%r10d
  0x000000010ca4d671: mov    0x38(%rsp),%r11d
  0x000000010ca4d676: cmp    %r10d,%r11d
  0x000000010ca4d679: jb     0x000000010ca4daed
  0x000000010ca4d67f: mov    0x4c(%rsp),%r10d
  0x000000010ca4d684: cmp    %r9d,%r10d
  0x000000010ca4d687: jb     0x000000010ca4daed
  0x000000010ca4d68d: test   %r9d,%r9d
  0x000000010ca4d690: jle    0x000000010ca4db15
  0x000000010ca4d696: movslq %r9d,%rdx
  0x000000010ca4d699: cmp    0x4c(%rsp),%r9d
  0x000000010ca4d69e: jl     0x000000010ca4d981
  0x000000010ca4d6a4: mov    0x18(%rsp),%r10
  0x000000010ca4d6a9: mov    0x48(%rsp),%r11d
  0x000000010ca4d6ae: lea    0x10(%r10,%r11,2),%rdi
  0x000000010ca4d6b3: mov    %rbx,%rsi
  0x000000010ca4d6b6: movabs $0x10c9f4580,%r10
  0x000000010ca4d6c0: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d6c3: mov    0x30(%rsp),%r10
  0x000000010ca4d6c8: mov    0xc(%r10),%r11d    ; implicit exception: dispatches to 0x000000010ca4dcb1
  0x000000010ca4d6cc: mov    0x24(%rsp),%r10d
  0x000000010ca4d6d1: cmp    %r11d,%r10d
  0x000000010ca4d6d4: jae    0x000000010ca4dac0  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca4d6da: mov    (%rsp),%r10
  0x000000010ca4d6de: mov    0xc(%r10),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@74 (line 71)

  0x000000010ca4d6e2: mov    0x40(%rsp),%r11
  0x000000010ca4d6e7: mov    %r11,%r8
  0x000000010ca4d6ea: mov    0x58(%rsp),%r11
  0x000000010ca4d6ef: shr    $0x3,%r11
  0x000000010ca4d6f3: mov    0x40(%rsp),%r9
  0x000000010ca4d6f8: mov    %r11d,(%r9)
  0x000000010ca4d6fb: shr    $0x9,%r8
  0x000000010ca4d6ff: movabs $0x10c3a2000,%r11
  0x000000010ca4d709: mov    %r12b,(%r11,%r8,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)

  0x000000010ca4d70d: mov    0x3c(%rsp),%r8d
  0x000000010ca4d712: mov    %r8d,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ; implicit exception: dispatches to 0x000000010ca4dcc1
  0x000000010ca4d717: mov    %ebp,%r13d
  0x000000010ca4d71a: mov    (%rsp),%r11
  0x000000010ca4d71e: mov    0x18(%rsp),%r8
  0x000000010ca4d723: mov    0x8(%rsp),%r9
  0x000000010ca4d728: mov    0x28(%rsp),%rdi
  0x000000010ca4d72d: mov    0x30(%rsp),%rdx
  0x000000010ca4d732: mov    0x38(%rsp),%eax
  0x000000010ca4d736: mov    0x3c(%rsp),%ecx
  0x000000010ca4d73a: nopw   0x0(%rax,%rax,1)   ; OopMap{r11=Oop r8=Oop r9=Oop rdi=Oop rdx=Oop [16]=Oop off=768}
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@142 (line 65)

  0x000000010ca4d740: test   %eax,-0x2152746(%rip)        # 0x000000010a8fb000
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@142 (line 65)
                                                ;   {poll}
  0x000000010ca4d746: mov    %ecx,%ebx
  0x000000010ca4d748: mov    %r13d,0x18(%rsp)   ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)

  0x000000010ca4d74d: cmp    %eax,%ebx
  0x000000010ca4d74f: jge    0x000000010ca4da48  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@32 (line 65)

  0x000000010ca4d755: cmp    %eax,%ebx
  0x000000010ca4d757: jae    0x000000010ca4da57
  0x000000010ca4d75d: movzwl 0x10(%r8,%rbx,2),%r10d  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)

  0x000000010ca4d763: mov    0x18(%rsp),%r13d
  0x000000010ca4d768: lea    0x10(%rdx,%r13,4),%r14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4d76d: mov    %ebx,%ecx
  0x000000010ca4d76f: inc    %ecx               ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@80 (line 71)

  0x000000010ca4d771: cmp    $0x2c,%r10d
  0x000000010ca4d775: je     0x000000010ca4d549  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@45 (line 68)

  0x000000010ca4d77b: cmp    $0xa,%r10d
  0x000000010ca4d77f: jne    0x000000010ca4d740  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@91 (line 72)

  0x000000010ca4d781: mov    0xc(%r11),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ; implicit exception: dispatches to 0x000000010ca4dcd1
  0x000000010ca4d785: mov    0xc(%r12,%r10,8),%esi  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ; implicit exception: dispatches to 0x000000010ca4dce1
  0x000000010ca4d78a: mov    %ebx,%r10d
  0x000000010ca4d78d: sub    %esi,%r10d         ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d790: test   %r10d,%r10d
  0x000000010ca4d793: jl     0x000000010ca4dbe8  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d799: cmp    $0x80000,%r10d
  0x000000010ca4d7a0: ja     0x000000010ca4db65
  0x000000010ca4d7a6: movslq %r10d,%rbp
  0x000000010ca4d7a9: shl    %rbp
  0x000000010ca4d7ac: add    $0x17,%rbp
  0x000000010ca4d7b0: cmp    $0x80000,%r10d
  0x000000010ca4d7b7: ja     0x000000010ca4d9e3
  0x000000010ca4d7bd: mov    %rbp,0x50(%rsp)
  0x000000010ca4d7c2: mov    %r10d,0x4c(%rsp)
  0x000000010ca4d7c7: mov    %esi,0x48(%rsp)
  0x000000010ca4d7cb: mov    %ecx,0x24(%rsp)
  0x000000010ca4d7cf: mov    %r14,0x40(%rsp)
  0x000000010ca4d7d4: mov    %eax,0x4(%rsp)
  0x000000010ca4d7d8: mov    %rdx,0x38(%rsp)
  0x000000010ca4d7dd: mov    %rdi,0x30(%rsp)
  0x000000010ca4d7e2: mov    %r9,0x28(%rsp)
  0x000000010ca4d7e7: mov    %r8,0x18(%rsp)
  0x000000010ca4d7ec: mov    %r11,0x8(%rsp)
  0x000000010ca4d7f1: mov    %r13d,(%rsp)
  0x000000010ca4d7f5: mov    %ebx,0x20(%rsp)
  0x000000010ca4d7f9: mov    0x60(%r15),%r11
  0x000000010ca4d7fd: mov    %rbp,%r8
  0x000000010ca4d800: and    $0xfffffffffffffff8,%r8
  0x000000010ca4d804: mov    %r11,%r10
  0x000000010ca4d807: add    %r8,%r10
  0x000000010ca4d80a: cmp    0x70(%r15),%r10
  0x000000010ca4d80e: jae    0x000000010ca4da2c
  0x000000010ca4d814: mov    %r10,0x60(%r15)
  0x000000010ca4d818: prefetchnta 0xc0(%r10)
  0x000000010ca4d820: movq   $0x1,(%r11)
  0x000000010ca4d827: prefetchnta 0x100(%r10)
  0x000000010ca4d82f: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010ca4d837: mov    0x4c(%rsp),%ebp
  0x000000010ca4d83b: mov    %ebp,0xc(%r11)
  0x000000010ca4d83f: prefetchnta 0x140(%r10)
  0x000000010ca4d847: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d84f: mov    %r11,0x58(%rsp)
  0x000000010ca4d854: mov    0x4(%rsp),%r10d
  0x000000010ca4d859: sub    0x48(%rsp),%r10d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d85e: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d862: mov    %r11,%rbx
  0x000000010ca4d865: cmp    0x4c(%rsp),%r10d
  0x000000010ca4d86a: mov    0x4c(%rsp),%r9d
  0x000000010ca4d86f: cmovl  %r10d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d873: mov    0x50(%rsp),%r10
  0x000000010ca4d878: shr    $0x3,%r10
  0x000000010ca4d87c: mov    %r10,%rcx
  0x000000010ca4d87f: add    $0xfffffffffffffffe,%rcx
  0x000000010ca4d883: mov    0x48(%rsp),%ebp
  0x000000010ca4d887: test   %ebp,%ebp
  0x000000010ca4d889: jl     0x000000010ca4dba9
  0x000000010ca4d88f: mov    %r9d,%r11d
  0x000000010ca4d892: add    0x48(%rsp),%r11d
  0x000000010ca4d897: mov    0x4(%rsp),%r8d
  0x000000010ca4d89c: cmp    %r11d,%r8d
  0x000000010ca4d89f: jb     0x000000010ca4dba9
  0x000000010ca4d8a5: mov    0x4c(%rsp),%ebp
  0x000000010ca4d8a9: cmp    %r9d,%ebp
  0x000000010ca4d8ac: jb     0x000000010ca4dba9
  0x000000010ca4d8b2: test   %r9d,%r9d
  0x000000010ca4d8b5: jle    0x000000010ca4dbd1
  0x000000010ca4d8bb: movslq %r9d,%rdx
  0x000000010ca4d8be: cmp    0x4c(%rsp),%r9d
  0x000000010ca4d8c3: jl     0x000000010ca4d9b1
  0x000000010ca4d8c9: mov    0x18(%rsp),%r10
  0x000000010ca4d8ce: mov    0x48(%rsp),%ebp
  0x000000010ca4d8d2: lea    0x10(%r10,%rbp,2),%rdi
  0x000000010ca4d8d7: mov    %rbx,%rsi
  0x000000010ca4d8da: movabs $0x10c9f4580,%r10
  0x000000010ca4d8e4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d8e7: mov    0x38(%rsp),%r11
  0x000000010ca4d8ec: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x000000010ca4dcf1
  0x000000010ca4d8f0: mov    (%rsp),%ebp
  0x000000010ca4d8f3: cmp    %r10d,%ebp
  0x000000010ca4d8f6: jae    0x000000010ca4db6d  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4d8fc: mov    0x8(%rsp),%r10
  0x000000010ca4d901: mov    0xc(%r10),%r10d    ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@120 (line 75)

  0x000000010ca4d905: mov    0x40(%rsp),%r11
  0x000000010ca4d90a: mov    %r11,%r8
  0x000000010ca4d90d: mov    0x58(%rsp),%r11
  0x000000010ca4d912: shr    $0x3,%r11
  0x000000010ca4d916: mov    0x40(%rsp),%r9
  0x000000010ca4d91b: mov    %r11d,(%r9)
  0x000000010ca4d91e: shr    $0x9,%r8
  0x000000010ca4d922: movabs $0x10c3a2000,%r11
  0x000000010ca4d92c: mov    %r12b,(%r11,%r8,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4d930: mov    0x24(%rsp),%r8d
  0x000000010ca4d935: mov    %r8d,0xc(%r12,%r10,8)  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ; implicit exception: dispatches to 0x000000010ca4dd05
  0x000000010ca4d93a: mov    0x10(%rsp),%rbp
  0x000000010ca4d93f: test   %rbp,%rbp
  0x000000010ca4d942: je     0x000000010ca4db99  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)

  0x000000010ca4d948: mov    0x10(%rsp),%rsi
  0x000000010ca4d94d: mov    0x38(%rsp),%rdx
  0x000000010ca4d952: nop
  0x000000010ca4d953: callq  0x000000010c9e8020  ; OopMap{[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [56]=Oop off=1304}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {optimized virtual_call}
  0x000000010ca4d958: xor    %r13d,%r13d
  0x000000010ca4d95b: mov    0x8(%rsp),%r11
  0x000000010ca4d960: mov    0x18(%rsp),%r8
  0x000000010ca4d965: mov    0x28(%rsp),%r9
  0x000000010ca4d96a: mov    0x30(%rsp),%rdi
  0x000000010ca4d96f: mov    0x38(%rsp),%rdx
  0x000000010ca4d974: mov    0x4(%rsp),%eax
  0x000000010ca4d978: mov    0x24(%rsp),%ecx
  0x000000010ca4d97c: jmpq   0x000000010ca4d740
  0x000000010ca4d981: mov    %rdx,%r10
  0x000000010ca4d984: shl    %r10
  0x000000010ca4d987: add    $0x10,%r10
  0x000000010ca4d98b: mov    %r10,%r11
  0x000000010ca4d98e: and    $0xfffffffffffffff9,%r11
  0x000000010ca4d992: mov    %rax,%rdi
  0x000000010ca4d995: add    %r11,%rdi
  0x000000010ca4d998: shr    $0x3,%r10
  0x000000010ca4d99c: sub    %r10,%r8
  0x000000010ca4d99f: mov    %r8,%rcx
  0x000000010ca4d9a2: xor    %rax,%rax
  0x000000010ca4d9a5: shl    $0x3,%rcx
  0x000000010ca4d9a9: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4d9ac: jmpq   0x000000010ca4d6a4
  0x000000010ca4d9b1: mov    %rdx,%r11
  0x000000010ca4d9b4: shl    %r11
  0x000000010ca4d9b7: add    $0x10,%r11
  0x000000010ca4d9bb: mov    %r11,%r8
  0x000000010ca4d9be: and    $0xfffffffffffffff9,%r8
  0x000000010ca4d9c2: mov    0x58(%rsp),%rdi
  0x000000010ca4d9c7: add    %r8,%rdi
  0x000000010ca4d9ca: shr    $0x3,%r11
  0x000000010ca4d9ce: sub    %r11,%r10
  0x000000010ca4d9d1: mov    %r10,%rcx
  0x000000010ca4d9d4: xor    %rax,%rax
  0x000000010ca4d9d7: shl    $0x3,%rcx
  0x000000010ca4d9db: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4d9de: jmpq   0x000000010ca4d8c9
  0x000000010ca4d9e3: mov    %ebx,0x20(%rsp)
  0x000000010ca4d9e7: mov    %rax,-0x8(%rsp)
  0x000000010ca4d9ec: mov    0x18(%rsp),%eax
  0x000000010ca4d9f0: mov    %eax,(%rsp)
  0x000000010ca4d9f3: mov    -0x8(%rsp),%rax
  0x000000010ca4d9f8: mov    %r11,0x8(%rsp)
  0x000000010ca4d9fd: mov    %r8,0x18(%rsp)
  0x000000010ca4da02: mov    %r9,0x28(%rsp)
  0x000000010ca4da07: mov    %rdi,0x30(%rsp)
  0x000000010ca4da0c: mov    %rdx,0x38(%rsp)
  0x000000010ca4da11: mov    %eax,0x4(%rsp)
  0x000000010ca4da15: mov    %r14,0x40(%rsp)
  0x000000010ca4da1a: mov    %ecx,0x24(%rsp)
  0x000000010ca4da1e: mov    %esi,0x48(%rsp)
  0x000000010ca4da22: mov    %r10d,0x4c(%rsp)
  0x000000010ca4da27: mov    %rbp,0x50(%rsp)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4da2c: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca4da36: mov    0x4c(%rsp),%edx
  0x000000010ca4da3a: nop
  0x000000010ca4da3b: callq  0x000000010ca101a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Derived_oop_[56] off=1536}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4da40: mov    %rax,%r11
  0x000000010ca4da43: jmpq   0x000000010ca4d84f
  0x000000010ca4da48: add    $0x80,%rsp
  0x000000010ca4da4f: pop    %rbp
  0x000000010ca4da50: test   %eax,-0x2152a56(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca4da56: retq   
  0x000000010ca4da57: mov    $0xffffffe4,%esi
  0x000000010ca4da5c: mov    %r11,%rbp
  0x000000010ca4da5f: rex.W pushq 0x10(%rsp)
  0x000000010ca4da64: rex.W popq (%rsp)
  0x000000010ca4da68: mov    %rdx,0x10(%rsp)
  0x000000010ca4da6d: mov    %r8,0x20(%rsp)
  0x000000010ca4da72: mov    %ebx,0x28(%rsp)
  0x000000010ca4da76: nop
  0x000000010ca4da77: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [32]=Oop off=1596}
                                                ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)
                                                ;   {runtime_call}
  0x000000010ca4da7c: callq  0x000000010be85e14  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@38 (line 66)
                                                ;   {runtime_call}
  0x000000010ca4da81: mov    %r10d,0x4c(%rsp)
  0x000000010ca4da86: mov    %esi,0x48(%rsp)
  0x000000010ca4da8a: mov    %ecx,0x3c(%rsp)
  0x000000010ca4da8e: mov    %r14,0x40(%rsp)
  0x000000010ca4da93: mov    %eax,0x38(%rsp)
  0x000000010ca4da97: mov    %rdx,0x30(%rsp)
  0x000000010ca4da9c: mov    %rdi,0x28(%rsp)
  0x000000010ca4daa1: mov    %r9,0x8(%rsp)
  0x000000010ca4daa6: mov    %r8,0x18(%rsp)
  0x000000010ca4daab: mov    %r11,(%rsp)
  0x000000010ca4daaf: mov    %r13d,0x24(%rsp)
  0x000000010ca4dab4: mov    %ebx,0x20(%rsp)
  0x000000010ca4dab8: movslq %r10d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4dabb: jmpq   0x000000010ca4d5ae
  0x000000010ca4dac0: mov    $0xffffffe4,%esi
  0x000000010ca4dac5: rex.W pushq 0x10(%rsp)
  0x000000010ca4daca: rex.W popq 0x8(%rsp)
  0x000000010ca4dacf: rex.W pushq 0x18(%rsp)
  0x000000010ca4dad4: rex.W popq 0x10(%rsp)
  0x000000010ca4dad9: mov    0x30(%rsp),%r10
  0x000000010ca4dade: mov    %r10,0x28(%rsp)
  0x000000010ca4dae3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [40]=Oop [88]=Oop off=1704}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4dae8: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4daed: mov    %rbx,%rdi
  0x000000010ca4daf0: xor    %rax,%rax
  0x000000010ca4daf3: shl    $0x3,%rcx
  0x000000010ca4daf7: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca4dafa: mov    0x8(%rsp),%rsi
  0x000000010ca4daff: mov    0x48(%rsp),%edx
  0x000000010ca4db03: mov    0x58(%rsp),%rcx
  0x000000010ca4db08: xor    %r8d,%r8d
  0x000000010ca4db0b: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Derived_oop_[48] [88]=Oop off=1744}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4db10: jmpq   0x000000010ca4d6c3
  0x000000010ca4db15: test   %r9d,%r9d
  0x000000010ca4db18: jl     0x000000010ca4daed
  0x000000010ca4db1a: mov    %rbx,%rdi
  0x000000010ca4db1d: xor    %rax,%rax
  0x000000010ca4db20: shl    $0x3,%rcx
  0x000000010ca4db24: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4db27: jmpq   0x000000010ca4d6c3  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4db2c: mov    %r11,(%rsp)
  0x000000010ca4db30: rex.W pushq 0x10(%rsp)
  0x000000010ca4db35: rex.W popq 0x8(%rsp)
  0x000000010ca4db3a: mov    %rdx,0x28(%rsp)
  0x000000010ca4db3f: mov    %r13d,0x24(%rsp)
  0x000000010ca4db44: mov    %r8,0x30(%rsp)
  0x000000010ca4db49: mov    %esi,0x38(%rsp)
  0x000000010ca4db4d: mov    %ebx,0x3c(%rsp)
  0x000000010ca4db51: mov    %r10d,0x44(%rsp)
  0x000000010ca4db56: mov    $0xffffff65,%esi
  0x000000010ca4db5b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [40]=Oop [48]=Oop off=1824}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4db60: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4db65: movslq %r10d,%rbp         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4db68: jmpq   0x000000010ca4d7a9
  0x000000010ca4db6d: mov    $0xffffffe4,%esi
  0x000000010ca4db72: mov    0x8(%rsp),%r10
  0x000000010ca4db77: mov    %r10,(%rsp)
  0x000000010ca4db7b: mov    0x10(%rsp),%r10
  0x000000010ca4db80: mov    %r10,0x8(%rsp)
  0x000000010ca4db85: mov    0x18(%rsp),%r10
  0x000000010ca4db8a: mov    %r10,0x10(%rsp)
  0x000000010ca4db8f: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [56]=Oop [88]=Oop off=1876}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4db94: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4db99: mov    $0xfffffff6,%esi
  0x000000010ca4db9e: nop
  0x000000010ca4db9f: callq  0x000000010c9a71a0  ; OopMap{[56]=Oop off=1892}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)
                                                ;   {runtime_call}
  0x000000010ca4dba4: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4dba9: mov    %rbx,%rdi
  0x000000010ca4dbac: xor    %rax,%rax
  0x000000010ca4dbaf: shl    $0x3,%rcx
  0x000000010ca4dbb3: rep rex.W stos %al,%es:(%rdi)
  0x000000010ca4dbb6: mov    0x30(%rsp),%rsi
  0x000000010ca4dbbb: mov    0x48(%rsp),%edx
  0x000000010ca4dbbf: mov    0x58(%rsp),%rcx
  0x000000010ca4dbc4: xor    %r8d,%r8d
  0x000000010ca4dbc7: callq  0x000000010ca0f560  ; OopMap{[8]=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [56]=Oop [64]=Derived_oop_[56] [88]=Oop off=1932}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4dbcc: jmpq   0x000000010ca4d8e7
  0x000000010ca4dbd1: test   %r9d,%r9d
  0x000000010ca4dbd4: jl     0x000000010ca4dba9
  0x000000010ca4dbd6: mov    %rbx,%rdi
  0x000000010ca4dbd9: xor    %rax,%rax
  0x000000010ca4dbdc: shl    $0x3,%rcx
  0x000000010ca4dbe0: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4dbe3: jmpq   0x000000010ca4d8e7  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4dbe8: mov    %r11,%rbp
  0x000000010ca4dbeb: rex.W pushq 0x10(%rsp)
  0x000000010ca4dbf0: rex.W popq (%rsp)
  0x000000010ca4dbf4: mov    %rdx,0x20(%rsp)
  0x000000010ca4dbf9: mov    %r13d,0x1c(%rsp)
  0x000000010ca4dbfe: mov    %r8,0x28(%rsp)
  0x000000010ca4dc03: mov    %esi,0x30(%rsp)
  0x000000010ca4dc07: mov    %ebx,0x34(%rsp)
  0x000000010ca4dc0b: mov    %r10d,0x3c(%rsp)
  0x000000010ca4dc10: mov    $0xffffff65,%esi
  0x000000010ca4dc15: xchg   %ax,%ax
  0x000000010ca4dc17: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [32]=Oop [40]=Oop off=2012}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4dc1c: callq  0x000000010be85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4dc21: xor    %r11d,%r11d
  0x000000010ca4dc24: mov    %rbp,%r13
  0x000000010ca4dc27: jmpq   0x000000010ca4d4c2
  0x000000010ca4dc2c: xor    %r10d,%r10d
  0x000000010ca4dc2f: mov    %r10,0x10(%rsp)
  0x000000010ca4dc34: jmpq   0x000000010ca4d4e4
  0x000000010ca4dc39: xor    %r8d,%r8d
  0x000000010ca4dc3c: xor    %r9d,%r9d
  0x000000010ca4dc3f: xor    %edi,%edi
  0x000000010ca4dc41: jmpq   0x000000010ca4d50c
  0x000000010ca4dc46: xor    %edx,%edx
  0x000000010ca4dc48: jmpq   0x000000010ca4d528
  0x000000010ca4dc4d: mov    (%rsp),%rdx
  0x000000010ca4dc51: mov    0x8(%rsp),%r10
  0x000000010ca4dc56: jmp    0x000000010ca4dc67
  0x000000010ca4dc58: mov    (%rsp),%rdx
  0x000000010ca4dc5c: mov    0x8(%rsp),%r10
  0x000000010ca4dc61: jmp    0x000000010ca4dc67
  0x000000010ca4dc63: mov    (%rsp),%rdx
  0x000000010ca4dc67: mov    $0xffffff9d,%esi
  0x000000010ca4dc6c: mov    0x18(%rsp),%ebp
  0x000000010ca4dc70: mov    %ebx,(%rsp)
  0x000000010ca4dc73: mov    %r13,0x8(%rsp)
  0x000000010ca4dc78: mov    %r14,0x10(%rsp)
  0x000000010ca4dc7d: mov    %r10,0x18(%rsp)
  0x000000010ca4dc82: mov    %rdx,0x20(%rsp)
  0x000000010ca4dc87: callq  0x000000010c9a71a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop [32]=Oop off=2124}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)
                                                ;   {runtime_call}
  0x000000010ca4dc8c: callq  0x000000010be85e14  ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4dc91: mov    $0xfffffff6,%esi
  0x000000010ca4dc96: nop
  0x000000010ca4dc97: callq  0x000000010c9a71a0  ; OopMap{off=2140}
                                                ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@49 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4dc9c: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4dca1: mov    $0xfffffff6,%esi
  0x000000010ca4dca6: nop
  0x000000010ca4dca7: callq  0x000000010c9a71a0  ; OopMap{off=2156}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4dcac: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@52 (line 69)
                                                ;   {runtime_call}
  0x000000010ca4dcb1: mov    $0xfffffff6,%esi
  0x000000010ca4dcb6: nop
  0x000000010ca4dcb7: callq  0x000000010c9a71a0  ; OopMap{[88]=Oop off=2172}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@72 (line 70)
                                                ;   {runtime_call}
  0x000000010ca4dcbc: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca4dcc1: mov    $0xfffffff6,%esi
  0x000000010ca4dcc6: nop
  0x000000010ca4dcc7: callq  0x000000010c9a71a0  ; OopMap{off=2188}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@81 (line 71)
                                                ;   {runtime_call}
  0x000000010ca4dccc: callq  0x000000010be85e14  ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4dcd1: mov    $0xfffffff6,%esi
  0x000000010ca4dcd6: nop
  0x000000010ca4dcd7: callq  0x000000010c9a71a0  ; OopMap{off=2204}
                                                ;*getfield holder
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@95 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4dcdc: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4dce1: mov    $0xfffffff6,%esi
  0x000000010ca4dce6: nop
  0x000000010ca4dce7: callq  0x000000010c9a71a0  ; OopMap{off=2220}
                                                ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4dcec: callq  0x000000010be85e14  ;*getfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@98 (line 73)
                                                ;   {runtime_call}
  0x000000010ca4dcf1: mov    $0xfffffff6,%esi
  0x000000010ca4dcf6: mov    (%rsp),%ebp
  0x000000010ca4dcf9: xchg   %ax,%ax
  0x000000010ca4dcfb: callq  0x000000010c9a71a0  ; OopMap{[88]=Oop off=2240}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@118 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4dd00: callq  0x000000010be85e14  ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca4dd05: mov    $0xfffffff6,%esi
  0x000000010ca4dd0a: nop
  0x000000010ca4dd0b: callq  0x000000010c9a71a0  ; OopMap{off=2256}
                                                ;*putfield startCell
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@127 (line 75)
                                                ;   {runtime_call}
  0x000000010ca4dd10: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca4dd15: mov    $0xffffff86,%esi
  0x000000010ca4dd1a: mov    %r11,%rbp
  0x000000010ca4dd1d: rex.W pushq 0x10(%rsp)
  0x000000010ca4dd22: rex.W popq (%rsp)
  0x000000010ca4dd26: mov    %r8,0x8(%rsp)
  0x000000010ca4dd2b: mov    %rdx,0x10(%rsp)
  0x000000010ca4dd30: mov    %ebx,0x1c(%rsp)
  0x000000010ca4dd34: data32 xchg %ax,%ax
  0x000000010ca4dd37: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop off=2300}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@28 (line 65)
                                                ;   {runtime_call}
  0x000000010ca4dd3c: callq  0x000000010be85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)
                                                ;   {runtime_call}
  0x000000010ca4dd41: jmp    0x000000010ca4dd45  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4dd43: jmp    0x000000010ca4dd4a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@115 (line 74)

  0x000000010ca4dd45: mov    %rax,%rsi
  0x000000010ca4dd48: jmp    0x000000010ca4dd52  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@69 (line 70)

  0x000000010ca4dd4a: mov    %rax,%rsi
  0x000000010ca4dd4d: jmp    0x000000010ca4dd52  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@133 (line 76)

  0x000000010ca4dd4f: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkHolder@-1 (line 59)

  0x000000010ca4dd52: add    $0x80,%rsp
  0x000000010ca4dd59: pop    %rbp
  0x000000010ca4dd5a: jmpq   0x000000010ca0f620  ;   {runtime_call}
  0x000000010ca4dd5f: hlt    
[Stub Code]
  0x000000010ca4dd60: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca4dd6a: jmpq   0x000000010ca4dd6a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca4dd6f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca4dd74: callq  0x000000010ca4dd79
  0x000000010ca4dd79: subq   $0x5,(%rsp)
  0x000000010ca4dd7e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca4dd83: hlt    
  0x000000010ca4dd84: hlt    
  0x000000010ca4dd85: hlt    
  0x000000010ca4dd86: hlt    
  0x000000010ca4dd87: hlt    
<nmethod compile_id='89' compile_kind='osr' compiler='C2' entry='0x000000010ca4d440' size='5352' address='0x000000010ca4d290' relocation_offset='296' insts_offset='432' stub_offset='2768' scopes_data_offset='2856' scopes_pcs_offset='3720' dependencies_offset='5144' handler_table_offset='5152' nul_chk_table_offset='5272' oops_offset='2808' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='5617' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.327'/>
<writer thread='21251'/>
[Loaded org.apache.commons.math3.stat.descriptive.StatisticalSummary from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Statistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.Aggregator from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Deduplicator from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.ResultRole from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.AbstractStatistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.SingletonStatistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.options.TimeValue$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.AggregationPolicy from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='7171'/>
[Loaded org.openjdk.jmh.results.IterationResultMetaData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.Collections$SingletonSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor30 from __JVM_DefineClass__]
<task_queued compile_id='90' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5000' iicount='25' stamp='2.202' comment='count' hot_count='5001'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor31 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor32 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor33 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor34 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor35 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor36 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor37 from __JVM_DefineClass__]
<writer thread='19715'/>
Decoding compiled method 0x000000010ca51e10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011131d4d8} &apos;matchFields&apos; &apos;([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;&apos; in &apos;java/io/ObjectStreamClass&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/io/ObjectStreamField;&apos;
  # parm1:    rdx:rdx   = &apos;java/io/ObjectStreamClass&apos;
  #           [sp+0xd0]  (sp of caller)
  0x000000010ca52180: mov    %eax,-0x14000(%rsp)
  0x000000010ca52187: push   %rbp
  0x000000010ca52188: sub    $0xc0,%rsp         ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x000000010ca5218f: test   %rdx,%rdx
  0x000000010ca52192: je     0x000000010ca53194  ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52198: mov    0x38(%rdx),%r10d
  0x000000010ca5219c: mov    %r10,%r8
  0x000000010ca5219f: shl    $0x3,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca521a3: mov    %rsi,%r9
  0x000000010ca521a6: mov    0xc(%rsi),%r10d    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ; implicit exception: dispatches to 0x000000010ca53ed1
  0x000000010ca521aa: cmp    $0x40000,%r10d
  0x000000010ca521b1: ja     0x000000010ca533e1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521b7: mov    0x60(%r15),%rsi    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521bb: movslq %r10d,%rcx
  0x000000010ca521be: shl    $0x2,%rcx
  0x000000010ca521c2: add    $0x17,%rcx         ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@1 (line 134)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521c6: mov    %rcx,%r11
  0x000000010ca521c9: and    $0xfffffffffffffff8,%r11
  0x000000010ca521cd: mov    %rsi,%rbx
  0x000000010ca521d0: add    %r11,%rbx
  0x000000010ca521d3: cmp    0x70(%r15),%rbx
  0x000000010ca521d7: jae    0x000000010ca533e1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521dd: mov    %rbx,0x60(%r15)    ;*isub
                                                ; - java.lang.String::&lt;init&gt;@54 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521e1: prefetchnta 0xc0(%rbx)
  0x000000010ca521e8: movq   $0x1,(%rsi)
  0x000000010ca521ef: prefetchnta 0x100(%rbx)   ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca521f6: movl   $0xf8002678,0x8(%rsi)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010ca521fd: mov    %r10d,0xc(%rsi)    ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52201: prefetchnta 0x140(%rbx)
  0x000000010ca52208: mov    %rsi,%rdi
  0x000000010ca5220b: add    $0x10,%rdi
  0x000000010ca5220f: prefetchnta 0x180(%rbx)   ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52216: shr    $0x3,%rcx
  0x000000010ca5221a: add    $0xfffffffffffffffe,%rcx
  0x000000010ca5221e: xor    %rax,%rax
  0x000000010ca52221: shl    $0x3,%rcx
  0x000000010ca52225: rep rex.W stos %al,%es:(%rdi)  ;*iadd
                                                ; - java.lang.String::&lt;init&gt;@74 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52228: mov    %rsi,%rbx          ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x000000010ca5222b: test   %r10d,%r10d
  0x000000010ca5222e: jle    0x000000010ca530fe  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52234: test   %r10d,%r10d
  0x000000010ca52237: jbe    0x000000010ca53c09  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca5223d: mov    %r10d,%ecx
  0x000000010ca52240: dec    %ecx
  0x000000010ca52242: cmp    %r10d,%ecx
  0x000000010ca52245: jae    0x000000010ca53c09  ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x000000010ca5224b: mov    0xc(%r8),%edi      ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@34 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53c09
  0x000000010ca5224f: test   %edi,%edi
  0x000000010ca52251: jle    0x000000010ca53c09
  0x000000010ca52257: test   %edi,%edi
  0x000000010ca52259: jbe    0x000000010ca53c09  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010ca5225f: mov    %edi,%r11d
  0x000000010ca52262: dec    %r11d
  0x000000010ca52265: cmp    %edi,%r11d
  0x000000010ca52268: jae    0x000000010ca53c09  ;*aload_0
                                                ; - java.io.ObjectStreamField::setOffset@0 (line 225)
                                                ; - java.io.ObjectStreamClass::matchFields@230 (line 2314)

  0x000000010ca5226e: mov    %edi,0x1c(%rsp)
  0x000000010ca52272: mov    %rbx,0x20(%rsp)
  0x000000010ca52277: mov    %r10d,0x18(%rsp)
  0x000000010ca5227c: mov    %r8,0x10(%rsp)
  0x000000010ca52281: mov    %r9,(%rsp)
  0x000000010ca52285: mov    %rdx,0x8(%rsp)
  0x000000010ca5228a: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca52290: movabs $0x0,%r10
  0x000000010ca5229a: lea    (%r10,%r11,8),%r10
  0x000000010ca5229e: mov    %r10,0x28(%rsp)
  0x000000010ca522a3: mov    $0xf80025ef,%r11d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca522a9: movabs $0x0,%r10
  0x000000010ca522b3: lea    (%r10,%r11,8),%r10
  0x000000010ca522b7: mov    %r10,0x30(%rsp)
  0x000000010ca522bc: mov    $0xf8001b4b,%r11d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca522c2: movabs $0x0,%r10
  0x000000010ca522cc: lea    (%r10,%r11,8),%r10
  0x000000010ca522d0: mov    %r10,0x38(%rsp)
  0x000000010ca522d5: xor    %r8d,%r8d
  0x000000010ca522d8: jmpq   0x000000010ca52722
  0x000000010ca522dd: mov    %rbp,0x90(%rsp)
  0x000000010ca522e5: jmp    0x000000010ca522ef
  0x000000010ca522e7: mov    %rbp,0x90(%rsp)
  0x000000010ca522ef: mov    0x60(%r15),%rax
  0x000000010ca522f3: mov    %rax,%r10
  0x000000010ca522f6: add    $0x18,%r10
  0x000000010ca522fa: cmp    0x70(%r15),%r10
  0x000000010ca522fe: jae    0x000000010ca532f3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52304: mov    %r10,0x60(%r15)
  0x000000010ca52308: prefetchnta 0xc0(%r10)
  0x000000010ca52310: mov    0x38(%rsp),%r10
  0x000000010ca52315: mov    0xa8(%r10),%r10
  0x000000010ca5231c: mov    %r10,(%rax)
  0x000000010ca5231f: movl   $0xf8001b4b,0x8(%rax)  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca52326: mov    %r12d,0xc(%rax)    ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5232a: mov    %r12,0x10(%rax)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca5232e: mov    %rax,0x60(%rsp)
  0x000000010ca52333: mov    0x60(%r15),%rax
  0x000000010ca52337: mov    %rax,%r10
  0x000000010ca5233a: add    $0x30,%r10
  0x000000010ca5233e: cmp    0x70(%r15),%r10
  0x000000010ca52342: jae    0x000000010ca53309  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52348: mov    %r10,0x60(%r15)
  0x000000010ca5234c: prefetchnta 0xc0(%r10)
  0x000000010ca52354: movq   $0x1,(%rax)
  0x000000010ca5235b: prefetchnta 0x100(%r10)
  0x000000010ca52363: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010ca5236a: prefetchnta 0x140(%r10)
  0x000000010ca52372: movl   $0x10,0xc(%rax)    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52379: prefetchnta 0x180(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52381: mov    %r12,0x10(%rax)
  0x000000010ca52385: mov    %r12,0x18(%rax)
  0x000000010ca52389: mov    %r12,0x20(%rax)
  0x000000010ca5238d: mov    %r12,0x28(%rax)    ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52391: mov    0x60(%rsp),%r10
  0x000000010ca52396: mov    %rax,%r8
  0x000000010ca52399: shr    $0x3,%r8
  0x000000010ca5239d: mov    0x60(%rsp),%r11
  0x000000010ca523a2: mov    %r8d,0x10(%r11)    ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca523a6: shr    $0x9,%r10
  0x000000010ca523aa: movabs $0x10c3a2000,%r11
  0x000000010ca523b4: mov    %r12b,(%r11,%r10,1)  ;*ifne
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@35 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca523b8: mov    0x60(%rsp),%rsi
  0x000000010ca523bd: mov    $0x1,%edx
  0x000000010ca523c2: mov    %rsi,%rbp
  0x000000010ca523c5: xchg   %ax,%ax
  0x000000010ca523c7: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=588}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca523cc: mov    0xc(%rbp),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca523d0: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca523d3: mov    %r11d,%r10d
  0x000000010ca523d6: inc    %r10d
  0x000000010ca523d9: mov    0x60(%rsp),%r8
  0x000000010ca523de: mov    %r10d,0xc(%r8)     ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca523e2: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x000000010ca53df9
  0x000000010ca523e7: cmp    %r10d,%r11d
  0x000000010ca523ea: jae    0x000000010ca53755  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca523f0: mov    0x90(%rsp),%r10
  0x000000010ca523f8: mov    0x14(%r10),%r10d   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca523fc: lea    (%r12,%rbp,8),%r8
  0x000000010ca52400: mov    $0x4c,%ecx
  0x000000010ca52405: mov    %cx,0x10(%r8,%r11,2)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5240b: test   %r10d,%r10d
  0x000000010ca5240e: je     0x000000010ca53110  ;*aload_0
                                                ; - java.io.ObjectStreamField::getClassSignature@30 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52414: lea    (%r12,%r10,8),%rsi  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52418: mov    $0x2e,%edx
  0x000000010ca5241d: mov    $0x2f,%ecx
  0x000000010ca52422: mov    0x68(%rsp),%rbp
  0x000000010ca52427: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop off=684}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca5242c: mov    0x60(%rsp),%rsi
  0x000000010ca52431: mov    %rax,%rdx
  0x000000010ca52434: data32 xchg %ax,%ax
  0x000000010ca52437: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=700}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca5243c: mov    %rax,0x60(%rsp)
  0x000000010ca52441: mov    0xc(%rax),%edx     ; implicit exception: dispatches to 0x000000010ca53e0d
  0x000000010ca52444: inc    %edx               ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52446: mov    %rax,%rsi
  0x000000010ca52449: mov    %rax,%rbp
  0x000000010ca5244c: data32 xchg %ax,%ax
  0x000000010ca5244f: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop off=724}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52454: mov    0xc(%rbp),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52458: mov    %r11d,0x70(%rsp)
  0x000000010ca5245d: mov    0x10(%rbp),%r10d   ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52461: mov    %r10d,0x74(%rsp)
  0x000000010ca52466: mov    %r11d,%r10d
  0x000000010ca52469: inc    %r10d              ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca5246c: mov    %r10d,0x78(%rsp)
  0x000000010ca52471: mov    0x78(%rsp),%r8d
  0x000000010ca52476: mov    %r8d,0xc(%rbp)     ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca5247a: mov    0x74(%rsp),%r10d
  0x000000010ca5247f: mov    0xc(%r12,%r10,8),%r11d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e1d
  0x000000010ca52484: mov    %r11d,0x44(%rsp)
  0x000000010ca52489: mov    0x70(%rsp),%r11d
  0x000000010ca5248e: cmp    0x44(%rsp),%r11d
  0x000000010ca52493: jae    0x000000010ca537a5
  0x000000010ca52499: mov    0x60(%r15),%rcx
  0x000000010ca5249d: mov    %rcx,%r10
  0x000000010ca524a0: add    $0x18,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca524a4: mov    0x74(%rsp),%r11d
  0x000000010ca524a9: shl    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca524ad: mov    %r11,0x80(%rsp)
  0x000000010ca524b5: mov    0x70(%rsp),%r8d
  0x000000010ca524ba: mov    $0x3b,%r9d
  0x000000010ca524c0: mov    %r9w,0x10(%r11,%r8,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca524c6: cmp    0x70(%r15),%r10
  0x000000010ca524ca: jae    0x000000010ca53325
  0x000000010ca524d0: mov    %r10,0x60(%r15)
  0x000000010ca524d4: prefetchnta 0xc0(%r10)
  0x000000010ca524dc: mov    0x28(%rsp),%r10
  0x000000010ca524e1: mov    0xa8(%r10),%r10
  0x000000010ca524e8: mov    %r10,(%rcx)
  0x000000010ca524eb: movl   $0xf80002da,0x8(%rcx)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca524f2: mov    %r12d,0xc(%rcx)
  0x000000010ca524f6: mov    %r12,0x10(%rcx)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca524fa: mov    %rcx,0x60(%rsp)
  0x000000010ca524ff: mov    0x78(%rsp),%r11d
  0x000000010ca52504: test   %r11d,%r11d
  0x000000010ca52507: jle    0x000000010ca531eb  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5250d: mov    0x44(%rsp),%ebp
  0x000000010ca52511: sub    0x70(%rsp),%ebp
  0x000000010ca52515: dec    %ebp               ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52517: test   %ebp,%ebp
  0x000000010ca52519: jl     0x000000010ca53ae5
  0x000000010ca5251f: mov    %r11d,%r10d
  0x000000010ca52522: test   %r10d,%r10d
  0x000000010ca52525: jl     0x000000010ca53b35  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca5252b: cmp    $0x80000,%r10d
  0x000000010ca52532: ja     0x000000010ca53811  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52538: movslq 0x70(%rsp),%rbp
  0x000000010ca5253d: add    $0x1,%rbp          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52541: shl    %rbp
  0x000000010ca52544: add    $0x17,%rbp         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52548: mov    %rbp,%r10
  0x000000010ca5254b: and    $0xfffffffffffffff8,%r10  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5254f: mov    %r10,0x88(%rsp)
  0x000000010ca52557: mov    %r11d,%r10d
  0x000000010ca5255a: cmp    $0x80000,%r10d
  0x000000010ca52561: ja     0x000000010ca5333c
  0x000000010ca52567: mov    0x60(%r15),%r11
  0x000000010ca5256b: mov    %r11,%r10
  0x000000010ca5256e: mov    0x88(%rsp),%r8
  0x000000010ca52576: add    %r8,%r10           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52579: cmp    0x70(%r15),%r10
  0x000000010ca5257d: jae    0x000000010ca5333c
  0x000000010ca52583: mov    %r10,0x60(%r15)
  0x000000010ca52587: prefetchnta 0xc0(%r10)
  0x000000010ca5258f: movq   $0x1,(%r11)
  0x000000010ca52596: prefetchnta 0x100(%r10)
  0x000000010ca5259e: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010ca525a6: mov    0x78(%rsp),%r9d
  0x000000010ca525ab: mov    %r9d,0xc(%r11)
  0x000000010ca525af: prefetchnta 0x140(%r10)
  0x000000010ca525b7: prefetchnta 0x180(%r10)
  0x000000010ca525bf: mov    %r11,0x90(%rsp)
  0x000000010ca525c7: mov    0x44(%rsp),%r10d
  0x000000010ca525cc: cmp    0x78(%rsp),%r10d
  0x000000010ca525d1: mov    0x78(%rsp),%r9d
  0x000000010ca525d6: cmovl  %r10d,%r9d         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca525da: mov    %r11,%r10
  0x000000010ca525dd: add    $0x10,%r10         ;*synchronization entry
                                                ; - java.lang.Class::getName@-1 (line 640)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca525e1: shr    $0x3,%rbp          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca525e5: mov    %rbp,%rcx
  0x000000010ca525e8: add    $0xfffffffffffffffe,%rcx
  0x000000010ca525ec: mov    0x44(%rsp),%r8d
  0x000000010ca525f1: cmp    %r9d,%r8d
  0x000000010ca525f4: jb     0x000000010ca5381c
  0x000000010ca525fa: mov    0x78(%rsp),%r11d
  0x000000010ca525ff: cmp    %r9d,%r11d
  0x000000010ca52602: jb     0x000000010ca5381c  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52608: test   %r9d,%r9d
  0x000000010ca5260b: jle    0x000000010ca53849  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52611: mov    0x74(%rsp),%r8d
  0x000000010ca52616: lea    0x10(%r12,%r8,8),%rbx  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5261b: cmp    %r11d,%r9d
  0x000000010ca5261e: jl     0x000000010ca532a5
  0x000000010ca52624: mov    0x88(%rsp),%rdx
  0x000000010ca5262c: add    $0xfffffffffffffff0,%rdx
  0x000000010ca52630: shr    $0x3,%rdx          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52634: mov    %rbx,%rdi
  0x000000010ca52637: mov    %r10,%rsi
  0x000000010ca5263a: movabs $0x10c9f4780,%r10
  0x000000010ca52644: callq  *%r10              ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52647: mov    0x90(%rsp),%r10
  0x000000010ca5264f: mov    %r10,%r11
  0x000000010ca52652: shr    $0x3,%r11          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52656: mov    0x60(%rsp),%r10
  0x000000010ca5265b: mov    %r11d,0xc(%r10)    ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5265f: shr    $0x9,%r10
  0x000000010ca52663: movabs $0x10c3a2000,%r11
  0x000000010ca5266d: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52671: mov    0x68(%rsp),%rsi
  0x000000010ca52676: mov    0x60(%rsp),%rdx
  0x000000010ca5267b: mov    0x58(%rsp),%rbp
  0x000000010ca52680: data32 xchg %ax,%ax
  0x000000010ca52683: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=1288}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52688: jmpq   0x000000010ca52766
  0x000000010ca5268d: mov    0xc(%r12,%rbx,8),%r8d  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ; implicit exception: dispatches to 0x000000010ca53dd9
  0x000000010ca52692: mov    0xc(%r12,%r8,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010ca53de9
  0x000000010ca52697: test   %ebp,%ebp
  0x000000010ca52699: jle    0x000000010ca538b1  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca5269f: test   %ebp,%ebp
  0x000000010ca526a1: jbe    0x000000010ca53719  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca526a7: movzwl 0x10(%r12,%r8,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca526ad: cmp    $0x4c,%r11d
  0x000000010ca526b1: je     0x000000010ca52aea  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca526b7: cmp    $0x5b,%r11d
  0x000000010ca526bb: jne    0x000000010ca52ab9
  0x000000010ca526c1: jmpq   0x000000010ca52aea
  0x000000010ca526c6: mov    0x58(%rsp),%r10
  0x000000010ca526cb: test   %r10,%r10
  0x000000010ca526ce: je     0x000000010ca536ad  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca526d4: mov    0x20(%rsp),%r10
  0x000000010ca526d9: mov    0x54(%rsp),%r8d
  0x000000010ca526de: lea    0x10(%r10,%r8,4),%r10  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca526e3: mov    0x40(%rsp),%r11d
  0x000000010ca526e8: mov    0xc(%r12,%r11,8),%r8d
  0x000000010ca526ed: mov    0x58(%rsp),%r11
  0x000000010ca526f2: mov    %r8d,0xc(%r11)
  0x000000010ca526f6: shr    $0x3,%r11
  0x000000010ca526fa: mov    %r11d,(%r10)
  0x000000010ca526fd: shr    $0x9,%r10
  0x000000010ca52701: movabs $0x10c3a2000,%r11
  0x000000010ca5270b: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca5270f: mov    0x54(%rsp),%r8d
  0x000000010ca52714: inc    %r8d
  0x000000010ca52717: cmp    0x18(%rsp),%r8d
  0x000000010ca5271c: jge    0x000000010ca530f9  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca52722: mov    (%rsp),%r10
  0x000000010ca52726: mov    0x10(%r10,%r8,4),%r10d  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca5272b: mov    %r10d,0x40(%rsp)
  0x000000010ca52730: test   %r10d,%r10d
  0x000000010ca52733: je     0x000000010ca534d5  ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x000000010ca52739: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5273d: mov    %r10,0x48(%rsp)
  0x000000010ca52742: xor    %r10d,%r10d
  0x000000010ca52745: xor    %edx,%edx
  0x000000010ca52747: mov    %r8d,0x54(%rsp)
  0x000000010ca5274c: mov    %r10,0x58(%rsp)
  0x000000010ca52751: jmpq   0x000000010ca52973
  0x000000010ca52756: lea    (%r12,%r11,8),%r10
  0x000000010ca5275a: mov    $0x56,%r11d
  0x000000010ca52760: mov    %r11w,0x10(%r10,%rbp,2)
  0x000000010ca52766: mov    0x60(%r15),%r11
  0x000000010ca5276a: mov    %r11,%r10
  0x000000010ca5276d: add    $0x18,%r10
  0x000000010ca52771: cmp    0x70(%r15),%r10
  0x000000010ca52775: jae    0x000000010ca53269  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5277b: mov    %r10,0x60(%r15)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5277f: prefetchnta 0xc0(%r10)    ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52787: mov    0x28(%rsp),%r10
  0x000000010ca5278c: mov    0xa8(%r10),%r10
  0x000000010ca52793: mov    %r10,(%r11)
  0x000000010ca52796: movl   $0xf80002da,0x8(%r11)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca5279e: mov    %r12d,0xc(%r11)
  0x000000010ca527a2: mov    %r12,0x10(%r11)
  0x000000010ca527a6: mov    %r11,0x60(%rsp)
  0x000000010ca527ab: mov    0x68(%rsp),%r10
  0x000000010ca527b0: mov    0xc(%r10),%r10d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca527b4: mov    %r10d,0x70(%rsp)
  0x000000010ca527b9: mov    0x68(%rsp),%r10
  0x000000010ca527be: mov    0x10(%r10),%r10d   ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca527c2: mov    0x70(%rsp),%r8d
  0x000000010ca527c7: test   %r8d,%r8d
  0x000000010ca527ca: jle    0x000000010ca5315e  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca527d0: mov    0xc(%r12,%r10,8),%ebp  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getTypeCode@-1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ; implicit exception: dispatches to 0x000000010ca53d99
  0x000000010ca527d5: mov    %ebp,%r8d
  0x000000010ca527d8: sub    0x70(%rsp),%r8d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca527dd: test   %r8d,%r8d
  0x000000010ca527e0: jl     0x000000010ca5357d
  0x000000010ca527e6: mov    0x70(%rsp),%r11d
  0x000000010ca527eb: test   %r11d,%r11d
  0x000000010ca527ee: jl     0x000000010ca535cd  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca527f4: cmp    $0x80000,%r11d
  0x000000010ca527fb: ja     0x000000010ca5341d  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52801: movslq %r11d,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52804: lea    (%r12,%r10,8),%r8  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52808: mov    %r8,0x68(%rsp)
  0x000000010ca5280d: shl    %r11
  0x000000010ca52810: add    $0x17,%r11         ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52814: mov    %r11,0x78(%rsp)
  0x000000010ca52819: and    $0xfffffffffffffff8,%r11  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5281d: mov    %r11,0x80(%rsp)
  0x000000010ca52825: mov    0x70(%rsp),%r11d
  0x000000010ca5282a: cmp    $0x80000,%r11d
  0x000000010ca52831: ja     0x000000010ca53280
  0x000000010ca52837: mov    0x60(%r15),%r8
  0x000000010ca5283b: mov    %r8,%r11
  0x000000010ca5283e: mov    0x80(%rsp),%r9
  0x000000010ca52846: add    %r9,%r11           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52849: cmp    0x70(%r15),%r11
  0x000000010ca5284d: jae    0x000000010ca53280
  0x000000010ca52853: mov    %r11,0x60(%r15)
  0x000000010ca52857: prefetchnta 0xc0(%r11)
  0x000000010ca5285f: movq   $0x1,(%r8)
  0x000000010ca52866: prefetchnta 0x100(%r11)
  0x000000010ca5286e: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x000000010ca52876: mov    0x70(%rsp),%r9d
  0x000000010ca5287b: mov    %r9d,0xc(%r8)
  0x000000010ca5287f: prefetchnta 0x140(%r11)
  0x000000010ca52887: prefetchnta 0x180(%r11)
  0x000000010ca5288f: mov    %r8,0x88(%rsp)
  0x000000010ca52897: cmp    0x70(%rsp),%ebp
  0x000000010ca5289b: mov    0x70(%rsp),%r9d
  0x000000010ca528a0: cmovl  %ebp,%r9d          ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528a4: mov    %r8,%rsi
  0x000000010ca528a7: add    $0x10,%rsi         ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528ab: mov    0x78(%rsp),%r11
  0x000000010ca528b0: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528b4: mov    %r11,%rcx
  0x000000010ca528b7: add    $0xfffffffffffffffe,%rcx  ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528bb: cmp    %r9d,%ebp
  0x000000010ca528be: jb     0x000000010ca53461  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528c4: mov    0x70(%rsp),%ebx
  0x000000010ca528c8: cmp    %r9d,%ebx
  0x000000010ca528cb: jb     0x000000010ca53461  ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528d1: test   %r9d,%r9d
  0x000000010ca528d4: jle    0x000000010ca53485  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528da: lea    0x10(%r12,%r10,8),%r8  ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528df: cmp    %ebx,%r9d
  0x000000010ca528e2: jl     0x000000010ca531a3
  0x000000010ca528e8: mov    0x80(%rsp),%rdx
  0x000000010ca528f0: add    $0xfffffffffffffff0,%rdx
  0x000000010ca528f4: shr    $0x3,%rdx          ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca528f8: mov    %r8,%rdi
  0x000000010ca528fb: movabs $0x10c9f4780,%r10
  0x000000010ca52905: callq  *%r10              ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52908: mov    0x88(%rsp),%r10
  0x000000010ca52910: shr    $0x3,%r10          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52914: mov    0x60(%rsp),%r11
  0x000000010ca52919: mov    %r10d,0xc(%r11)
  0x000000010ca5291d: mov    %r11,%r10
  0x000000010ca52920: shr    $0x9,%r10
  0x000000010ca52924: movabs $0x10c3a2000,%r11
  0x000000010ca5292e: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52932: mov    0x60(%rsp),%rsi
  0x000000010ca52937: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop off=1980}
                                                ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca5293c: mov    0x58(%rsp),%r10
  0x000000010ca52941: mov    %rax,%r8
  0x000000010ca52944: shr    $0x3,%r8
  0x000000010ca52948: mov    0x58(%rsp),%r11
  0x000000010ca5294d: mov    %r8d,0x18(%r11)    ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52951: shr    $0x9,%r10
  0x000000010ca52955: movabs $0x10c3a2000,%r11
  0x000000010ca5295f: mov    %r12b,(%r11,%r10,1)  ;*aload_1
                                                ; - java.io.ObjectStreamField::getClassSignature@15 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52963: mov    0x50(%rsp),%edx    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52967: inc    %edx               ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52969: cmp    0x1c(%rsp),%edx
  0x000000010ca5296d: jge    0x000000010ca526c6  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca52973: mov    0x10(%rsp),%r10
  0x000000010ca52978: mov    0x10(%r10,%rdx,4),%r11d  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getField@-1 (line 279)
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010ca5297d: mov    %r11d,0x44(%rsp)
  0x000000010ca52982: mov    0x14(%r12,%r11,8),%r11d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ; implicit exception: dispatches to 0x000000010ca53cd5
  0x000000010ca52987: mov    0x40(%rsp),%r10d
  0x000000010ca5298c: mov    0x14(%r12,%r10,8),%r8d  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010ca52991: mov    0xc(%r12,%r8,8),%ebx  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53ce5
  0x000000010ca52996: cmp    %r11d,%r8d
  0x000000010ca52999: je     0x000000010ca52a6f  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5299f: mov    0xc(%r12,%r11,8),%r11d  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53cf9
  0x000000010ca529a4: mov    0xc(%r12,%r11,8),%r10d
  0x000000010ca529a9: mov    0xc(%r12,%rbx,8),%ecx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca529ae: cmp    %r10d,%ecx
  0x000000010ca529b1: jne    0x000000010ca52967  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca529b3: lea    (%r12,%r11,8),%r10
  0x000000010ca529b7: lea    0x10(%r12,%r11,8),%rsi
  0x000000010ca529bc: lea    (%r12,%rbx,8),%r10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca529c0: lea    0x10(%r12,%rbx,8),%rdi
  0x000000010ca529c5: cmp    %rsi,%rdi
  0x000000010ca529c8: je     0x000000010ca52a56
  0x000000010ca529ce: test   %ecx,%ecx
  0x000000010ca529d0: je     0x000000010ca52a56
  0x000000010ca529d6: shl    %ecx
  0x000000010ca529d8: mov    %ecx,%eax
  0x000000010ca529da: and    $0x1e,%eax
  0x000000010ca529dd: and    $0xffffffffffffffe0,%ecx
  0x000000010ca529e0: je     0x000000010ca52a25
  0x000000010ca529e2: lea    (%rdi,%rcx,1),%rdi
  0x000000010ca529e6: lea    (%rsi,%rcx,1),%rsi
  0x000000010ca529ea: neg    %rcx
  0x000000010ca529ed: vmovdqu (%rdi,%rcx,1),%ymm1
  0x000000010ca529f2: vmovdqu (%rsi,%rcx,1),%ymm0
  0x000000010ca529f7: (bad)  
  0x000000010ca529fa: enterq $0xe2c4,$0x7d
  0x000000010ca529fe: (bad)  
  0x000000010ca529ff: leaveq 
  0x000000010ca52a00: jne    0x000000010ca52a5d
  0x000000010ca52a02: add    $0x20,%rcx
  0x000000010ca52a06: jne    0x000000010ca529ed
  0x000000010ca52a08: test   %eax,%eax
  0x000000010ca52a0a: je     0x000000010ca52a56
  0x000000010ca52a0c: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x000000010ca52a12: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x000000010ca52a18: (bad)  
  0x000000010ca52a1b: enterq $0xe2c4,$0x7d
  0x000000010ca52a1f: (bad)  
  0x000000010ca52a20: leaveq 
  0x000000010ca52a21: jne    0x000000010ca52a5d
  0x000000010ca52a23: jmp    0x000000010ca52a56
  0x000000010ca52a25: mov    %eax,%ecx
  0x000000010ca52a27: and    $0xfffffffffffffffc,%ecx
  0x000000010ca52a2a: je     0x000000010ca52a45
  0x000000010ca52a2c: lea    (%rdi,%rcx,1),%rdi
  0x000000010ca52a30: lea    (%rsi,%rcx,1),%rsi
  0x000000010ca52a34: neg    %rcx
  0x000000010ca52a37: mov    (%rdi,%rcx,1),%ebx
  0x000000010ca52a3a: cmp    (%rsi,%rcx,1),%ebx
  0x000000010ca52a3d: jne    0x000000010ca52a5d
  0x000000010ca52a3f: add    $0x4,%rcx
  0x000000010ca52a43: jne    0x000000010ca52a37
  0x000000010ca52a45: test   $0x2,%eax
  0x000000010ca52a4a: je     0x000000010ca52a56
  0x000000010ca52a4c: movzwl (%rdi),%ebx
  0x000000010ca52a4f: movzwl (%rsi),%ecx
  0x000000010ca52a52: cmp    %ecx,%ebx
  0x000000010ca52a54: jne    0x000000010ca52a5d
  0x000000010ca52a56: mov    $0x1,%eax
  0x000000010ca52a5b: jmp    0x000000010ca52a5f
  0x000000010ca52a5d: xor    %eax,%eax
  0x000000010ca52a5f: (bad)  
  0x000000010ca52a62: leaveq 
  0x000000010ca52a63: (bad)  
  0x000000010ca52a66: rolb   $0xfe,-0x77bf040(%rbp)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52a6d: (bad)  
  0x000000010ca52a6e: incl   0x5c(%rbx,%rcx,4)  ;*aload_0
                                                ; - java.io.ObjectStreamField::getField@0 (line 279)
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010ca52a72: and    $0x40,%al
  0x000000010ca52a74: mov    0x18(%r12,%r11,8),%r11d  ;*getfield field
                                                ; - java.io.ObjectStreamField::getField@1 (line 279)
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010ca52a79: mov    0xc(%r12,%r11,8),%r10d  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ; implicit exception: dispatches to 0x000000010ca53d59
  0x000000010ca52a7e: mov    0xc(%r12,%r10,8),%r9d  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010ca53d69
  0x000000010ca52a83: test   %r9d,%r9d
  0x000000010ca52a86: jle    0x000000010ca53501  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52a8c: test   %r9d,%r9d
  0x000000010ca52a8f: jbe    0x000000010ca53425  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52a95: movzwl 0x10(%r12,%r10,8),%r8d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52a9b: mov    0x44(%rsp),%r11d
  0x000000010ca52aa0: mov    0x18(%r12,%r11,8),%ebx
  0x000000010ca52aa5: cmp    $0x4c,%r8d
  0x000000010ca52aa9: je     0x000000010ca5268d
  0x000000010ca52aaf: cmp    $0x5b,%r8d
  0x000000010ca52ab3: je     0x000000010ca5268d  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010ca52ab9: mov    0xc(%r12,%rbx,8),%r8d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ; implicit exception: dispatches to 0x000000010ca53da9
  0x000000010ca52abe: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x000000010ca53db9
  0x000000010ca52ac3: movzwl 0x10(%r12,%r10,8),%r10d  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52ac9: test   %r9d,%r9d
  0x000000010ca52acc: jle    0x000000010ca53629  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52ad2: test   %r9d,%r9d
  0x000000010ca52ad5: jbe    0x000000010ca53497
  0x000000010ca52adb: movzwl 0x10(%r12,%r8,8),%r8d
  0x000000010ca52ae1: cmp    %r8d,%r10d
  0x000000010ca52ae4: jne    0x000000010ca5366d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca52aea: mov    0x44(%rsp),%r10d
  0x000000010ca52aef: mov    0x20(%r12,%r10,8),%r11d
  0x000000010ca52af4: test   %r11d,%r11d
  0x000000010ca52af7: je     0x000000010ca53541
  0x000000010ca52afd: mov    0x60(%r15),%r11
  0x000000010ca52b01: mov    %r11,%r10
  0x000000010ca52b04: add    $0x28,%r10
  0x000000010ca52b08: cmp    0x70(%r15),%r10
  0x000000010ca52b0c: jae    0x000000010ca53218  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52b12: mov    %r10,0x60(%r15)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52b16: prefetchnta 0xc0(%r10)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52b1e: mov    0x30(%rsp),%r10
  0x000000010ca52b23: mov    0xa8(%r10),%r10
  0x000000010ca52b2a: mov    %r10,(%r11)
  0x000000010ca52b2d: movl   $0xf80025ef,0x8(%r11)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca52b35: mov    %r12d,0xc(%r11)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52b39: mov    %r12,0x10(%r11)
  0x000000010ca52b3d: mov    %r12,0x18(%r11)
  0x000000010ca52b41: mov    %r12,0x20(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52b45: mov    %edx,0x50(%rsp)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52b49: mov    %r11,0x58(%rsp)
  0x000000010ca52b4e: mov    0x44(%rsp),%r10d
  0x000000010ca52b53: movzbl 0x10(%r12,%r10,8),%r10d
  0x000000010ca52b59: mov    %r10b,0x10(%r11)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52b5d: mov    0x44(%rsp),%r11d
  0x000000010ca52b62: mov    0x20(%r12,%r11,8),%r11d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca52b67: mov    0x58(%rsp),%r10
  0x000000010ca52b6c: mov    %r11d,0x20(%r10)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52b70: shr    $0x9,%r10
  0x000000010ca52b74: movabs $0x10c3a2000,%r8
  0x000000010ca52b7e: mov    %r12b,(%r8,%r10,1)  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52b82: mov    0x24(%r12,%r11,8),%r8d  ;*getfield field
                                                ; - java.io.ObjectStreamField::getField@1 (line 279)
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53d79
  0x000000010ca52b87: mov    0x20(%r12,%r11,8),%r11d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca52b8c: mov    0x58(%rsp),%r10
  0x000000010ca52b91: mov    %r11d,0x14(%r10)
  0x000000010ca52b95: shr    $0x9,%r10
  0x000000010ca52b99: movabs $0x10c3a2000,%r11
  0x000000010ca52ba3: mov    %r12b,(%r11,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52ba7: mov    0x48(%r12,%r8,8),%r10  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53d89
  0x000000010ca52bac: mov    %r10,0x60(%rsp)
  0x000000010ca52bb1: mov    0x58(%rsp),%r10
  0x000000010ca52bb6: lea    (%r12,%r8,8),%rbp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52bba: shr    $0x9,%r10
  0x000000010ca52bbe: mov    %r12b,(%r11,%r10,1)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52bc2: mov    0x60(%r15),%rax    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52bc6: mov    %rax,%r10
  0x000000010ca52bc9: add    $0x18,%r10         ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52bcd: mov    0x60(%rsp),%r11
  0x000000010ca52bd2: test   %r11,%r11
  0x000000010ca52bd5: mov    %rbp,%r11
  0x000000010ca52bd8: movabs $0x6c0000000,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x000000010ca52be2: cmovne %r8,%r11
  0x000000010ca52be6: mov    %r11,%r8
  0x000000010ca52be9: shr    $0x3,%r8
  0x000000010ca52bed: mov    0x58(%rsp),%r11
  0x000000010ca52bf2: mov    %r8d,0x1c(%r11)
  0x000000010ca52bf6: cmp    0x70(%r15),%r10
  0x000000010ca52bfa: jae    0x000000010ca53255  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c00: mov    %r10,0x60(%r15)
  0x000000010ca52c04: prefetchnta 0xc0(%r10)
  0x000000010ca52c0c: mov    0x38(%rsp),%r10
  0x000000010ca52c11: mov    0xa8(%r10),%r10
  0x000000010ca52c18: mov    %r10,(%rax)        ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c1b: movl   $0xf8001b4b,0x8(%rax)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca52c22: mov    %r12d,0xc(%rax)    ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c26: mov    %r12,0x10(%rax)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52c2a: mov    %rax,0x68(%rsp)
  0x000000010ca52c2f: mov    0x60(%r15),%rax
  0x000000010ca52c33: mov    %rax,%r10
  0x000000010ca52c36: add    $0x30,%r10
  0x000000010ca52c3a: cmp    0x70(%r15),%r10
  0x000000010ca52c3e: jae    0x000000010ca5323c  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c44: mov    %r10,0x60(%r15)    ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c48: prefetchnta 0xc0(%r10)    ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c50: movq   $0x1,(%rax)        ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c57: prefetchnta 0x100(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c5f: movl   $0xf8000041,0x8(%rax)  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca52c66: prefetchnta 0x140(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c6e: movl   $0x10,0xc(%rax)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c75: prefetchnta 0x180(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c7d: mov    %r12,0x10(%rax)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c81: mov    %r12,0x18(%rax)
  0x000000010ca52c85: mov    %r12,0x20(%rax)
  0x000000010ca52c89: mov    %r12,0x28(%rax)    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52c8d: mov    0x68(%rsp),%r10
  0x000000010ca52c92: mov    %rax,%r11
  0x000000010ca52c95: shr    $0x3,%r11
  0x000000010ca52c99: mov    0x68(%rsp),%r8
  0x000000010ca52c9e: mov    %r11d,0x10(%r8)    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::isPrimitive@-1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52ca2: shr    $0x9,%r10
  0x000000010ca52ca6: movabs $0x10c3a2000,%r11
  0x000000010ca52cb0: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52cb4: mov    0x60(%rsp),%r10
  0x000000010ca52cb9: test   %r10,%r10
  0x000000010ca52cbc: je     0x000000010ca52ccb  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52cbe: mov    0x8(%r10),%r10d
  0x000000010ca52cc2: test   %r10d,%r10d
  0x000000010ca52cc5: jl     0x000000010ca52e42  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x000000010ca52ccb: mov    0x60(%rsp),%r10
  0x000000010ca52cd0: test   %r10,%r10
  0x000000010ca52cd3: jne    0x000000010ca522dd  ;*if_icmpge
                                                ; - java.io.ObjectStreamClass::matchFields@47 (line 2292)

  0x000000010ca52cd9: mov    $0x1,%edx
  0x000000010ca52cde: jmp    0x000000010ca52cec  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x000000010ca52ce0: test   %r10,%r10
  0x000000010ca52ce3: jne    0x000000010ca522e7
  0x000000010ca52ce9: add    $0x2,%edx          ;*if_icmpge
                                                ; - java.io.ObjectStreamClass::matchFields@47 (line 2292)

  0x000000010ca52cec: movabs $0x6c00089a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x000000010ca52cf6: cmp    %r10,%rbp
  0x000000010ca52cf9: je     0x000000010ca52eb8
  0x000000010ca52cff: movabs $0x6c0008ad8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = byte)}
  0x000000010ca52d09: cmp    %r10,%rbp
  0x000000010ca52d0c: je     0x000000010ca52f01  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52d12: movabs $0x6c0008c10,%r10  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x000000010ca52d1c: cmp    %r10,%rbp
  0x000000010ca52d1f: je     0x000000010ca52f49  ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@34 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52d25: movabs $0x6c0008a08,%r10  ;   {oop(a &apos;java/lang/Class&apos; = float)}
  0x000000010ca52d2f: cmp    %r10,%rbp
  0x000000010ca52d32: je     0x000000010ca52f91
  0x000000010ca52d38: movabs $0x6c0008a70,%r10  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x000000010ca52d42: cmp    %r10,%rbp
  0x000000010ca52d45: je     0x000000010ca52fd9
  0x000000010ca52d4b: movabs $0x6c0008c78,%r10  ;   {oop(a &apos;java/lang/Class&apos; = short)}
  0x000000010ca52d55: cmp    %r10,%rbp
  0x000000010ca52d58: je     0x000000010ca53021
  0x000000010ca52d5e: movabs $0x6c0008ba8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = char)}
  0x000000010ca52d68: cmp    %r10,%rbp
  0x000000010ca52d6b: je     0x000000010ca53069  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52d71: movabs $0x6c0008b40,%r10  ;   {oop(a &apos;java/lang/Class&apos; = boolean)}
  0x000000010ca52d7b: cmp    %r10,%rbp
  0x000000010ca52d7e: je     0x000000010ca530b1  ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52d84: movabs $0x6c0008ce0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x000000010ca52d8e: cmp    %r10,%rbp
  0x000000010ca52d91: jne    0x000000010ca536dd  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@85 (line 2295)

  0x000000010ca52d97: mov    0x68(%rsp),%rsi
  0x000000010ca52d9c: mov    %rsi,%rbp
  0x000000010ca52d9f: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3108}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52da4: mov    0x10(%rbp),%r11d   ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52da8: mov    0xc(%rbp),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52dab: mov    %ebp,%r8d
  0x000000010ca52dae: inc    %r8d
  0x000000010ca52db1: mov    0x68(%rsp),%r10
  0x000000010ca52db6: mov    %r8d,0xc(%r10)     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52dba: mov    0xc(%r12,%r11,8),%r8d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53dc9
  0x000000010ca52dbf: cmp    %r8d,%ebp
  0x000000010ca52dc2: jb     0x000000010ca52756  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52dc8: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52dcd: mov    0x20(%rsp),%r10
  0x000000010ca52dd2: mov    %r10,0x18(%rsp)
  0x000000010ca52dd7: mov    0x54(%rsp),%r10d
  0x000000010ca52ddc: mov    %r10d,0x20(%rsp)
  0x000000010ca52de1: mov    0x40(%rsp),%r8d
  0x000000010ca52de6: mov    %r8d,0x24(%rsp)
  0x000000010ca52deb: mov    0x50(%rsp),%r10d
  0x000000010ca52df0: mov    %r10d,0x28(%rsp)
  0x000000010ca52df5: mov    0x58(%rsp),%r10
  0x000000010ca52dfa: mov    %r10,0x38(%rsp)
  0x000000010ca52dff: mov    0x68(%rsp),%r10
  0x000000010ca52e04: mov    %r10,0x48(%rsp)
  0x000000010ca52e09: mov    %r10,0x50(%rsp)
  0x000000010ca52e0e: mov    %r11d,0x2c(%rsp)
  0x000000010ca52e13: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [44]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=3224}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca52e18: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca52e1d: xor    %ebp,%ebp          ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3231}
                                                ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52e1f: test   %eax,-0x2157e25(%rip)        # 0x000000010a8fb000
                                                ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)
                                                ;   {poll}
  0x000000010ca52e25: mov    0x48(%rbp),%r10    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53d49
  0x000000010ca52e29: test   %r10,%r10
  0x000000010ca52e2c: je     0x000000010ca52ce0
  0x000000010ca52e32: mov    %r10,%r11          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52e35: mov    0x8(%r11),%r8d
  0x000000010ca52e39: test   %r8d,%r8d
  0x000000010ca52e3c: jge    0x000000010ca52ce0
  0x000000010ca52e42: mov    0x68(%rsp),%r10
  0x000000010ca52e47: mov    0xc(%r10),%edx
  0x000000010ca52e4b: inc    %edx               ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x000000010ca52e4d: mov    %r10,%rsi
  0x000000010ca52e50: data32 xchg %ax,%ax
  0x000000010ca52e53: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3288}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52e58: mov    0x68(%rsp),%r10
  0x000000010ca52e5d: mov    0xc(%r10),%edx     ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)

  0x000000010ca52e61: mov    0x10(%r10),%r10d   ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52e65: mov    %edx,%r8d
  0x000000010ca52e68: inc    %r8d
  0x000000010ca52e6b: mov    0x68(%rsp),%r11
  0x000000010ca52e70: mov    %r8d,0xc(%r11)     ;*ireturn
                                                ; - java.io.ObjectStreamField::isPrimitive@26 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52e74: mov    0xc(%r12,%r10,8),%r8d  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53d35
  0x000000010ca52e79: cmp    %r8d,%edx
  0x000000010ca52e7c: jae    0x000000010ca53358  ;*aload
                                                ; - java.io.ObjectStreamClass::matchFields@137 (line 2301)

  0x000000010ca52e82: mov    0x48(%rbp),%r11    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52e86: shl    $0x3,%r10
  0x000000010ca52e8a: mov    $0x5b,%r9d
  0x000000010ca52e90: mov    %r9w,0x10(%r10,%rdx,2)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52e96: test   %r11,%r11
  0x000000010ca52e99: je     0x000000010ca533b1
  0x000000010ca52e9f: mov    0x8(%r11),%r8d
  0x000000010ca52ea3: test   %r8d,%r8d
  0x000000010ca52ea6: jge    0x000000010ca52e1d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52eac: mov    0xe0(%r11),%rbp    ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52eb3: jmpq   0x000000010ca52e1f
  0x000000010ca52eb8: mov    0x68(%rsp),%rsi
  0x000000010ca52ebd: mov    %rsi,%rbp
  0x000000010ca52ec0: data32 xchg %ax,%ax
  0x000000010ca52ec3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3400}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52ec8: mov    0xc(%rbp),%r8d     ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca52ecc: mov    0x10(%rbp),%ebp    ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x000000010ca52ecf: mov    %r8d,%r10d
  0x000000010ca52ed2: inc    %r10d
  0x000000010ca52ed5: mov    0x68(%rsp),%r11
  0x000000010ca52eda: mov    %r10d,0xc(%r11)    ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52ede: mov    0xc(%r12,%rbp,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e31
  0x000000010ca52ee3: cmp    %r10d,%r8d
  0x000000010ca52ee6: jae    0x000000010ca5385b  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52eec: lea    (%r12,%rbp,8),%r10
  0x000000010ca52ef0: mov    $0x49,%r11d
  0x000000010ca52ef6: mov    %r11w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52efc: jmpq   0x000000010ca52766
  0x000000010ca52f01: mov    0x68(%rsp),%rsi
  0x000000010ca52f06: mov    %rsi,%rbp
  0x000000010ca52f09: xchg   %ax,%ax
  0x000000010ca52f0b: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3472}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52f10: mov    0xc(%rbp),%r9d     ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca52f14: mov    0x10(%rbp),%ebp    ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52f17: mov    %r9d,%r11d
  0x000000010ca52f1a: inc    %r11d
  0x000000010ca52f1d: mov    0x68(%rsp),%r10
  0x000000010ca52f22: mov    %r11d,0xc(%r10)    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52f26: mov    0xc(%r12,%rbp,8),%r11d  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@92 (line 306)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e45
  0x000000010ca52f2b: cmp    %r11d,%r9d
  0x000000010ca52f2e: jae    0x000000010ca538d5  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52f34: lea    (%r12,%rbp,8),%r10
  0x000000010ca52f38: mov    $0x42,%r11d
  0x000000010ca52f3e: mov    %r11w,0x10(%r10,%r9,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52f44: jmpq   0x000000010ca52766
  0x000000010ca52f49: mov    0x68(%rsp),%rsi
  0x000000010ca52f4e: mov    %rsi,%rbp
  0x000000010ca52f51: xchg   %ax,%ax
  0x000000010ca52f53: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3544}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52f58: mov    0xc(%rbp),%r8d     ;*synchronization entry
                                                ; - java.io.ObjectStreamField::isPrimitive@-1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52f5c: mov    0x10(%rbp),%ebp    ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52f5f: mov    %r8d,%r10d
  0x000000010ca52f62: inc    %r10d
  0x000000010ca52f65: mov    0x68(%rsp),%r11
  0x000000010ca52f6a: mov    %r10d,0xc(%r11)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52f6e: mov    0xc(%r12,%rbp,8),%r10d  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e59
  0x000000010ca52f73: cmp    %r10d,%r8d
  0x000000010ca52f76: jae    0x000000010ca5392d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52f7c: lea    (%r12,%rbp,8),%r10
  0x000000010ca52f80: mov    $0x4a,%r11d
  0x000000010ca52f86: mov    %r11w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52f8c: jmpq   0x000000010ca52766
  0x000000010ca52f91: mov    0x68(%rsp),%rsi
  0x000000010ca52f96: mov    %rsi,%rbp
  0x000000010ca52f99: xchg   %ax,%ax
  0x000000010ca52f9b: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3616}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52fa0: mov    0xc(%rbp),%r9d     ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010ca52fa4: mov    0x10(%rbp),%ebp    ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52fa7: mov    %r9d,%r11d
  0x000000010ca52faa: inc    %r11d
  0x000000010ca52fad: mov    0x68(%rsp),%r10
  0x000000010ca52fb2: mov    %r11d,0xc(%r10)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52fb6: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e6d
  0x000000010ca52fbb: cmp    %r11d,%r9d
  0x000000010ca52fbe: jae    0x000000010ca53985  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52fc4: lea    (%r12,%rbp,8),%r10
  0x000000010ca52fc8: mov    $0x46,%r11d
  0x000000010ca52fce: mov    %r11w,0x10(%r10,%r9,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52fd4: jmpq   0x000000010ca52766
  0x000000010ca52fd9: mov    0x68(%rsp),%rsi
  0x000000010ca52fde: mov    %rsi,%rbp
  0x000000010ca52fe1: xchg   %ax,%ax
  0x000000010ca52fe3: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3688}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca52fe8: mov    0xc(%rbp),%r8d     ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)

  0x000000010ca52fec: mov    0x10(%rbp),%ebp    ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca52fef: mov    %r8d,%r10d
  0x000000010ca52ff2: inc    %r10d
  0x000000010ca52ff5: mov    0x68(%rsp),%r11
  0x000000010ca52ffa: mov    %r10d,0xc(%r11)    ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca52ffe: mov    0xc(%r12,%rbp,8),%r10d  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e81
  0x000000010ca53003: cmp    %r10d,%r8d
  0x000000010ca53006: jae    0x000000010ca539dd  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca5300c: lea    (%r12,%rbp,8),%r10
  0x000000010ca53010: mov    $0x44,%r11d
  0x000000010ca53016: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5301c: jmpq   0x000000010ca52766
  0x000000010ca53021: mov    0x68(%rsp),%rsi
  0x000000010ca53026: mov    %rsi,%rbp
  0x000000010ca53029: xchg   %ax,%ax
  0x000000010ca5302b: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3760}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca53030: mov    0xc(%rbp),%r9d     ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca53034: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53037: mov    %r9d,%r11d
  0x000000010ca5303a: inc    %r11d
  0x000000010ca5303d: mov    0x68(%rsp),%r10
  0x000000010ca53042: mov    %r11d,0xc(%r10)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca53046: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53e95
  0x000000010ca5304b: cmp    %r11d,%r9d
  0x000000010ca5304e: jae    0x000000010ca53a35  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca53054: lea    (%r12,%rbp,8),%r10
  0x000000010ca53058: mov    $0x53,%r11d
  0x000000010ca5305e: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53064: jmpq   0x000000010ca52766
  0x000000010ca53069: mov    0x68(%rsp),%rsi
  0x000000010ca5306e: mov    %rsi,%rbp
  0x000000010ca53071: xchg   %ax,%ax
  0x000000010ca53073: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3832}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca53078: mov    0xc(%rbp),%r8d     ;*iconst_0
                                                ; - java.io.ObjectStreamField::isPrimitive@25 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca5307c: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5307f: mov    %r8d,%r10d
  0x000000010ca53082: inc    %r10d
  0x000000010ca53085: mov    0x68(%rsp),%r11
  0x000000010ca5308a: mov    %r10d,0xc(%r11)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca5308e: mov    0xc(%r12,%rbp,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53ea9
  0x000000010ca53093: cmp    %r10d,%r8d
  0x000000010ca53096: jae    0x000000010ca53a8d  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca5309c: lea    (%r12,%rbp,8),%r10
  0x000000010ca530a0: mov    $0x43,%r11d
  0x000000010ca530a6: mov    %r11w,0x10(%r10,%r8,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca530ac: jmpq   0x000000010ca52766
  0x000000010ca530b1: mov    0x68(%rsp),%rsi
  0x000000010ca530b6: mov    %rsi,%rbp
  0x000000010ca530b9: xchg   %ax,%ax
  0x000000010ca530bb: callq  0x000000010c9e8020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3904}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca530c0: mov    0xc(%rbp),%r9d     ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca530c4: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca530c7: mov    %r9d,%r11d
  0x000000010ca530ca: inc    %r11d
  0x000000010ca530cd: mov    0x68(%rsp),%r10
  0x000000010ca530d2: mov    %r11d,0xc(%r10)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca530d6: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010ca53ebd
  0x000000010ca530db: cmp    %r11d,%r9d
  0x000000010ca530de: jae    0x000000010ca53bb1  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca530e4: lea    (%r12,%rbp,8),%r10
  0x000000010ca530e8: mov    $0x5a,%r11d
  0x000000010ca530ee: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca530f4: jmpq   0x000000010ca52766
  0x000000010ca530f9: mov    0x20(%rsp),%rbx    ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x000000010ca530fe: mov    %rbx,%rax
  0x000000010ca53101: add    $0xc0,%rsp
  0x000000010ca53108: pop    %rbp
  0x000000010ca53109: test   %eax,-0x215810f(%rip)        # 0x000000010a8fb000
                                                ;   {poll_return}
  0x000000010ca5310f: retq                      ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)

  0x000000010ca53110: mov    0x90(%rsp),%rsi
  0x000000010ca53118: data32 xchg %ax,%ax
  0x000000010ca5311b: callq  0x000000010c9e8020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=4000}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010ca53120: mov    0x90(%rsp),%r10
  0x000000010ca53128: mov    %rax,%r11
  0x000000010ca5312b: shr    $0x3,%r11
  0x000000010ca5312f: mov    0x90(%rsp),%r8
  0x000000010ca53137: mov    %r11d,0x14(%r8)
  0x000000010ca5313b: shr    $0x9,%r10
  0x000000010ca5313f: movabs $0x10c3a2000,%r11
  0x000000010ca53149: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5314d: test   %rax,%rax
  0x000000010ca53150: je     0x000000010ca53c29  ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53156: mov    %rax,%rsi
  0x000000010ca53159: jmpq   0x000000010ca52418
  0x000000010ca5315e: test   %r8d,%r8d
  0x000000010ca53161: jl     0x000000010ca53c49  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53167: test   %r10d,%r10d
  0x000000010ca5316a: je     0x000000010ca53c39  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca53170: mov    0x60(%rsp),%r10
  0x000000010ca53175: movl   $0xd800000d,0xc(%r10)  ;   {oop([C)}
  0x000000010ca5317d: shr    $0x9,%r10
  0x000000010ca53181: movabs $0x10c3a2000,%r11
  0x000000010ca5318b: mov    %r12b,(%r11,%r10,1)  ;*new
                                                ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5318f: jmpq   0x000000010ca52932
  0x000000010ca53194: movabs $0x6c0038ea8,%r8   ;   {oop(a &apos;java/io/ObjectStreamField&apos;[0] )}
  0x000000010ca5319e: jmpq   0x000000010ca521a3
  0x000000010ca531a3: movslq %r9d,%rdx          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca531a6: mov    %rdx,%r10
  0x000000010ca531a9: shl    %r10
  0x000000010ca531ac: add    $0x10,%r10         ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca531b0: mov    %r10,%r9
  0x000000010ca531b3: and    $0xfffffffffffffff9,%r9
  0x000000010ca531b7: mov    0x88(%rsp),%rdi
  0x000000010ca531bf: add    %r9,%rdi
  0x000000010ca531c2: shr    $0x3,%r10
  0x000000010ca531c6: sub    %r10,%r11
  0x000000010ca531c9: mov    %r11,%rcx
  0x000000010ca531cc: xor    %rax,%rax
  0x000000010ca531cf: shl    $0x3,%rcx
  0x000000010ca531d3: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca531d6: mov    %r8,%rdi
  0x000000010ca531d9: movabs $0x10c9f44c0,%r10
  0x000000010ca531e3: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca531e6: jmpq   0x000000010ca52908
  0x000000010ca531eb: mov    %r11d,%r10d
  0x000000010ca531ee: test   %r10d,%r10d
  0x000000010ca531f1: jl     0x000000010ca53c85  ;*aload_0
                                                ; - java.io.ObjectStreamField::getTypeCode@0 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x000000010ca531f7: movl   $0xd800000d,0xc(%rcx)  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {oop([C)}
  0x000000010ca531fe: mov    %rcx,%r10
  0x000000010ca53201: shr    $0x9,%r10
  0x000000010ca53205: movabs $0x10c3a2000,%r11
  0x000000010ca5320f: mov    %r12b,(%r11,%r10,1)  ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53213: jmpq   0x000000010ca52671
  0x000000010ca53218: mov    %edx,0x50(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca5321c: mov    0x44(%rsp),%r11d
  0x000000010ca53221: lea    (%r12,%r11,8),%rbp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53225: movabs $0x7c0012f78,%rsi  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010ca5322f: callq  0x000000010ca11960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop off=4276}
                                                ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ;   {runtime_call}
  0x000000010ca53234: mov    %rax,%r11
  0x000000010ca53237: jmpq   0x000000010ca52b49  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010ca5323c: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010ca53246: mov    $0x10,%edx
  0x000000010ca5324b: callq  0x000000010ca11a60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=4304}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53250: jmpq   0x000000010ca52c8d
  0x000000010ca53255: movabs $0x7c000da58,%rsi  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca5325f: callq  0x000000010ca11960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop off=4324}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53264: jmpq   0x000000010ca52c2a
  0x000000010ca53269: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca53273: callq  0x000000010ca11960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=4344}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53278: mov    %rax,%r11
  0x000000010ca5327b: jmpq   0x000000010ca527a6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53280: mov    %r10d,0x74(%rsp)
  0x000000010ca53285: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca5328f: mov    0x70(%rsp),%edx
  0x000000010ca53293: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop off=4376}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53298: mov    %rax,%r8
  0x000000010ca5329b: mov    0x74(%rsp),%r10d
  0x000000010ca532a0: jmpq   0x000000010ca5288f
  0x000000010ca532a5: movslq %r9d,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca532a8: mov    %rdx,%r11
  0x000000010ca532ab: shl    %r11
  0x000000010ca532ae: add    $0x10,%r11         ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca532b2: mov    %r11,%r8
  0x000000010ca532b5: and    $0xfffffffffffffff9,%r8
  0x000000010ca532b9: mov    0x90(%rsp),%rdi
  0x000000010ca532c1: add    %r8,%rdi
  0x000000010ca532c4: shr    $0x3,%r11
  0x000000010ca532c8: mov    %rbp,%r8
  0x000000010ca532cb: sub    %r11,%r8
  0x000000010ca532ce: mov    %r8,%rcx
  0x000000010ca532d1: xor    %rax,%rax
  0x000000010ca532d4: shl    $0x3,%rcx
  0x000000010ca532d8: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca532db: mov    %rbx,%rdi
  0x000000010ca532de: mov    %r10,%rsi
  0x000000010ca532e1: movabs $0x10c9f44c0,%r10
  0x000000010ca532eb: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca532ee: jmpq   0x000000010ca52647
  0x000000010ca532f3: movabs $0x7c000da58,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x000000010ca532fd: xchg   %ax,%ax
  0x000000010ca532ff: callq  0x000000010ca11960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop [144]=Oop off=4484}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53304: jmpq   0x000000010ca5232e  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53309: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca53313: mov    $0x10,%edx
  0x000000010ca53318: data32 xchg %ax,%ax
  0x000000010ca5331b: callq  0x000000010ca11a60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=4512}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53320: jmpq   0x000000010ca52391
  0x000000010ca53325: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010ca5332f: callq  0x000000010ca11960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [128]=Oop off=4532}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53334: mov    %rax,%rcx
  0x000000010ca53337: jmpq   0x000000010ca524fa  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5333c: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010ca53346: mov    0x78(%rsp),%edx
  0x000000010ca5334a: nop
  0x000000010ca5334b: callq  0x000000010ca101a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [128]=Oop off=4560}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53350: mov    %rax,%r11
  0x000000010ca53353: jmpq   0x000000010ca525bf  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)

  0x000000010ca53358: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5335d: mov    0x20(%rsp),%r11
  0x000000010ca53362: mov    %r11,0x18(%rsp)
  0x000000010ca53367: mov    0x54(%rsp),%r11d
  0x000000010ca5336c: mov    %r11d,0x20(%rsp)
  0x000000010ca53371: mov    0x40(%rsp),%r8d
  0x000000010ca53376: mov    %r8d,0x24(%rsp)
  0x000000010ca5337b: mov    0x50(%rsp),%r11d
  0x000000010ca53380: mov    %r11d,0x28(%rsp)
  0x000000010ca53385: mov    0x58(%rsp),%r11
  0x000000010ca5338a: mov    %r11,0x38(%rsp)
  0x000000010ca5338f: mov    0x68(%rsp),%r11
  0x000000010ca53394: mov    %r11,0x48(%rsp)
  0x000000010ca53399: mov    %r11,0x50(%rsp)
  0x000000010ca5339e: mov    %r10d,0x2c(%rsp)
  0x000000010ca533a3: mov    %edx,0x58(%rsp)
  0x000000010ca533a7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [44]=NarrowOop [56]=Oop [72]=Oop [80]=Oop off=4652}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca533ac: callq  0x000000010be85e14  ;*astore_2
                                                ; - java.io.ObjectStreamClass::matchFields@14 (line 2275)
                                                ;   {runtime_call}
  0x000000010ca533b1: mov    $0xfffffff4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca533b6: mov    0x20(%rsp),%r10
  0x000000010ca533bb: mov    %r10,0x18(%rsp)
  0x000000010ca533c0: mov    0x40(%rsp),%r11d
  0x000000010ca533c5: mov    %r11d,0x24(%rsp)
  0x000000010ca533ca: mov    0x58(%rsp),%r10
  0x000000010ca533cf: mov    %r10,0x38(%rsp)
  0x000000010ca533d4: data32 xchg %ax,%ax
  0x000000010ca533d7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [88]=Oop [104]=Oop off=4700}
                                                ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca533dc: callq  0x000000010be85e14  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca533e1: mov    %r10d,0x10(%rsp)
  0x000000010ca533e6: mov    %r8,0x8(%rsp)
  0x000000010ca533eb: mov    %r9,(%rsp)
  0x000000010ca533ef: mov    %rdx,%rbp
  0x000000010ca533f2: movabs $0x7c00133c0,%rsi  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010ca533fc: mov    %r10d,%edx
  0x000000010ca533ff: callq  0x000000010ca11a60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=4740}
                                                ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca53404: mov    %rbp,%rdx
  0x000000010ca53407: mov    (%rsp),%r9
  0x000000010ca5340b: mov    0x8(%rsp),%r8
  0x000000010ca53410: mov    0x10(%rsp),%r10d
  0x000000010ca53415: mov    %rax,%rsi
  0x000000010ca53418: jmpq   0x000000010ca52228
  0x000000010ca5341d: movslq %r11d,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53420: jmpq   0x000000010ca52804  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca53425: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5342a: mov    (%rsp),%rbp
  0x000000010ca5342e: mov    0x8(%rsp),%r11
  0x000000010ca53433: mov    %r11,(%rsp)
  0x000000010ca53437: mov    0x10(%rsp),%r11
  0x000000010ca5343c: mov    %r11,0x8(%rsp)
  0x000000010ca53441: mov    0x20(%rsp),%r11
  0x000000010ca53446: mov    %r11,0x10(%rsp)
  0x000000010ca5344b: mov    %edx,0x20(%rsp)
  0x000000010ca5344f: mov    %r10d,0x28(%rsp)
  0x000000010ca53454: data32 xchg %ax,%ax
  0x000000010ca53457: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=4828}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca5345c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca53461: mov    %rsi,%rdi
  0x000000010ca53464: xor    %rax,%rax
  0x000000010ca53467: shl    $0x3,%rcx
  0x000000010ca5346b: rep rex.W stos %al,%es:(%rdi)  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5346e: mov    0x68(%rsp),%rsi
  0x000000010ca53473: xor    %edx,%edx
  0x000000010ca53475: mov    %r8,%rcx
  0x000000010ca53478: xor    %r8d,%r8d
  0x000000010ca5347b: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [136]=Oop off=4864}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53480: jmpq   0x000000010ca52908
  0x000000010ca53485: mov    %rsi,%rdi
  0x000000010ca53488: xor    %rax,%rax
  0x000000010ca5348b: shl    $0x3,%rcx
  0x000000010ca5348f: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53492: jmpq   0x000000010ca52908  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca53497: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5349c: mov    (%rsp),%rbp
  0x000000010ca534a0: mov    0x8(%rsp),%r11
  0x000000010ca534a5: mov    %r11,(%rsp)
  0x000000010ca534a9: mov    0x10(%rsp),%r11
  0x000000010ca534ae: mov    %r11,0x8(%rsp)
  0x000000010ca534b3: mov    0x20(%rsp),%r11
  0x000000010ca534b8: mov    %r11,0x10(%rsp)
  0x000000010ca534bd: mov    %edx,0x20(%rsp)
  0x000000010ca534c1: mov    %r10d,0x28(%rsp)
  0x000000010ca534c6: mov    %r8d,0x2c(%rsp)
  0x000000010ca534cb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [44]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=4944}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca534d0: callq  0x000000010be85e14  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca534d5: mov    $0xffffff86,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca534da: mov    (%rsp),%rbp
  0x000000010ca534de: mov    0x8(%rsp),%r10
  0x000000010ca534e3: mov    %r10,(%rsp)
  0x000000010ca534e7: mov    0x10(%rsp),%r10
  0x000000010ca534ec: mov    %r10,0x8(%rsp)
  0x000000010ca534f1: mov    %r8d,0x18(%rsp)
  0x000000010ca534f6: nop
  0x000000010ca534f7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [64]=NarrowOop off=4988}
                                                ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)
                                                ;   {runtime_call}
  0x000000010ca534fc: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53501: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53506: mov    (%rsp),%rbp
  0x000000010ca5350a: mov    0x8(%rsp),%r10
  0x000000010ca5350f: mov    %r10,(%rsp)
  0x000000010ca53513: mov    0x10(%rsp),%r10
  0x000000010ca53518: mov    %r10,0x8(%rsp)
  0x000000010ca5351d: mov    0x20(%rsp),%r10
  0x000000010ca53522: mov    %r10,0x10(%rsp)
  0x000000010ca53527: mov    %edx,0x20(%rsp)
  0x000000010ca5352b: mov    %r11d,0x28(%rsp)
  0x000000010ca53530: mov    %r9d,0x2c(%rsp)
  0x000000010ca53535: xchg   %ax,%ax
  0x000000010ca53537: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5052}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca5353c: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53541: mov    $0xffffff65,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53546: mov    (%rsp),%rbp
  0x000000010ca5354a: mov    0x8(%rsp),%r10
  0x000000010ca5354f: mov    %r10,(%rsp)
  0x000000010ca53553: mov    0x10(%rsp),%r10
  0x000000010ca53558: mov    %r10,0x8(%rsp)
  0x000000010ca5355d: mov    0x20(%rsp),%r10
  0x000000010ca53562: mov    %r10,0x10(%rsp)
  0x000000010ca53567: mov    %edx,0x20(%rsp)
  0x000000010ca5356b: mov    %r11d,0x28(%rsp)
  0x000000010ca53570: data32 xchg %ax,%ax
  0x000000010ca53573: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5112}
                                                ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ;   {runtime_call}
  0x000000010ca53578: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca5357d: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53582: mov    0x20(%rsp),%r11
  0x000000010ca53587: mov    %r11,0x18(%rsp)
  0x000000010ca5358c: mov    0x54(%rsp),%ebp
  0x000000010ca53590: mov    0x40(%rsp),%r9d
  0x000000010ca53595: mov    %r9d,0x20(%rsp)
  0x000000010ca5359a: mov    0x50(%rsp),%r9d
  0x000000010ca5359f: mov    %r9d,0x24(%rsp)
  0x000000010ca535a4: mov    0x58(%rsp),%r11
  0x000000010ca535a9: mov    %r11,0x30(%rsp)
  0x000000010ca535ae: mov    0x60(%rsp),%r11
  0x000000010ca535b3: mov    %r11,0x40(%rsp)
  0x000000010ca535b8: mov    %r10d,0x48(%rsp)
  0x000000010ca535bd: mov    %r8d,0x50(%rsp)
  0x000000010ca535c2: nop
  0x000000010ca535c3: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=NarrowOop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop [96]=Oop off=5192}
                                                ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca535c8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca535cd: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca535d2: mov    0x20(%rsp),%r11
  0x000000010ca535d7: mov    %r11,0x18(%rsp)
  0x000000010ca535dc: mov    0x54(%rsp),%r11d
  0x000000010ca535e1: mov    %r11d,0x20(%rsp)
  0x000000010ca535e6: mov    0x40(%rsp),%ebp
  0x000000010ca535ea: mov    0x50(%rsp),%r11d
  0x000000010ca535ef: mov    %r11d,0x24(%rsp)
  0x000000010ca535f4: mov    0x58(%rsp),%r11
  0x000000010ca535f9: mov    %r11,0x30(%rsp)
  0x000000010ca535fe: mov    0x60(%rsp),%r11
  0x000000010ca53603: mov    %r11,0x40(%rsp)
  0x000000010ca53608: mov    %r10d,0x48(%rsp)
  0x000000010ca5360d: mov    0x70(%rsp),%r10d
  0x000000010ca53612: mov    %r10d,0x50(%rsp)
  0x000000010ca53617: mov    %r10d,0x54(%rsp)
  0x000000010ca5361c: data32 xchg %ax,%ax
  0x000000010ca5361f: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop [96]=Oop off=5284}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53624: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53629: mov    $0xffffff65,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5362e: mov    (%rsp),%rbp
  0x000000010ca53632: mov    0x8(%rsp),%r11
  0x000000010ca53637: mov    %r11,(%rsp)
  0x000000010ca5363b: mov    0x10(%rsp),%r11
  0x000000010ca53640: mov    %r11,0x8(%rsp)
  0x000000010ca53645: mov    0x20(%rsp),%r11
  0x000000010ca5364a: mov    %r11,0x10(%rsp)
  0x000000010ca5364f: mov    %edx,0x20(%rsp)
  0x000000010ca53653: mov    %r10d,0x28(%rsp)
  0x000000010ca53658: mov    %ebx,0x2c(%rsp)
  0x000000010ca5365c: mov    %r9d,0x30(%rsp)
  0x000000010ca53661: xchg   %ax,%ax
  0x000000010ca53663: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [44]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5352}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca53668: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca5366d: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53672: mov    (%rsp),%rbp
  0x000000010ca53676: mov    0x8(%rsp),%r11
  0x000000010ca5367b: mov    %r11,(%rsp)
  0x000000010ca5367f: mov    0x10(%rsp),%r11
  0x000000010ca53684: mov    %r11,0x8(%rsp)
  0x000000010ca53689: mov    0x20(%rsp),%r11
  0x000000010ca5368e: mov    %r11,0x10(%rsp)
  0x000000010ca53693: mov    %edx,0x20(%rsp)
  0x000000010ca53697: mov    %r10d,0x28(%rsp)
  0x000000010ca5369c: mov    %r8d,0x2c(%rsp)
  0x000000010ca536a1: xchg   %ax,%ax
  0x000000010ca536a3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [64]=NarrowOop [68]=NarrowOop off=5416}
                                                ;*if_icmpeq
                                                ; - java.io.ObjectStreamClass::matchFields@98 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca536a8: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca536ad: mov    $0xffffff65,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca536b2: mov    (%rsp),%rbp
  0x000000010ca536b6: mov    0x8(%rsp),%r10
  0x000000010ca536bb: mov    %r10,(%rsp)
  0x000000010ca536bf: mov    0x10(%rsp),%r10
  0x000000010ca536c4: mov    %r10,0x8(%rsp)
  0x000000010ca536c9: mov    0x20(%rsp),%r10
  0x000000010ca536ce: mov    %r10,0x10(%rsp)
  0x000000010ca536d3: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [64]=NarrowOop [88]=Oop off=5464}
                                                ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)
                                                ;   {runtime_call}
  0x000000010ca536d8: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca536dd: mov    $0x2d,%esi         ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca536e2: mov    (%rsp),%rbp
  0x000000010ca536e6: mov    0x8(%rsp),%r10
  0x000000010ca536eb: mov    %r10,(%rsp)
  0x000000010ca536ef: mov    0x10(%rsp),%r10
  0x000000010ca536f4: mov    %r10,0x8(%rsp)
  0x000000010ca536f9: mov    0x20(%rsp),%r10
  0x000000010ca536fe: mov    %r10,0x10(%rsp)
  0x000000010ca53703: mov    0x58(%rsp),%r10
  0x000000010ca53708: mov    %r10,0x30(%rsp)
  0x000000010ca5370d: xchg   %ax,%ax
  0x000000010ca5370f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [48]=Oop [64]=NarrowOop [88]=Oop off=5524}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@190 (line 319)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53714: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53719: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5371e: mov    (%rsp),%rbp
  0x000000010ca53722: mov    0x8(%rsp),%r10
  0x000000010ca53727: mov    %r10,(%rsp)
  0x000000010ca5372b: mov    0x10(%rsp),%r10
  0x000000010ca53730: mov    %r10,0x8(%rsp)
  0x000000010ca53735: mov    0x20(%rsp),%r10
  0x000000010ca5373a: mov    %r10,0x10(%rsp)
  0x000000010ca5373f: mov    %edx,0x20(%rsp)
  0x000000010ca53743: mov    %r8d,0x28(%rsp)
  0x000000010ca53748: data32 xchg %ax,%ax
  0x000000010ca5374b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5584}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53750: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53755: mov    $0xffffffe4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca5375a: mov    0x20(%rsp),%r10
  0x000000010ca5375f: mov    %r10,0x18(%rsp)
  0x000000010ca53764: mov    0x54(%rsp),%r8d
  0x000000010ca53769: mov    %r8d,0x20(%rsp)
  0x000000010ca5376e: mov    0x40(%rsp),%r10d
  0x000000010ca53773: mov    %r10d,0x24(%rsp)
  0x000000010ca53778: mov    0x50(%rsp),%r10d
  0x000000010ca5377d: mov    %r10d,0x28(%rsp)
  0x000000010ca53782: mov    0x58(%rsp),%r10
  0x000000010ca53787: mov    %r10,0x38(%rsp)
  0x000000010ca5378c: mov    0x68(%rsp),%r10
  0x000000010ca53791: mov    %r10,0x48(%rsp)
  0x000000010ca53796: mov    %r11d,0x2c(%rsp)
  0x000000010ca5379b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [96]=Oop [104]=Oop [144]=Oop off=5664}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca537a0: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca537a5: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca537aa: mov    (%rsp),%rbp
  0x000000010ca537ae: mov    0x8(%rsp),%r10
  0x000000010ca537b3: mov    %r10,(%rsp)
  0x000000010ca537b7: mov    0x10(%rsp),%r10
  0x000000010ca537bc: mov    %r10,0x8(%rsp)
  0x000000010ca537c1: mov    0x20(%rsp),%r10
  0x000000010ca537c6: mov    %r10,0x10(%rsp)
  0x000000010ca537cb: mov    0x54(%rsp),%r11d
  0x000000010ca537d0: mov    %r11d,0x18(%rsp)
  0x000000010ca537d5: mov    0x40(%rsp),%r10d
  0x000000010ca537da: mov    %r10d,0x1c(%rsp)
  0x000000010ca537df: mov    0x50(%rsp),%r11d
  0x000000010ca537e4: mov    %r11d,0x20(%rsp)
  0x000000010ca537e9: mov    0x58(%rsp),%r10
  0x000000010ca537ee: mov    %r10,0x30(%rsp)
  0x000000010ca537f3: mov    0x68(%rsp),%r10
  0x000000010ca537f8: mov    %r10,0x40(%rsp)
  0x000000010ca537fd: mov    0x60(%rsp),%r10
  0x000000010ca53802: mov    %r10,0x50(%rsp)
  0x000000010ca53807: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [96]=Oop [104]=Oop [116]=NarrowOop off=5772}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca5380c: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca53811: movslq %r10d,%r10         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53814: mov    %r10,%rbp
  0x000000010ca53817: jmpq   0x000000010ca52541  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5381c: mov    %r10,%rdi
  0x000000010ca5381f: xor    %rax,%rax
  0x000000010ca53822: shl    $0x3,%rcx
  0x000000010ca53826: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53829: mov    0x80(%rsp),%rsi
  0x000000010ca53831: xor    %edx,%edx
  0x000000010ca53833: mov    0x90(%rsp),%rcx
  0x000000010ca5383b: xor    %r8d,%r8d
  0x000000010ca5383e: nop
  0x000000010ca5383f: callq  0x000000010ca0f560  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=5828}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53844: jmpq   0x000000010ca52647
  0x000000010ca53849: mov    %r10,%rdi
  0x000000010ca5384c: xor    %rax,%rax
  0x000000010ca5384f: shl    $0x3,%rcx
  0x000000010ca53853: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53856: jmpq   0x000000010ca52647  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010ca5385b: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53860: mov    0x20(%rsp),%r10
  0x000000010ca53865: mov    %r10,0x18(%rsp)
  0x000000010ca5386a: mov    0x54(%rsp),%r11d
  0x000000010ca5386f: mov    %r11d,0x20(%rsp)
  0x000000010ca53874: mov    0x40(%rsp),%r10d
  0x000000010ca53879: mov    %r10d,0x24(%rsp)
  0x000000010ca5387e: mov    0x50(%rsp),%r10d
  0x000000010ca53883: mov    %r10d,0x28(%rsp)
  0x000000010ca53888: mov    0x58(%rsp),%r10
  0x000000010ca5388d: mov    %r10,0x38(%rsp)
  0x000000010ca53892: mov    0x68(%rsp),%r10
  0x000000010ca53897: mov    %r10,0x48(%rsp)
  0x000000010ca5389c: mov    %r10,0x50(%rsp)
  0x000000010ca538a1: mov    %r8d,0x2c(%rsp)
  0x000000010ca538a6: nop
  0x000000010ca538a7: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=5932}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca538ac: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca538b1: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca538b6: mov    0x20(%rsp),%r10
  0x000000010ca538bb: mov    %r10,0x18(%rsp)
  0x000000010ca538c0: mov    %edx,0x28(%rsp)
  0x000000010ca538c4: mov    %ebx,0x30(%rsp)
  0x000000010ca538c8: data32 xchg %ax,%ax
  0x000000010ca538cb: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [48]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5968}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca538d0: callq  0x000000010be85e14  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca538d5: mov    $0xffffffe4,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca538da: mov    0x20(%rsp),%r10
  0x000000010ca538df: mov    %r10,0x18(%rsp)
  0x000000010ca538e4: mov    0x54(%rsp),%r11d
  0x000000010ca538e9: mov    %r11d,0x20(%rsp)
  0x000000010ca538ee: mov    0x40(%rsp),%r10d
  0x000000010ca538f3: mov    %r10d,0x24(%rsp)
  0x000000010ca538f8: mov    0x50(%rsp),%r10d
  0x000000010ca538fd: mov    %r10d,0x28(%rsp)
  0x000000010ca53902: mov    0x58(%rsp),%r10
  0x000000010ca53907: mov    %r10,0x38(%rsp)
  0x000000010ca5390c: mov    0x68(%rsp),%r10
  0x000000010ca53911: mov    %r10,0x48(%rsp)
  0x000000010ca53916: mov    %r10,0x50(%rsp)
  0x000000010ca5391b: mov    %r9d,0x2c(%rsp)
  0x000000010ca53920: data32 xchg %ax,%ax
  0x000000010ca53923: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6056}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53928: callq  0x000000010be85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca5392d: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53932: mov    0x20(%rsp),%r10
  0x000000010ca53937: mov    %r10,0x18(%rsp)
  0x000000010ca5393c: mov    0x54(%rsp),%r10d
  0x000000010ca53941: mov    %r10d,0x20(%rsp)
  0x000000010ca53946: mov    0x40(%rsp),%r11d
  0x000000010ca5394b: mov    %r11d,0x24(%rsp)
  0x000000010ca53950: mov    0x50(%rsp),%r10d
  0x000000010ca53955: mov    %r10d,0x28(%rsp)
  0x000000010ca5395a: mov    0x58(%rsp),%r10
  0x000000010ca5395f: mov    %r10,0x38(%rsp)
  0x000000010ca53964: mov    0x68(%rsp),%r10
  0x000000010ca53969: mov    %r10,0x48(%rsp)
  0x000000010ca5396e: mov    %r10,0x50(%rsp)
  0x000000010ca53973: mov    %r8d,0x2c(%rsp)
  0x000000010ca53978: data32 xchg %ax,%ax
  0x000000010ca5397b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6144}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53980: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53985: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca5398a: mov    0x20(%rsp),%r10
  0x000000010ca5398f: mov    %r10,0x18(%rsp)
  0x000000010ca53994: mov    0x54(%rsp),%r11d
  0x000000010ca53999: mov    %r11d,0x20(%rsp)
  0x000000010ca5399e: mov    0x40(%rsp),%r10d
  0x000000010ca539a3: mov    %r10d,0x24(%rsp)
  0x000000010ca539a8: mov    0x50(%rsp),%r10d
  0x000000010ca539ad: mov    %r10d,0x28(%rsp)
  0x000000010ca539b2: mov    0x58(%rsp),%r10
  0x000000010ca539b7: mov    %r10,0x38(%rsp)
  0x000000010ca539bc: mov    0x68(%rsp),%r10
  0x000000010ca539c1: mov    %r10,0x48(%rsp)
  0x000000010ca539c6: mov    %r10,0x50(%rsp)
  0x000000010ca539cb: mov    %r9d,0x2c(%rsp)
  0x000000010ca539d0: data32 xchg %ax,%ax
  0x000000010ca539d3: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6232}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca539d8: callq  0x000000010be85e14  ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca539dd: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca539e2: mov    0x20(%rsp),%r10
  0x000000010ca539e7: mov    %r10,0x18(%rsp)
  0x000000010ca539ec: mov    0x54(%rsp),%r10d
  0x000000010ca539f1: mov    %r10d,0x20(%rsp)
  0x000000010ca539f6: mov    0x40(%rsp),%r11d
  0x000000010ca539fb: mov    %r11d,0x24(%rsp)
  0x000000010ca53a00: mov    0x50(%rsp),%r10d
  0x000000010ca53a05: mov    %r10d,0x28(%rsp)
  0x000000010ca53a0a: mov    0x58(%rsp),%r10
  0x000000010ca53a0f: mov    %r10,0x38(%rsp)
  0x000000010ca53a14: mov    0x68(%rsp),%r10
  0x000000010ca53a19: mov    %r10,0x48(%rsp)
  0x000000010ca53a1e: mov    %r10,0x50(%rsp)
  0x000000010ca53a23: mov    %r8d,0x2c(%rsp)
  0x000000010ca53a28: data32 xchg %ax,%ax
  0x000000010ca53a2b: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6320}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53a30: callq  0x000000010be85e14  ;*ireturn
                                                ; - java.io.ObjectStreamField::isPrimitive@26 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53a35: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53a3a: mov    0x20(%rsp),%r10
  0x000000010ca53a3f: mov    %r10,0x18(%rsp)
  0x000000010ca53a44: mov    0x54(%rsp),%r11d
  0x000000010ca53a49: mov    %r11d,0x20(%rsp)
  0x000000010ca53a4e: mov    0x40(%rsp),%r10d
  0x000000010ca53a53: mov    %r10d,0x24(%rsp)
  0x000000010ca53a58: mov    0x50(%rsp),%r10d
  0x000000010ca53a5d: mov    %r10d,0x28(%rsp)
  0x000000010ca53a62: mov    0x58(%rsp),%r10
  0x000000010ca53a67: mov    %r10,0x38(%rsp)
  0x000000010ca53a6c: mov    0x68(%rsp),%r10
  0x000000010ca53a71: mov    %r10,0x48(%rsp)
  0x000000010ca53a76: mov    %r10,0x50(%rsp)
  0x000000010ca53a7b: mov    %r9d,0x2c(%rsp)
  0x000000010ca53a80: data32 xchg %ax,%ax
  0x000000010ca53a83: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6408}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53a88: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53a8d: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53a92: mov    0x20(%rsp),%r10
  0x000000010ca53a97: mov    %r10,0x18(%rsp)
  0x000000010ca53a9c: mov    0x54(%rsp),%r10d
  0x000000010ca53aa1: mov    %r10d,0x20(%rsp)
  0x000000010ca53aa6: mov    0x40(%rsp),%r11d
  0x000000010ca53aab: mov    %r11d,0x24(%rsp)
  0x000000010ca53ab0: mov    0x50(%rsp),%r10d
  0x000000010ca53ab5: mov    %r10d,0x28(%rsp)
  0x000000010ca53aba: mov    0x58(%rsp),%r10
  0x000000010ca53abf: mov    %r10,0x38(%rsp)
  0x000000010ca53ac4: mov    0x68(%rsp),%r10
  0x000000010ca53ac9: mov    %r10,0x48(%rsp)
  0x000000010ca53ace: mov    %r10,0x50(%rsp)
  0x000000010ca53ad3: mov    %r8d,0x2c(%rsp)
  0x000000010ca53ad8: data32 xchg %ax,%ax
  0x000000010ca53adb: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6496}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53ae0: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53ae5: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53aea: mov    0x20(%rsp),%r10
  0x000000010ca53aef: mov    %r10,0x18(%rsp)
  0x000000010ca53af4: mov    0x54(%rsp),%r10d
  0x000000010ca53af9: mov    %r10d,0x20(%rsp)
  0x000000010ca53afe: mov    0x40(%rsp),%r11d
  0x000000010ca53b03: mov    %r11d,0x24(%rsp)
  0x000000010ca53b08: mov    0x50(%rsp),%r10d
  0x000000010ca53b0d: mov    %r10d,0x28(%rsp)
  0x000000010ca53b12: mov    0x58(%rsp),%r10
  0x000000010ca53b17: mov    %r10,0x38(%rsp)
  0x000000010ca53b1c: mov    0x68(%rsp),%r10
  0x000000010ca53b21: mov    %r10,0x48(%rsp)
  0x000000010ca53b26: mov    %rcx,0x58(%rsp)
  0x000000010ca53b2b: callq  0x000000010c9a71a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [88]=Oop [104]=Oop [116]=NarrowOop off=6576}
                                                ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53b30: callq  0x000000010be85e14  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53b35: mov    $0xffffff65,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010ca53b3a: mov    (%rsp),%rbp
  0x000000010ca53b3e: mov    0x8(%rsp),%r10
  0x000000010ca53b43: mov    %r10,(%rsp)
  0x000000010ca53b47: mov    0x10(%rsp),%r10
  0x000000010ca53b4c: mov    %r10,0x8(%rsp)
  0x000000010ca53b51: mov    0x20(%rsp),%r10
  0x000000010ca53b56: mov    %r10,0x10(%rsp)
  0x000000010ca53b5b: mov    0x54(%rsp),%r11d
  0x000000010ca53b60: mov    %r11d,0x18(%rsp)
  0x000000010ca53b65: mov    0x40(%rsp),%r10d
  0x000000010ca53b6a: mov    %r10d,0x1c(%rsp)
  0x000000010ca53b6f: mov    0x50(%rsp),%r11d
  0x000000010ca53b74: mov    %r11d,0x20(%rsp)
  0x000000010ca53b79: mov    0x58(%rsp),%r10
  0x000000010ca53b7e: mov    %r10,0x30(%rsp)
  0x000000010ca53b83: mov    0x68(%rsp),%r10
  0x000000010ca53b88: mov    %r10,0x40(%rsp)
  0x000000010ca53b8d: mov    %rcx,0x50(%rsp)
  0x000000010ca53b92: mov    0x78(%rsp),%r11d
  0x000000010ca53b97: mov    %r11d,%r10d
  0x000000010ca53b9a: mov    %r10d,0x5c(%rsp)
  0x000000010ca53b9f: mov    %r10d,0x60(%rsp)
  0x000000010ca53ba4: data32 xchg %ax,%ax
  0x000000010ca53ba7: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [104]=Oop [116]=NarrowOop off=6700}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53bac: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53bb1: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53bb6: mov    0x20(%rsp),%r10
  0x000000010ca53bbb: mov    %r10,0x18(%rsp)
  0x000000010ca53bc0: mov    0x54(%rsp),%r11d
  0x000000010ca53bc5: mov    %r11d,0x20(%rsp)
  0x000000010ca53bca: mov    0x40(%rsp),%r10d
  0x000000010ca53bcf: mov    %r10d,0x24(%rsp)
  0x000000010ca53bd4: mov    0x50(%rsp),%r10d
  0x000000010ca53bd9: mov    %r10d,0x28(%rsp)
  0x000000010ca53bde: mov    0x58(%rsp),%r10
  0x000000010ca53be3: mov    %r10,0x38(%rsp)
  0x000000010ca53be8: mov    0x68(%rsp),%r10
  0x000000010ca53bed: mov    %r10,0x48(%rsp)
  0x000000010ca53bf2: mov    %r10,0x50(%rsp)
  0x000000010ca53bf7: mov    %r9d,0x2c(%rsp)
  0x000000010ca53bfc: data32 xchg %ax,%ax
  0x000000010ca53bff: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6788}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53c04: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53c09: mov    $0xffffff86,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53c0e: mov    %r9,%rbp
  0x000000010ca53c11: mov    %rdx,(%rsp)
  0x000000010ca53c15: mov    %r8,0x8(%rsp)
  0x000000010ca53c1a: mov    %rbx,0x10(%rsp)
  0x000000010ca53c1f: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop off=6820}
                                                ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)
                                                ;   {runtime_call}
  0x000000010ca53c24: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53c29: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53c2e: nop
  0x000000010ca53c2f: callq  0x000000010c9a71a0  ; OopMap{off=6836}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53c34: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53c39: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53c3e: nop
  0x000000010ca53c3f: callq  0x000000010c9a71a0  ; OopMap{off=6852}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53c44: callq  0x000000010be85e14  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53c49: mov    $0x6,%esi          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53c4e: mov    (%rsp),%rbp
  0x000000010ca53c52: mov    0x8(%rsp),%r10
  0x000000010ca53c57: mov    %r10,(%rsp)
  0x000000010ca53c5b: mov    0x10(%rsp),%r10
  0x000000010ca53c60: mov    %r10,0x8(%rsp)
  0x000000010ca53c65: mov    0x20(%rsp),%r10
  0x000000010ca53c6a: mov    %r10,0x10(%rsp)
  0x000000010ca53c6f: mov    0x58(%rsp),%r10
  0x000000010ca53c74: mov    %r10,0x30(%rsp)
  0x000000010ca53c79: xchg   %ax,%ax
  0x000000010ca53c7b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [48]=Oop [64]=NarrowOop [88]=Oop [96]=Oop off=6912}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53c80: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53c85: mov    $0x6,%esi          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca53c8a: mov    (%rsp),%rbp
  0x000000010ca53c8e: mov    0x8(%rsp),%r10
  0x000000010ca53c93: mov    %r10,(%rsp)
  0x000000010ca53c97: mov    0x10(%rsp),%r10
  0x000000010ca53c9c: mov    %r10,0x8(%rsp)
  0x000000010ca53ca1: mov    0x20(%rsp),%r10
  0x000000010ca53ca6: mov    %r10,0x10(%rsp)
  0x000000010ca53cab: mov    0x40(%rsp),%r11d
  0x000000010ca53cb0: mov    %r11d,0x1c(%rsp)
  0x000000010ca53cb5: mov    0x58(%rsp),%r10
  0x000000010ca53cba: mov    %r10,0x30(%rsp)
  0x000000010ca53cbf: mov    0x68(%rsp),%r10
  0x000000010ca53cc4: mov    %r10,0x40(%rsp)
  0x000000010ca53cc9: xchg   %ax,%ax
  0x000000010ca53ccb: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [88]=Oop [96]=Oop [104]=Oop off=6992}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53cd0: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53cd5: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53cda: nop
  0x000000010ca53cdb: callq  0x000000010c9a71a0  ; OopMap{off=7008}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53ce0: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53ce5: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53cea: mov    %r11d,%ebp
  0x000000010ca53ced: xchg   %ax,%ax
  0x000000010ca53cef: callq  0x000000010c9a71a0  ; OopMap{rbp=NarrowOop off=7028}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53cf4: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53cf9: mov    $0xfffffff4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53cfe: mov    (%rsp),%rbp
  0x000000010ca53d02: mov    0x8(%rsp),%r10
  0x000000010ca53d07: mov    %r10,(%rsp)
  0x000000010ca53d0b: mov    0x10(%rsp),%r10
  0x000000010ca53d10: mov    %r10,0x8(%rsp)
  0x000000010ca53d15: mov    0x20(%rsp),%r10
  0x000000010ca53d1a: mov    %r10,0x10(%rsp)
  0x000000010ca53d1f: mov    %edx,0x28(%rsp)
  0x000000010ca53d23: mov    %r8d,0x30(%rsp)
  0x000000010ca53d28: data32 xchg %ax,%ax
  0x000000010ca53d2b: callq  0x000000010c9a71a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [48]=NarrowOop [64]=NarrowOop [68]=NarrowOop [88]=Oop off=7088}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53d30: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53d35: mov    $0xfffffff6,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d3a: mov    %edx,%ebp
  0x000000010ca53d3c: data32 xchg %ax,%ax
  0x000000010ca53d3f: callq  0x000000010c9a71a0  ; OopMap{off=7108}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53d44: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca53d49: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d4e: nop
  0x000000010ca53d4f: callq  0x000000010c9a71a0  ; OopMap{off=7124}
                                                ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53d54: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53d59: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d5e: nop
  0x000000010ca53d5f: callq  0x000000010c9a71a0  ; OopMap{off=7140}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53d64: callq  0x000000010be85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53d69: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d6e: nop
  0x000000010ca53d6f: callq  0x000000010c9a71a0  ; OopMap{off=7156}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53d74: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53d79: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d7e: nop
  0x000000010ca53d7f: callq  0x000000010c9a71a0  ; OopMap{off=7172}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53d84: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53d89: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d8e: nop
  0x000000010ca53d8f: callq  0x000000010c9a71a0  ; OopMap{off=7188}
                                                ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53d94: callq  0x000000010be85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53d99: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53d9e: nop
  0x000000010ca53d9f: callq  0x000000010c9a71a0  ; OopMap{off=7204}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53da4: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53da9: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53dae: nop
  0x000000010ca53daf: callq  0x000000010c9a71a0  ; OopMap{off=7220}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca53db4: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53db9: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53dbe: nop
  0x000000010ca53dbf: callq  0x000000010c9a71a0  ; OopMap{off=7236}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010ca53dc4: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53dc9: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53dce: nop
  0x000000010ca53dcf: callq  0x000000010c9a71a0  ; OopMap{off=7252}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53dd4: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53dd9: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53dde: nop
  0x000000010ca53ddf: callq  0x000000010c9a71a0  ; OopMap{off=7268}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53de4: callq  0x000000010be85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010ca53de9: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53dee: nop
  0x000000010ca53def: callq  0x000000010c9a71a0  ; OopMap{off=7284}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53df4: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53df9: mov    $0xfffffff6,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010ca53dfe: mov    %r11d,%ebp
  0x000000010ca53e01: xchg   %ax,%ax
  0x000000010ca53e03: callq  0x000000010c9a71a0  ; OopMap{off=7304}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e08: callq  0x000000010be85e14  ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca53e0d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e12: nop
  0x000000010ca53e13: callq  0x000000010c9a71a0  ; OopMap{off=7320}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e18: callq  0x000000010be85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e1d: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e22: mov    0x70(%rsp),%ebp
  0x000000010ca53e26: nop
  0x000000010ca53e27: callq  0x000000010c9a71a0  ; OopMap{off=7340}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e2c: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e31: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e36: mov    %r8d,%ebp
  0x000000010ca53e39: xchg   %ax,%ax
  0x000000010ca53e3b: callq  0x000000010c9a71a0  ; OopMap{off=7360}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e40: callq  0x000000010be85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e45: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e4a: mov    %r9d,%ebp
  0x000000010ca53e4d: xchg   %ax,%ax
  0x000000010ca53e4f: callq  0x000000010c9a71a0  ; OopMap{off=7380}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e54: callq  0x000000010be85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e59: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e5e: mov    %r8d,%ebp
  0x000000010ca53e61: xchg   %ax,%ax
  0x000000010ca53e63: callq  0x000000010c9a71a0  ; OopMap{off=7400}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e68: callq  0x000000010be85e14  ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e6d: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e72: mov    %r9d,%ebp
  0x000000010ca53e75: xchg   %ax,%ax
  0x000000010ca53e77: callq  0x000000010c9a71a0  ; OopMap{off=7420}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e7c: callq  0x000000010be85e14  ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e81: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e86: mov    %r8d,%ebp
  0x000000010ca53e89: xchg   %ax,%ax
  0x000000010ca53e8b: callq  0x000000010c9a71a0  ; OopMap{off=7440}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53e90: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53e95: mov    $0xfffffff6,%esi   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53e9a: mov    %r9d,%ebp
  0x000000010ca53e9d: xchg   %ax,%ax
  0x000000010ca53e9f: callq  0x000000010c9a71a0  ; OopMap{off=7460}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53ea4: callq  0x000000010be85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53ea9: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53eae: mov    %r8d,%ebp
  0x000000010ca53eb1: xchg   %ax,%ax
  0x000000010ca53eb3: callq  0x000000010c9a71a0  ; OopMap{off=7480}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53eb8: callq  0x000000010be85e14  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010ca53ebd: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53ec2: mov    %r9d,%ebp
  0x000000010ca53ec5: xchg   %ax,%ax
  0x000000010ca53ec7: callq  0x000000010c9a71a0  ; OopMap{off=7500}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010ca53ecc: callq  0x000000010be85e14  ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca53ed1: mov    $0xfffffff6,%esi
  0x000000010ca53ed6: nop
  0x000000010ca53ed7: callq  0x000000010c9a71a0  ; OopMap{off=7516}
                                                ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x000000010ca53edc: callq  0x000000010be85e14  ;   {runtime_call}
  0x000000010ca53ee1: jmp    0x000000010ca53ef6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53ee3: jmp    0x000000010ca53f0c  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)

  0x000000010ca53ee5: mov    %rax,%rsi
  0x000000010ca53ee8: jmp    0x000000010ca53f64
  0x000000010ca53eea: mov    %rax,%rsi
  0x000000010ca53eed: jmp    0x000000010ca53f64  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53eef: mov    %rax,%rsi
  0x000000010ca53ef2: jmp    0x000000010ca53f64  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53ef4: jmp    0x000000010ca53ef6
  0x000000010ca53ef6: mov    %rax,%rsi
  0x000000010ca53ef9: jmp    0x000000010ca53f64
  0x000000010ca53efb: mov    %rax,%rsi
  0x000000010ca53efe: jmp    0x000000010ca53f64  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53f00: mov    %rax,%rsi
  0x000000010ca53f03: jmp    0x000000010ca53f64  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)

  0x000000010ca53f05: mov    %rax,%rsi
  0x000000010ca53f08: jmp    0x000000010ca53f64  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53f0a: jmp    0x000000010ca53f0c  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010ca53f0c: mov    %rax,%rsi
  0x000000010ca53f0f: jmp    0x000000010ca53f64
  0x000000010ca53f11: mov    %rax,%rsi
  0x000000010ca53f14: jmp    0x000000010ca53f64
  0x000000010ca53f16: mov    %rax,%rsi
  0x000000010ca53f19: jmp    0x000000010ca53f64  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f1b: mov    %rax,%rsi
  0x000000010ca53f1e: jmp    0x000000010ca53f64  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f20: mov    %rax,%rsi
  0x000000010ca53f23: jmp    0x000000010ca53f64
  0x000000010ca53f25: mov    %rax,%rsi
  0x000000010ca53f28: jmp    0x000000010ca53f64
  0x000000010ca53f2a: mov    %rax,%rsi
  0x000000010ca53f2d: jmp    0x000000010ca53f64
  0x000000010ca53f2f: mov    %rax,%rsi
  0x000000010ca53f32: jmp    0x000000010ca53f64
  0x000000010ca53f34: mov    %rax,%rsi
  0x000000010ca53f37: jmp    0x000000010ca53f64  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f39: mov    %rax,%rsi
  0x000000010ca53f3c: jmp    0x000000010ca53f64  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f3e: mov    %rax,%rsi
  0x000000010ca53f41: jmp    0x000000010ca53f64
  0x000000010ca53f43: mov    %rax,%rsi
  0x000000010ca53f46: jmp    0x000000010ca53f64
  0x000000010ca53f48: mov    %rax,%rsi
  0x000000010ca53f4b: jmp    0x000000010ca53f64
  0x000000010ca53f4d: mov    %rax,%rsi
  0x000000010ca53f50: jmp    0x000000010ca53f64
  0x000000010ca53f52: mov    %rax,%rsi
  0x000000010ca53f55: jmp    0x000000010ca53f64  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f57: mov    %rax,%rsi
  0x000000010ca53f5a: jmp    0x000000010ca53f64  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010ca53f5c: mov    %rax,%rsi
  0x000000010ca53f5f: jmp    0x000000010ca53f64  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010ca53f61: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x000000010ca53f64: add    $0xc0,%rsp
  0x000000010ca53f6b: pop    %rbp
  0x000000010ca53f6c: jmpq   0x000000010ca0f620  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)
                                                ;   {runtime_call}
  0x000000010ca53f71: hlt    
  0x000000010ca53f72: hlt    
  0x000000010ca53f73: hlt    
  0x000000010ca53f74: hlt    
  0x000000010ca53f75: hlt    
  0x000000010ca53f76: hlt    
  0x000000010ca53f77: hlt    
  0x000000010ca53f78: hlt    
  0x000000010ca53f79: hlt    
  0x000000010ca53f7a: hlt    
  0x000000010ca53f7b: hlt    
  0x000000010ca53f7c: hlt    
  0x000000010ca53f7d: hlt    
  0x000000010ca53f7e: hlt    
  0x000000010ca53f7f: hlt    
[Stub Code]
  0x000000010ca53f80: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010ca53f8a: jmpq   0x000000010ca53f8a  ;   {runtime_call}
  0x000000010ca53f8f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53f99: jmpq   0x000000010ca53f99  ;   {runtime_call}
  0x000000010ca53f9e: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53fa8: jmpq   0x000000010ca53fa8  ;   {runtime_call}
  0x000000010ca53fad: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53fb7: jmpq   0x000000010ca53fb7  ;   {runtime_call}
  0x000000010ca53fbc: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53fc6: jmpq   0x000000010ca53fc6  ;   {runtime_call}
  0x000000010ca53fcb: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53fd5: jmpq   0x000000010ca53fd5  ;   {runtime_call}
  0x000000010ca53fda: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53fe4: jmpq   0x000000010ca53fe4  ;   {runtime_call}
  0x000000010ca53fe9: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca53ff3: jmpq   0x000000010ca53ff3  ;   {runtime_call}
  0x000000010ca53ff8: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca54002: jmpq   0x000000010ca54002  ;   {runtime_call}
  0x000000010ca54007: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca54011: jmpq   0x000000010ca54011  ;   {runtime_call}
  0x000000010ca54016: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca54020: jmpq   0x000000010ca54020  ;   {runtime_call}
  0x000000010ca54025: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5402f: jmpq   0x000000010ca5402f  ;   {runtime_call}
  0x000000010ca54034: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5403e: jmpq   0x000000010ca5403e  ;   {runtime_call}
  0x000000010ca54043: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5404d: jmpq   0x000000010ca5404d  ;   {runtime_call}
  0x000000010ca54052: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5405c: jmpq   0x000000010ca5405c  ;   {runtime_call}
  0x000000010ca54061: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5406b: jmpq   0x000000010ca5406b  ;   {runtime_call}
  0x000000010ca54070: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010ca5407a: jmpq   0x000000010ca5407a  ;   {runtime_call}
[Exception Handler]
  0x000000010ca5407f: jmpq   0x000000010ca0e760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010ca54084: callq  0x000000010ca54089
  0x000000010ca54089: subq   $0x5,(%rsp)
  0x000000010ca5408e: jmpq   0x000000010c9e93c0  ;   {runtime_call}
  0x000000010ca54093: hlt    
  0x000000010ca54094: hlt    
  0x000000010ca54095: hlt    
  0x000000010ca54096: hlt    
  0x000000010ca54097: hlt    
<nmethod compile_id='90' compiler='C2' entry='0x000000010ca52180' size='22432' address='0x000000010ca51e10' relocation_offset='296' insts_offset='880' stub_offset='8560' scopes_data_offset='9048' scopes_pcs_offset='13328' dependencies_offset='21488' handler_table_offset='21504' nul_chk_table_offset='22200' oops_offset='8840' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5002' iicount='29' stamp='2.324'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.link.ResultsFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor38 from __JVM_DefineClass__]
<writer thread='21251'/>
[Loaded sun.reflect.GeneratedMethodAccessor1 from __JVM_DefineClass__]
<writer thread='7171'/>
[Loaded org.openjdk.jmh.results.BenchmarkResultMetaData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.ResultMetadataFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor39 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor40 from __JVM_DefineClass__]
[Loaded java.util.HashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$KeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$IdentityHashMapIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$KeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='4359'/>
[Loaded org.openjdk.jmh.util.FileUtils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.FinishingFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor41 from __JVM_DefineClass__]
[Loaded sun.net.ConnectionResetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='13571'/>
<destroy_vm stamp='22.168'/>
<tty_done stamp='22.168'/>
</tty>
<compilation_log thread='19715'>
<start_compile_thread name='C2 CompilerThread1' thread='19715' process='22202' stamp='0.067'/>
<task compile_id='2' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='25' backedge_count='5312' iicount='25' stamp='0.090'>
<phase name='parse' nodes='3' live='3' stamp='0.090'>
<type id='722' name='int'/>
<klass id='832' name='java/util/Properties$LineReader' flags='0'/>
<method id='833' holder='832' name='readLine' return='722' flags='0' bytes='468' iicount='27'/>
<parse method='833' uses='27' stamp='0.090'>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='161' bci='29'/>
<branch target_bci='101' taken='9391' not_taken='1' cnt='9392' prob='0.999894'/>
<bc code='199' bci='37'/>
<branch target_bci='54' taken='1' not_taken='0'/>
<bc code='182' bci='48'/>
<klass id='837' name='java/io/Reader' flags='1025'/>
<klass id='821' name='[C' flags='1041'/>
<method id='838' holder='837' name='read' return='722' arguments='821' flags='1' bytes='9' iicount='1'/>
<dependency type='unique_concrete_method' ctxk='837' x='838'/>
<call method='838' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='48'/>
<uncommon_trap bci='48' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='62'/>
<klass id='835' name='java/io/BufferedInputStream' flags='1'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='836' holder='797' name='read' return='722' arguments='824' flags='1' bytes='9' iicount='1'/>
<call method='836' count='1' prof_factor='1' virtual='1' inline='1' receiver='835' receiver_count='1'/>
<klass id='841' name='java/io/FilterInputStream' flags='1'/>
<method id='842' holder='841' name='read' return='722' arguments='824' flags='1' bytes='9' iicount='3'/>
<call method='842' count='1' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<predicted_call bci='62' klass='835'/>
<uncommon_trap bci='62' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<direct_call bci='62'/>
<bc code='157' bci='77'/>
<branch target_bci='101' taken='1' not_taken='0'/>
<bc code='153' bci='81'/>
<branch target_bci='89' taken='0' not_taken='0'/>
<bc code='153' bci='86'/>
<branch target_bci='91' taken='0' not_taken='0'/>
<bc code='153' bci='93'/>
<branch target_bci='99' taken='0' not_taken='0'/>
<bc code='198' bci='105'/>
<branch target_bci='133' taken='0' not_taken='9393' cnt='9393' prob='never'/>
<uncommon_trap bci='105' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='51' bci='126'/>
<uncommon_trap bci='126' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='152'/>
<branch target_bci='167' taken='9392' not_taken='0' cnt='9392' prob='always'/>
<uncommon_trap bci='152' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='153' bci='168'/>
<branch target_bci='217' taken='7553' not_taken='1839' cnt='9392' prob='0.804195'/>
<bc code='159' bci='174'/>
<branch target_bci='21' taken='1598' not_taken='241' cnt='1839' prob='0.868951'/>
<bc code='159' bci='180'/>
<branch target_bci='21' taken='0' not_taken='241' cnt='241' prob='never'/>
<uncommon_trap bci='180' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='186'/>
<branch target_bci='192' taken='241' not_taken='0' cnt='241' prob='always'/>
<uncommon_trap bci='186' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='194'/>
<branch target_bci='212' taken='94' not_taken='147' cnt='241' prob='0.390042'/>
<bc code='159' bci='200'/>
<branch target_bci='21' taken='0' not_taken='147' cnt='147' prob='never'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='206'/>
<branch target_bci='212' taken='132' not_taken='15' cnt='147' prob='0.897959'/>
<bc code='153' bci='219'/>
<branch target_bci='243' taken='7647' not_taken='132' cnt='7779' prob='0.983031'/>
<bc code='159' bci='228'/>
<branch target_bci='237' taken='116' not_taken='16' cnt='132' prob='0.878788'/>
<bc code='160' bci='234'/>
<branch target_bci='243' taken='16' not_taken='0'/>
<bc code='159' bci='246'/>
<branch target_bci='347' taken='226' not_taken='7437' cnt='7663' prob='0.0294924'/>
<bc code='159' bci='252'/>
<branch target_bci='347' taken='0' not_taken='7437' cnt='7437' prob='never'/>
<uncommon_trap bci='252' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='85' bci='264'/>
<uncommon_trap bci='264' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='264' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='271'/>
<branch target_bci='320' taken='7436' not_taken='1' cnt='7437' prob='0.999866'/>
<bc code='156' bci='285'/>
<branch target_bci='292' taken='1' not_taken='0'/>
<bc code='190' bci='310'/>
<uncommon_trap bci='310' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='311'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='839' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' iicount='1057'/>
<call method='839' count='1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='101'/>
<bc code='160' bci='323'/>
<branch target_bci='341' taken='7343' not_taken='94' cnt='7437' prob='0.98736'/>
<bc code='154' bci='328'/>
<branch target_bci='335' taken='0' not_taken='94' cnt='94' prob='never'/>
<uncommon_trap bci='328' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='349'/>
<branch target_bci='356' taken='116' not_taken='110' cnt='226' prob='0.513274'/>
<bc code='154' bci='353'/>
<branch target_bci='369' taken='110' not_taken='0' cnt='110' prob='always'/>
<uncommon_trap bci='353' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='377'/>
<branch target_bci='438' taken='110' not_taken='0' cnt='110' prob='always'/>
<uncommon_trap bci='377' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='153' bci='440'/>
<branch target_bci='466' taken='16' not_taken='94' cnt='110' prob='0.145455'/>
<bc code='160' bci='457'/>
<branch target_bci='21' taken='94' not_taken='0' cnt='94' prob='always'/>
<parse_done nodes='815' live='794' memory='202824' stamp='0.091'/>
</parse>
<phase_done name='parse' nodes='817' live='559' stamp='0.091'/>
</phase>
<phase name='optimizer' nodes='817' live='559' stamp='0.091'>
<phase name='idealLoop' nodes='844' live='519' stamp='0.091'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='863' live='532' stamp='0.092'/>
</phase>
<phase name='escapeAnalysis' nodes='863' live='532' stamp='0.092'>
<phase name='connectionGraph' nodes='864' live='533' stamp='0.092'>
<phase_done name='connectionGraph' nodes='864' live='533' stamp='0.092'/>
</phase>
<phase_done name='escapeAnalysis' nodes='864' live='533' stamp='0.092'/>
</phase>
<phase name='idealLoop' nodes='864' live='533' stamp='0.092'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.092'/>
</phase>
<phase name='idealLoop' nodes='911' live='519' stamp='0.092'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.092'/>
</phase>
<phase name='idealLoop' nodes='911' live='519' stamp='0.092'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.093'/>
</phase>
<phase name='ccp' nodes='911' live='519' stamp='0.093'>
<phase_done name='ccp' nodes='911' live='519' stamp='0.093'/>
</phase>
<phase name='idealLoop' nodes='919' live='518' stamp='0.093'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='960' live='518' stamp='0.093'/>
</phase>
<phase_done name='optimizer' nodes='1042' live='562' stamp='0.093'/>
</phase>
<phase name='matcher' nodes='1042' live='562' stamp='0.093'>
<phase_done name='matcher' nodes='606' live='606' stamp='0.094'/>
</phase>
<phase name='regalloc' nodes='763' live='761' stamp='0.094'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='1231' live='1060' stamp='0.099'/>
</phase>
<phase name='output' nodes='1233' live='1062' stamp='0.099'>
<phase_done name='output' nodes='1269' live='1085' stamp='0.099'/>
</phase>
<dependency type='unique_concrete_method' ctxk='837' x='838'/>
<code_cache total_blobs='200' nmethods='2' adapters='148' free_code_cache='49830208'/>
<task_done success='1' nmsize='2168' count='5000' backedge_count='5000' stamp='0.106'/>
</task>
<task compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='5110' backedge_count='1' iicount='10115' stamp='0.139'>
<phase name='parse' nodes='3' live='3' stamp='0.139'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='10178'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='6' klass='834'/>
<parse method='832' uses='10178' stamp='0.139'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='6979' cnt='6979' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='6978' not_taken='0' cnt='6978' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.139'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.139'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.139'>
<phase name='ccp' nodes='103' live='63' stamp='0.139'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.139'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.139'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.139'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.139'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.139'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.139'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.139'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.140'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.140'>
<phase_done name='output' nodes='94' live='86' stamp='0.140'/>
</phase>
<code_cache total_blobs='234' nmethods='10' adapters='174' free_code_cache='49811392'/>
<task_done success='1' nmsize='216' count='6296' backedge_count='1' stamp='0.141'/>
</task>
<task compile_id='32' method='java/lang/String lastIndexOf (II)I' bytes='52' count='517' backedge_count='5030' iicount='517' stamp='0.169'>
<phase name='parse' nodes='3' live='3' stamp='0.169'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='lastIndexOf' return='722' arguments='722 722' flags='1' bytes='52' iicount='519'/>
<parse method='832' uses='519' stamp='0.169'>
<bc code='162' bci='3'/>
<branch target_bci='45' taken='0' not_taken='429' cnt='429' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='16'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3033'/>
<call method='836' count='429' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='155' bci='23'/>
<branch target_bci='43' taken='3' not_taken='6755' cnt='6758' prob='0.000443918'/>
<uncommon_trap bci='26' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='31'/>
<branch target_bci='37' taken='6328' not_taken='427' cnt='6755' prob='0.936788'/>
<bc code='155' bci='23'/>
<branch target_bci='43' taken='3' not_taken='6755' cnt='6328' prob='0.000443918'/>
<parse_done nodes='153' live='146' memory='45416' stamp='0.169'/>
</parse>
<phase_done name='parse' nodes='154' live='112' stamp='0.169'/>
</phase>
<phase name='optimizer' nodes='154' live='112' stamp='0.169'>
<phase name='idealLoop' nodes='154' live='102' stamp='0.169'>
<loop_tree>
<loop idx='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='183' live='106' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='183' live='106' stamp='0.170'>
<loop_tree>
<loop idx='259' inner_loop='1' main_loop='259' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='277' live='179' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='277' live='179' stamp='0.170'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='336' live='213' stamp='0.170'/>
</phase>
<phase name='ccp' nodes='336' live='213' stamp='0.170'>
<phase_done name='ccp' nodes='336' live='213' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='336' live='213' stamp='0.170'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='336' live='200' stamp='0.170'/>
</phase>
<phase name='idealLoop' nodes='336' live='200' stamp='0.170'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='352' live='194' stamp='0.170'/>
</phase>
<phase_done name='optimizer' nodes='355' live='184' stamp='0.170'/>
</phase>
<phase name='matcher' nodes='355' live='184' stamp='0.170'>
<phase_done name='matcher' nodes='148' live='148' stamp='0.170'/>
</phase>
<phase name='regalloc' nodes='211' live='210' stamp='0.170'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='224' live='221' stamp='0.171'/>
</phase>
<phase name='output' nodes='224' live='221' stamp='0.171'>
<phase_done name='output' nodes='250' live='233' stamp='0.171'/>
</phase>
<code_cache total_blobs='260' nmethods='34' adapters='176' free_code_cache='49796096'/>
<task_done success='1' nmsize='376' count='529' backedge_count='5176' inlined_bytes='11' stamp='0.172'/>
</task>
<task compile_id='39' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5006' backedge_count='1' iicount='10007' stamp='0.176'>
<phase name='parse' nodes='3' live='3' stamp='0.176'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='10014'/>
<parse method='832' uses='10014' stamp='0.176'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.176'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.176'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.176'>
<phase name='ccp' nodes='56' live='38' stamp='0.176'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.176'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.176'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.176'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.176'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.176'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.176'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.176'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.176'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.176'>
<phase_done name='output' nodes='55' live='53' stamp='0.177'/>
</phase>
<code_cache total_blobs='265' nmethods='39' adapters='176' free_code_cache='49793856'/>
<task_done success='1' nmsize='152' count='5155' backedge_count='1' stamp='0.177'/>
</task>
<task compile_id='43' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='361' backedge_count='5020' iicount='361' stamp='0.181'>
<phase name='parse' nodes='3' live='3' stamp='0.181'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='365'/>
<parse method='832' uses='365' stamp='0.181'>
<bc code='159' bci='2'/>
<branch target_bci='125' taken='0' not_taken='252' cnt='252' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='0' not_taken='1260' cnt='1260' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='29' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='35'/>
<branch target_bci='20' taken='1008' not_taken='252' cnt='1260' prob='0.8'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='0' not_taken='1260' cnt='1260' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='44'/>
<branch target_bci='125' taken='0' not_taken='252' cnt='252' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='252' not_taken='1008' cnt='1260' prob='0.2'/>
<uncommon_trap bci='62' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='62' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='70'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='71'/>
<uncommon_trap bci='71' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='252' not_taken='1008' cnt='1008' prob='0.2'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='253' not_taken='4585' cnt='4838' prob='0.0522943'/>
<uncommon_trap bci='84' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='84' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='3986' not_taken='599' cnt='4585' prob='0.869357'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='253' not_taken='4585' cnt='4585' prob='0.0522943'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='588'/>
<call method='834' count='253' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='253' stamp='0.181'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.430272' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.181'>
<parse_done nodes='505' live='487' memory='113016' stamp='0.181'/>
</parse>
<parse_done nodes='524' live='505' memory='128072' stamp='0.181'/>
</parse>
<parse_done nodes='526' live='506' memory='128712' stamp='0.181'/>
</parse>
<phase_done name='parse' nodes='528' live='362' stamp='0.181'/>
</phase>
<phase name='optimizer' nodes='528' live='362' stamp='0.181'>
<phase name='idealLoop' nodes='529' live='322' stamp='0.181'>
<loop_tree>
<loop idx='537' >
</loop>
<loop idx='543' >
</loop>
<loop idx='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='551' live='309' stamp='0.182'/>
</phase>
<phase name='escapeAnalysis' nodes='551' live='309' stamp='0.182'>
<phase name='connectionGraph' nodes='552' live='310' stamp='0.182'>
<phase_done name='connectionGraph' nodes='552' live='310' stamp='0.182'/>
</phase>
<phase_done name='escapeAnalysis' nodes='552' live='310' stamp='0.182'/>
</phase>
<phase name='idealLoop' nodes='552' live='310' stamp='0.182'>
<loop_tree>
<loop idx='537' inner_loop='1' >
</loop>
<loop idx='543' inner_loop='1' >
</loop>
<loop idx='549' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='634' live='329' stamp='0.182'/>
</phase>
<phase name='idealLoop' nodes='634' live='329' stamp='0.182'>
<loop_tree>
<loop idx='727' inner_loop='1' main_loop='727' >
</loop>
<loop idx='825' inner_loop='1' main_loop='825' >
</loop>
<loop idx='932' inner_loop='1' main_loop='932' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='949' live='579' stamp='0.182'/>
</phase>
<phase name='idealLoop' nodes='949' live='579' stamp='0.182'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1176' live='688' stamp='0.183'/>
</phase>
<phase name='ccp' nodes='1176' live='688' stamp='0.183'>
<phase_done name='ccp' nodes='1176' live='688' stamp='0.183'/>
</phase>
<phase name='idealLoop' nodes='1180' live='666' stamp='0.183'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1266' live='643' stamp='0.184'/>
</phase>
<phase name='idealLoop' nodes='1266' live='643' stamp='0.184'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1269' live='600' stamp='0.184'/>
</phase>
<phase name='idealLoop' nodes='1269' live='600' stamp='0.184'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1293' live='548' stamp='0.185'/>
</phase>
<phase_done name='optimizer' nodes='1421' live='575' stamp='0.185'/>
</phase>
<phase name='matcher' nodes='1421' live='575' stamp='0.185'>
<phase_done name='matcher' nodes='463' live='463' stamp='0.185'/>
</phase>
<phase name='regalloc' nodes='618' live='617' stamp='0.186'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='889' live='732' stamp='0.188'/>
</phase>
<phase name='output' nodes='895' live='738' stamp='0.189'>
<phase_done name='output' nodes='935' live='756' stamp='0.189'/>
</phase>
<code_cache total_blobs='276' nmethods='49' adapters='177' free_code_cache='49784320'/>
<task_done success='1' nmsize='1400' count='453' backedge_count='7176' inlined_bytes='11' stamp='0.193'/>
</task>
<task compile_id='55' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='418' backedge_count='5058' iicount='418' stamp='0.211'>
<phase name='parse' nodes='3' live='3' stamp='0.211'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='418'/>
<parse method='832' uses='418' stamp='0.211'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='201' not_taken='282' cnt='483' prob='0.416149'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='0' not_taken='282' cnt='282' prob='never'/>
<uncommon_trap bci='66' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='201' not_taken='6387' cnt='6588' prob='0.03051'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='82' not_taken='6305' cnt='6387' prob='0.0128386'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='201' not_taken='6387' cnt='6305' prob='0.03051'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='201' not_taken='82' cnt='283' prob='0.710247'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='82' not_taken='0' cnt='82' prob='always'/>
<uncommon_trap bci='123' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='0' not_taken='82' cnt='82' prob='never'/>
<uncommon_trap bci='150' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='201' not_taken='282' cnt='201' prob='0.416149'/>
<parse_done nodes='337' live='320' memory='88688' stamp='0.212'/>
</parse>
<phase_done name='parse' nodes='338' live='240' stamp='0.212'/>
</phase>
<phase name='optimizer' nodes='338' live='240' stamp='0.212'>
<phase name='idealLoop' nodes='338' live='220' stamp='0.212'>
<loop_tree>
<loop idx='338' >
<loop idx='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='233' stamp='0.212'/>
</phase>
<phase name='idealLoop' nodes='382' live='233' stamp='0.212'>
<loop_tree>
<loop idx='338' >
<loop idx='349' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='236' stamp='0.212'/>
</phase>
<phase name='idealLoop' nodes='399' live='236' stamp='0.212'>
<loop_tree>
<loop idx='338' >
<loop idx='487' inner_loop='1' main_loop='487' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='502' live='320' stamp='0.212'/>
</phase>
<phase name='ccp' nodes='502' live='320' stamp='0.212'>
<phase_done name='ccp' nodes='502' live='320' stamp='0.212'/>
</phase>
<phase name='idealLoop' nodes='502' live='318' stamp='0.212'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='357' stamp='0.213'/>
</phase>
<phase name='idealLoop' nodes='585' live='357' stamp='0.213'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='624' live='344' stamp='0.213'/>
</phase>
<phase name='idealLoop' nodes='624' live='344' stamp='0.213'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='638' live='342' stamp='0.213'/>
</phase>
<phase_done name='optimizer' nodes='645' live='330' stamp='0.213'/>
</phase>
<phase name='matcher' nodes='645' live='330' stamp='0.213'>
<phase_done name='matcher' nodes='294' live='294' stamp='0.213'/>
</phase>
<phase name='regalloc' nodes='401' live='399' stamp='0.213'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='639' live='534' stamp='0.215'/>
</phase>
<phase name='output' nodes='639' live='534' stamp='0.215'>
<phase_done name='output' nodes='671' live='550' stamp='0.215'/>
</phase>
<code_cache total_blobs='284' nmethods='55' adapters='179' free_code_cache='49774016'/>
<task_done success='1' nmsize='1144' count='424' backedge_count='5232' stamp='0.219'/>
</task>
<task compile_id='58' compile_kind='osr' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='10000' backedge_count='5006' iicount='703' decompiles='1' unstable_if_traps='1' osr_bci='78' stamp='0.275'>
<phase name='parse' nodes='3' live='3' stamp='0.275'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='703'/>
<parse method='832' uses='703' osr_bci='78' stamp='0.275'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='78' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='78' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='78' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='579' not_taken='11270' cnt='11849' prob='0.0488649'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='9732' not_taken='1538' cnt='11270' prob='0.863531'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1358'/>
<call method='834' count='579' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='579' stamp='0.276'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.426362' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.276'>
<parse_done nodes='288' live='280' memory='75304' stamp='0.276'/>
</parse>
<parse_done nodes='309' live='300' memory='79200' stamp='0.276'/>
</parse>
<parse_done nodes='309' live='299' memory='79328' stamp='0.276'/>
</parse>
<phase_done name='parse' nodes='311' live='217' stamp='0.276'/>
</phase>
<phase name='optimizer' nodes='311' live='217' stamp='0.276'>
<phase name='idealLoop' nodes='326' live='203' stamp='0.276'>
<loop_tree>
<loop idx='326' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='327' live='203' stamp='0.276'/>
</phase>
<phase name='escapeAnalysis' nodes='327' live='203' stamp='0.276'>
<phase name='connectionGraph' nodes='328' live='204' stamp='0.276'>
<phase_done name='connectionGraph' nodes='328' live='204' stamp='0.276'/>
</phase>
<phase_done name='escapeAnalysis' nodes='328' live='204' stamp='0.276'/>
</phase>
<phase name='idealLoop' nodes='328' live='204' stamp='0.276'>
<loop_tree>
<loop idx='326' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='425' live='211' stamp='0.276'/>
</phase>
<phase name='idealLoop' nodes='425' live='211' stamp='0.276'>
<loop_tree>
<loop idx='430' main_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='596' live='324' stamp='0.276'/>
</phase>
<phase name='idealLoop' nodes='596' live='324' stamp='0.276'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='638' inner_loop='1' main_loop='638' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='341' stamp='0.277'/>
</phase>
<phase name='ccp' nodes='672' live='341' stamp='0.277'>
<phase_done name='ccp' nodes='672' live='341' stamp='0.277'/>
</phase>
<phase name='idealLoop' nodes='676' live='329' stamp='0.277'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='638' inner_loop='1' main_loop='638' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='699' live='317' stamp='0.277'/>
</phase>
<phase name='idealLoop' nodes='699' live='317' stamp='0.277'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='728' inner_loop='1' main_loop='728' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='757' live='363' stamp='0.277'/>
</phase>
<phase name='idealLoop' nodes='757' live='363' stamp='0.277'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='728' inner_loop='1' main_loop='728' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='792' live='358' stamp='0.277'/>
</phase>
<phase_done name='optimizer' nodes='852' live='363' stamp='0.278'/>
</phase>
<phase name='matcher' nodes='852' live='363' stamp='0.278'>
<phase_done name='matcher' nodes='292' live='292' stamp='0.278'/>
</phase>
<phase name='regalloc' nodes='386' live='385' stamp='0.278'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='480' live='438' stamp='0.279'/>
</phase>
<phase name='output' nodes='484' live='442' stamp='0.279'>
<phase_done name='output' nodes='514' live='458' stamp='0.279'/>
</phase>
<code_cache total_blobs='292' nmethods='58' adapters='184' free_code_cache='49765952'/>
<task_done success='1' nmsize='888' count='5000' backedge_count='5017' inlined_bytes='11' stamp='0.282'/>
</task>
<task compile_id='59' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.282'>
<phase name='parse' nodes='3' live='3' stamp='0.282'>
<type id='724' name='void'/>
<type id='720' name='byte'/>
<klass id='832' name='sun/reflect/ClassFileAssembler' flags='0'/>
<method id='833' holder='832' name='emitByte' return='724' arguments='720' flags='1' bytes='11' iicount='10007'/>
<parse method='833' uses='10007' stamp='0.282'>
<bc code='185' bci='5'/>
<klass id='835' name='sun/reflect/ByteVectorImpl' flags='0'/>
<klass id='836' name='sun/reflect/ByteVector' flags='1536'/>
<method id='837' holder='836' name='add' return='724' arguments='720' flags='1025' bytes='0' iicount='1'/>
<call method='837' count='6731' prof_factor='1' virtual='1' inline='1' receiver='835' receiver_count='6731'/>
<method id='838' holder='835' name='add' return='724' arguments='720' flags='1' bytes='38' iicount='10184'/>
<call method='838' count='6731' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='835'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='838' uses='6731' stamp='0.282'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='7115' not_taken='20' cnt='7135' prob='0.997197'/>
<bc code='183' bci='24'/>
<type id='722' name='int'/>
<method id='839' holder='835' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='30'/>
<call method='839' count='20' prof_factor='0.660939' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='169' live='163' memory='48560' stamp='0.282'/>
</parse>
<parse_done nodes='174' live='167' memory='49984' stamp='0.282'/>
</parse>
<phase_done name='parse' nodes='176' live='113' stamp='0.282'/>
</phase>
<phase name='optimizer' nodes='176' live='113' stamp='0.282'>
<phase name='ccp' nodes='180' live='113' stamp='0.282'>
<phase_done name='ccp' nodes='180' live='113' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='180' live='113' stamp='0.283'>
<phase_done name='idealLoop' nodes='215' live='115' stamp='0.283'/>
</phase>
<phase name='idealLoop' nodes='215' live='115' stamp='0.283'>
<phase_done name='idealLoop' nodes='220' live='115' stamp='0.283'/>
</phase>
<phase_done name='optimizer' nodes='233' live='114' stamp='0.283'/>
</phase>
<phase name='matcher' nodes='233' live='114' stamp='0.283'>
<phase_done name='matcher' nodes='103' live='103' stamp='0.283'/>
</phase>
<phase name='regalloc' nodes='129' live='127' stamp='0.283'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='154' live='143' stamp='0.283'/>
</phase>
<phase name='output' nodes='154' live='143' stamp='0.283'>
<phase_done name='output' nodes='169' live='155' stamp='0.284'/>
</phase>
<code_cache total_blobs='294' nmethods='60' adapters='184' free_code_cache='49763520'/>
<task_done success='1' nmsize='328' count='7742' backedge_count='1' stamp='0.286'/>
</task>
<task compile_id='62' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='678' backedge_count='5066' iicount='679' stamp='0.307'>
<phase name='parse' nodes='3' live='3' stamp='0.307'>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/ClassFileAssembler' flags='0'/>
<method id='833' holder='832' name='emitConstantPoolUTF8' return='724' arguments='730' flags='1' bytes='50' iicount='688'/>
<parse method='833' uses='688' stamp='0.307'>
<bc code='184' bci='1'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='835' name='sun/reflect/UTF8' flags='0'/>
<method id='836' holder='835' name='encode' return='824' arguments='730' flags='8' bytes='191' iicount='702'/>
<call method='836' count='481' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='481' stamp='0.307'>
<observe that='has_exception_handlers'/>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='839' holder='730' name='length' return='722' flags='1' bytes='6' iicount='8460'/>
<call method='839' count='484' prof_factor='0.685185' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='332' stamp='0.308'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='77' live='74' memory='32632' stamp='0.308'/>
</parse>
<bc code='184' bci='6'/>
<method id='840' holder='835' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='702'/>
<call method='840' count='484' prof_factor='0.685185' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='332' stamp='0.308'>
<bc code='182' bci='1'/>
<call method='839' count='484' prof_factor='0.472934' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='229' stamp='0.308'>
<parse_done nodes='107' live='103' memory='37480' stamp='0.308'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='842' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='842' count='6514' prof_factor='0.472934' inline='1'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='3081' stamp='0.308'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='243' live='232' memory='61336' stamp='0.308'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='284' live='270' memory='74824' stamp='0.308'/>
</parse>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='26'/>
<call method='842' count='6514' prof_factor='0.685185' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='4463' stamp='0.308'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='465' live='444' memory='104072' stamp='0.308'/>
</parse>
<bc code='161' bci='37'/>
<branch target_bci='59' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='37' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='44'/>
<branch target_bci='59' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='55'/>
<uncommon_trap bci='55' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='534' live='509' memory='128704' stamp='0.308'/>
</parse>
<bc code='182' bci='7'/>
<type id='720' name='byte'/>
<method id='837' holder='832' name='emitByte' return='724' arguments='720' flags='1' bytes='11' compile_id='59' compiler='C2' iicount='12742'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='481' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='481' stamp='0.308'>
<bc code='185' bci='5'/>
<klass id='851' name='sun/reflect/ByteVectorImpl' flags='0'/>
<klass id='848' name='sun/reflect/ByteVector' flags='1536'/>
<method id='849' holder='848' name='add' return='724' arguments='720' flags='1025' bytes='0' iicount='1'/>
<call method='849' count='9443' prof_factor='0.0377492' virtual='1' inline='1' receiver='851' receiver_count='9443'/>
<method id='852' holder='851' name='add' return='724' arguments='720' flags='1' bytes='38' compile_id='60' compiler='C2' iicount='12742'/>
<call method='852' count='9443' prof_factor='0.0377492' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='851'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='852' uses='356' stamp='0.308'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='9418' not_taken='25' cnt='9443' prob='0.997353'/>
<bc code='183' bci='24'/>
<method id='853' holder='851' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='52'/>
<call method='853' count='25' prof_factor='0.0279391' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='689' live='658' memory='156504' stamp='0.308'/>
</parse>
<parse_done nodes='695' live='663' memory='158400' stamp='0.308'/>
</parse>
<bc code='182' bci='14'/>
<type id='721' name='short'/>
<method id='838' holder='832' name='emitShort' return='724' arguments='721' flags='1' bytes='24' iicount='2802'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<call method='838' count='481' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='481' stamp='0.309'>
<bc code='182' bci='10'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='-1' prof_factor='0.171663' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='10'/>
<bc code='182' bci='20'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='-1' prof_factor='0.171663' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='20'/>
<parse_done nodes='764' live='731' memory='170624' stamp='0.309'/>
</parse>
<bc code='162' bci='22'/>
<branch target_bci='38' taken='481' not_taken='6496' cnt='6977' prob='0.0689408'/>
<uncommon_trap bci='25' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='25' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='51' bci='28'/>
<uncommon_trap bci='28' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='29'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='6496' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='6496' stamp='0.309'>
<bc code='185' bci='5'/>
<call method='849' count='9443' prof_factor='0.50981' virtual='1' inline='1' receiver='851' receiver_count='9443'/>
<call method='852' count='9443' prof_factor='0.50981' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='851'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='852' uses='4814' stamp='0.309'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='9418' not_taken='25' cnt='9443' prob='0.997353'/>
<bc code='183' bci='24'/>
<call method='853' count='25' prof_factor='0.377806' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='978' live='936' memory='205360' stamp='0.309'/>
</parse>
<parse_done nodes='983' live='940' memory='206824' stamp='0.309'/>
</parse>
<bc code='162' bci='22'/>
<branch target_bci='38' taken='481' not_taken='6496' cnt='6495' prob='0.0689408'/>
<parse_done nodes='1014' live='970' memory='213040' stamp='0.309'/>
</parse>
<phase_done name='parse' nodes='1016' live='603' stamp='0.309'/>
</phase>
<phase name='optimizer' nodes='1016' live='603' stamp='0.309'>
<phase name='idealLoop' nodes='1032' live='560' stamp='0.309'>
<loop_tree>
<loop idx='1040' >
</loop>
<loop idx='1050' >
</loop>
<loop idx='1060' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1065' live='551' stamp='0.309'/>
</phase>
<phase name='escapeAnalysis' nodes='1065' live='551' stamp='0.309'>
<phase name='connectionGraph' nodes='1066' live='552' stamp='0.309'>
<phase_done name='connectionGraph' nodes='1066' live='552' stamp='0.310'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1066' live='552' stamp='0.310'/>
</phase>
<phase name='idealLoop' nodes='1066' live='552' stamp='0.310'>
<loop_tree>
<loop idx='1040' inner_loop='1' >
</loop>
<loop idx='1050' inner_loop='1' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1146' live='537' stamp='0.310'/>
</phase>
<phase name='idealLoop' nodes='1146' live='537' stamp='0.310'>
<loop_tree>
<loop idx='1040' inner_loop='1' >
</loop>
<loop idx='1050' inner_loop='1' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1222' live='549' stamp='0.311'/>
</phase>
<phase name='idealLoop' nodes='1222' live='549' stamp='0.311'>
<loop_tree>
<loop idx='1389' inner_loop='1' main_loop='1389' >
</loop>
<loop idx='1607' inner_loop='1' main_loop='1607' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1683' live='815' stamp='0.312'/>
</phase>
<phase name='ccp' nodes='1683' live='815' stamp='0.312'>
<phase_done name='ccp' nodes='1683' live='815' stamp='0.312'/>
</phase>
<phase name='idealLoop' nodes='1689' live='813' stamp='0.312'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1896' live='921' stamp='0.313'/>
</phase>
<phase name='idealLoop' nodes='1896' live='921' stamp='0.313'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1971' live='889' stamp='0.314'/>
</phase>
<phase name='idealLoop' nodes='1971' live='889' stamp='0.314'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1994' live='885' stamp='0.314'/>
</phase>
<phase_done name='optimizer' nodes='2103' live='902' stamp='0.314'/>
</phase>
<phase name='matcher' nodes='2103' live='902' stamp='0.314'>
<phase_done name='matcher' nodes='811' live='811' stamp='0.315'/>
</phase>
<phase name='regalloc' nodes='1098' live='1092' stamp='0.316'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1497' live='1269' stamp='0.320'/>
</phase>
<phase name='output' nodes='1497' live='1269' stamp='0.320'>
<phase_done name='output' nodes='1551' live='1298' stamp='0.322'/>
</phase>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<code_cache total_blobs='298' nmethods='63' adapters='185' free_code_cache='49748544'/>
<task_done success='1' nmsize='2256' count='918' backedge_count='8296' inlined_bytes='388' stamp='0.332'/>
</task>
<task compile_id='65' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='6373' backedge_count='1' iicount='36368' stamp='0.332'>
<phase name='parse' nodes='3' live='3' stamp='0.332'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/io/ObjectStreamField' flags='1'/>
<method id='833' holder='832' name='getName' return='730' flags='1' bytes='5' iicount='36368'/>
<parse method='833' uses='36368' stamp='0.332'>
<parse_done nodes='27' live='26' memory='22992' stamp='0.332'/>
</parse>
<phase_done name='parse' nodes='28' live='14' stamp='0.332'/>
</phase>
<phase name='optimizer' nodes='28' live='14' stamp='0.332'>
<phase name='ccp' nodes='28' live='14' stamp='0.332'>
<phase_done name='ccp' nodes='28' live='14' stamp='0.332'/>
</phase>
<phase name='idealLoop' nodes='28' live='14' stamp='0.332'>
<phase_done name='idealLoop' nodes='28' live='14' stamp='0.332'/>
</phase>
<phase_done name='optimizer' nodes='28' live='14' stamp='0.332'/>
</phase>
<phase name='matcher' nodes='28' live='14' stamp='0.332'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.332'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.332'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='17' live='17' stamp='0.332'/>
</phase>
<phase name='output' nodes='17' live='17' stamp='0.332'>
<phase_done name='output' nodes='24' live='24' stamp='0.336'/>
</phase>
<code_cache total_blobs='300' nmethods='65' adapters='185' free_code_cache='49745728'/>
<task_done success='1' nmsize='120' count='6377' backedge_count='1' stamp='0.337'/>
</task>
<task compile_id='67' method='java/lang/String length ()I' bytes='6' count='5004' backedge_count='1' iicount='10004' stamp='0.339'>
<phase name='parse' nodes='3' live='3' stamp='0.339'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='10011'/>
<parse method='832' uses='10011' stamp='0.339'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.339'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.339'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.339'>
<phase name='ccp' nodes='45' live='27' stamp='0.339'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.339'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.339'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.339'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.339'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.339'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.339'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.339'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.339'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.339'>
<phase_done name='output' nodes='38' live='37' stamp='0.339'/>
</phase>
<code_cache total_blobs='301' nmethods='66' adapters='185' free_code_cache='49745088'/>
<task_done success='1' nmsize='120' count='5042' backedge_count='1' stamp='0.340'/>
</task>
<task compile_id='68' method='java/lang/Math min (II)I' bytes='11' count='5004' backedge_count='1' iicount='10004' stamp='0.340'>
<phase name='parse' nodes='3' live='3' stamp='0.340'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='10010'/>
<parse method='833' uses='10010' stamp='0.340'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='3175' not_taken='3543' cnt='6718' prob='0.472611'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.340'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.340'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.340'>
<phase name='ccp' nodes='33' live='18' stamp='0.340'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.340'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.340'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.340'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.340'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.340'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.340'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.340'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.340'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.340'>
<phase_done name='output' nodes='23' live='23' stamp='0.340'/>
</phase>
<code_cache total_blobs='302' nmethods='67' adapters='185' free_code_cache='49744576'/>
<task_done success='1' nmsize='56' count='5204' backedge_count='1' stamp='0.341'/>
</task>
<task compile_id='69' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='10000' backedge_count='5005' iicount='563' decompiles='1' unstable_if_traps='1' osr_bci='69' stamp='0.355'>
<phase name='parse' nodes='3' live='3' stamp='0.355'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='563'/>
<parse method='832' uses='563' osr_bci='69' stamp='0.356'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='69' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='69' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='69' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='345' not_taken='11886' cnt='12231' prob='0.028207'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='618' not_taken='11268' cnt='11886' prob='0.0519939'/>
<uncommon_trap bci='91' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='91' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='345' not_taken='756' cnt='1101' prob='0.313352'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='84' not_taken='672' cnt='756' prob='0.111111'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='672' not_taken='0' cnt='672' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='672' not_taken='84' cnt='756' prob='0.888889'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='345' not_taken='1099' cnt='1017' prob='0.23892'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='138' not_taken='962' cnt='1100' prob='0.125455'/>
<parse_done nodes='470' live='452' memory='105152' stamp='0.356'/>
</parse>
<phase_done name='parse' nodes='471' live='357' stamp='0.356'/>
</phase>
<phase name='optimizer' nodes='471' live='357' stamp='0.356'>
<phase name='idealLoop' nodes='484' live='310' stamp='0.356'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='426' stamp='0.357'/>
</phase>
<phase name='idealLoop' nodes='724' live='426' stamp='0.357'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='0.357'/>
</phase>
<phase name='idealLoop' nodes='724' live='407' stamp='0.357'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='0.357'/>
</phase>
<phase name='ccp' nodes='724' live='407' stamp='0.357'>
<phase_done name='ccp' nodes='724' live='407' stamp='0.357'/>
</phase>
<phase name='idealLoop' nodes='729' live='392' stamp='0.357'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='744' live='374' stamp='0.358'/>
</phase>
<phase name='idealLoop' nodes='744' live='374' stamp='0.358'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='763' live='376' stamp='0.358'/>
</phase>
<phase_done name='optimizer' nodes='773' live='361' stamp='0.358'/>
</phase>
<phase name='matcher' nodes='773' live='361' stamp='0.358'>
<phase_done name='matcher' nodes='323' live='323' stamp='0.358'/>
</phase>
<phase name='regalloc' nodes='451' live='448' stamp='0.358'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='666' live='578' stamp='0.360'/>
</phase>
<phase name='output' nodes='666' live='578' stamp='0.360'>
<phase_done name='output' nodes='691' live='592' stamp='0.361'/>
</phase>
<code_cache total_blobs='305' nmethods='68' adapters='187' free_code_cache='49739840'/>
<task_done success='1' nmsize='1368' count='5000' backedge_count='5037' stamp='0.364'/>
</task>
<task compile_id='70' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5044' iicount='603' decompiles='1' unstable_if_traps='1' stamp='0.365'>
<phase name='parse' nodes='3' live='3' stamp='0.365'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='603'/>
<parse method='832' uses='603' stamp='0.365'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='385' not_taken='1339' cnt='1724' prob='0.223318'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='178' not_taken='1162' cnt='1340' prob='0.132836'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='385' not_taken='13360' cnt='13745' prob='0.0280102'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='778' not_taken='12582' cnt='13360' prob='0.0582335'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='385' not_taken='13360' cnt='12582' prob='0.0280102'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='385' not_taken='956' cnt='1341' prob='0.287099'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='84' not_taken='872' cnt='956' prob='0.0878661'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='872' not_taken='0' cnt='872' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='872' not_taken='84' cnt='956' prob='0.912134'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='385' not_taken='1339' cnt='1257' prob='0.223318'/>
<parse_done nodes='417' live='398' memory='104048' stamp='0.365'/>
</parse>
<phase_done name='parse' nodes='418' live='300' stamp='0.365'/>
</phase>
<phase name='optimizer' nodes='418' live='300' stamp='0.365'>
<phase name='idealLoop' nodes='418' live='265' stamp='0.365'>
<loop_tree>
<loop idx='418' >
<loop idx='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='481' live='271' stamp='0.365'/>
</phase>
<phase name='idealLoop' nodes='481' live='271' stamp='0.365'>
<loop_tree>
<loop idx='418' >
<loop idx='429' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='274' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='498' live='274' stamp='0.366'>
<loop_tree>
<loop idx='418' >
<loop idx='586' inner_loop='1' main_loop='586' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='601' live='358' stamp='0.366'/>
</phase>
<phase name='ccp' nodes='601' live='358' stamp='0.366'>
<phase_done name='ccp' nodes='601' live='358' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='601' live='356' stamp='0.366'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='682' live='392' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='682' live='392' stamp='0.366'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='722' live='379' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='722' live='379' stamp='0.367'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='737' live='377' stamp='0.367'/>
</phase>
<phase_done name='optimizer' nodes='744' live='363' stamp='0.367'/>
</phase>
<phase name='matcher' nodes='744' live='363' stamp='0.367'>
<phase_done name='matcher' nodes='316' live='316' stamp='0.367'/>
</phase>
<phase name='regalloc' nodes='437' live='435' stamp='0.367'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='757' live='591' stamp='0.370'/>
</phase>
<phase name='output' nodes='759' live='593' stamp='0.370'>
<phase_done name='output' nodes='790' live='610' stamp='0.370'/>
</phase>
<code_cache total_blobs='306' nmethods='69' adapters='187' free_code_cache='49736128'/>
<task_done success='1' nmsize='1336' count='5000' backedge_count='5034' stamp='0.374'/>
</task>
<task compile_id='71' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5034' backedge_count='1' iicount='10034' stamp='0.374'>
<phase name='parse' nodes='3' live='3' stamp='0.374'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='10034'/>
<parse method='832' uses='10034' stamp='0.374'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5073' not_taken='1662' cnt='6735' prob='0.753229'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2440'/>
<call method='834' count='1662' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='1662' stamp='0.374'>
<bc code='183' bci='31'/>
<method id='837' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='837' count='-1' prof_factor='0.681148' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='837' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.374'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3122'/>
<call method='836' count='1662' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='1662' stamp='0.374'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='840' count='-1' prof_factor='0.532351' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='841' count='-1' prof_factor='0.532351' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='307' live='304' memory='74912' stamp='0.374'/>
</parse>
<parse_done nodes='334' live='330' memory='80752' stamp='0.374'/>
</parse>
<phase_done name='parse' nodes='336' live='211' stamp='0.374'/>
</phase>
<phase name='optimizer' nodes='336' live='211' stamp='0.374'>
<phase name='escapeAnalysis' nodes='340' live='208' stamp='0.374'>
<phase name='connectionGraph' nodes='341' live='209' stamp='0.374'>
<phase_done name='connectionGraph' nodes='341' live='209' stamp='0.374'/>
</phase>
<phase_done name='escapeAnalysis' nodes='341' live='209' stamp='0.374'/>
</phase>
<phase name='ccp' nodes='341' live='209' stamp='0.374'>
<phase_done name='ccp' nodes='341' live='209' stamp='0.374'/>
</phase>
<phase name='idealLoop' nodes='341' live='208' stamp='0.374'>
<phase_done name='idealLoop' nodes='347' live='208' stamp='0.375'/>
</phase>
<phase_done name='optimizer' nodes='405' live='246' stamp='0.375'/>
</phase>
<phase name='matcher' nodes='405' live='246' stamp='0.375'>
<phase_done name='matcher' nodes='245' live='245' stamp='0.375'/>
</phase>
<phase name='regalloc' nodes='308' live='307' stamp='0.375'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='392' live='368' stamp='0.376'/>
</phase>
<phase name='output' nodes='394' live='370' stamp='0.376'>
<phase_done name='output' nodes='414' live='382' stamp='0.376'/>
</phase>
<code_cache total_blobs='307' nmethods='70' adapters='187' free_code_cache='49734272'/>
<task_done success='1' nmsize='712' count='5083' backedge_count='1' inlined_bytes='69' stamp='0.378'/>
</task>
<task compile_id='72' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5022' backedge_count='2184' iicount='7838' stamp='0.383'>
<phase name='parse' nodes='3' live='3' stamp='0.383'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='7838'/>
<parse method='832' uses='7838' stamp='0.383'>
<bc code='180' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='21'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='25'/>
<branch target_bci='40' taken='0' not_taken='5419' cnt='5419' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='37'/>
<branch target_bci='42' taken='5180' not_taken='239' cnt='5419' prob='0.955896'/>
<bc code='155' bci='47'/>
<branch target_bci='70' taken='285' not_taken='6199' cnt='6484' prob='0.0439544'/>
<uncommon_trap bci='50' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='56'/>
<uncommon_trap bci='56' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='64'/>
<uncommon_trap bci='64' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='65'/>
<branch target_bci='42' taken='1304' not_taken='4895' cnt='6199' prob='0.210357'/>
<bc code='155' bci='47'/>
<branch target_bci='70' taken='285' not_taken='6199' cnt='6484' prob='0.0439544'/>
<parse_done nodes='222' live='211' memory='56664' stamp='0.383'/>
</parse>
<phase_done name='parse' nodes='223' live='157' stamp='0.383'/>
</phase>
<phase name='optimizer' nodes='223' live='157' stamp='0.383'>
<phase name='idealLoop' nodes='223' live='145' stamp='0.383'>
<loop_tree>
<loop idx='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.383'/>
</phase>
<phase name='idealLoop' nodes='338' live='153' stamp='0.383'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.383'/>
</phase>
<phase name='idealLoop' nodes='338' live='153' stamp='0.383'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.384'/>
</phase>
<phase name='ccp' nodes='338' live='153' stamp='0.384'>
<phase_done name='ccp' nodes='338' live='153' stamp='0.384'/>
</phase>
<phase name='idealLoop' nodes='338' live='152' stamp='0.384'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='341' live='139' stamp='0.384'/>
</phase>
<phase name='idealLoop' nodes='341' live='139' stamp='0.384'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='344' live='139' stamp='0.384'/>
</phase>
<phase_done name='optimizer' nodes='352' live='139' stamp='0.384'/>
</phase>
<phase name='matcher' nodes='352' live='139' stamp='0.384'>
<phase_done name='matcher' nodes='127' live='127' stamp='0.384'/>
</phase>
<phase name='regalloc' nodes='172' live='169' stamp='0.384'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='194' live='188' stamp='0.384'/>
</phase>
<phase name='output' nodes='194' live='188' stamp='0.384'>
<phase_done name='output' nodes='213' live='199' stamp='0.385'/>
</phase>
<code_cache total_blobs='308' nmethods='71' adapters='187' free_code_cache='49732864'/>
<task_done success='1' nmsize='344' count='5085' backedge_count='2198' stamp='0.386'/>
</task>
<task compile_id='73' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='5101' backedge_count='1' iicount='10101' stamp='0.387'>
<phase name='parse' nodes='3' live='3' stamp='0.387'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='832' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='10230'/>
<parse method='832' uses='10230' stamp='0.387'>
<parse_done nodes='27' live='26' memory='22992' stamp='0.387'/>
</parse>
<phase_done name='parse' nodes='28' live='14' stamp='0.387'/>
</phase>
<phase name='optimizer' nodes='28' live='14' stamp='0.387'>
<phase name='ccp' nodes='28' live='14' stamp='0.387'>
<phase_done name='ccp' nodes='28' live='14' stamp='0.387'/>
</phase>
<phase name='idealLoop' nodes='28' live='14' stamp='0.387'>
<phase_done name='idealLoop' nodes='28' live='14' stamp='0.387'/>
</phase>
<phase_done name='optimizer' nodes='28' live='14' stamp='0.387'/>
</phase>
<phase name='matcher' nodes='28' live='14' stamp='0.387'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.387'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.387'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='17' live='17' stamp='0.387'/>
</phase>
<phase name='output' nodes='17' live='17' stamp='0.387'>
<phase_done name='output' nodes='24' live='24' stamp='0.387'/>
</phase>
<code_cache total_blobs='311' nmethods='72' adapters='189' free_code_cache='49731136'/>
<task_done success='1' nmsize='120' count='8337' backedge_count='1' stamp='0.387'/>
</task>
<task compile_id='74' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='433' backedge_count='7816' iicount='433' stamp='0.388'>
<phase name='parse' nodes='3' live='3' stamp='0.388'>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<klass id='832' name='[Ljava/lang/reflect/Field;' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='833' holder='731' name='searchFields' return='768' arguments='832 730' flags='10' bytes='41' iicount='433'/>
<parse method='833' uses='433' stamp='0.388'>
<bc code='182' bci='1'/>
<method id='836' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='1801'/>
<call method='836' count='320' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='10'/>
<branch target_bci='39' taken='223' not_taken='9433' cnt='9656' prob='0.0230944'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='15'/>
<uncommon_trap bci='15' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='16'/>
<method id='837' holder='768' name='getName' return='730' flags='1' bytes='5' compile_id='73' compiler='C2' iicount='13337'/>
<call method='837' count='9433' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='837' uses='9433' stamp='0.388'>
<uncommon_trap bci='16' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='170' live='163' memory='49008' stamp='0.388'/>
</parse>
<bc code='166' bci='20'/>
<branch target_bci='33' taken='9335' not_taken='98' cnt='9433' prob='0.989611'/>
<bc code='184' bci='23'/>
<klass id='835' name='sun/reflect/ReflectionFactory' flags='1'/>
<method id='838' holder='731' name='getReflectionFactory' return='835' flags='10' bytes='26' iicount='293'/>
<call method='838' count='98' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='98' stamp='0.388'>
<bc code='183' bci='10'/>
<type id='724' name='void'/>
<klass id='842' name='sun/reflect/ReflectionFactory$GetReflectionFactoryAction' flags='25'/>
<method id='843' holder='842' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='4'/>
<call method='843' count='-1' prof_factor='0.334471' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='-1' stamp='0.388'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='849' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='849' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='-1' stamp='0.388'>
<parse_done nodes='260' live='252' memory='70904' stamp='0.388'/>
</parse>
<parse_done nodes='261' live='252' memory='71464' stamp='0.388'/>
</parse>
<bc code='184' bci='13'/>
<klass id='845' name='java/security/PrivilegedAction' flags='1537'/>
<klass id='844' name='java/security/AccessController' flags='17'/>
<method id='846' holder='844' name='doPrivileged' return='729' arguments='845' flags='265' bytes='0' iicount='206'/>
<call method='846' count='-1' prof_factor='0.334471' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='13'/>
<bc code='192' bci='16'/>
<dependency type='leaf_type' ctxk='835'/>
<uncommon_trap bci='16' reason='null_check' action='make_not_entrant'/>
<dependency type='leaf_type' ctxk='835'/>
<uncommon_trap bci='16' reason='class_check' action='maybe_recompile'/>
<parse_done nodes='337' live='325' memory='83208' stamp='0.388'/>
</parse>
<bc code='50' bci='28'/>
<uncommon_trap bci='28' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='29'/>
<method id='839' holder='835' name='copyField' return='768' arguments='768' flags='1' bytes='10' iicount='542'/>
<dependency type='unique_concrete_method' ctxk='835' x='839'/>
<call method='839' count='98' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='98' stamp='0.388'>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='0'/>
<klass id='852' name='sun/reflect/LangReflectAccess' flags='1537'/>
<method id='853' holder='835' name='langReflectAccess' return='852' flags='10' bytes='15' iicount='857'/>
<call method='853' count='-1' prof_factor='0.180812' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.388'>
<bc code='184' bci='7'/>
<type id='716' name='boolean'/>
<type id='722' name='int'/>
<klass id='856' name='java/lang/reflect/Modifier' flags='1'/>
<method id='857' holder='856' name='isPublic' return='716' arguments='722' flags='9' bytes='12' iicount='89'/>
<call method='857' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='7'/>
<parse_done nodes='444' live='429' memory='100808' stamp='0.388'/>
</parse>
<bc code='185' bci='4'/>
<method id='854' holder='852' name='copyField' return='768' arguments='768' flags='1025' bytes='0' iicount='1'/>
<call method='854' count='-1' prof_factor='0.180812' virtual='1' inline='1'/>
<virtual_call bci='4'/>
<parse_done nodes='469' live='453' memory='105464' stamp='0.388'/>
</parse>
<bc code='162' bci='10'/>
<branch target_bci='39' taken='223' not_taken='9433' cnt='9335' prob='0.0230944'/>
<parse_done nodes='487' live='469' memory='108944' stamp='0.388'/>
</parse>
<phase_done name='parse' nodes='489' live='284' stamp='0.388'/>
</phase>
<phase name='optimizer' nodes='489' live='284' stamp='0.388'>
<phase name='idealLoop' nodes='493' live='271' stamp='0.388'>
<loop_tree>
<loop idx='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='500' live='270' stamp='0.388'/>
</phase>
<phase name='escapeAnalysis' nodes='500' live='270' stamp='0.388'>
<phase name='connectionGraph' nodes='501' live='271' stamp='0.388'>
<phase_done name='connectionGraph' nodes='501' live='271' stamp='0.389'/>
</phase>
<phase_done name='escapeAnalysis' nodes='501' live='271' stamp='0.389'/>
</phase>
<phase name='idealLoop' nodes='501' live='271' stamp='0.389'>
<loop_tree>
<loop idx='499' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='263' stamp='0.389'/>
</phase>
<phase name='idealLoop' nodes='514' live='263' stamp='0.389'>
<loop_tree>
<loop idx='499' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='534' live='270' stamp='0.389'/>
</phase>
<phase name='idealLoop' nodes='534' live='270' stamp='0.389'>
<loop_tree>
<loop idx='643' inner_loop='1' main_loop='643' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='658' live='374' stamp='0.389'/>
</phase>
<phase name='ccp' nodes='658' live='374' stamp='0.389'>
<phase_done name='ccp' nodes='658' live='374' stamp='0.389'/>
</phase>
<phase name='idealLoop' nodes='659' live='371' stamp='0.389'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='643' inner_loop='1' main_loop='643' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='730' live='371' stamp='0.389'/>
</phase>
<phase name='idealLoop' nodes='730' live='371' stamp='0.389'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='799' live='422' stamp='0.390'/>
</phase>
<phase name='idealLoop' nodes='799' live='422' stamp='0.390'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='827' live='412' stamp='0.390'/>
</phase>
<phase name='idealLoop' nodes='827' live='412' stamp='0.390'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='845' live='398' stamp='0.390'/>
</phase>
<phase_done name='optimizer' nodes='915' live='414' stamp='0.390'/>
</phase>
<phase name='matcher' nodes='915' live='414' stamp='0.390'>
<phase_done name='matcher' nodes='352' live='352' stamp='0.391'/>
</phase>
<phase name='regalloc' nodes='477' live='469' stamp='0.391'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='521' live='493' stamp='0.392'/>
</phase>
<phase name='output' nodes='523' live='495' stamp='0.392'>
<phase_done name='output' nodes='553' live='510' stamp='0.392'/>
</phase>
<dependency type='leaf_type' ctxk='835'/>
<dependency type='unique_concrete_method' ctxk='835' x='839'/>
<code_cache total_blobs='317' nmethods='73' adapters='194' free_code_cache='49725760'/>
<task_done success='1' nmsize='808' count='435' backedge_count='7819' inlined_bytes='62' stamp='0.395'/>
</task>
<task compile_id='75' method='java/lang/String getChars (II[CI)V' bytes='62' count='5039' backedge_count='1' iicount='10041' stamp='0.416'>
<phase name='parse' nodes='3' live='3' stamp='0.416'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='10071'/>
<klass id='835' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='36' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<uncommon_trap method='832' bci='22' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<uncommon_trap method='832' bci='4' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<parse method='832' uses='10071' stamp='0.417'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='6814' not_taken='0' cnt='6814' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='6814' not_taken='0' cnt='6814' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='6814' not_taken='0' cnt='6814' prob='always'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='834' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='834' count='6814' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='95'/>
<parse_done nodes='187' live='181' memory='51688' stamp='0.417'/>
</parse>
<phase_done name='parse' nodes='189' live='129' stamp='0.417'/>
</phase>
<phase name='optimizer' nodes='189' live='129' stamp='0.417'>
<phase name='ccp' nodes='189' live='129' stamp='0.417'>
<phase_done name='ccp' nodes='189' live='129' stamp='0.417'/>
</phase>
<phase name='idealLoop' nodes='189' live='128' stamp='0.417'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.417'/>
</phase>
<phase name='idealLoop' nodes='189' live='125' stamp='0.417'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.417'/>
</phase>
<phase_done name='optimizer' nodes='195' live='128' stamp='0.417'/>
</phase>
<phase name='matcher' nodes='195' live='128' stamp='0.417'>
<phase_done name='matcher' nodes='118' live='118' stamp='0.417'/>
</phase>
<phase name='regalloc' nodes='158' live='156' stamp='0.417'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='198' live='185' stamp='0.418'/>
</phase>
<phase name='output' nodes='200' live='187' stamp='0.418'>
<phase_done name='output' nodes='219' live='199' stamp='0.418'/>
</phase>
<code_cache total_blobs='329' nmethods='74' adapters='205' free_code_cache='49718784'/>
<task_done success='1' nmsize='376' count='8895' backedge_count='1' stamp='0.419'/>
</task>
<task compile_id='76' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='8233' backedge_count='1' iicount='13235' stamp='0.419'>
<phase name='parse' nodes='3' live='3' stamp='0.419'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='13271'/>
<parse method='832' uses='13271' stamp='0.419'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='10020' not_taken='0' cnt='10020' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='834' count='10020' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='10020' stamp='0.419'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='69' live='66' memory='30696' stamp='0.419'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10083'/>
<call method='835' count='10020' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='10020' stamp='0.419'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5094' not_taken='1690' cnt='6784' prob='0.750884'/>
<bc code='183' bci='17'/>
<method id='839' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2468'/>
<call method='839' count='1690' prof_factor='0.993752' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='1679' stamp='0.420'>
<bc code='183' bci='31'/>
<method id='843' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='843' count='-1' prof_factor='0.680308' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='843' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='185' live='180' memory='50872' stamp='0.420'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='840' name='java/util/Arrays' flags='1'/>
<method id='841' holder='840' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3233'/>
<call method='841' count='1690' prof_factor='0.993752' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='1679' stamp='0.420'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='846' count='-1' prof_factor='0.519332' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='847' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='847' count='-1' prof_factor='0.519332' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='363' live='357' memory='88504' stamp='0.420'/>
</parse>
<parse_done nodes='390' live='383' memory='93840' stamp='0.420'/>
</parse>
<bc code='182' bci='35'/>
<method id='836' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13895'/>
<call method='836' count='10020' prof_factor='1' inline='1'/>
<klass id='849' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='36' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<uncommon_trap method='836' bci='22' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<uncommon_trap method='836' bci='4' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='10020' stamp='0.420'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='184' bci='58'/>
<call method='847' count='10596' prof_factor='0.721123' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='541' live='530' memory='131256' stamp='0.420'/>
</parse>
<parse_done nodes='558' live='546' memory='134792' stamp='0.420'/>
</parse>
<phase_done name='parse' nodes='560' live='336' stamp='0.420'/>
</phase>
<phase name='optimizer' nodes='560' live='336' stamp='0.420'>
<phase name='escapeAnalysis' nodes='564' live='331' stamp='0.420'>
<phase name='connectionGraph' nodes='565' live='332' stamp='0.420'>
<phase_done name='connectionGraph' nodes='565' live='332' stamp='0.420'/>
</phase>
<phase_done name='escapeAnalysis' nodes='565' live='332' stamp='0.420'/>
</phase>
<phase name='ccp' nodes='565' live='332' stamp='0.420'>
<phase_done name='ccp' nodes='565' live='332' stamp='0.420'/>
</phase>
<phase name='idealLoop' nodes='565' live='330' stamp='0.420'>
<phase_done name='idealLoop' nodes='585' live='332' stamp='0.421'/>
</phase>
<phase_done name='optimizer' nodes='656' live='374' stamp='0.421'/>
</phase>
<phase name='matcher' nodes='656' live='374' stamp='0.421'>
<phase_done name='matcher' nodes='369' live='369' stamp='0.421'/>
</phase>
<phase name='regalloc' nodes='471' live='466' stamp='0.421'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='633' live='567' stamp='0.424'/>
</phase>
<phase name='output' nodes='633' live='567' stamp='0.424'>
<phase_done name='output' nodes='657' live='583' stamp='0.424'/>
</phase>
<code_cache total_blobs='330' nmethods='75' adapters='205' free_code_cache='49715712'/>
<task_done success='1' nmsize='1064' count='6717' backedge_count='1' inlined_bytes='164' stamp='0.428'/>
</task>
<task compile_id='77' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='6189' backedge_count='1' iicount='21187' stamp='0.428'>
<phase name='parse' nodes='3' live='3' stamp='0.428'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='21203'/>
<parse method='832' uses='21203' stamp='0.428'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='76' compiler='C2' iicount='21715'/>
<call method='834' count='17928' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='21202' stamp='0.429'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21716' not_taken='0' cnt='21716' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='835' count='18416' prof_factor='0.976376' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='21203' stamp='0.429'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='79' live='76' memory='32856' stamp='0.429'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='836' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10083'/>
<call method='836' count='18416' prof_factor='0.976376' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='21203' stamp='0.429'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5094' not_taken='1690' cnt='6784' prob='0.750884'/>
<bc code='183' bci='17'/>
<method id='841' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2468'/>
<call method='841' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='1690' stamp='0.429'>
<bc code='183' bci='31'/>
<method id='845' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='845' count='-1' prof_factor='0.684765' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='845' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='195' live='190' memory='53080' stamp='0.429'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3233'/>
<call method='843' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='1690' stamp='0.429'>
<bc code='184' bci='11'/>
<klass id='847' name='java/lang/Math' flags='17'/>
<method id='848' holder='847' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='848' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='849' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='849' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='373' live='367' memory='89160' stamp='0.429'/>
</parse>
<parse_done nodes='400' live='393' memory='94496' stamp='0.429'/>
</parse>
<bc code='182' bci='35'/>
<method id='837' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13895'/>
<call method='837' count='18416' prof_factor='0.976376' inline='1'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='837' bci='36' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<uncommon_trap method='837' bci='22' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<uncommon_trap method='837' bci='4' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='21203' stamp='0.429'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='184' bci='58'/>
<call method='849' count='10596' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='551' live='540' memory='133416' stamp='0.429'/>
</parse>
<parse_done nodes='568' live='556' memory='138008' stamp='0.429'/>
</parse>
<parse_done nodes='571' live='558' memory='138928' stamp='0.429'/>
</parse>
<phase_done name='parse' nodes='573' live='336' stamp='0.429'/>
</phase>
<phase name='optimizer' nodes='573' live='336' stamp='0.429'>
<phase name='escapeAnalysis' nodes='577' live='331' stamp='0.430'>
<phase name='connectionGraph' nodes='578' live='332' stamp='0.430'>
<phase_done name='connectionGraph' nodes='578' live='332' stamp='0.430'/>
</phase>
<phase_done name='escapeAnalysis' nodes='578' live='332' stamp='0.430'/>
</phase>
<phase name='ccp' nodes='578' live='332' stamp='0.430'>
<phase_done name='ccp' nodes='578' live='332' stamp='0.430'/>
</phase>
<phase name='idealLoop' nodes='578' live='330' stamp='0.430'>
<phase_done name='idealLoop' nodes='598' live='332' stamp='0.430'/>
</phase>
<phase_done name='optimizer' nodes='669' live='374' stamp='0.430'/>
</phase>
<phase name='matcher' nodes='669' live='374' stamp='0.430'>
<phase_done name='matcher' nodes='369' live='369' stamp='0.430'/>
</phase>
<phase name='regalloc' nodes='471' live='466' stamp='0.431'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='639' live='573' stamp='0.434'/>
</phase>
<phase name='output' nodes='639' live='573' stamp='0.434'>
<phase_done name='output' nodes='663' live='589' stamp='0.434'/>
</phase>
<code_cache total_blobs='332' nmethods='76' adapters='205' free_code_cache='49707136'/>
<task_done success='1' nmsize='1064' count='5786' backedge_count='1' inlined_bytes='214' stamp='0.439'/>
</task>
<task compile_id='78' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='5000' backedge_count='5002' iicount='9999' stamp='0.439'>
<phase name='parse' nodes='3' live='3' stamp='0.439'>
<type id='722' name='int'/>
<type id='723' name='long'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' iicount='9999'/>
<parse method='832' uses='9999' stamp='0.440'>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='8277' not_taken='15714' cnt='23991' prob='0.345004'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='15714' not_taken='0' cnt='15714' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='8277' not_taken='15714' cnt='23991' prob='0.345004'/>
<parse_done nodes='249' live='240' memory='61256' stamp='0.440'/>
</parse>
<phase_done name='parse' nodes='250' live='169' stamp='0.440'/>
</phase>
<phase name='optimizer' nodes='250' live='169' stamp='0.440'>
<phase name='idealLoop' nodes='250' live='159' stamp='0.440'>
<loop_tree>
<loop idx='250' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='173' stamp='0.440'/>
</phase>
<phase name='idealLoop' nodes='339' live='173' stamp='0.440'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='153' stamp='0.440'/>
</phase>
<phase name='idealLoop' nodes='339' live='153' stamp='0.440'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='153' stamp='0.440'/>
</phase>
<phase name='ccp' nodes='339' live='153' stamp='0.440'>
<phase_done name='ccp' nodes='339' live='153' stamp='0.440'/>
</phase>
<phase name='idealLoop' nodes='339' live='152' stamp='0.440'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='345' live='152' stamp='0.441'/>
</phase>
<phase_done name='optimizer' nodes='348' live='151' stamp='0.441'/>
</phase>
<phase name='matcher' nodes='348' live='151' stamp='0.441'>
<phase_done name='matcher' nodes='139' live='139' stamp='0.441'/>
</phase>
<phase name='regalloc' nodes='172' live='171' stamp='0.441'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='243' live='222' stamp='0.441'/>
</phase>
<phase name='output' nodes='243' live='222' stamp='0.441'>
<phase_done name='output' nodes='259' live='231' stamp='0.442'/>
</phase>
<code_cache total_blobs='334' nmethods='77' adapters='205' free_code_cache='49685376'/>
<task_done success='1' nmsize='504' count='5000' backedge_count='5002' stamp='0.443'/>
</task>
<task compile_id='79' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='8459' backedge_count='1' iicount='13460' stamp='0.443'>
<phase name='parse' nodes='3' live='3' stamp='0.443'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='13482'/>
<parse method='832' uses='13482' stamp='0.443'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='834' count='10217' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='10217' stamp='0.444'>
<parse_done nodes='51' live='50' memory='26632' stamp='0.444'/>
</parse>
<parse_done nodes='69' live='67' memory='30360' stamp='0.444'/>
</parse>
<phase_done name='parse' nodes='70' live='31' stamp='0.444'/>
</phase>
<phase name='optimizer' nodes='70' live='31' stamp='0.444'>
<phase name='ccp' nodes='70' live='26' stamp='0.444'>
<phase_done name='ccp' nodes='70' live='26' stamp='0.444'/>
</phase>
<phase name='idealLoop' nodes='70' live='26' stamp='0.444'>
<phase_done name='idealLoop' nodes='70' live='26' stamp='0.444'/>
</phase>
<phase_done name='optimizer' nodes='70' live='26' stamp='0.444'/>
</phase>
<phase name='matcher' nodes='70' live='26' stamp='0.444'>
<phase_done name='matcher' nodes='25' live='25' stamp='0.444'/>
</phase>
<phase name='regalloc' nodes='27' live='27' stamp='0.444'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='27' live='27' stamp='0.444'/>
</phase>
<phase name='output' nodes='27' live='27' stamp='0.444'>
<phase_done name='output' nodes='34' live='34' stamp='0.593'/>
</phase>
<code_cache total_blobs='334' nmethods='79' adapters='205' free_code_cache='49672128'/>
<task_done success='1' nmsize='120' count='6745' backedge_count='1' inlined_bytes='1' stamp='0.593'/>
</task>
<task compile_id='81' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='9972' backedge_count='1' iicount='14974' stamp='0.593'>
<phase name='parse' nodes='3' live='3' stamp='0.593'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='toHexString' return='730' arguments='723' flags='9' bytes='6' iicount='14999'/>
<parse method='832' uses='14999' stamp='0.593'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='834' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' iicount='15078'/>
<call method='834' count='11737' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='14995' stamp='0.593'>
<bc code='184' bci='3'/>
<method id='835' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='15136'/>
<call method='835' count='11873' prof_factor='0.994495' inline='1'/>
<intrinsic id='_numberOfLeadingZeros_l' nodes='1'/>
<bc code='184' bci='16'/>
<klass id='836' name='java/lang/Math' flags='17'/>
<method id='837' holder='836' name='max' return='722' arguments='722 722' flags='9' bytes='11' iicount='15476'/>
<call method='837' count='11873' prof_factor='0.994495' inline='1'/>
<intrinsic id='_max' nodes='3'/>
<bc code='184' bci='34'/>
<klass id='821' name='[C' flags='1041'/>
<method id='838' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' compile_id='78' compiler='C2' iicount='11600'/>
<call method='838' count='11873' prof_factor='0.994495' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='14994' stamp='0.594'>
<bc code='52' bci='32'/>
<observe that='!need_range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9878' not_taken='18916' cnt='28794' prob='0.343058'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='18916' not_taken='0' cnt='18916' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<observe that='!need_range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9878' not_taken='18916' cnt='28794' prob='0.343058'/>
<parse_done nodes='294' live='288' memory='76744' stamp='0.594'/>
</parse>
<bc code='183' bci='45'/>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<method id='839' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' compile_id='79' compiler='C2' iicount='16744'/>
<call method='839' count='11873' prof_factor='0.994495' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='14994' stamp='0.594'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='844' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='844' count='13445' prof_factor='0.895485' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='14994' stamp='0.594'>
<parse_done nodes='362' live='355' memory='88312' stamp='0.594'/>
</parse>
<parse_done nodes='382' live='374' memory='91432' stamp='0.594'/>
</parse>
<parse_done nodes='384' live='375' memory='92168' stamp='0.594'/>
</parse>
<parse_done nodes='386' live='376' memory='93264' stamp='0.594'/>
</parse>
<phase_done name='parse' nodes='388' live='227' stamp='0.594'/>
</phase>
<phase name='optimizer' nodes='388' live='227' stamp='0.594'>
<phase name='idealLoop' nodes='388' live='205' stamp='0.595'>
<loop_tree>
<loop idx='388' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='389' live='205' stamp='0.595'/>
</phase>
<phase name='escapeAnalysis' nodes='389' live='205' stamp='0.595'>
<phase name='connectionGraph' nodes='391' live='207' stamp='0.595'>
<phase_done name='connectionGraph' nodes='391' live='207' stamp='0.595'/>
</phase>
<phase_done name='escapeAnalysis' nodes='391' live='207' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='391' live='207' stamp='0.595'>
<loop_tree>
<loop idx='388' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='458' live='226' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='458' live='226' stamp='0.595'>
<loop_tree>
<loop idx='465' main_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='610' live='308' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='610' live='308' stamp='0.595'>
<loop_tree>
<loop idx='541' inner_loop='1' pre_loop='465' >
</loop>
<loop idx='465' inner_loop='1' main_loop='465' >
</loop>
<loop idx='486' inner_loop='1' post_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='610' live='308' stamp='0.595'/>
</phase>
<phase name='ccp' nodes='610' live='308' stamp='0.595'>
<phase_done name='ccp' nodes='610' live='308' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='614' live='306' stamp='0.596'>
<loop_tree>
<loop idx='541' inner_loop='1' pre_loop='465' >
</loop>
<loop idx='465' inner_loop='1' main_loop='465' >
</loop>
<loop idx='486' inner_loop='1' post_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='620' live='303' stamp='0.596'/>
</phase>
<phase_done name='optimizer' nodes='744' live='378' stamp='0.596'/>
</phase>
<phase name='matcher' nodes='744' live='378' stamp='0.596'>
<phase_done name='matcher' nodes='330' live='330' stamp='0.596'/>
</phase>
<phase name='regalloc' nodes='405' live='405' stamp='0.596'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='509' live='461' stamp='0.598'/>
</phase>
<phase name='output' nodes='513' live='465' stamp='0.598'>
<phase_done name='output' nodes='536' live='477' stamp='0.598'/>
</phase>
<code_cache total_blobs='336' nmethods='81' adapters='205' free_code_cache='49669056'/>
<task_done success='1' nmsize='888' count='9422' backedge_count='1' inlined_bytes='217' stamp='0.602'/>
</task>
<task compile_id='83' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='9422' backedge_count='1' iicount='29419' stamp='0.602'>
<phase name='parse' nodes='3' live='3' stamp='0.602'>
<type id='722' name='int'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='29419'/>
<parse method='832' uses='29419' stamp='0.602'>
<bc code='154' bci='3'/>
<branch target_bci='9' taken='29420' not_taken='0' cnt='29420' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='18'/>
<branch target_bci='27' taken='0' not_taken='29420' cnt='29420' prob='never'/>
<uncommon_trap bci='18' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='31'/>
<branch target_bci='42' taken='0' not_taken='29420' cnt='29420' prob='never'/>
<uncommon_trap bci='31' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='46'/>
<branch target_bci='57' taken='29420' not_taken='0' cnt='29420' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='61'/>
<branch target_bci='71' taken='0' not_taken='29420' cnt='29420' prob='never'/>
<uncommon_trap bci='61' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='75'/>
<branch target_bci='85' taken='21601' not_taken='7819' cnt='29420' prob='0.734228'/>
<parse_done nodes='135' live='129' memory='41360' stamp='0.602'/>
</parse>
<phase_done name='parse' nodes='136' live='91' stamp='0.602'/>
</phase>
<phase name='optimizer' nodes='136' live='91' stamp='0.602'>
<phase name='ccp' nodes='136' live='87' stamp='0.602'>
<phase_done name='ccp' nodes='136' live='87' stamp='0.602'/>
</phase>
<phase name='idealLoop' nodes='136' live='87' stamp='0.602'>
<phase_done name='idealLoop' nodes='139' live='87' stamp='0.602'/>
</phase>
<phase_done name='optimizer' nodes='143' live='91' stamp='0.602'/>
</phase>
<phase name='matcher' nodes='143' live='91' stamp='0.602'>
<phase_done name='matcher' nodes='96' live='96' stamp='0.602'/>
</phase>
<phase name='regalloc' nodes='117' live='117' stamp='0.602'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='130' live='128' stamp='0.602'/>
</phase>
<phase name='output' nodes='130' live='128' stamp='0.602'>
<phase_done name='output' nodes='144' live='137' stamp='0.610'/>
</phase>
<code_cache total_blobs='338' nmethods='83' adapters='205' free_code_cache='49664832'/>
<task_done success='1' nmsize='280' count='9422' backedge_count='1' stamp='0.611'/>
</task>
<task compile_id='85' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5083' backedge_count='1' iicount='10086' stamp='1.134'>
<phase name='parse' nodes='3' live='3' stamp='1.134'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='10155'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='8' reason='unloaded' action='reinterpret' index='2' klass='838'/>
<parse method='833' uses='10155' stamp='1.134'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='6946' not_taken='0' cnt='6946' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='54'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='836' count='6950' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='837' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='837' count='6951' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='114'/>
<parse_done nodes='230' live='227' memory='57056' stamp='1.134'/>
</parse>
<phase_done name='parse' nodes='232' live='164' stamp='1.134'/>
</phase>
<phase name='optimizer' nodes='232' live='164' stamp='1.134'>
<phase name='escapeAnalysis' nodes='232' live='163' stamp='1.135'>
<phase name='connectionGraph' nodes='233' live='164' stamp='1.135'>
<phase_done name='connectionGraph' nodes='233' live='164' stamp='1.135'/>
</phase>
<phase_done name='escapeAnalysis' nodes='233' live='164' stamp='1.135'/>
</phase>
<phase name='ccp' nodes='233' live='164' stamp='1.135'>
<phase_done name='ccp' nodes='233' live='164' stamp='1.135'/>
</phase>
<phase name='idealLoop' nodes='237' live='161' stamp='1.135'>
<phase_done name='idealLoop' nodes='240' live='161' stamp='1.135'/>
</phase>
<phase_done name='optimizer' nodes='295' live='199' stamp='1.135'/>
</phase>
<phase name='matcher' nodes='295' live='199' stamp='1.135'>
<phase_done name='matcher' nodes='194' live='194' stamp='1.135'/>
</phase>
<phase name='regalloc' nodes='245' live='244' stamp='1.135'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='306' live='286' stamp='1.136'/>
</phase>
<phase name='output' nodes='308' live='288' stamp='1.136'>
<phase_done name='output' nodes='322' live='298' stamp='1.136'/>
</phase>
<code_cache total_blobs='340' nmethods='85' adapters='205' free_code_cache='49654976'/>
<task_done success='1' nmsize='536' count='9972' backedge_count='1' inlined_bytes='11' stamp='1.138'/>
</task>
<task compile_id='87' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='5090' backedge_count='1' iicount='10093' stamp='1.151'>
<phase name='parse' nodes='3' live='3' stamp='1.151'>
<type id='724' name='void'/>
<klass id='833' name='[Ljava/lang/Object;' flags='1041'/>
<klass id='832' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<method id='834' holder='832' name='consume' return='724' arguments='833' flags='17' bytes='42' iicount='10179'/>
<parse method='834' uses='10179' stamp='1.151'>
<bc code='154' bci='24'/>
<branch target_bci='41' taken='6967' not_taken='1' cnt='6968' prob='0.999856'/>
<parse_done nodes='85' live='84' memory='32192' stamp='1.151'/>
</parse>
<phase_done name='parse' nodes='86' live='65' stamp='1.151'/>
</phase>
<phase name='optimizer' nodes='86' live='65' stamp='1.151'>
<phase name='ccp' nodes='86' live='65' stamp='1.151'>
<phase_done name='ccp' nodes='86' live='65' stamp='1.151'/>
</phase>
<phase name='idealLoop' nodes='86' live='65' stamp='1.151'>
<phase_done name='idealLoop' nodes='86' live='65' stamp='1.151'/>
</phase>
<phase_done name='optimizer' nodes='86' live='65' stamp='1.151'/>
</phase>
<phase name='matcher' nodes='86' live='65' stamp='1.151'>
<phase_done name='matcher' nodes='61' live='61' stamp='1.151'/>
</phase>
<phase name='regalloc' nodes='67' live='67' stamp='1.151'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='67' live='67' stamp='1.151'/>
</phase>
<phase name='output' nodes='67' live='67' stamp='1.151'>
<phase_done name='output' nodes='76' live='74' stamp='1.151'/>
</phase>
<code_cache total_blobs='342' nmethods='87' adapters='205' free_code_cache='49648576'/>
<task_done success='1' nmsize='184' count='9714' backedge_count='1' stamp='1.152'/>
</task>
<task compile_id='90' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5021' iicount='25' stamp='2.202'>
<phase name='parse' nodes='3' live='3' stamp='2.202'>
<klass id='834' name='[Ljava/io/ObjectStreamField;' flags='1041'/>
<klass id='832' name='java/io/ObjectStreamClass' flags='1'/>
<method id='835' holder='832' name='matchFields' return='834' arguments='834 832' flags='10' bytes='247' iicount='25'/>
<klass id='849' name='java/io/InvalidClassException' unloaded='1'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<parse method='835' uses='25' stamp='2.202'>
<bc code='198' bci='1'/>
<branch target_bci='11' taken='0' not_taken='10'/>
<bc code='190' bci='16'/>
<uncommon_trap bci='16' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='11' not_taken='262' cnt='273' prob='0.040293'/>
<uncommon_trap bci='31' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='31' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='34'/>
<uncommon_trap bci='34' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='46'/>
<uncommon_trap bci='46' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='263' not_taken='31224' cnt='31487' prob='0.00835265'/>
<uncommon_trap bci='50' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='53'/>
<uncommon_trap bci='53' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='58'/>
<klass id='833' name='java/io/ObjectStreamField' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='840' holder='833' name='getName' return='730' flags='1' bytes='5' compile_id='65' compiler='C2' iicount='36372'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='31224' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='31224' stamp='2.202'>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='293' live='283' memory='77392' stamp='2.202'/>
</parse>
<bc code='182' bci='63'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='31224' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='31224' stamp='2.202'>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='322' live='310' memory='82408' stamp='2.202'/>
</parse>
<bc code='182' bci='66'/>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='843' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' compile_id='36' compiler='C2' iicount='1360'/>
<call method='843' count='31224' prof_factor='1' inline='1'/>
<uncommon_trap bci='66' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='66' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_equals' nodes='74'/>
<bc code='153' bci='69'/>
<branch target_bci='192' taken='30962' not_taken='262' cnt='31224' prob='0.991609'/>
<bc code='182' bci='74'/>
<method id='844' holder='833' name='isPrimitive' return='716' flags='1' bytes='27' iicount='2005'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='262' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='262' stamp='2.202'>
<bc code='182' bci='5'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='853' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='853' count='-1' prof_factor='0.130673' inline='1'/>
<klass id='855' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='853' bci='13' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.203'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='511' live='492' memory='110800' stamp='2.203'/>
</parse>
<parse_done nodes='535' live='515' memory='126208' stamp='2.203'/>
</parse>
<bc code='154' bci='77'/>
<branch target_bci='88' taken='249' not_taken='13' cnt='262' prob='0.950382'/>
<bc code='182' bci='82'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='13' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='13' stamp='2.203'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.00648379' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.203'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='647' live='622' memory='145776' stamp='2.203'/>
</parse>
<parse_done nodes='669' live='643' memory='148704' stamp='2.203'/>
</parse>
<bc code='153' bci='85'/>
<branch target_bci='137' taken='13' not_taken='0'/>
<bc code='182' bci='90'/>
<method id='845' holder='833' name='getTypeCode' return='717' flags='1' bytes='9' iicount='1867'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='249' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='249' stamp='2.203'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.133369' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.203'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='782' live='751' memory='167672' stamp='2.203'/>
</parse>
<parse_done nodes='785' live='753' memory='168288' stamp='2.203'/>
</parse>
<bc code='182' bci='95'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='249' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='249' stamp='2.203'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.133369' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.203'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='889' live='852' memory='184040' stamp='2.203'/>
</parse>
<parse_done nodes='892' live='854' memory='184656' stamp='2.203'/>
</parse>
<bc code='159' bci='98'/>
<branch target_bci='137' taken='249' not_taken='0' cnt='249' prob='always'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='139'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='846' holder='833' name='getField' return='768' flags='0' bytes='5' iicount='1453'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='262' stamp='2.203'>
<parse_done nodes='921' live='881' memory='191176' stamp='2.203'/>
</parse>
<bc code='198' bci='142'/>
<branch target_bci='168' taken='0' not_taken='262' cnt='262' prob='never'/>
<uncommon_trap bci='142' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='151'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='262' stamp='2.203'>
<parse_done nodes='984' live='942' memory='207768' stamp='2.203'/>
</parse>
<bc code='182' bci='156'/>
<method id='847' holder='833' name='isUnshared' return='716' flags='1' bytes='5' iicount='456'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<call method='847' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='847' uses='262' stamp='2.203'>
<parse_done nodes='1006' live='963' memory='212424' stamp='2.203'/>
</parse>
<bc code='183' bci='160'/>
<type id='724' name='void'/>
<method id='848' holder='833' name='&lt;init&gt;' return='724' arguments='768 716 716' flags='0' bytes='69' iicount='684'/>
<call method='848' count='262' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='262' stamp='2.203'>
<bc code='183' bci='1'/>
<method id='860' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='860' count='-1' prof_factor='0.383041' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.203'>
<parse_done nodes='1050' live='1006' memory='249664' stamp='2.203'/>
</parse>
<bc code='182' bci='21'/>
<method id='861' holder='768' name='getName' return='730' flags='1' bytes='5' compile_id='73' compiler='C2' iicount='13337'/>
<call method='861' count='-1' prof_factor='0.383041' inline='1'/>
<inline_success reason='accessor'/>
<parse method='861' uses='-1' stamp='2.203'>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1103' live='1057' memory='260224' stamp='2.203'/>
</parse>
<bc code='182' bci='28'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='862' holder='768' name='getType' return='731' flags='1' bytes='5' iicount='804'/>
<call method='862' count='-1' prof_factor='0.383041' inline='1'/>
<inline_success reason='accessor'/>
<parse method='862' uses='-1' stamp='2.203'>
<parse_done nodes='1135' live='1088' memory='269336' stamp='2.204'/>
</parse>
<bc code='182' bci='40'/>
<method id='865' holder='731' name='isPrimitive' return='716' flags='257' bytes='0' iicount='3851'/>
<call method='865' count='-1' prof_factor='0.383041' inline='1'/>
<uncommon_trap bci='40' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isPrimitive' nodes='26'/>
<bc code='184' bci='59'/>
<method id='863' holder='833' name='getClassSignature' return='730' arguments='731' flags='10' bytes='242' iicount='726'/>
<call method='863' count='-1' prof_factor='0.383041' inline='1'/>
<klass id='888' name='java/lang/InternalError' unloaded='1'/>
<uncommon_trap method='863' bci='190' reason='unloaded' action='reinterpret' index='45' klass='888'/>
<inline_success reason='inline (hot)'/>
<parse method='863' uses='-1' stamp='2.204'>
<bc code='183' bci='4'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='871' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='3003'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='4'/>
<bc code='182' bci='9'/>
<method id='872' holder='731' name='isArray' return='716' flags='257' bytes='0' iicount='2195'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isArray' nodes='17'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='18'/>
<method id='873' holder='795' name='append' return='795' arguments='717' flags='1' bytes='8' iicount='2452'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<bc code='182' bci='23'/>
<method id='889' holder='731' name='getComponentType' return='731' flags='257' bytes='0' iicount='391'/>
<call method='889' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_getComponentType' nodes='40'/>
<bc code='182' bci='9'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isArray' nodes='30'/>
<bc code='182' bci='31'/>
<call method='865' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isPrimitive' nodes='12'/>
<bc code='182' bci='47'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='47'/>
<bc code='182' bci='64'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='64'/>
<bc code='182' bci='81'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='81'/>
<bc code='182' bci='98'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='98'/>
<bc code='182' bci='115'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='115'/>
<bc code='182' bci='132'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='132'/>
<bc code='182' bci='149'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='149'/>
<bc code='182' bci='166'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='166'/>
<bc code='182' bci='183'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='183'/>
<bc code='187' bci='190'/>
<uncommon_trap bci='190' reason='unloaded' action='reinterpret' index='45'/>
<bc code='183' bci='203'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='208'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='208'/>
<bc code='182' bci='212'/>
<method id='874' holder='731' name='getName' return='730' flags='1' bytes='21' iicount='2458'/>
<call method='874' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='-1' stamp='2.204'>
<bc code='183' bci='11'/>
<method id='902' holder='731' name='getName0' return='730' flags='258' bytes='0' iicount='128'/>
<call method='902' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='11'/>
<parse_done nodes='1814' live='1759' memory='391168' stamp='2.204'/>
</parse>
<bc code='182' bci='219'/>
<method id='875' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='803'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='219'/>
<uncommon_trap bci='219' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='222'/>
<method id='876' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='77' compiler='C2' iicount='25783'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='222'/>
<uncommon_trap bci='222' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='227'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='227'/>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='230'/>
<method id='877' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='3157'/>
<call method='877' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='230'/>
<uncommon_trap bci='230' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='233'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='233'/>
<bc code='182' bci='238'/>
<call method='877' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='238'/>
<parse_done nodes='1978' live='1918' memory='425720' stamp='2.205'/>
</parse>
<bc code='182' bci='62'/>
<method id='864' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='2561'/>
<call method='864' count='-1' prof_factor='0.383041' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='62'/>
<uncommon_trap bci='62' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='2037' live='1975' memory='439184' stamp='2.205'/>
</parse>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='263' not_taken='31224' cnt='31224' prob='0.00835265'/>
<bc code='199' bci='200'/>
<branch target_bci='223' taken='263' not_taken='0' cnt='263' prob='always'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='227'/>
<method id='838' holder='833' name='getOffset' return='722' flags='1' bytes='5' iicount='684'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<call method='838' count='263' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='838' uses='263' stamp='2.205'>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='2110' live='2045' memory='504464' stamp='2.205'/>
</parse>
<bc code='182' bci='230'/>
<method id='839' holder='833' name='setOffset' return='724' arguments='722' flags='4' bytes='6' iicount='1017'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<call method='839' count='263' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='263' stamp='2.205'>
<parse_done nodes='2126' live='2060' memory='507416' stamp='2.205'/>
</parse>
<bc code='83' bci='238'/>
<uncommon_trap bci='238' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='11' not_taken='262' cnt='263' prob='0.040293'/>
<parse_done nodes='2183' live='2115' memory='518192' stamp='2.205'/>
</parse>
<late_inline method='877'>
<jvms bci='238' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='877' uses='-1' stamp='2.205'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='906' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='6146'/>
<call method='906' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap method='906' bci='58' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<uncommon_trap method='906' bci='25' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<uncommon_trap method='906' bci='8' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<inline_success reason='inline (hot)'/>
<parse method='906' uses='-1' stamp='2.205'>
<bc code='183' bci='1'/>
<call method='860' count='2847' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='6148' stamp='2.205'>
<parse_done nodes='2264' live='1346' memory='532856' stamp='2.205'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='6148' not_taken='0' cnt='6148' prob='always'/>
<bc code='157' bci='18'/>
<branch target_bci='50' taken='6111' not_taken='37' cnt='6148' prob='0.993982'/>
<bc code='156' bci='22'/>
<branch target_bci='34' taken='37' not_taken='0'/>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='163' bci='37'/>
<branch target_bci='50' taken='0' not_taken='37'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='55'/>
<branch target_bci='69' taken='6111' not_taken='0' cnt='6111' prob='always'/>
<uncommon_trap bci='55' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='75'/>
<klass id='911' name='java/util/Arrays' flags='1'/>
<method id='912' holder='911' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='19971'/>
<call method='912' count='2830' prof_factor='1' inline='1'/>
<klass id='919' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='912' bci='8' reason='unloaded' action='reinterpret' index='2' klass='919'/>
<inline_success reason='inline (hot)'/>
<parse method='912' uses='6111' stamp='2.206'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='916' name='java/lang/Math' flags='17'/>
<method id='917' holder='916' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='917' count='16673' prof_factor='0.305994' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='918' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='918' count='16674' prof_factor='0.305994' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='2558' live='1633' memory='584944' stamp='2.206'/>
</parse>
<parse_done nodes='2573' live='1647' memory='587936' stamp='2.206'/>
</parse>
<parse_done nodes='2583' live='1656' memory='590536' stamp='2.206'/>
</parse>
<late_inline method='877'>
<jvms bci='230' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='877' uses='-1' stamp='2.206'>
<bc code='183' bci='13'/>
<call method='906' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='906' uses='-1' stamp='2.206'>
<bc code='183' bci='1'/>
<call method='860' count='2847' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='6148' stamp='2.206'>
<parse_done nodes='2654' live='1725' memory='604576' stamp='2.206'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='6148' not_taken='0' cnt='6148' prob='always'/>
<bc code='157' bci='18'/>
<branch target_bci='50' taken='6111' not_taken='37' cnt='6148' prob='0.993982'/>
<bc code='156' bci='22'/>
<branch target_bci='34' taken='37' not_taken='0'/>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='163' bci='37'/>
<branch target_bci='50' taken='0' not_taken='37'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='55'/>
<branch target_bci='69' taken='6111' not_taken='0' cnt='6111' prob='always'/>
<uncommon_trap bci='55' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='75'/>
<call method='912' count='2830' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='912' uses='6111' stamp='2.206'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='917' count='16673' prof_factor='0.305994' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='918' count='16674' prof_factor='0.305994' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='2935' live='1999' memory='657928' stamp='2.206'/>
</parse>
<parse_done nodes='2950' live='2013' memory='660920' stamp='2.206'/>
</parse>
<parse_done nodes='2960' live='2022' memory='663488' stamp='2.206'/>
</parse>
<late_inline method='873'>
<jvms bci='227' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.206'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='892' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='3264'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.206'>
<bc code='183' bci='7'/>
<method id='922' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10083'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3043' live='2101' memory='679688' stamp='2.206'/>
</parse>
<parse_done nodes='3047' live='2104' memory='681480' stamp='2.206'/>
</parse>
<late_inline method='873'>
<jvms bci='208' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.206'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.206'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3130' live='2183' memory='703960' stamp='2.207'/>
</parse>
<parse_done nodes='3134' live='2186' memory='705752' stamp='2.207'/>
</parse>
<late_inline method='871'>
<jvms bci='203' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='871' uses='-1' stamp='2.207'>
<bc code='183' bci='3'/>
<method id='891' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='3769'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='2.207'>
<bc code='183' bci='1'/>
<call method='860' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.207'>
<parse_done nodes='3179' live='2229' memory='715112' stamp='2.207'/>
</parse>
<parse_done nodes='3221' live='2270' memory='724656' stamp='2.207'/>
</parse>
<parse_done nodes='3227' live='2275' memory='726848' stamp='2.207'/>
</parse>
<late_inline method='873'>
<jvms bci='183' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.207'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.207'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3310' live='2354' memory='745056' stamp='2.207'/>
</parse>
<parse_done nodes='3314' live='2357' memory='746832' stamp='2.207'/>
</parse>
<late_inline method='873'>
<jvms bci='166' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.207'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.207'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3397' live='2436' memory='764608' stamp='2.207'/>
</parse>
<parse_done nodes='3401' live='2439' memory='767408' stamp='2.207'/>
</parse>
<late_inline method='873'>
<jvms bci='149' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.207'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.207'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3484' live='2518' memory='787104' stamp='2.207'/>
</parse>
<parse_done nodes='3488' live='2521' memory='788880' stamp='2.207'/>
</parse>
<late_inline method='873'>
<jvms bci='132' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.207'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.207'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3571' live='2600' memory='805160' stamp='2.207'/>
</parse>
<parse_done nodes='3575' live='2603' memory='806936' stamp='2.207'/>
</parse>
<late_inline method='873'>
<jvms bci='115' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.207'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.207'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3658' live='2682' memory='822984' stamp='2.208'/>
</parse>
<parse_done nodes='3662' live='2685' memory='824760' stamp='2.208'/>
</parse>
<late_inline method='873'>
<jvms bci='98' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.208'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.208'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3745' live='2764' memory='904184' stamp='2.208'/>
</parse>
<parse_done nodes='3749' live='2767' memory='905960' stamp='2.208'/>
</parse>
<late_inline method='873'>
<jvms bci='81' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.208'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.208'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3832' live='2846' memory='922528' stamp='2.208'/>
</parse>
<parse_done nodes='3836' live='2849' memory='924304' stamp='2.208'/>
</parse>
<late_inline method='873'>
<jvms bci='64' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.208'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.208'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3919' live='2928' memory='942632' stamp='2.208'/>
</parse>
<parse_done nodes='3923' live='2931' memory='944408' stamp='2.208'/>
</parse>
<late_inline method='873'>
<jvms bci='47' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.208'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.208'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4006' live='3010' memory='959872' stamp='2.208'/>
</parse>
<parse_done nodes='4010' live='3013' memory='961648' stamp='2.208'/>
</parse>
<late_inline method='873'>
<jvms bci='18' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.208'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.208'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4095' live='3094' memory='977624' stamp='2.208'/>
</parse>
<parse_done nodes='4099' live='3097' memory='1114928' stamp='2.208'/>
</parse>
<late_inline method='871'>
<jvms bci='4' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='871' uses='-1' stamp='2.208'>
<bc code='183' bci='3'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='2.208'>
<bc code='183' bci='1'/>
<call method='860' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.208'>
<parse_done nodes='4149' live='3145' memory='1125168' stamp='2.208'/>
</parse>
<parse_done nodes='4195' live='3190' memory='1135584' stamp='2.209'/>
</parse>
<parse_done nodes='4208' live='3202' memory='1138896' stamp='2.209'/>
</parse>
<phase_done name='parse' nodes='4208' live='2101' stamp='2.209'/>
</phase>
<phase name='optimizer' nodes='4208' live='2101' stamp='2.209'>
<phase name='idealLoop' nodes='1938' live='1938' stamp='2.210'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1959' live='1936' stamp='2.211'/>
</phase>
<phase name='escapeAnalysis' nodes='1959' live='1936' stamp='2.211'>
<phase name='connectionGraph' nodes='1960' live='1937' stamp='2.211'>
<phase_done name='connectionGraph' nodes='1960' live='1937' stamp='2.212'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1960' live='1937' stamp='2.212'/>
</phase>
<phase name='idealLoop' nodes='1960' live='1937' stamp='2.212'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2077' live='1923' stamp='2.214'/>
</phase>
<phase name='idealLoop' nodes='2077' live='1923' stamp='2.214'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2164' live='1922' stamp='2.216'/>
</phase>
<phase name='idealLoop' nodes='2164' live='1922' stamp='2.216'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2164' live='1916' stamp='2.217'/>
</phase>
<phase name='ccp' nodes='2164' live='1916' stamp='2.218'>
<phase_done name='ccp' nodes='2164' live='1916' stamp='2.218'/>
</phase>
<phase name='idealLoop' nodes='2185' live='1900' stamp='2.218'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2228' live='1871' stamp='2.220'/>
</phase>
<phase name='idealLoop' nodes='2228' live='1871' stamp='2.220'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2268' live='1857' stamp='2.221'/>
</phase>
<phase name='idealLoop' nodes='2268' live='1857' stamp='2.221'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2308' live='1812' stamp='2.222'/>
</phase>
<phase name='idealLoop' nodes='2308' live='1812' stamp='2.222'>
<loop_tree>
<loop idx='1946' >
<loop idx='1952' >
<loop idx='1940' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2348' live='1812' stamp='2.224'/>
</phase>
<phase_done name='optimizer' nodes='2996' live='2153' stamp='2.225'/>
</phase>
<phase name='matcher' nodes='2996' live='2153' stamp='2.225'>
<phase_done name='matcher' nodes='2103' live='2103' stamp='2.227'/>
</phase>
<phase name='regalloc' nodes='2650' live='2622' stamp='2.228'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='4333' live='3543' stamp='2.250'/>
</phase>
<phase name='output' nodes='4349' live='3559' stamp='2.250'>
<phase_done name='output' nodes='4457' live='3635' stamp='2.253'/>
</phase>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<code_cache total_blobs='346' nmethods='90' adapters='206' free_code_cache='49614912'/>
<task_done success='1' nmsize='7960' count='5000' backedge_count='5002' inlined_bytes='1480' stamp='2.324'/>
</task>
</compilation_log>
<compilation_log thread='19203'>
<start_compile_thread name='C2 CompilerThread0' thread='19203' process='22202' stamp='0.067'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='502' backedge_count='5000' iicount='502' stamp='0.080'>
<phase name='parse' nodes='3' live='3' stamp='0.080'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='502'/>
<parse method='832' uses='502' stamp='0.080'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='105' not_taken='197' cnt='302' prob='0.347682'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='48' not_taken='149' cnt='197' prob='0.243655'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='150' not_taken='6406' cnt='6556' prob='0.0228798'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='150' not_taken='6406' cnt='6406' prob='0.0228798'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.081'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.081'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.081'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.081'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.081'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.081'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.081'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.081'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.081'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.081'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.081'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.081'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='198' stamp='0.082'/>
</phase>
<phase name='idealLoop' nodes='382' live='198' stamp='0.082'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='407' live='186' stamp='0.082'/>
</phase>
<phase name='idealLoop' nodes='407' live='186' stamp='0.082'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='417' live='169' stamp='0.082'/>
</phase>
<phase_done name='optimizer' nodes='420' live='158' stamp='0.082'/>
</phase>
<phase name='matcher' nodes='420' live='158' stamp='0.082'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.082'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.082'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.083'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.083'>
<phase_done name='output' nodes='213' live='200' stamp='0.083'/>
</phase>
<code_cache total_blobs='197' nmethods='1' adapters='146' free_code_cache='49837120'/>
<task_done success='1' nmsize='376' count='511' backedge_count='5045' stamp='0.085'/>
</task>
<task compile_id='3' method='java/lang/String indexOf (II)I' bytes='70' count='326' backedge_count='5088' iicount='326' stamp='0.098'>
<phase name='parse' nodes='3' live='3' stamp='0.098'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='328'/>
<parse method='832' uses='328' stamp='0.098'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='159' not_taken='0' cnt='159' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='140' not_taken='19' cnt='159' prob='0.880503'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='140' cnt='140' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='140' not_taken='6838' cnt='6978' prob='0.0200631'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='6837' not_taken='1' cnt='6838' prob='0.999854'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='140' not_taken='6838' cnt='6837' prob='0.0200631'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.098'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.098'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.098'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.098'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.098'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.098'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.098'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.098'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.099'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.099'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.099'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.099'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='361' live='225' stamp='0.099'/>
</phase>
<phase name='idealLoop' nodes='361' live='225' stamp='0.099'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='215' stamp='0.099'/>
</phase>
<phase name='idealLoop' nodes='380' live='215' stamp='0.099'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='212' stamp='0.099'/>
</phase>
<phase_done name='optimizer' nodes='384' live='201' stamp='0.099'/>
</phase>
<phase name='matcher' nodes='384' live='201' stamp='0.099'>
<phase_done name='matcher' nodes='161' live='161' stamp='0.099'/>
</phase>
<phase name='regalloc' nodes='227' live='226' stamp='0.099'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='244' live='241' stamp='0.100'/>
</phase>
<phase name='output' nodes='244' live='241' stamp='0.100'>
<phase_done name='output' nodes='269' live='253' stamp='0.106'/>
</phase>
<code_cache total_blobs='201' nmethods='3' adapters='148' free_code_cache='49828608'/>
<task_done success='1' nmsize='408' count='361' backedge_count='6083' stamp='0.108'/>
</task>
<task compile_id='16' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='382' backedge_count='5104' iicount='382' stamp='0.152'>
<phase name='parse' nodes='3' live='3' stamp='0.152'>
<klass id='832' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='833' holder='832' name='putUTF8' return='832' arguments='730' flags='1' bytes='142' iicount='383'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='11' reason='unloaded' action='reinterpret' index='7' klass='839'/>
<parse method='833' uses='383' stamp='0.152'>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='2234'/>
<call method='835' count='268' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='268' stamp='0.152'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='68' live='65' memory='30904' stamp='0.152'/>
</parse>
<bc code='164' bci='8'/>
<branch target_bci='19' taken='268' not_taken='0' cnt='268' prob='always'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='34'/>
<branch target_bci='44' taken='208' not_taken='60' cnt='268' prob='0.776119'/>
<bc code='183' bci='41'/>
<type id='724' name='void'/>
<method id='838' holder='832' name='enlarge' return='724' arguments='722' flags='2' bytes='51' iicount='86'/>
<call method='838' count='60' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='41'/>
<bc code='84' bci='61'/>
<uncommon_trap bci='61' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='61' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='70'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='269' not_taken='6625' cnt='6894' prob='0.0390194'/>
<uncommon_trap bci='80' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='80' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='83'/>
<type id='717' name='char'/>
<method id='836' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='836' count='6625' prof_factor='1' inline='1'/>
<klass id='842' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='13' reason='unloaded' action='reinterpret' index='6' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='6625' stamp='0.153'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='342' live='327' memory='85360' stamp='0.153'/>
</parse>
<bc code='161' bci='91'/>
<branch target_bci='114' taken='0' not_taken='6625' cnt='6625' prob='never'/>
<uncommon_trap bci='91' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='98'/>
<branch target_bci='114' taken='0' not_taken='6625' cnt='6625' prob='never'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='110'/>
<uncommon_trap bci='110' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='269' not_taken='6625' cnt='6625' prob='0.0390194'/>
<parse_done nodes='411' live='392' memory='99392' stamp='0.153'/>
</parse>
<phase_done name='parse' nodes='413' live='276' stamp='0.153'/>
</phase>
<phase name='optimizer' nodes='413' live='276' stamp='0.153'>
<phase name='idealLoop' nodes='413' live='263' stamp='0.153'>
<loop_tree>
<loop idx='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='468' live='268' stamp='0.153'/>
</phase>
<phase name='idealLoop' nodes='468' live='268' stamp='0.153'>
<loop_tree>
<loop idx='419' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='272' stamp='0.153'/>
</phase>
<phase name='idealLoop' nodes='511' live='272' stamp='0.153'>
<loop_tree>
<loop idx='713' inner_loop='1' main_loop='713' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='782' live='437' stamp='0.154'/>
</phase>
<phase name='ccp' nodes='782' live='437' stamp='0.154'>
<phase_done name='ccp' nodes='782' live='437' stamp='0.154'/>
</phase>
<phase name='idealLoop' nodes='783' live='436' stamp='0.154'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='920' live='513' stamp='0.154'/>
</phase>
<phase name='idealLoop' nodes='920' live='513' stamp='0.154'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='977' live='504' stamp='0.155'/>
</phase>
<phase name='idealLoop' nodes='977' live='504' stamp='0.155'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='996' live='507' stamp='0.155'/>
</phase>
<phase_done name='optimizer' nodes='1016' live='488' stamp='0.155'/>
</phase>
<phase name='matcher' nodes='1016' live='488' stamp='0.155'>
<phase_done name='matcher' nodes='449' live='449' stamp='0.155'/>
</phase>
<phase name='regalloc' nodes='583' live='579' stamp='0.156'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='767' live='676' stamp='0.158'/>
</phase>
<phase name='output' nodes='767' live='676' stamp='0.158'>
<phase_done name='output' nodes='800' live='696' stamp='0.158'/>
</phase>
<code_cache total_blobs='251' nmethods='25' adapters='176' free_code_cache='49800896'/>
<task_done success='1' nmsize='1288' count='514' backedge_count='8965' inlined_bytes='35' stamp='0.163'/>
</task>
<task compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1297' backedge_count='5048' iicount='1297' stamp='0.173'>
<phase name='parse' nodes='3' live='3' stamp='0.174'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='1300'/>
<parse method='832' uses='1300' stamp='0.174'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='522' not_taken='149' cnt='671' prob='0.777943'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='522' cnt='522' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='218' not_taken='304' cnt='522' prob='0.417625'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='287' not_taken='6116' cnt='6403' prob='0.0448227'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='6098' not_taken='18' cnt='6116' prob='0.997057'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='287' not_taken='6116' cnt='6098' prob='0.0448227'/>
<parse_done nodes='272' live='258' memory='71384' stamp='0.174'/>
</parse>
<phase_done name='parse' nodes='273' live='183' stamp='0.174'/>
</phase>
<phase name='optimizer' nodes='273' live='183' stamp='0.174'>
<phase name='idealLoop' nodes='277' live='171' stamp='0.174'>
<loop_tree>
<loop idx='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='318' live='156' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='318' live='156' stamp='0.174'>
<loop_tree>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='597' live='280' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='597' live='280' stamp='0.175'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='311' stamp='0.175'/>
</phase>
<phase name='ccp' nodes='672' live='311' stamp='0.175'>
<phase_done name='ccp' nodes='672' live='311' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='672' live='310' stamp='0.175'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='289' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='672' live='289' stamp='0.175'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='286' stamp='0.175'/>
</phase>
<phase_done name='optimizer' nodes='682' live='263' stamp='0.175'/>
</phase>
<phase name='matcher' nodes='682' live='263' stamp='0.175'>
<phase_done name='matcher' nodes='226' live='226' stamp='0.176'/>
</phase>
<phase name='regalloc' nodes='306' live='303' stamp='0.176'>
<regalloc attempts='4' success='1'/>
<phase_done name='regalloc' nodes='387' live='343' stamp='0.178'/>
</phase>
<phase name='output' nodes='387' live='343' stamp='0.178'>
<phase_done name='output' nodes='415' live='357' stamp='0.178'/>
</phase>
<code_cache total_blobs='268' nmethods='42' adapters='176' free_code_cache='49790912'/>
<task_done success='1' nmsize='632' count='1360' backedge_count='5583' stamp='0.181'/>
</task>
<task compile_id='52' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='160' backedge_count='5017' iicount='160' stamp='0.196'>
<phase name='parse' nodes='3' live='3' stamp='0.197'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='jdk/internal/org/objectweb/asm/Type' flags='1'/>
<method id='833' holder='832' name='getArgumentsAndReturnSizes' return='722' arguments='730' flags='9' bytes='151' iicount='160'/>
<parse method='833' uses='160' stamp='0.197'>
<bc code='182' bci='9'/>
<type id='717' name='char'/>
<method id='835' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='835' count='459' prof_factor='1' inline='1'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='835' bci='13' reason='unloaded' action='reinterpret' index='6' klass='836'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='459' stamp='0.197'>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='121' live='116' memory='38424' stamp='0.197'/>
</parse>
<bc code='160' bci='16'/>
<branch target_bci='57' taken='386' not_taken='73' cnt='459' prob='0.840959'/>
<uncommon_trap bci='57' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='57' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='160' bci='60'/>
<branch target_bci='85' taken='5' not_taken='381' cnt='386' prob='0.0129534'/>
<bc code='182' bci='68'/>
<call method='835' count='6658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='6658' stamp='0.197'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='262' live='250' memory='71376' stamp='0.197'/>
</parse>
<bc code='159' bci='73'/>
<branch target_bci='79' taken='382' not_taken='6276' cnt='6658' prob='0.0573746'/>
<uncommon_trap bci='76' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='76' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='68'/>
<call method='835' count='6658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='6658' stamp='0.197'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='389' live='370' memory='90392' stamp='0.197'/>
</parse>
<bc code='159' bci='73'/>
<branch target_bci='79' taken='382' not_taken='6276' cnt='6276' prob='0.0573746'/>
<bc code='160' bci='88'/>
<branch target_bci='127' taken='5' not_taken='0'/>
<bc code='182' bci='93'/>
<call method='835' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='93'/>
<bc code='160' bci='100'/>
<branch target_bci='109' taken='0' not_taken='0'/>
<uncommon_trap bci='103' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='103' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='93'/>
<call method='835' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='93'/>
<bc code='160' bci='100'/>
<branch target_bci='109' taken='0' not_taken='0'/>
<bc code='159' bci='112'/>
<branch target_bci='121' taken='0' not_taken='0'/>
<bc code='160' bci='118'/>
<branch target_bci='148' taken='0' not_taken='0'/>
<bc code='159' bci='130'/>
<branch target_bci='139' taken='0' not_taken='5'/>
<bc code='160' bci='136'/>
<branch target_bci='145' taken='5' not_taken='0'/>
<bc code='182' bci='9'/>
<call method='835' count='459' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='459' stamp='0.197'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='630' live='604' memory='141472' stamp='0.197'/>
</parse>
<bc code='160' bci='16'/>
<branch target_bci='57' taken='386' not_taken='73' cnt='387' prob='0.840959'/>
<bc code='182' bci='21'/>
<call method='835' count='73' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='73' stamp='0.197'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='723' live='692' memory='155592' stamp='0.197'/>
</parse>
<bc code='160' bci='31'/>
<branch target_bci='38' taken='70' not_taken='3' cnt='73' prob='0.958904'/>
<bc code='159' bci='41'/>
<branch target_bci='50' taken='0' not_taken='70' cnt='70' prob='never'/>
<uncommon_trap bci='41' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='47'/>
<branch target_bci='54' taken='70' not_taken='0' cnt='70' prob='always'/>
<uncommon_trap bci='47' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='762' live='728' memory='161512' stamp='0.197'/>
</parse>
<phase_done name='parse' nodes='764' live='464' stamp='0.197'/>
</phase>
<phase name='optimizer' nodes='764' live='464' stamp='0.197'>
<phase name='idealLoop' nodes='770' live='436' stamp='0.198'>
<loop_tree>
<loop idx='770' >
<loop idx='771' inner_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='801' live='431' stamp='0.198'/>
</phase>
<phase name='idealLoop' nodes='801' live='431' stamp='0.198'>
<loop_tree>
<loop idx='770' >
<loop idx='771' inner_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='858' live='442' stamp='0.198'/>
</phase>
<phase name='idealLoop' nodes='858' live='442' stamp='0.198'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='860' live='425' stamp='0.198'/>
</phase>
<phase name='ccp' nodes='860' live='425' stamp='0.198'>
<phase_done name='ccp' nodes='860' live='425' stamp='0.198'/>
</phase>
<phase name='idealLoop' nodes='863' live='424' stamp='0.199'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='875' live='393' stamp='0.199'/>
</phase>
<phase name='idealLoop' nodes='875' live='393' stamp='0.199'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='884' live='394' stamp='0.199'/>
</phase>
<phase_done name='optimizer' nodes='914' live='408' stamp='0.199'/>
</phase>
<phase name='matcher' nodes='914' live='408' stamp='0.199'>
<phase_done name='matcher' nodes='386' live='386' stamp='0.199'/>
</phase>
<phase name='regalloc' nodes='517' live='512' stamp='0.200'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='649' live='604' stamp='0.201'/>
</phase>
<phase name='output' nodes='649' live='604' stamp='0.201'>
<phase_done name='output' nodes='688' live='630' stamp='0.201'/>
</phase>
<code_cache total_blobs='282' nmethods='54' adapters='178' free_code_cache='49777984'/>
<task_done success='1' nmsize='1208' count='203' backedge_count='7126' inlined_bytes='145' stamp='0.206'/>
</task>
<task compile_id='56' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='182' backedge_count='5044' iicount='182' stamp='0.263'>
<phase name='parse' nodes='3' live='3' stamp='0.263'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='833' holder='832' name='encode' return='722' arguments='821 722 722 824' flags='1' bytes='359' iicount='182'/>
<klass id='838' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='833' bci='175' reason='unloaded' action='reinterpret' index='22' klass='838'/>
<uncommon_trap method='833' bci='153' reason='unloaded' action='reinterpret' index='22' klass='838'/>
<parse method='833' uses='182' stamp='0.263'>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='14'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='6322'/>
<call method='836' count='135' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='136' not_taken='6619' cnt='6755' prob='0.0201332'/>
<uncommon_trap bci='27' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='6619' cnt='6619' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='136' not_taken='6619' cnt='6619' prob='0.0201332'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='136' not_taken='0' cnt='136' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='227' live='217' memory='59008' stamp='0.264'/>
</parse>
<phase_done name='parse' nodes='228' live='159' stamp='0.264'/>
</phase>
<phase name='optimizer' nodes='228' live='159' stamp='0.264'>
<phase name='idealLoop' nodes='233' live='140' stamp='0.264'>
<loop_tree>
<loop idx='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='288' live='144' stamp='0.264'/>
</phase>
<phase name='idealLoop' nodes='288' live='144' stamp='0.264'>
<loop_tree>
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='426' live='262' stamp='0.264'/>
</phase>
<phase name='idealLoop' nodes='426' live='262' stamp='0.264'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='320' stamp='0.264'/>
</phase>
<phase name='ccp' nodes='514' live='320' stamp='0.264'>
<phase_done name='ccp' nodes='514' live='320' stamp='0.264'/>
</phase>
<phase name='idealLoop' nodes='514' live='318' stamp='0.264'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='570' live='310' stamp='0.265'/>
</phase>
<phase name='idealLoop' nodes='570' live='310' stamp='0.265'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='293' stamp='0.265'/>
</phase>
<phase_done name='optimizer' nodes='586' live='273' stamp='0.265'/>
</phase>
<phase name='matcher' nodes='586' live='273' stamp='0.265'>
<phase_done name='matcher' nodes='227' live='227' stamp='0.265'/>
</phase>
<phase name='regalloc' nodes='296' live='294' stamp='0.265'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='364' live='329' stamp='0.266'/>
</phase>
<phase name='output' nodes='364' live='329' stamp='0.266'>
<phase_done name='output' nodes='385' live='342' stamp='0.266'/>
</phase>
<code_cache total_blobs='291' nmethods='57' adapters='184' free_code_cache='49768128'/>
<task_done success='1' nmsize='632' count='185' backedge_count='5209' inlined_bytes='11' stamp='0.269'/>
</task>
<task compile_id='60' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='5030' backedge_count='1' iicount='10030' stamp='0.282'>
<phase name='parse' nodes='3' live='3' stamp='0.282'>
<type id='724' name='void'/>
<type id='720' name='byte'/>
<klass id='832' name='sun/reflect/ByteVectorImpl' flags='0'/>
<method id='833' holder='832' name='add' return='724' arguments='720' flags='1' bytes='38' iicount='10030'/>
<parse method='833' uses='10030' stamp='0.282'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='6758' not_taken='18' cnt='6776' prob='0.997344'/>
<bc code='183' bci='24'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='30'/>
<call method='835' count='18' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='122' live='118' memory='39176' stamp='0.282'/>
</parse>
<phase_done name='parse' nodes='124' live='85' stamp='0.282'/>
</phase>
<phase name='optimizer' nodes='124' live='85' stamp='0.282'>
<phase name='ccp' nodes='124' live='85' stamp='0.282'>
<phase_done name='ccp' nodes='124' live='85' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='124' live='85' stamp='0.282'>
<phase_done name='idealLoop' nodes='159' live='87' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='159' live='87' stamp='0.282'>
<phase_done name='idealLoop' nodes='164' live='87' stamp='0.283'/>
</phase>
<phase_done name='optimizer' nodes='171' live='86' stamp='0.283'/>
</phase>
<phase name='matcher' nodes='171' live='86' stamp='0.283'>
<phase_done name='matcher' nodes='79' live='79' stamp='0.283'/>
</phase>
<phase name='regalloc' nodes='98' live='97' stamp='0.283'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='112' live='105' stamp='0.283'/>
</phase>
<phase name='output' nodes='112' live='105' stamp='0.283'>
<phase_done name='output' nodes='126' live='116' stamp='0.283'/>
</phase>
<code_cache total_blobs='293' nmethods='59' adapters='184' free_code_cache='49764864'/>
<task_done success='1' nmsize='264' count='7742' backedge_count='1' stamp='0.284'/>
</task>
<task compile_id='61' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5020' iicount='716' decompiles='1' unstable_if_traps='1' stamp='0.284'>
<phase name='parse' nodes='3' live='3' stamp='0.284'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='716'/>
<parse method='832' uses='716' stamp='0.284'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='159' bci='2'/>
<branch target_bci='125' taken='0' not_taken='601' cnt='601' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='11' not_taken='2972' cnt='2983' prob='0.00368756'/>
<uncommon_trap bci='29' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='35'/>
<branch target_bci='20' taken='2381' not_taken='591' cnt='2972' prob='0.801144'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='11' not_taken='2972' cnt='2983' prob='0.00368756'/>
<bc code='162' bci='44'/>
<branch target_bci='125' taken='11' not_taken='591' cnt='602' prob='0.0182724'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='591' not_taken='2289' cnt='2880' prob='0.205208'/>
<uncommon_trap bci='62' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='62' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='70'/>
<uncommon_trap bci='70' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='71'/>
<uncommon_trap bci='71' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='591' not_taken='2289' cnt='2289' prob='0.205208'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='592' not_taken='11504' cnt='12096' prob='0.0489418'/>
<uncommon_trap bci='84' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='84' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='9931' not_taken='1573' cnt='11504' prob='0.863265'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='592' not_taken='11504' cnt='11504' prob='0.0489418'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1379'/>
<call method='834' count='592' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='592' stamp='0.286'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.429297' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.286'>
<parse_done nodes='522' live='505' memory='128256' stamp='0.286'/>
</parse>
<parse_done nodes='541' live='523' memory='131024' stamp='0.286'/>
</parse>
<parse_done nodes='543' live='523' memory='131664' stamp='0.286'/>
</parse>
<phase_done name='parse' nodes='545' live='380' stamp='0.286'/>
</phase>
<phase name='optimizer' nodes='545' live='380' stamp='0.286'>
<phase name='idealLoop' nodes='546' live='339' stamp='0.286'>
<loop_tree>
<loop idx='554' >
</loop>
<loop idx='560' >
</loop>
<loop idx='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='568' live='326' stamp='0.287'/>
</phase>
<phase name='escapeAnalysis' nodes='568' live='326' stamp='0.287'>
<phase name='connectionGraph' nodes='569' live='327' stamp='0.287'>
<phase_done name='connectionGraph' nodes='569' live='327' stamp='0.287'/>
</phase>
<phase_done name='escapeAnalysis' nodes='569' live='327' stamp='0.287'/>
</phase>
<phase name='idealLoop' nodes='569' live='327' stamp='0.287'>
<loop_tree>
<loop idx='554' inner_loop='1' >
</loop>
<loop idx='560' inner_loop='1' >
</loop>
<loop idx='566' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='597' live='307' stamp='0.287'/>
</phase>
<phase name='idealLoop' nodes='597' live='307' stamp='0.287'>
<loop_tree>
<loop idx='554' inner_loop='1' >
</loop>
<loop idx='560' inner_loop='1' >
</loop>
<loop idx='566' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='679' live='326' stamp='0.287'/>
</phase>
<phase name='idealLoop' nodes='679' live='326' stamp='0.287'>
<loop_tree>
<loop idx='767' inner_loop='1' main_loop='767' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='972' inner_loop='1' main_loop='972' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='989' live='574' stamp='0.287'/>
</phase>
<phase name='ccp' nodes='989' live='574' stamp='0.288'>
<phase_done name='ccp' nodes='989' live='574' stamp='0.288'/>
</phase>
<phase name='idealLoop' nodes='993' live='552' stamp='0.288'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='767' inner_loop='1' main_loop='767' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='972' inner_loop='1' main_loop='972' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1039' live='536' stamp='0.288'/>
</phase>
<phase name='idealLoop' nodes='1039' live='536' stamp='0.288'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1135' live='606' stamp='0.289'/>
</phase>
<phase name='idealLoop' nodes='1135' live='606' stamp='0.289'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1192' live='565' stamp='0.289'/>
</phase>
<phase name='idealLoop' nodes='1192' live='565' stamp='0.289'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1221' live='538' stamp='0.289'/>
</phase>
<phase_done name='optimizer' nodes='1347' live='563' stamp='0.290'/>
</phase>
<phase name='matcher' nodes='1347' live='563' stamp='0.290'>
<phase_done name='matcher' nodes='445' live='445' stamp='0.290'/>
</phase>
<phase name='regalloc' nodes='601' live='600' stamp='0.290'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='838' live='694' stamp='0.293'/>
</phase>
<phase name='output' nodes='842' live='698' stamp='0.293'>
<phase_done name='output' nodes='886' live='715' stamp='0.294'/>
</phase>
<code_cache total_blobs='296' nmethods='61' adapters='185' free_code_cache='49759680'/>
<task_done success='1' nmsize='1240' count='5000' backedge_count='5046' inlined_bytes='11' stamp='0.297'/>
</task>
<task compile_id='63' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='680' backedge_count='5089' iicount='680' stamp='0.307'>
<phase name='parse' nodes='3' live='3' stamp='0.307'>
<klass id='824' name='[B' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/UTF8' flags='0'/>
<method id='833' holder='832' name='encode' return='824' arguments='730' flags='8' bytes='191' iicount='690'/>
<parse method='833' uses='690' stamp='0.307'>
<observe that='has_exception_handlers'/>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='8460'/>
<call method='835' count='484' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='484' stamp='0.307'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='67' live='64' memory='30728' stamp='0.308'/>
</parse>
<bc code='184' bci='6'/>
<method id='836' holder='832' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='702'/>
<call method='836' count='484' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='484' stamp='0.308'>
<bc code='182' bci='1'/>
<call method='835' count='484' prof_factor='0.689459' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='334' stamp='0.308'>
<parse_done nodes='97' live='93' memory='35472' stamp='0.308'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='838' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='838' count='6514' prof_factor='0.689459' inline='1'/>
<klass id='841' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='838' bci='13' reason='unloaded' action='reinterpret' index='6' klass='841'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='4491' stamp='0.308'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='233' live='222' memory='58640' stamp='0.308'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='274' live='260' memory='73184' stamp='0.308'/>
</parse>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='484' not_taken='6511' cnt='6995' prob='0.0691923'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='26'/>
<call method='838' count='6511' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='6511' stamp='0.308'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='455' live='434' memory='101368' stamp='0.308'/>
</parse>
<bc code='161' bci='37'/>
<branch target_bci='59' taken='0' not_taken='6511' cnt='6511' prob='never'/>
<uncommon_trap bci='37' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='44'/>
<branch target_bci='59' taken='0' not_taken='6511' cnt='6511' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='55'/>
<uncommon_trap bci='55' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='484' not_taken='6511' cnt='6511' prob='0.0691923'/>
<parse_done nodes='524' live='499' memory='125776' stamp='0.308'/>
</parse>
<phase_done name='parse' nodes='526' live='320' stamp='0.308'/>
</phase>
<phase name='optimizer' nodes='526' live='320' stamp='0.308'>
<phase name='idealLoop' nodes='533' live='284' stamp='0.309'>
<loop_tree>
<loop idx='540' >
</loop>
<loop idx='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='559' live='277' stamp='0.309'/>
</phase>
<phase name='escapeAnalysis' nodes='559' live='277' stamp='0.309'>
<phase name='connectionGraph' nodes='560' live='278' stamp='0.309'>
<phase_done name='connectionGraph' nodes='560' live='278' stamp='0.309'/>
</phase>
<phase_done name='escapeAnalysis' nodes='560' live='278' stamp='0.309'/>
</phase>
<phase name='idealLoop' nodes='560' live='278' stamp='0.309'>
<loop_tree>
<loop idx='540' inner_loop='1' >
</loop>
<loop idx='550' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='563' live='259' stamp='0.309'/>
</phase>
<phase name='idealLoop' nodes='563' live='259' stamp='0.309'>
<loop_tree>
<loop idx='540' inner_loop='1' >
</loop>
<loop idx='550' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='620' live='267' stamp='0.310'/>
</phase>
<phase name='idealLoop' nodes='620' live='267' stamp='0.310'>
<loop_tree>
<loop idx='787' inner_loop='1' main_loop='787' >
</loop>
<loop idx='1005' inner_loop='1' main_loop='1005' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1081' live='535' stamp='0.310'/>
</phase>
<phase name='ccp' nodes='1081' live='535' stamp='0.311'>
<phase_done name='ccp' nodes='1081' live='535' stamp='0.311'/>
</phase>
<phase name='idealLoop' nodes='1084' live='533' stamp='0.311'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1275' live='641' stamp='0.311'/>
</phase>
<phase name='idealLoop' nodes='1275' live='641' stamp='0.311'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1334' live='622' stamp='0.312'/>
</phase>
<phase name='idealLoop' nodes='1334' live='622' stamp='0.312'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1341' live='618' stamp='0.312'/>
</phase>
<phase_done name='optimizer' nodes='1425' live='636' stamp='0.312'/>
</phase>
<phase name='matcher' nodes='1425' live='636' stamp='0.312'>
<phase_done name='matcher' nodes='556' live='556' stamp='0.313'/>
</phase>
<phase name='regalloc' nodes='769' live='767' stamp='0.313'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1003' live='852' stamp='0.316'/>
</phase>
<phase name='output' nodes='1003' live='852' stamp='0.316'>
<phase_done name='output' nodes='1037' live='870' stamp='0.316'/>
</phase>
<code_cache total_blobs='298' nmethods='62' adapters='185' free_code_cache='49750080'/>
<task_done success='1' nmsize='1400' count='864' backedge_count='7529' inlined_bytes='151' stamp='0.321'/>
</task>
<task compile_id='64' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='864' backedge_count='7529' iicount='864' stamp='0.321'>
<phase name='parse' nodes='3' live='3' stamp='0.321'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/UTF8' flags='0'/>
<method id='833' holder='832' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='864'/>
<parse method='833' uses='864' stamp='0.321'>
<bc code='182' bci='1'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='9482'/>
<call method='835' count='646' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='646' stamp='0.321'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='67' live='64' memory='30600' stamp='0.321'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='647' not_taken='8782' cnt='9429' prob='0.0686181'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='836' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='836' count='8782' prof_factor='1' inline='1'/>
<klass id='838' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='13' reason='unloaded' action='reinterpret' index='6' klass='838'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='8782' stamp='0.321'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='203' live='193' memory='53072' stamp='0.321'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='8782' cnt='8782' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='8782' cnt='8782' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='647' not_taken='8782' cnt='8782' prob='0.0686181'/>
<parse_done nodes='244' live='231' memory='59448' stamp='0.322'/>
</parse>
<phase_done name='parse' nodes='245' live='149' stamp='0.322'/>
</phase>
<phase name='optimizer' nodes='245' live='149' stamp='0.322'>
<phase name='idealLoop' nodes='246' live='133' stamp='0.322'>
<loop_tree>
<loop idx='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='259' live='121' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='259' live='121' stamp='0.322'>
<loop_tree>
<loop idx='252' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='279' live='128' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='279' live='128' stamp='0.322'>
<loop_tree>
<loop idx='446' inner_loop='1' main_loop='446' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='500' live='253' stamp='0.322'/>
</phase>
<phase name='ccp' nodes='500' live='253' stamp='0.322'>
<phase_done name='ccp' nodes='500' live='253' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='501' live='252' stamp='0.322'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='584' live='304' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='584' live='304' stamp='0.322'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='607' live='296' stamp='0.323'/>
</phase>
<phase name='idealLoop' nodes='607' live='296' stamp='0.323'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='609' live='294' stamp='0.323'/>
</phase>
<phase_done name='optimizer' nodes='616' live='286' stamp='0.323'/>
</phase>
<phase name='matcher' nodes='616' live='286' stamp='0.323'>
<phase_done name='matcher' nodes='248' live='248' stamp='0.323'/>
</phase>
<phase name='regalloc' nodes='349' live='347' stamp='0.323'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='383' live='367' stamp='0.324'/>
</phase>
<phase name='output' nodes='383' live='367' stamp='0.324'>
<phase_done name='output' nodes='409' live='377' stamp='0.332'/>
</phase>
<code_cache total_blobs='300' nmethods='64' adapters='185' free_code_cache='49741120'/>
<task_done success='1' nmsize='568' count='864' backedge_count='7529' inlined_bytes='35' stamp='0.336'/>
</task>
<task compile_id='66' compile_kind='osr' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5002' iicount='16' osr_bci='43' stamp='0.336'>
<phase name='parse' nodes='3' live='3' stamp='0.337'>
<klass id='834' name='[Ljava/io/ObjectStreamField;' flags='1041'/>
<klass id='832' name='java/io/ObjectStreamClass' flags='1'/>
<method id='835' holder='832' name='matchFields' return='834' arguments='834 832' flags='10' bytes='247' iicount='16'/>
<klass id='849' name='java/io/InvalidClassException' unloaded='1'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<parse method='835' uses='16' osr_bci='43' stamp='0.337'>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<klass id='833' name='java/io/ObjectStreamField' flags='1'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<uncommon_trap bci='43' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='46'/>
<uncommon_trap bci='46' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='117' not_taken='14784' cnt='14901' prob='0.00785182'/>
<bc code='50' bci='53'/>
<uncommon_trap bci='53' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='58'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='840' holder='833' name='getName' return='730' flags='1' bytes='5' compile_id='65' compiler='C2' iicount='36372'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='14784' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='14784' stamp='0.338'>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='298' live='291' memory='71392' stamp='0.338'/>
</parse>
<bc code='182' bci='63'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='14784' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='14784' stamp='0.338'>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='326' live='317' memory='76200' stamp='0.338'/>
</parse>
<bc code='182' bci='66'/>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='843' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' compile_id='36' compiler='C2' iicount='1360'/>
<call method='843' count='14784' prof_factor='1' inline='1'/>
<uncommon_trap bci='66' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='66' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_equals' nodes='73'/>
<bc code='153' bci='69'/>
<branch target_bci='192' taken='14668' not_taken='116' cnt='14784' prob='0.992154'/>
<bc code='182' bci='74'/>
<method id='844' holder='833' name='isPrimitive' return='716' flags='1' bytes='27' iicount='1093'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='116' stamp='0.338'>
<bc code='182' bci='5'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='852' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='852' count='-1' prof_factor='0.10613' inline='1'/>
<klass id='854' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='852' bci='13' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.338'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='512' live='496' memory='102768' stamp='0.339'/>
</parse>
<parse_done nodes='535' live='518' memory='118032' stamp='0.339'/>
</parse>
<bc code='154' bci='77'/>
<branch target_bci='88' taken='116' not_taken='0' cnt='116' prob='always'/>
<uncommon_trap bci='77' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='90'/>
<method id='845' holder='833' name='getTypeCode' return='717' flags='1' bytes='9' iicount='877'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='116' stamp='0.339'>
<bc code='182' bci='5'/>
<call method='852' count='-1' prof_factor='0.132269' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.339'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='651' live='628' memory='136592' stamp='0.339'/>
</parse>
<parse_done nodes='653' live='629' memory='137000' stamp='0.339'/>
</parse>
<bc code='182' bci='95'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='116' stamp='0.339'>
<bc code='182' bci='5'/>
<call method='852' count='-1' prof_factor='0.132269' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.339'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='756' live='727' memory='154000' stamp='0.339'/>
</parse>
<parse_done nodes='758' live='728' memory='154472' stamp='0.339'/>
</parse>
<bc code='159' bci='98'/>
<branch target_bci='137' taken='116' not_taken='0' cnt='116' prob='always'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='139'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='846' holder='833' name='getField' return='768' flags='0' bytes='5' iicount='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='116' stamp='0.339'>
<parse_done nodes='786' live='754' memory='158552' stamp='0.339'/>
</parse>
<bc code='198' bci='142'/>
<branch target_bci='168' taken='0' not_taken='116' cnt='116' prob='never'/>
<uncommon_trap bci='142' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='151'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='116' stamp='0.339'>
<parse_done nodes='840' live='806' memory='170080' stamp='0.339'/>
</parse>
<bc code='182' bci='156'/>
<method id='847' holder='833' name='isUnshared' return='716' flags='1' bytes='5' iicount='263'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<call method='847' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='847' uses='116' stamp='0.339'>
<parse_done nodes='861' live='826' memory='174720' stamp='0.339'/>
</parse>
<bc code='183' bci='160'/>
<type id='724' name='void'/>
<method id='848' holder='833' name='&lt;init&gt;' return='724' arguments='768 716 716' flags='0' bytes='69' iicount='392'/>
<call method='848' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='116' stamp='0.339'>
<bc code='183' bci='1'/>
<method id='859' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='859' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.339'>
<parse_done nodes='904' live='868' memory='184608' stamp='0.339'/>
</parse>
<bc code='182' bci='21'/>
<method id='860' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='8966'/>
<call method='860' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='accessor'/>
<parse method='860' uses='-1' stamp='0.339'>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='956' live='918' memory='196112' stamp='0.339'/>
</parse>
<bc code='182' bci='28'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='861' holder='768' name='getType' return='731' flags='1' bytes='5' iicount='482'/>
<call method='861' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='accessor'/>
<parse method='861' uses='-1' stamp='0.340'>
<parse_done nodes='987' live='948' memory='201672' stamp='0.340'/>
</parse>
<bc code='182' bci='40'/>
<method id='864' holder='731' name='isPrimitive' return='716' flags='257' bytes='0' iicount='3368'/>
<call method='864' count='-1' prof_factor='0.295918' inline='1'/>
<uncommon_trap bci='40' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isPrimitive' nodes='26'/>
<bc code='184' bci='59'/>
<method id='862' holder='833' name='getClassSignature' return='730' arguments='731' flags='10' bytes='242' iicount='437'/>
<call method='862' count='-1' prof_factor='0.295918' inline='1'/>
<klass id='887' name='java/lang/InternalError' unloaded='1'/>
<uncommon_trap method='862' bci='190' reason='unloaded' action='reinterpret' index='45' klass='887'/>
<inline_success reason='inline (hot)'/>
<parse method='862' uses='-1' stamp='0.340'>
<bc code='183' bci='4'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='870' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='2244'/>
<call method='870' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='4'/>
<bc code='182' bci='9'/>
<method id='871' holder='731' name='isArray' return='716' flags='257' bytes='0' iicount='1953'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isArray' nodes='17'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='18'/>
<method id='872' holder='795' name='append' return='795' arguments='717' flags='1' bytes='8' iicount='2265'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<bc code='182' bci='23'/>
<method id='888' holder='731' name='getComponentType' return='731' flags='257' bytes='0' iicount='384'/>
<call method='888' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_getComponentType' nodes='40'/>
<bc code='182' bci='9'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isArray' nodes='30'/>
<bc code='182' bci='31'/>
<call method='864' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isPrimitive' nodes='12'/>
<bc code='182' bci='47'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='47'/>
<bc code='182' bci='64'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='64'/>
<bc code='182' bci='81'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='81'/>
<bc code='182' bci='98'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='98'/>
<bc code='182' bci='115'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='115'/>
<bc code='182' bci='132'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='132'/>
<bc code='182' bci='149'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='149'/>
<bc code='182' bci='166'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='166'/>
<bc code='182' bci='183'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='183'/>
<bc code='187' bci='190'/>
<uncommon_trap bci='190' reason='unloaded' action='reinterpret' index='45'/>
<bc code='183' bci='203'/>
<call method='870' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='208'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='208'/>
<bc code='182' bci='212'/>
<method id='873' holder='731' name='getName' return='730' flags='1' bytes='21' iicount='2198'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='-1' stamp='0.341'>
<bc code='183' bci='11'/>
<method id='901' holder='731' name='getName0' return='730' flags='258' bytes='0' iicount='115'/>
<call method='901' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='11'/>
<parse_done nodes='1665' live='1618' memory='365048' stamp='0.341'/>
</parse>
<bc code='182' bci='219'/>
<method id='874' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' compile_id='61' compiler='C2' iicount='743'/>
<call method='874' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='219'/>
<uncommon_trap bci='219' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='222'/>
<method id='875' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='4077'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='222'/>
<uncommon_trap bci='222' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='227'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='227'/>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='230'/>
<method id='876' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='2403'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='230'/>
<uncommon_trap bci='230' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='233'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='233'/>
<bc code='182' bci='238'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='238'/>
<parse_done nodes='1829' live='1777' memory='397520' stamp='0.342'/>
</parse>
<bc code='182' bci='62'/>
<method id='863' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='1300'/>
<call method='863' count='-1' prof_factor='0.295918' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='62'/>
<uncommon_trap bci='62' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1887' live='1833' memory='411568' stamp='0.342'/>
</parse>
<bc code='199' bci='200'/>
<branch target_bci='223' taken='117' not_taken='0' cnt='117' prob='always'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='227'/>
<method id='838' holder='833' name='getOffset' return='722' flags='1' bytes='5' iicount='392'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<call method='838' count='117' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='838' uses='117' stamp='0.342'>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1948' live='1891' memory='421024' stamp='0.342'/>
</parse>
<bc code='182' bci='230'/>
<method id='839' holder='833' name='setOffset' return='724' arguments='722' flags='4' bytes='6' iicount='586'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<call method='839' count='117' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='117' stamp='0.342'>
<parse_done nodes='1963' live='1905' memory='424536' stamp='0.342'/>
</parse>
<bc code='83' bci='238'/>
<uncommon_trap bci='238' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='238' reason='range_check' action='make_not_entrant' comment='range_check'/>
<dependency type='leaf_type' ctxk='833'/>
<bc code='190' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='2' not_taken='116' cnt='117' prob='0.0169492'/>
<bc code='50' bci='34'/>
<uncommon_trap bci='34' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2074' live='2011' memory='496296' stamp='0.343'/>
</parse>
<late_inline method='876'>
<jvms bci='238' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='876' uses='-1' stamp='0.343'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='905' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='4285'/>
<call method='905' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap method='905' bci='58' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<uncommon_trap method='905' bci='25' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<uncommon_trap method='905' bci='8' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<inline_success reason='inline (hot)'/>
<parse method='905' uses='-1' stamp='0.343'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.343'>
<parse_done nodes='2155' live='1334' memory='511704' stamp='0.343'/>
</parse>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='58'/>
<uncommon_trap bci='58' reason='unloaded' action='reinterpret' index='6'/>
<bc code='184' bci='75'/>
<klass id='910' name='java/util/Arrays' flags='1'/>
<method id='911' holder='910' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4851'/>
<call method='911' count='-1' prof_factor='1' inline='1'/>
<klass id='918' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='911' bci='8' reason='unloaded' action='reinterpret' index='2' klass='918'/>
<inline_fail reason='too big'/>
<direct_call bci='75'/>
<parse_done nodes='2288' live='1461' memory='536008' stamp='0.343'/>
</parse>
<parse_done nodes='2297' live='1469' memory='538416' stamp='0.343'/>
</parse>
<late_inline method='875'>
<jvms bci='233' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='875' uses='-1' stamp='0.343'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='904' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='4681'/>
<call method='904' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='2'/>
<parse_done nodes='2324' live='1494' memory='544440' stamp='0.343'/>
</parse>
<late_inline method='876'>
<jvms bci='230' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='876' uses='-1' stamp='0.343'>
<bc code='183' bci='13'/>
<call method='905' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='905' uses='-1' stamp='0.343'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.343'>
<parse_done nodes='2395' live='1563' memory='558568' stamp='0.343'/>
</parse>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='58'/>
<uncommon_trap bci='58' reason='unloaded' action='reinterpret' index='6'/>
<bc code='184' bci='75'/>
<call method='911' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='75'/>
<parse_done nodes='2524' live='1686' memory='582696' stamp='0.344'/>
</parse>
<parse_done nodes='2533' live='1694' memory='586160' stamp='0.344'/>
</parse>
<late_inline method='872'>
<jvms bci='227' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.344'>
<bc code='183' bci='2'/>
<method id='891' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='3079'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.344'>
<bc code='183' bci='7'/>
<method id='921' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8846'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.344'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<method id='926' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2037'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.344'>
<bc code='183' bci='31'/>
<method id='929' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='929' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='2672' live='1830' memory='608880' stamp='0.344'/>
</parse>
<bc code='184' bci='20'/>
<method id='927' holder='910' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='2545'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.344'>
<bc code='184' bci='11'/>
<klass id='915' name='java/lang/Math' flags='17'/>
<method id='916' holder='915' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='917' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='2850' live='2007' memory='635960' stamp='0.344'/>
</parse>
<parse_done nodes='2875' live='2031' memory='641816' stamp='0.344'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2923' live='2076' memory='651896' stamp='0.344'/>
</parse>
<parse_done nodes='2929' live='2081' memory='655000' stamp='0.344'/>
</parse>
<late_inline method='875'>
<jvms bci='222' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='875' uses='-1' stamp='0.344'>
<bc code='183' bci='2'/>
<call method='904' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='2'/>
<parse_done nodes='2956' live='2106' memory='668128' stamp='0.344'/>
</parse>
<late_inline method='872'>
<jvms bci='208' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.344'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.344'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.344'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.344'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3093' live='2240' memory='690976' stamp='0.344'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.344'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3260' live='2406' memory='719976' stamp='0.345'/>
</parse>
<parse_done nodes='3285' live='2430' memory='725880' stamp='0.345'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3333' live='2475' memory='740616' stamp='0.345'/>
</parse>
<parse_done nodes='3339' live='2480' memory='742696' stamp='0.345'/>
</parse>
<late_inline method='870'>
<jvms bci='203' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='870' uses='-1' stamp='0.345'>
<bc code='183' bci='3'/>
<method id='890' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2910'/>
<call method='890' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='890' uses='-1' stamp='0.345'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.345'>
<parse_done nodes='3384' live='2523' memory='751416' stamp='0.345'/>
</parse>
<parse_done nodes='3424' live='2562' memory='758640' stamp='0.345'/>
</parse>
<parse_done nodes='3430' live='2567' memory='760832' stamp='0.345'/>
</parse>
<late_inline method='872'>
<jvms bci='183' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.345'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.345'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.345'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.345'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3567' live='2701' memory='790816' stamp='0.345'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.345'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3734' live='2867' memory='871712' stamp='0.345'/>
</parse>
<parse_done nodes='3759' live='2891' memory='877632' stamp='0.345'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3807' live='2936' memory='888432' stamp='0.345'/>
</parse>
<parse_done nodes='3813' live='2941' memory='890496' stamp='0.345'/>
</parse>
<late_inline method='872'>
<jvms bci='166' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.345'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.345'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.345'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.345'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3950' live='3075' memory='911872' stamp='0.345'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.345'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4117' live='3241' memory='1052872' stamp='0.346'/>
</parse>
<parse_done nodes='4142' live='3265' memory='1058728' stamp='0.346'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4190' live='3310' memory='1068232' stamp='0.346'/>
</parse>
<parse_done nodes='4196' live='3315' memory='1074392' stamp='0.346'/>
</parse>
<late_inline method='872'>
<jvms bci='149' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.346'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.346'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.346'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.346'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='4333' live='3449' memory='1096504' stamp='0.346'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.346'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4500' live='3615' memory='1122920' stamp='0.346'/>
</parse>
<parse_done nodes='4525' live='3639' memory='1128776' stamp='0.346'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4573' live='3684' memory='1139432' stamp='0.346'/>
</parse>
<parse_done nodes='4579' live='3689' memory='1141496' stamp='0.346'/>
</parse>
<late_inline method='872'>
<jvms bci='132' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.346'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.346'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.346'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.346'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='4716' live='3823' memory='1163224' stamp='0.346'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.346'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4883' live='3989' memory='1191008' stamp='0.346'/>
</parse>
<parse_done nodes='4908' live='4013' memory='1197376' stamp='0.346'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4956' live='4058' memory='1206880' stamp='0.346'/>
</parse>
<parse_done nodes='4962' live='4063' memory='1208944' stamp='0.346'/>
</parse>
<late_inline method='872'>
<jvms bci='115' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.346'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.346'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.346'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.346'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5099' live='4197' memory='1229016' stamp='0.347'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.347'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5266' live='4363' memory='1256824' stamp='0.347'/>
</parse>
<parse_done nodes='5291' live='4387' memory='1262680' stamp='0.347'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5339' live='4432' memory='1272184' stamp='0.347'/>
</parse>
<parse_done nodes='5345' live='4437' memory='1274248' stamp='0.347'/>
</parse>
<late_inline method='872'>
<jvms bci='98' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.347'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.347'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.347'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.347'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5482' live='4571' memory='1298712' stamp='0.347'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.347'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5649' live='4737' memory='1333200' stamp='0.347'/>
</parse>
<parse_done nodes='5674' live='4761' memory='1355016' stamp='0.347'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5722' live='4806' memory='1364520' stamp='0.347'/>
</parse>
<parse_done nodes='5728' live='4811' memory='1366584' stamp='0.347'/>
</parse>
<late_inline method='872'>
<jvms bci='81' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.347'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.347'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.347'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.347'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5865' live='4945' memory='1388488' stamp='0.347'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.347'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6032' live='5111' memory='1417632' stamp='0.347'/>
</parse>
<parse_done nodes='6057' live='5135' memory='1423488' stamp='0.347'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6105' live='5180' memory='1435040' stamp='0.348'/>
</parse>
<parse_done nodes='6111' live='5185' memory='1437104' stamp='0.348'/>
</parse>
<late_inline method='872'>
<jvms bci='64' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.348'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.348'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.348'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.348'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='6248' live='5319' memory='1466704' stamp='0.348'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.348'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6415' live='5485' memory='1500392' stamp='0.348'/>
</parse>
<parse_done nodes='6440' live='5509' memory='1506248' stamp='0.348'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6488' live='5554' memory='1515872' stamp='0.348'/>
</parse>
<parse_done nodes='6494' live='5559' memory='1517936' stamp='0.348'/>
</parse>
<late_inline method='872'>
<jvms bci='47' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.348'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.348'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.348'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.348'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='6631' live='5693' memory='1540760' stamp='0.348'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.348'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6798' live='5859' memory='1566496' stamp='0.348'/>
</parse>
<parse_done nodes='6823' live='5883' memory='1572448' stamp='0.348'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6871' live='5928' memory='1584304' stamp='0.348'/>
</parse>
<parse_done nodes='6877' live='5933' memory='1586368' stamp='0.348'/>
</parse>
<late_inline method='872'>
<jvms bci='18' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.348'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.348'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.348'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6930' not_taken='1918' cnt='8848' prob='0.783228'/>
<bc code='183' bci='17'/>
<call method='926' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1918' stamp='0.349'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.941581' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='7017' live='6070' memory='1611856' stamp='0.349'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1259' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1918' stamp='0.349'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.753635' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='7184' live='6236' memory='1639528' stamp='0.349'/>
</parse>
<parse_done nodes='7209' live='6260' memory='1645384' stamp='0.349'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='7257' live='6305' memory='1655016' stamp='0.349'/>
</parse>
<parse_done nodes='7263' live='6310' memory='1657080' stamp='0.349'/>
</parse>
<late_inline method='870'>
<jvms bci='4' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='870' uses='-1' stamp='0.349'>
<bc code='183' bci='3'/>
<call method='890' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='890' uses='-1' stamp='0.349'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.349'>
<parse_done nodes='7312' live='6357' memory='1666920' stamp='0.349'/>
</parse>
<parse_done nodes='7357' live='6401' memory='1675048' stamp='0.349'/>
</parse>
<parse_done nodes='7369' live='6412' memory='1678216' stamp='0.349'/>
</parse>
<phase_done name='parse' nodes='7369' live='3921' stamp='0.349'/>
</phase>
<phase name='optimizer' nodes='7369' live='3921' stamp='0.349'>
<phase name='idealLoop' nodes='3517' live='3517' stamp='0.352'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='3543' live='3526' stamp='0.353'/>
</phase>
<phase name='escapeAnalysis' nodes='3543' live='3526' stamp='0.353'>
<phase name='connectionGraph' nodes='3544' live='3527' stamp='0.353'>
<phase_done name='connectionGraph' nodes='3544' live='3527' stamp='0.354'/>
</phase>
<phase_done name='escapeAnalysis' nodes='3544' live='3527' stamp='0.354'/>
</phase>
<phase name='idealLoop' nodes='3544' live='3527' stamp='0.354'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4147' live='3431' stamp='0.357'/>
</phase>
<phase name='idealLoop' nodes='4147' live='3431' stamp='0.357'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4619' live='3447' stamp='0.359'/>
</phase>
<phase name='idealLoop' nodes='4619' live='3447' stamp='0.359'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4625' live='3441' stamp='0.360'/>
</phase>
<phase name='ccp' nodes='4625' live='3441' stamp='0.361'>
<phase_done name='ccp' nodes='4625' live='3441' stamp='0.361'/>
</phase>
<phase name='idealLoop' nodes='4641' live='3406' stamp='0.362'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4789' live='3400' stamp='0.364'/>
</phase>
<phase name='idealLoop' nodes='4789' live='3400' stamp='0.364'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4931' live='3369' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='4931' live='3369' stamp='0.366'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='5073' live='3369' stamp='0.368'/>
</phase>
<comment that='1/0 subword/long to 0/1 int/long'/>
<phase_done name='optimizer' nodes='6072' live='3932' stamp='0.368'/>
</phase>
<phase name='matcher' nodes='6072' live='3932' stamp='0.368'>
<phase_done name='matcher' nodes='4079' live='4079' stamp='0.373'/>
</phase>
<phase name='regalloc' nodes='5140' live='5120' stamp='0.375'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='8174' live='6764' stamp='0.435'/>
</phase>
<phase name='output' nodes='8208' live='6798' stamp='0.436'>
<phase_done name='output' nodes='8414' live='6896' stamp='0.444'/>
</phase>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<code_cache total_blobs='334' nmethods='78' adapters='205' free_code_cache='49667328'/>
<task_done success='1' nmsize='13960' count='5000' backedge_count='5006' inlined_bytes='2444' stamp='0.593'/>
</task>
<task compile_id='80' method='java/lang/Math max (II)I' bytes='11' count='5290' backedge_count='1' iicount='15292' stamp='0.593'>
<phase name='parse' nodes='3' live='3' stamp='0.593'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='max' return='722' arguments='722 722' flags='9' bytes='11' iicount='15334'/>
<parse method='833' uses='15334' stamp='0.593'>
<bc code='161' bci='2'/>
<branch target_bci='9' taken='0' not_taken='15331' cnt='15331' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='37' live='35' memory='25520' stamp='0.593'/>
</parse>
<phase_done name='parse' nodes='38' live='20' stamp='0.593'/>
</phase>
<phase name='optimizer' nodes='38' live='20' stamp='0.593'>
<phase name='ccp' nodes='38' live='20' stamp='0.593'>
<phase_done name='ccp' nodes='38' live='20' stamp='0.593'/>
</phase>
<phase name='idealLoop' nodes='38' live='20' stamp='0.593'>
<phase_done name='idealLoop' nodes='38' live='20' stamp='0.593'/>
</phase>
<phase_done name='optimizer' nodes='38' live='20' stamp='0.593'/>
</phase>
<phase name='matcher' nodes='38' live='20' stamp='0.593'>
<phase_done name='matcher' nodes='22' live='22' stamp='0.593'/>
</phase>
<phase name='regalloc' nodes='27' live='27' stamp='0.593'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='34' live='32' stamp='0.594'/>
</phase>
<phase name='output' nodes='34' live='32' stamp='0.594'>
<phase_done name='output' nodes='40' live='37' stamp='0.594'/>
</phase>
<code_cache total_blobs='335' nmethods='80' adapters='205' free_code_cache='49671552'/>
<task_done success='1' nmsize='88' count='6593' backedge_count='1' stamp='0.594'/>
</task>
<task compile_id='82' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='6290' backedge_count='1' iicount='16290' stamp='0.594'>
<phase name='parse' nodes='3' live='3' stamp='0.594'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='723' name='long'/>
<type id='722' name='int'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' iicount='16313'/>
<parse method='832' uses='16313' stamp='0.594'>
<bc code='184' bci='3'/>
<method id='834' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='16383'/>
<call method='834' count='13042' prof_factor='1' inline='1'/>
<intrinsic id='_numberOfLeadingZeros_l' nodes='1'/>
<bc code='108' bci='14'/>
<uncommon_trap bci='14' reason='div0_check' action='maybe_recompile'/>
<bc code='184' bci='16'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='max' return='722' arguments='722 722' flags='9' bytes='11' compile_id='80' compiler='C2' iicount='16592'/>
<call method='836' count='13042' prof_factor='1' inline='1'/>
<intrinsic id='_max' nodes='3'/>
<bc code='184' bci='34'/>
<klass id='821' name='[C' flags='1041'/>
<method id='837' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' compile_id='78' compiler='C2' iicount='11600'/>
<call method='837' count='13042' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='16310' stamp='0.594'>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9878' not_taken='18916' cnt='28794' prob='0.343058'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='18916' not_taken='0' cnt='18916' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9878' not_taken='18916' cnt='28794' prob='0.343058'/>
<parse_done nodes='309' live='300' memory='78616' stamp='0.594'/>
</parse>
<bc code='183' bci='45'/>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<method id='838' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' compile_id='79' compiler='C2' iicount='16744'/>
<call method='838' count='13042' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='16310' stamp='0.595'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='842' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='842' count='13445' prof_factor='0.97408' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='16310' stamp='0.595'>
<parse_done nodes='377' live='367' memory='90112' stamp='0.595'/>
</parse>
<parse_done nodes='396' live='385' memory='93136' stamp='0.595'/>
</parse>
<parse_done nodes='398' live='386' memory='93776' stamp='0.595'/>
</parse>
<phase_done name='parse' nodes='400' live='254' stamp='0.595'/>
</phase>
<phase name='optimizer' nodes='400' live='254' stamp='0.595'>
<phase name='idealLoop' nodes='400' live='232' stamp='0.595'>
<loop_tree>
<loop idx='400' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='401' live='232' stamp='0.595'/>
</phase>
<phase name='escapeAnalysis' nodes='401' live='232' stamp='0.595'>
<phase name='connectionGraph' nodes='403' live='234' stamp='0.595'>
<phase_done name='connectionGraph' nodes='403' live='234' stamp='0.595'/>
</phase>
<phase_done name='escapeAnalysis' nodes='403' live='234' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='403' live='234' stamp='0.595'>
<loop_tree>
<loop idx='400' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='487' live='245' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='487' live='245' stamp='0.595'>
<loop_tree>
<loop idx='494' main_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='656' live='344' stamp='0.595'/>
</phase>
<phase name='idealLoop' nodes='656' live='344' stamp='0.595'>
<loop_tree>
<loop idx='581' inner_loop='1' pre_loop='494' >
</loop>
<loop idx='494' inner_loop='1' main_loop='494' >
</loop>
<loop idx='516' inner_loop='1' post_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='656' live='344' stamp='0.595'/>
</phase>
<phase name='ccp' nodes='656' live='344' stamp='0.596'>
<phase_done name='ccp' nodes='656' live='344' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='660' live='342' stamp='0.596'>
<loop_tree>
<loop idx='581' inner_loop='1' pre_loop='494' >
</loop>
<loop idx='494' inner_loop='1' main_loop='494' >
</loop>
<loop idx='516' inner_loop='1' post_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='666' live='339' stamp='0.596'/>
</phase>
<phase_done name='optimizer' nodes='792' live='412' stamp='0.596'/>
</phase>
<phase name='matcher' nodes='792' live='412' stamp='0.596'>
<phase_done name='matcher' nodes='367' live='367' stamp='0.596'/>
</phase>
<phase name='regalloc' nodes='459' live='459' stamp='0.597'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='643' live='565' stamp='0.599'/>
</phase>
<phase name='output' nodes='649' live='571' stamp='0.599'>
<phase_done name='output' nodes='676' live='585' stamp='0.602'/>
</phase>
<code_cache total_blobs='337' nmethods='82' adapters='205' free_code_cache='49666176'/>
<task_done success='1' nmsize='1112' count='9422' backedge_count='1' inlined_bytes='168' stamp='0.610'/>
</task>
<task compile_id='84' compile_kind='osr' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='6051' iicount='1' osr_bci='20' stamp='0.610'>
<phase name='parse' nodes='3' live='3' stamp='0.610'>
<type id='724' name='void'/>
<klass id='832' name='org/github/arnaudroger/CsvContent' flags='1'/>
<method id='833' holder='832' name='setUp' return='724' flags='1' bytes='82' iicount='1'/>
<parse method='833' uses='1' osr_bci='20' stamp='0.612'>
<uncommon_trap bci='20' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='20' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='20' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='22'/>
<uncommon_trap bci='22' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='25'/>
<branch target_bci='57' taken='7187' not_taken='71868' cnt='79055' prob='0.0909114'/>
<bc code='158' bci='29'/>
<branch target_bci='39' taken='7187' not_taken='64681' cnt='71868' prob='0.100003'/>
<bc code='182' bci='35'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='839' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='77' compiler='C2' iicount='25783'/>
<call method='839' count='64681' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='64681' stamp='0.612'>
<uncommon_trap bci='35' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='842' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='76' compiler='C2' iicount='21715'/>
<call method='842' count='22484' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='25784' stamp='0.612'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21716' not_taken='0' cnt='21716' prob='always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='844' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='844' count='18416' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='21716' stamp='0.612'>
<parse_done nodes='229' live='223' memory='55872' stamp='0.612'/>
</parse>
<bc code='183' bci='21'/>
<method id='845' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10083'/>
<call method='845' count='18416' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='21716' stamp='0.612'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5094' not_taken='1690' cnt='6784' prob='0.750884'/>
<bc code='183' bci='17'/>
<method id='851' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2468'/>
<call method='851' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1690' stamp='0.612'>
<bc code='183' bci='31'/>
<method id='855' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='855' count='-1' prof_factor='0.684765' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='855' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='350' live='342' memory='85024' stamp='0.612'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3233'/>
<call method='853' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1690' stamp='0.612'>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='858' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='859' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='859' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_arraycopy' nodes='105'/>
<parse_done nodes='526' live='517' memory='125552' stamp='0.612'/>
</parse>
<parse_done nodes='553' live='543' memory='131080' stamp='0.612'/>
</parse>
<bc code='182' bci='35'/>
<method id='846' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13895'/>
<call method='846' count='18416' prof_factor='1' inline='1'/>
<klass id='861' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='846' bci='36' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<uncommon_trap method='846' bci='22' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<uncommon_trap method='846' bci='4' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='21716' stamp='0.612'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10596' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='63'/>
<parse_done nodes='671' live='659' memory='154184' stamp='0.613'/>
</parse>
<parse_done nodes='688' live='675' memory='158392' stamp='0.613'/>
</parse>
<parse_done nodes='691' live='677' memory='160032' stamp='0.613'/>
</parse>
<bc code='184' bci='44'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='840' holder='817' name='toHexString' return='730' arguments='723' flags='9' bytes='6' compile_id='81' compiler='C2' iicount='29419'/>
<call method='840' count='71868' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='71868' stamp='0.613'>
<bc code='184' bci='2'/>
<method id='863' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' compile_id='82' compiler='C2' iicount='29419'/>
<call method='863' count='26120' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a big method'/>
<direct_call bci='2'/>
<parse_done nodes='727' live='712' memory='167616' stamp='0.613'/>
</parse>
<bc code='182' bci='47'/>
<call method='839' count='71867' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='71867' stamp='0.613'>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<call method='842' count='22484' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='25784' stamp='0.613'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21716' not_taken='0' cnt='21716' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<call method='844' count='18416' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='21716' stamp='0.613'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='811' live='792' memory='182448' stamp='0.613'/>
</parse>
<bc code='183' bci='21'/>
<call method='845' count='18416' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='21716' stamp='0.613'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5094' not_taken='1690' cnt='6784' prob='0.750884'/>
<bc code='183' bci='17'/>
<call method='851' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1690' stamp='0.613'>
<bc code='183' bci='31'/>
<call method='855' count='-1' prof_factor='0.684765' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='923' live='902' memory='199696' stamp='0.613'/>
</parse>
<bc code='184' bci='20'/>
<call method='853' count='1690' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1690' stamp='0.613'>
<bc code='184' bci='11'/>
<call method='858' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='859' count='-1' prof_factor='0.522734' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='1090' live='1068' memory='259416' stamp='0.613'/>
</parse>
<parse_done nodes='1115' live='1092' memory='264888' stamp='0.613'/>
</parse>
<bc code='182' bci='35'/>
<call method='846' count='18416' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='21716' stamp='0.613'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10596' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='1266' live='1239' memory='293896' stamp='0.613'/>
</parse>
<parse_done nodes='1283' live='1255' memory='297680' stamp='0.613'/>
</parse>
<parse_done nodes='1286' live='1257' memory='298704' stamp='0.613'/>
</parse>
<bc code='182' bci='60'/>
<call method='839' count='7187' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='7187' stamp='0.613'>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<call method='842' count='22484' prof_factor='0.27875' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='7187' stamp='0.613'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21716' not_taken='0' cnt='21716' prob='always'/>
<bc code='182' bci='10'/>
<call method='844' count='18416' prof_factor='0.330969' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='7187' stamp='0.613'>
<parse_done nodes='1351' live='1320' memory='311808' stamp='0.613'/>
</parse>
<bc code='183' bci='21'/>
<call method='845' count='18416' prof_factor='0.330969' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='7187' stamp='0.613'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5094' not_taken='1690' cnt='6784' prob='0.750884'/>
<bc code='183' bci='17'/>
<call method='851' count='1690' prof_factor='0.712784' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1205' stamp='0.613'>
<bc code='183' bci='31'/>
<call method='855' count='-1' prof_factor='0.48825' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='1469' live='1436' memory='330664' stamp='0.613'/>
</parse>
<bc code='184' bci='20'/>
<call method='853' count='1690' prof_factor='0.712784' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1205' stamp='0.614'>
<bc code='184' bci='11'/>
<call method='858' count='-1' prof_factor='0.372719' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='859' count='-1' prof_factor='0.372719' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='1636' live='1602' memory='357096' stamp='0.614'/>
</parse>
<parse_done nodes='1661' live='1626' memory='362472' stamp='0.614'/>
</parse>
<bc code='182' bci='35'/>
<call method='846' count='18416' prof_factor='0.330969' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='7187' stamp='0.614'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10596' not_taken='0' cnt='10596' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10596' prof_factor='0.517236' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='62'/>
<parse_done nodes='1778' live='1741' memory='384824' stamp='0.614'/>
</parse>
<parse_done nodes='1795' live='1757' memory='389032' stamp='0.614'/>
</parse>
<parse_done nodes='1798' live='1759' memory='390160' stamp='0.614'/>
</parse>
<bc code='162' bci='15'/>
<branch target_bci='70' taken='0' not_taken='7187' cnt='7187' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1820' live='1780' memory='395656' stamp='0.614'/>
</parse>
<phase_done name='parse' nodes='1821' live='1021' stamp='0.614'/>
</phase>
<phase name='optimizer' nodes='1821' live='1021' stamp='0.614'>
<phase name='idealLoop' nodes='1846' live='999' stamp='0.614'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1860' live='1005' stamp='0.615'/>
</phase>
<phase name='escapeAnalysis' nodes='1860' live='1005' stamp='0.615'>
<phase name='connectionGraph' nodes='1861' live='1006' stamp='0.615'>
<phase_done name='connectionGraph' nodes='1861' live='1006' stamp='0.615'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1861' live='1006' stamp='0.615'/>
</phase>
<phase name='idealLoop' nodes='1861' live='1006' stamp='0.615'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1937' live='999' stamp='0.615'/>
</phase>
<phase name='idealLoop' nodes='1937' live='999' stamp='0.615'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1942' live='997' stamp='0.616'/>
</phase>
<phase name='idealLoop' nodes='1942' live='997' stamp='0.616'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1942' live='997' stamp='0.616'/>
</phase>
<phase name='ccp' nodes='1942' live='997' stamp='0.616'>
<phase_done name='ccp' nodes='1942' live='997' stamp='0.616'/>
</phase>
<phase name='idealLoop' nodes='1950' live='963' stamp='0.617'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1997' live='957' stamp='0.617'/>
</phase>
<phase name='idealLoop' nodes='1997' live='957' stamp='0.617'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2026' live='941' stamp='0.618'/>
</phase>
<phase name='idealLoop' nodes='2026' live='941' stamp='0.618'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2055' live='941' stamp='0.618'/>
</phase>
<phase_done name='optimizer' nodes='2232' live='1043' stamp='0.618'/>
</phase>
<phase name='matcher' nodes='2232' live='1043' stamp='0.618'>
<phase_done name='matcher' nodes='1094' live='1094' stamp='0.619'/>
</phase>
<phase name='regalloc' nodes='1390' live='1380' stamp='0.620'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='1970' live='1762' stamp='0.629'/>
</phase>
<phase name='output' nodes='1982' live='1774' stamp='0.629'>
<phase_done name='output' nodes='2036' live='1803' stamp='0.629'/>
</phase>
<code_cache total_blobs='339' nmethods='84' adapters='205' free_code_cache='49656448'/>
<task_done success='1' nmsize='3376' count='10000' backedge_count='5856' inlined_bytes='672' stamp='0.643'/>
</task>
<task compile_id='86' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='5260' iicount='1' osr_bci='28' stamp='1.134'>
<phase name='parse' nodes='3' live='3' stamp='1.134'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkHolder' return='724' arguments='833 834' flags='1' bytes='146' iicount='1'/>
<parse method='835' uses='1' osr_bci='28' stamp='1.135'>
<uncommon_trap bci='28' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='28' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='28' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='31'/>
<uncommon_trap bci='31' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='32'/>
<branch target_bci='145' taken='0' not_taken='11997' cnt='11997' prob='never'/>
<uncommon_trap bci='32' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='38'/>
<uncommon_trap bci='38' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='45'/>
<branch target_bci='87' taken='8981' not_taken='3016' cnt='11997' prob='0.748604'/>
<bc code='180' bci='49'/>
<uncommon_trap bci='49' reason='null_check' action='maybe_recompile'/>
<bc code='180' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='69'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='11215'/>
<call method='840' count='3016' prof_factor='1' inline='1'/>
<klass id='846' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='840' bci='8' reason='unloaded' action='reinterpret' index='2' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='3016' stamp='1.135'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='8824' not_taken='0' cnt='8824' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='844' count='8828' prof_factor='0.268926' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='845' count='8829' prof_factor='0.268926' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='471' live='461' memory='101528' stamp='1.135'/>
</parse>
<bc code='83' bci='72'/>
<uncommon_trap bci='72' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='72' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='81'/>
<uncommon_trap bci='81' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='91'/>
<branch target_bci='139' taken='8646' not_taken='335' cnt='8981' prob='0.962699'/>
<bc code='180' bci='95'/>
<uncommon_trap bci='95' reason='null_check' action='maybe_recompile'/>
<bc code='180' bci='98'/>
<uncommon_trap bci='98' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='115'/>
<call method='840' count='335' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='335' stamp='1.135'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='8824' not_taken='0' cnt='8824' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='844' count='8828' prof_factor='0.0298707' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='845' count='8829' prof_factor='0.0298707' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='779' live='762' memory='166904' stamp='1.135'/>
</parse>
<bc code='83' bci='118'/>
<uncommon_trap bci='118' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='118' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='127'/>
<uncommon_trap bci='127' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='133'/>
<klass id='841' name='[Ljava/lang/Object;' flags='1041'/>
<method id='842' holder='834' name='consume' return='724' arguments='841' flags='17' bytes='42' iicount='465'/>
<call method='842' count='335' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='886' live='865' memory='186168' stamp='1.135'/>
</parse>
<phase_done name='parse' nodes='887' live='634' stamp='1.135'/>
</phase>
<phase name='optimizer' nodes='887' live='634' stamp='1.135'>
<phase name='idealLoop' nodes='909' live='624' stamp='1.136'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='624' stamp='1.136'/>
</phase>
<phase name='escapeAnalysis' nodes='911' live='624' stamp='1.136'>
<phase name='connectionGraph' nodes='912' live='625' stamp='1.136'>
<phase_done name='connectionGraph' nodes='912' live='625' stamp='1.136'/>
</phase>
<phase_done name='escapeAnalysis' nodes='912' live='625' stamp='1.136'/>
</phase>
<phase name='idealLoop' nodes='912' live='625' stamp='1.136'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='923' live='622' stamp='1.136'/>
</phase>
<phase name='idealLoop' nodes='923' live='622' stamp='1.136'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='923' live='622' stamp='1.136'/>
</phase>
<phase name='idealLoop' nodes='923' live='622' stamp='1.136'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='923' live='622' stamp='1.137'/>
</phase>
<phase name='ccp' nodes='923' live='622' stamp='1.137'>
<phase_done name='ccp' nodes='923' live='622' stamp='1.137'/>
</phase>
<phase name='idealLoop' nodes='937' live='606' stamp='1.137'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='943' live='591' stamp='1.137'/>
</phase>
<phase name='idealLoop' nodes='943' live='591' stamp='1.137'>
<loop_tree>
<loop idx='909' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='949' live='591' stamp='1.137'/>
</phase>
<phase_done name='optimizer' nodes='1082' live='660' stamp='1.138'/>
</phase>
<phase name='matcher' nodes='1082' live='660' stamp='1.138'>
<phase_done name='matcher' nodes='637' live='637' stamp='1.138'/>
</phase>
<phase name='regalloc' nodes='825' live='816' stamp='1.138'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1271' live='1113' stamp='1.143'/>
</phase>
<phase name='output' nodes='1279' live='1121' stamp='1.143'>
<phase_done name='output' nodes='1314' live='1147' stamp='1.143'/>
</phase>
<code_cache total_blobs='341' nmethods='86' adapters='205' free_code_cache='49649344'/>
<task_done success='1' nmsize='2408' count='10000' backedge_count='6024' inlined_bytes='148' stamp='1.150'/>
</task>
<task compile_id='88' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='5000' backedge_count='621' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.296'>
<phase name='parse' nodes='3' live='3' stamp='1.296'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkHolder' return='724' arguments='833 834' flags='1' bytes='146' iicount='2'/>
<parse method='835' uses='2' stamp='1.296'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='180' bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='181' bci='10'/>
<uncommon_trap bci='10' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='31'/>
<uncommon_trap bci='31' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='32'/>
<branch target_bci='145' taken='1' not_taken='410517' cnt='410518' prob='2.43595e-06'/>
<uncommon_trap bci='35' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='35' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='38'/>
<uncommon_trap bci='38' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='45'/>
<branch target_bci='87' taken='328925' not_taken='81592' cnt='410517' prob='0.801246'/>
<bc code='180' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='69'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='19971'/>
<call method='840' count='81592' prof_factor='1' inline='1'/>
<klass id='846' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='840' bci='8' reason='unloaded' action='reinterpret' index='2' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='81592' stamp='1.297'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='844' count='16673' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='845' count='16674' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='427' live='418' memory='101432' stamp='1.297'/>
</parse>
<bc code='83' bci='72'/>
<uncommon_trap bci='72' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='81'/>
<uncommon_trap bci='81' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='91'/>
<branch target_bci='139' taken='319860' not_taken='9066' cnt='328926' prob='0.972438'/>
<bc code='180' bci='98'/>
<uncommon_trap bci='98' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='115'/>
<call method='840' count='9066' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='9066' stamp='1.297'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='844' count='16673' prof_factor='0.453958' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='845' count='16674' prof_factor='0.453958' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='716' live='702' memory='165056' stamp='1.297'/>
</parse>
<bc code='83' bci='118'/>
<uncommon_trap bci='118' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='127'/>
<uncommon_trap bci='127' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='133'/>
<klass id='841' name='[Ljava/lang/Object;' flags='1041'/>
<method id='842' holder='834' name='consume' return='724' arguments='841' flags='17' bytes='42' compile_id='87' compiler='C2' iicount='14714'/>
<call method='842' count='9066' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='32'/>
<branch target_bci='145' taken='1' not_taken='410517' cnt='410518' prob='2.43595e-06'/>
<parse_done nodes='819' live='801' memory='185880' stamp='1.297'/>
</parse>
<phase_done name='parse' nodes='821' live='568' stamp='1.297'/>
</phase>
<phase name='optimizer' nodes='821' live='568' stamp='1.297'>
<phase name='idealLoop' nodes='821' live='556' stamp='1.297'>
<loop_tree>
<loop idx='827' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='828' live='554' stamp='1.298'/>
</phase>
<phase name='escapeAnalysis' nodes='828' live='554' stamp='1.298'>
<phase name='connectionGraph' nodes='829' live='555' stamp='1.298'>
<phase_done name='connectionGraph' nodes='829' live='555' stamp='1.298'/>
</phase>
<phase_done name='escapeAnalysis' nodes='829' live='555' stamp='1.298'/>
</phase>
<phase name='idealLoop' nodes='829' live='555' stamp='1.298'>
<loop_tree>
<loop idx='827' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='858' live='561' stamp='1.298'/>
</phase>
<phase name='idealLoop' nodes='858' live='561' stamp='1.298'>
<loop_tree>
<loop idx='827' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='858' live='559' stamp='1.298'/>
</phase>
<phase name='idealLoop' nodes='858' live='559' stamp='1.298'>
<loop_tree>
<loop idx='827' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='858' live='559' stamp='1.298'/>
</phase>
<phase name='ccp' nodes='858' live='559' stamp='1.299'>
<phase_done name='ccp' nodes='858' live='559' stamp='1.299'/>
</phase>
<phase name='idealLoop' nodes='870' live='551' stamp='1.299'>
<loop_tree>
<loop idx='827' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='879' live='537' stamp='1.299'/>
</phase>
<phase name='idealLoop' nodes='879' live='537' stamp='1.299'>
<loop_tree>
<loop idx='827' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='888' live='537' stamp='1.299'/>
</phase>
<phase_done name='optimizer' nodes='1077' live='640' stamp='1.299'/>
</phase>
<phase name='matcher' nodes='1077' live='640' stamp='1.299'>
<phase_done name='matcher' nodes='633' live='633' stamp='1.300'/>
</phase>
<phase name='regalloc' nodes='805' live='799' stamp='1.300'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1265' live='1066' stamp='1.304'/>
</phase>
<phase name='output' nodes='1271' live='1072' stamp='1.304'>
<phase_done name='output' nodes='1303' live='1095' stamp='1.305'/>
</phase>
<code_cache total_blobs='343' nmethods='88' adapters='205' free_code_cache='49643264'/>
<task_done success='1' nmsize='2184' count='10000' backedge_count='5568' inlined_bytes='148' stamp='1.312'/>
</task>
<task compile_id='89' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkHolder (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='146' count='10000' backedge_count='5361' iicount='2' decompiles='1' unstable_if_traps='1' osr_bci='28' stamp='1.312'>
<phase name='parse' nodes='3' live='3' stamp='1.312'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkHolder' return='724' arguments='833 834' flags='1' bytes='146' compile_id='88' compiler='C2' iicount='2'/>
<parse method='835' uses='2' osr_bci='28' stamp='1.312'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='28' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='28' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='28' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='31'/>
<uncommon_trap bci='31' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='32'/>
<branch target_bci='145' taken='1' not_taken='837301' cnt='837302' prob='1.19431e-06'/>
<bc code='52' bci='38'/>
<uncommon_trap bci='38' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='45'/>
<branch target_bci='87' taken='671306' not_taken='165995' cnt='837301' prob='0.80175'/>
<bc code='180' bci='49'/>
<uncommon_trap bci='49' reason='null_check' action='maybe_recompile'/>
<bc code='180' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='69'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='19971'/>
<call method='840' count='165995' prof_factor='1' inline='1'/>
<klass id='846' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='840' bci='8' reason='unloaded' action='reinterpret' index='2' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='165995' stamp='1.312'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='844' count='16673' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='845' count='16674' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='466' live='457' memory='100392' stamp='1.312'/>
</parse>
<bc code='83' bci='72'/>
<uncommon_trap bci='72' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='72' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='81'/>
<uncommon_trap bci='81' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='91'/>
<branch target_bci='139' taken='652862' not_taken='18444' cnt='671306' prob='0.972525'/>
<bc code='180' bci='95'/>
<uncommon_trap bci='95' reason='null_check' action='maybe_recompile'/>
<bc code='180' bci='98'/>
<uncommon_trap bci='98' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='115'/>
<call method='840' count='18444' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='18444' stamp='1.312'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='19967' not_taken='0' cnt='19967' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='844' count='16673' prof_factor='0.923539' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='845' count='16674' prof_factor='0.923539' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='774' live='758' memory='166080' stamp='1.312'/>
</parse>
<bc code='83' bci='118'/>
<uncommon_trap bci='118' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='118' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='181' bci='127'/>
<uncommon_trap bci='127' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='133'/>
<klass id='841' name='[Ljava/lang/Object;' flags='1041'/>
<method id='842' holder='834' name='consume' return='724' arguments='841' flags='17' bytes='42' compile_id='87' compiler='C2' iicount='14714'/>
<call method='842' count='18444' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='882' live='861' memory='185648' stamp='1.313'/>
</parse>
<phase_done name='parse' nodes='884' live='632' stamp='1.313'/>
</phase>
<phase name='optimizer' nodes='884' live='632' stamp='1.313'>
<phase name='idealLoop' nodes='906' live='622' stamp='1.313'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='908' live='622' stamp='1.313'/>
</phase>
<phase name='escapeAnalysis' nodes='908' live='622' stamp='1.313'>
<phase name='connectionGraph' nodes='909' live='623' stamp='1.313'>
<phase_done name='connectionGraph' nodes='909' live='623' stamp='1.313'/>
</phase>
<phase_done name='escapeAnalysis' nodes='909' live='623' stamp='1.313'/>
</phase>
<phase name='idealLoop' nodes='909' live='623' stamp='1.313'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='920' live='620' stamp='1.314'/>
</phase>
<phase name='idealLoop' nodes='920' live='620' stamp='1.314'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='920' live='620' stamp='1.314'/>
</phase>
<phase name='idealLoop' nodes='920' live='620' stamp='1.314'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='920' live='620' stamp='1.314'/>
</phase>
<phase name='ccp' nodes='920' live='620' stamp='1.314'>
<phase_done name='ccp' nodes='920' live='620' stamp='1.314'/>
</phase>
<phase name='idealLoop' nodes='934' live='604' stamp='1.314'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='940' live='589' stamp='1.315'/>
</phase>
<phase name='idealLoop' nodes='940' live='589' stamp='1.315'>
<loop_tree>
<loop idx='906' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='946' live='589' stamp='1.315'/>
</phase>
<phase_done name='optimizer' nodes='1078' live='657' stamp='1.315'/>
</phase>
<phase name='matcher' nodes='1078' live='657' stamp='1.315'>
<phase_done name='matcher' nodes='633' live='633' stamp='1.316'/>
</phase>
<phase name='regalloc' nodes='820' live='811' stamp='1.316'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1291' live='1127' stamp='1.320'/>
</phase>
<phase name='output' nodes='1299' live='1135' stamp='1.320'>
<phase_done name='output' nodes='1331' live='1158' stamp='1.320'/>
</phase>
<code_cache total_blobs='344' nmethods='89' adapters='205' free_code_cache='49637888'/>
<task_done success='1' nmsize='2376' count='10000' backedge_count='6024' inlined_bytes='148' stamp='1.327'/>
</task>
</compilation_log>
<hotspot_log_done stamp='22.175'/>
</hotspot_log>
