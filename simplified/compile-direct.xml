<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='22189' time_ms='1480515435221'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.112-b16
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.112-b16) for bsd-amd64 JRE (1.8.0_112-b16), built on Sep 30 2016 22:41:41 by &quot;java_re&quot; with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -XX:LogFile=simplified/compile-direct.xml -XX:CompileCommandFile=/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T/jmh2098668215380526927compilecommand 
</args>
<command>
org.openjdk.jmh.runner.ForkedMain 127.0.0.1 55721
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.112-b16
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/aroger/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/endorsed
sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib
java.library.path=/Users/aroger/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre
java.class.path=target/benchmarks.jar
sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
sun.java.command=org.openjdk.jmh.runner.ForkedMain 127.0.0.1 55721
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='7171'/>
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
<thread_logfile thread='19203' filename='/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T//hs_c19203_pid22189.log'/>
<writer thread='19715'/>
<thread_logfile thread='19715' filename='/var/folders/2c/fc0rcnsx75bcg6mk8kl__3g49jsh31/T//hs_c19715_pid22189.log'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='502' backedge_count='5000' iicount='502' stamp='0.083' comment='count' hot_count='502'/>
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest$FastInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Attributes$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ASCIICaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSigner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarVerifier$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.ManifestEntryVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.SignatureFileVerifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x0000000104845410:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x0000000108e43000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000104845560: mov    0x8(%rsi),%r10d
  0x0000000104845564: shl    $0x3,%r10
  0x0000000104845568: cmp    %r10,%rax
  0x000000010484556b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104845571: data32 xchg %ax,%ax
  0x0000000104845574: nopl   0x0(%rax,%rax,1)
  0x000000010484557c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104845580: mov    %eax,-0x14000(%rsp)
  0x0000000104845587: push   %rbp
  0x0000000104845588: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x000000010484558c: mov    %rsi,%rbx
  0x000000010484558f: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000104845592: test   %eax,%eax
  0x0000000104845594: jne    0x0000000104845680  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000010484559a: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000010484559d: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000001048456a5
  0x00000001048455a2: test   %r10d,%r10d
  0x00000001048455a5: jg     0x00000001048455ae  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000001048455a7: xor    %eax,%eax
  0x00000001048455a9: jmpq   0x0000000104845680
  0x00000001048455ae: test   %r10d,%r10d
  0x00000001048455b1: jbe    0x0000000104845691
  0x00000001048455b7: mov    %r10d,%r9d
  0x00000001048455ba: dec    %r9d
  0x00000001048455bd: cmp    %r10d,%r9d
  0x00000001048455c0: jae    0x0000000104845691  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000001048455c6: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000001048455cc: mov    %r10d,%edi
  0x00000001048455cf: add    $0xfffffffffffffffd,%edi
  0x00000001048455d2: mov    %r11d,%eax
  0x00000001048455d5: shl    $0x5,%eax
  0x00000001048455d8: lea    (%r12,%rbp,8),%rdx
  0x00000001048455dc: mov    $0x1,%r8d
  0x00000001048455e2: mov    $0x80000000,%ecx
  0x00000001048455e7: cmp    %edi,%r9d
  0x00000001048455ea: cmovl  %ecx,%edi
  0x00000001048455ed: cmp    $0x1,%edi
  0x00000001048455f0: jle    0x0000000104845656
  0x00000001048455f2: sub    %r11d,%eax
  0x00000001048455f5: jmp    0x0000000104845603
  0x00000001048455f7: nopw   0x0(%rax,%rax,1)
  0x0000000104845600: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000104845603: movzwl 0x10(%rdx,%r8,2),%r9d
  0x0000000104845609: add    %r9d,%eax
  0x000000010484560c: movslq %r8d,%r11
  0x000000010484560f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x0000000104845615: movzwl 0x16(%rdx,%r11,2),%ebp
  0x000000010484561b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x0000000104845621: mov    %eax,%r11d
  0x0000000104845624: shl    $0x5,%r11d
  0x0000000104845628: sub    %eax,%r11d
  0x000000010484562b: add    %ecx,%r11d
  0x000000010484562e: mov    %r11d,%esi
  0x0000000104845631: shl    $0x5,%esi
  0x0000000104845634: sub    %r11d,%esi
  0x0000000104845637: add    %r9d,%esi
  0x000000010484563a: mov    %esi,%r11d
  0x000000010484563d: shl    $0x5,%r11d
  0x0000000104845641: sub    %esi,%r11d
  0x0000000104845644: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000104845647: mov    %r11d,%eax
  0x000000010484564a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000010484564d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000104845651: cmp    %edi,%r8d
  0x0000000104845654: jl     0x0000000104845600  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000104845656: cmp    %r10d,%r8d
  0x0000000104845659: jge    0x000000010484568c  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x000000010484565b: movzwl 0x10(%rdx,%r8,2),%ecx
  0x0000000104845661: sub    %r11d,%eax
  0x0000000104845664: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000104845666: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000104845669: cmp    %r10d,%r8d
  0x000000010484566c: jge    0x000000010484567d  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000010484566e: mov    %eax,%r9d
  0x0000000104845671: shl    $0x5,%r9d          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000104845675: mov    %eax,%r11d
  0x0000000104845678: mov    %r9d,%eax
  0x000000010484567b: jmp    0x000000010484565b
  0x000000010484567d: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000104845680: add    $0x20,%rsp
  0x0000000104845684: pop    %rbp
  0x0000000104845685: test   %eax,-0x205b68b(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010484568b: retq   
  0x000000010484568c: mov    %r11d,%eax
  0x000000010484568f: jmp    0x000000010484567d
  0x0000000104845691: mov    $0xffffff86,%esi
  0x0000000104845696: mov    %rbx,(%rsp)
  0x000000010484569a: nop
  0x000000010484569b: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop off=320}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000001048456a0: callq  0x0000000103c85e14  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000001048456a5: mov    $0xfffffff6,%esi
  0x00000001048456aa: nop
  0x00000001048456ab: callq  0x00000001047dc1a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001048456b0: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001048456b5: hlt    
  0x00000001048456b6: hlt    
  0x00000001048456b7: hlt    
  0x00000001048456b8: hlt    
  0x00000001048456b9: hlt    
  0x00000001048456ba: hlt    
  0x00000001048456bb: hlt    
  0x00000001048456bc: hlt    
  0x00000001048456bd: hlt    
  0x00000001048456be: hlt    
  0x00000001048456bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001048456c0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001048456c5: callq  0x00000001048456ca
  0x00000001048456ca: subq   $0x5,(%rsp)
  0x00000001048456cf: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048456d4: hlt    
  0x00000001048456d5: hlt    
  0x00000001048456d6: hlt    
  0x00000001048456d7: hlt    
<nmethod compile_id='1' compiler='C2' entry='0x0000000104845560' size='1256' address='0x0000000104845410' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='832' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/lang/String hashCode ()I' bytes='55' count='511' backedge_count='5045' iicount='511' stamp='0.087'/>
<writer thread='7171'/>
[Loaded java.security.CryptoPrimitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.EnumSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingMethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RegularEnumSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AlgorithmDecomposer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$LastNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$GroupHead from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$CharProperty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$BmpCharProperty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Single from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$SliceNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Slice from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Begin from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$First from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Start from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$TreeInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$SliceI from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$BranchConn from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Branch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.AbstractAlgorithmConstraints$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Security from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Security$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties$LineReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='2' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='24' backedge_count='5000' iicount='24' stamp='0.091' comment='count' hot_count='24'/>
[Loaded java.util.ArrayList$SubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ListIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList$SubList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraints from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$GroupTail from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Ctype from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$CharProperty$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Pattern$Curly from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.MatchResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.regex.Matcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.DisabledAlgorithmConstraints$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain$HangupThread from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.io.IOException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ForwardingNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ApplicationShutdownHooks from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ApplicationShutdownHooks$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.ForkedMain$ShutdownTimeoutThread from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='3' method='java/lang/String indexOf (II)I' bytes='70' count='323' backedge_count='5000' iicount='323' stamp='0.099' comment='count' hot_count='323'/>
[Loaded java.lang.reflect.InvocationHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.net.Socket from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetSocketAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetSocketAddress$InetSocketAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetBooleanAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x0000000104850290:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001090a2cc8} &apos;readLine&apos; &apos;()I&apos; in &apos;java/util/Properties$LineReader&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000104850440: mov    0x8(%rsi),%r10d
  0x0000000104850444: shl    $0x3,%r10
  0x0000000104850448: cmp    %r10,%rax
  0x000000010485044b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104850451: data32 xchg %ax,%ax
  0x0000000104850454: nopl   0x0(%rax,%rax,1)
  0x000000010485045c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104850460: mov    %eax,-0x14000(%rsp)
  0x0000000104850467: push   %rbp
  0x0000000104850468: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.Properties$LineReader::readLine@-1 (line 422)

  0x000000010485046c: mov    %rsi,%rbx
  0x000000010485046f: xor    %edi,%edi
  0x0000000104850471: xor    %r11d,%r11d
  0x0000000104850474: xor    %r8d,%r8d
  0x0000000104850477: xor    %r9d,%r9d
  0x000000010485047a: mov    $0x1,%edx
  0x000000010485047f: mov    $0x1,%esi
  0x0000000104850484: jmp    0x00000001048504a0
  0x0000000104850486: data32 nopw 0x0(%rax,%rax,1)  ; OopMap{rbx=Oop off=80}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@344 (line 493)

  0x0000000104850490: test   %eax,-0x2066496(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@344 (line 493)
                                                ;   {poll}
  0x0000000104850496: xor    %r9d,%r9d
  0x0000000104850499: xor    %edx,%edx
  0x000000010485049b: xor    %esi,%esi
  0x000000010485049d: mov    %ebp,%edi
  0x000000010485049f: nop                       ;*aload_0
                                                ; - java.util.Properties$LineReader::readLine@21 (line 433)

  0x00000001048504a0: mov    0x20(%rbx),%r13d   ;*getfield inStream
                                                ; - java.util.Properties$LineReader::readLine@34 (line 434)

  0x00000001048504a4: mov    0xc(%rbx),%ecx     ;*getfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@26 (line 433)

  0x00000001048504a7: mov    %ecx,0x24(%rsp)
  0x00000001048504ab: mov    0x10(%rbx),%ecx    ;*getfield inOff
                                                ; - java.util.Properties$LineReader::readLine@22 (line 433)

  0x00000001048504ae: mov    0x14(%rbx),%r10d   ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@59 (line 434)

  0x00000001048504b2: mov    %edi,%eax
  0x00000001048504b4: dec    %eax               ;*iinc
                                                ; - java.util.Properties$LineReader::readLine@96 (line 442)

  0x00000001048504b6: cmp    0x24(%rsp),%ecx
  0x00000001048504ba: jge    0x0000000104850617  ;*getfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@374 (line 505)

  0x00000001048504c0: test   %r13d,%r13d
  0x00000001048504c3: je     0x00000001048508fc  ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)

  0x00000001048504c9: mov    %ecx,%r13d
  0x00000001048504cc: inc    %r13d              ;*iadd
                                                ; - java.util.Properties$LineReader::readLine@122 (line 450)

  0x00000001048504cf: mov    %r13d,0x10(%rbx)   ;*putfield inOff
                                                ; - java.util.Properties$LineReader::readLine@123 (line 450)

  0x00000001048504d3: mov    0xc(%r12,%r10,8),%r14d  ; implicit exception: dispatches to 0x0000000104850c1d
  0x00000001048504d8: cmp    %r14d,%ecx
  0x00000001048504db: jae    0x0000000104850880  ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)

  0x00000001048504e1: shl    $0x3,%r10
  0x00000001048504e5: movslq %ecx,%rcx
  0x00000001048504e8: movzbl 0x10(%r10,%rcx,1),%r10d  ;*iand
                                                ; - java.util.Properties$LineReader::readLine@127 (line 450)

  0x00000001048504ee: test   %edx,%edx
  0x00000001048504f0: je     0x000000010485052e  ; OopMap{rbx=Oop off=178}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@174 (line 461)

  0x00000001048504f2: test   %eax,-0x20664f8(%rip)        # 0x00000001027ea000
                                                ;   {poll}
  0x00000001048504f8: cmp    $0x20,%r10d
  0x00000001048504fc: je     0x00000001048504a0  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@174 (line 461)

  0x00000001048504fe: cmp    $0x9,%r10d
  0x0000000104850502: je     0x00000001048509d4  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)

  0x0000000104850508: cmp    $0xc,%r10d
  0x000000010485050c: je     0x0000000104850a05  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)

  0x0000000104850512: test   %r8d,%r8d
  0x0000000104850515: jne    0x000000010485052b  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@194 (line 464)

  0x0000000104850517: cmp    $0xd,%r10d
  0x000000010485051b: je     0x0000000104850abb  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)

  0x0000000104850521: cmp    $0xa,%r10d
  0x0000000104850525: je     0x00000001048506db  ;*iconst_0
                                                ; - java.util.Properties$LineReader::readLine@212 (line 467)

  0x000000010485052b: xor    %r8d,%r8d          ;*iload
                                                ; - java.util.Properties$LineReader::readLine@217 (line 470)

  0x000000010485052e: test   %esi,%esi
  0x0000000104850530: jne    0x00000001048505f1  ;*iload_2
                                                ; - java.util.Properties$LineReader::readLine@243 (line 478)

  0x0000000104850536: cmp    $0xa,%r10d
  0x000000010485053a: je     0x0000000104850596  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@246 (line 478)

  0x000000010485053c: cmp    $0xd,%r10d
  0x0000000104850540: je     0x000000010485092d  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)

  0x0000000104850546: mov    0x1c(%rbx),%ecx    ;*getfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@256 (line 479)

  0x0000000104850549: mov    0xc(%r12,%rcx,8),%edx  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ; implicit exception: dispatches to 0x0000000104850c31
  0x000000010485054e: mov    %edi,%ebp
  0x0000000104850550: inc    %ebp               ;*iinc
                                                ; - java.util.Properties$LineReader::readLine@260 (line 479)

  0x0000000104850552: cmp    %edx,%edi
  0x0000000104850554: jae    0x00000001048508b5  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)

  0x000000010485055a: lea    (%r12,%rcx,8),%rax  ;*getfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@256 (line 479)

  0x000000010485055e: mov    %r10w,0x10(%rax,%rdi,2)  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)

  0x0000000104850564: cmp    %edx,%ebp
  0x0000000104850566: je     0x00000001048506e9  ;*iload_2
                                                ; - java.util.Properties$LineReader::readLine@320 (line 490)

  0x000000010485056c: cmp    $0x5c,%r10d
  0x0000000104850570: jne    0x0000000104850490  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@323 (line 490)

  0x0000000104850576: test   %r9d,%r9d
  0x0000000104850579: jne    0x0000000104850b29  ; OopMap{rbx=Oop off=319}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@338 (line 491)

  0x000000010485057f: test   %eax,-0x2066585(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@338 (line 491)
                                                ;   {poll}
  0x0000000104850585: mov    $0x1,%r9d
  0x000000010485058b: xor    %edx,%edx
  0x000000010485058d: xor    %esi,%esi
  0x000000010485058f: mov    %ebp,%edi
  0x0000000104850591: jmpq   0x00000001048504a0
  0x0000000104850596: test   %r11d,%r11d
  0x0000000104850599: jne    0x00000001048505d7  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@349 (line 498)

  0x000000010485059b: test   %edi,%edi
  0x000000010485059d: je     0x0000000104850ae9  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)

  0x00000001048505a3: cmp    0x24(%rsp),%r13d
  0x00000001048505a8: jge    0x0000000104850b09  ;*if_icmplt
                                                ; - java.util.Properties$LineReader::readLine@377 (line 505)

  0x00000001048505ae: test   %r9d,%r9d
  0x00000001048505b1: je     0x00000001048506cd  ; OopMap{rbx=Oop off=375}
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@457 (line 523)

  0x00000001048505b7: test   %eax,-0x20665bd(%rip)        # 0x00000001027ea000
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@457 (line 523)
                                                ;   {poll}
  0x00000001048505bd: xor    %r11d,%r11d
  0x00000001048505c0: mov    $0x1,%r8d
  0x00000001048505c6: xor    %r9d,%r9d
  0x00000001048505c9: mov    $0x1,%edx
  0x00000001048505ce: xor    %esi,%esi
  0x00000001048505d0: mov    %eax,%edi
  0x00000001048505d2: jmpq   0x00000001048504a0  ; OopMap{rbx=Oop off=407}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@366 (line 503)

  0x00000001048505d7: test   %eax,-0x20665dd(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@366 (line 503)
                                                ;   {poll}
  0x00000001048505dd: xor    %edi,%edi
  0x00000001048505df: xor    %r11d,%r11d
  0x00000001048505e2: mov    $0x1,%edx
  0x00000001048505e7: mov    $0x1,%esi
  0x00000001048505ec: jmpq   0x00000001048504a0
  0x00000001048505f1: cmp    $0x23,%r10d
  0x00000001048505f5: jne    0x000000010485060c  ; OopMap{rbx=Oop off=439}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@240 (line 474)

  0x00000001048505f7: test   %eax,-0x20665fd(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@240 (line 474)
                                                ;   {poll}
  0x00000001048505fd: mov    $0x1,%r11d
  0x0000000104850603: xor    %edx,%edx
  0x0000000104850605: xor    %esi,%esi
  0x0000000104850607: jmpq   0x00000001048504a0
  0x000000010485060c: cmp    $0x21,%r10d
  0x0000000104850610: je     0x00000001048505f7  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@234 (line 472)

  0x0000000104850612: jmpq   0x0000000104850536
  0x0000000104850617: test   %r13d,%r13d
  0x000000010485061a: je     0x000000010485081e  ;*ifnonnull
                                                ; - java.util.Properties$LineReader::readLine@37 (line 434)

  0x0000000104850620: mov    0x8(%r12,%r13,8),%ecx
  0x0000000104850625: cmp    $0xf8004d39,%ecx   ;   {metadata(&apos;java/io/BufferedInputStream&apos;)}
  0x000000010485062b: jne    0x0000000104850bd2
  0x0000000104850631: mov    %eax,0x20(%rsp)
  0x0000000104850635: mov    %esi,0x1c(%rsp)
  0x0000000104850639: mov    %edx,0x18(%rsp)
  0x000000010485063d: mov    %r9d,0x14(%rsp)
  0x0000000104850642: mov    %r8d,0x10(%rsp)
  0x0000000104850647: mov    %r11d,0xc(%rsp)
  0x000000010485064c: mov    %edi,0x8(%rsp)
  0x0000000104850650: mov    %rbx,(%rsp)
  0x0000000104850654: lea    (%r12,%r13,8),%rsi  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)

  0x0000000104850658: mov    %r10,%rdx
  0x000000010485065b: shl    $0x3,%rdx          ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@59 (line 434)

  0x000000010485065f: mov    %rbx,%rbp
  0x0000000104850662: nop
  0x0000000104850663: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop off=552}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {optimized virtual_call}
  0x0000000104850668: mov    %eax,0x24(%rsp)
  0x000000010485066c: mov    (%rsp),%rbx
  0x0000000104850670: mov    0x24(%rsp),%r11d
  0x0000000104850675: mov    %r11d,0xc(%rbx)    ;*putfield inLimit
                                                ; - java.util.Properties$LineReader::readLine@65 (line 435)

  0x0000000104850679: mov    %r12d,0x10(%rbx)   ;*putfield inOff
                                                ; - java.util.Properties$LineReader::readLine@70 (line 436)

  0x000000010485067d: test   %r11d,%r11d
  0x0000000104850680: jle    0x00000001048506b0  ;*ifgt
                                                ; - java.util.Properties$LineReader::readLine@77 (line 437)

  0x0000000104850682: mov    0x20(%rbx),%r13d   ;*getfield inStream
                                                ; - java.util.Properties$LineReader::readLine@102 (line 447)

  0x0000000104850686: mov    0x14(%rbx),%r10d   ;*getfield inByteBuf
                                                ; - java.util.Properties$LineReader::readLine@112 (line 450)

  0x000000010485068a: xor    %ecx,%ecx
  0x000000010485068c: mov    0x8(%rsp),%edi
  0x0000000104850690: mov    0xc(%rsp),%r11d
  0x0000000104850695: mov    0x10(%rsp),%r8d
  0x000000010485069a: mov    0x14(%rsp),%r9d
  0x000000010485069f: mov    0x18(%rsp),%edx
  0x00000001048506a3: mov    0x1c(%rsp),%esi
  0x00000001048506a7: mov    0x20(%rsp),%eax
  0x00000001048506ab: jmpq   0x00000001048504c0
  0x00000001048506b0: mov    0x8(%rsp),%r10d
  0x00000001048506b5: test   %r10d,%r10d
  0x00000001048506b8: je     0x00000001048506c8  ;*ifeq
                                                ; - java.util.Properties$LineReader::readLine@81 (line 438)

  0x00000001048506ba: mov    0xc(%rsp),%r8d
  0x00000001048506bf: test   %r8d,%r8d
  0x00000001048506c2: je     0x000000010485086d  ;*iconst_m1
                                                ; - java.util.Properties$LineReader::readLine@89 (line 439)

  0x00000001048506c8: mov    $0xffffffff,%edi   ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@349 (line 498)

  0x00000001048506cd: mov    %edi,%eax
  0x00000001048506cf: add    $0x50,%rsp
  0x00000001048506d3: pop    %rbp
  0x00000001048506d4: test   %eax,-0x20666da(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x00000001048506da: retq                      ; OopMap{rbx=Oop off=667}
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@209 (line 465)

  0x00000001048506db: test   %eax,-0x20666e1(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.util.Properties$LineReader::readLine@209 (line 465)
                                                ;   {poll}
  0x00000001048506e1: xor    %r8d,%r8d
  0x00000001048506e4: jmpq   0x00000001048504a0
  0x00000001048506e9: mov    %edx,%edi
  0x00000001048506eb: shl    %edi               ;*imul
                                                ; - java.util.Properties$LineReader::readLine@280 (line 481)

  0x00000001048506ed: test   %edi,%edi
  0x00000001048506ef: jge    0x00000001048506f6  ;*ifge
                                                ; - java.util.Properties$LineReader::readLine@285 (line 482)

  0x00000001048506f1: mov    $0x7fffffff,%edi   ;*iload
                                                ; - java.util.Properties$LineReader::readLine@292 (line 485)

  0x00000001048506f6: cmp    $0x80000,%edi
  0x00000001048506fc: ja     0x0000000104850b4d
  0x0000000104850702: movslq %edi,%r13
  0x0000000104850705: shl    %r13
  0x0000000104850708: add    $0x17,%r13
  0x000000010485070c: mov    %r13,%rsi
  0x000000010485070f: and    $0xfffffffffffffff8,%rsi
  0x0000000104850713: vmovq  %rsi,%xmm1
  0x0000000104850718: cmp    $0x80000,%edi
  0x000000010485071e: ja     0x0000000104850a39
  0x0000000104850724: mov    %ecx,0x38(%rsp)
  0x0000000104850728: mov    0x60(%r15),%rsi
  0x000000010485072c: mov    %rsi,%rcx
  0x000000010485072f: vmovq  %xmm1,%r14
  0x0000000104850734: add    %r14,%rcx
  0x0000000104850737: cmp    0x70(%r15),%rcx
  0x000000010485073b: jae    0x0000000104850a3d
  0x0000000104850741: mov    %rcx,0x60(%r15)
  0x0000000104850745: prefetchnta 0xc0(%rcx)
  0x000000010485074c: movq   $0x1,(%rsi)
  0x0000000104850753: prefetchnta 0x100(%rcx)
  0x000000010485075a: movl   $0xf8000041,0x8(%rsi)  ;   {metadata({type array char})}
  0x0000000104850761: mov    %edi,0xc(%rsi)
  0x0000000104850764: prefetchnta 0x140(%rcx)
  0x000000010485076b: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x0000000104850772: mov    %rsi,%rcx
  0x0000000104850775: add    $0x10,%rcx
  0x0000000104850779: vmovq  %rcx,%xmm0
  0x000000010485077e: shr    $0x3,%r13
  0x0000000104850782: mov    %r13,%rcx
  0x0000000104850785: add    $0xfffffffffffffffe,%rcx
  0x0000000104850789: cmp    %edx,%edi
  0x000000010485078b: jb     0x0000000104850b55
  0x0000000104850791: test   %edx,%edx
  0x0000000104850793: jle    0x0000000104850bbe
  0x0000000104850799: mov    0x38(%rsp),%ecx
  0x000000010485079d: lea    0x10(%r12,%rcx,8),%rcx
  0x00000001048507a2: cmp    %edi,%edx
  0x00000001048507a4: jl     0x0000000104850959
  0x00000001048507aa: mov    %rcx,%rdi
  0x00000001048507ad: vmovq  %xmm0,%rcx
  0x00000001048507b2: mov    %rsi,0x8(%rsp)
  0x00000001048507b7: mov    %r10d,0x4(%rsp)
  0x00000001048507bc: mov    %r9d,(%rsp)
  0x00000001048507c0: mov    %r8d,%r14d
  0x00000001048507c3: mov    %r11d,%r13d
  0x00000001048507c6: vmovq  %xmm1,%r10
  0x00000001048507cb: add    $0xfffffffffffffff0,%r10
  0x00000001048507cf: shr    $0x3,%r10
  0x00000001048507d3: mov    %rcx,%rsi
  0x00000001048507d6: mov    %r10,%rdx
  0x00000001048507d9: movabs $0x104829780,%r10
  0x00000001048507e3: callq  *%r10
  0x00000001048507e6: mov    %r13d,%r11d
  0x00000001048507e9: mov    %r14d,%r8d
  0x00000001048507ec: mov    (%rsp),%r9d
  0x00000001048507f0: mov    0x4(%rsp),%r10d
  0x00000001048507f5: mov    0x8(%rsp),%rsi     ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x00000001048507fa: mov    %rsi,%rdi
  0x00000001048507fd: shr    $0x3,%rdi
  0x0000000104850801: mov    %edi,0x1c(%rbx)
  0x0000000104850804: mov    %rbx,%rcx
  0x0000000104850807: shr    $0x9,%rcx
  0x000000010485080b: movabs $0x104297000,%rdi
  0x0000000104850815: mov    %r12b,(%rdi,%rcx,1)  ;*putfield lineBuf
                                                ; - java.util.Properties$LineReader::readLine@317 (line 487)

  0x0000000104850819: jmpq   0x000000010485056c
  0x000000010485081e: mov    0x18(%rbx),%ebp    ;*getfield inCharBuf
                                                ; - java.util.Properties$LineReader::readLine@45 (line 434)

  0x0000000104850821: mov    0x24(%rbx),%ecx    ;*getfield reader
                                                ; - java.util.Properties$LineReader::readLine@41 (line 434)

  0x0000000104850824: test   %ecx,%ecx
  0x0000000104850826: je     0x0000000104850c0d  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)

  0x000000010485082c: mov    %eax,0x20(%rsp)
  0x0000000104850830: mov    %esi,0x1c(%rsp)
  0x0000000104850834: mov    %edx,0x18(%rsp)
  0x0000000104850838: mov    %r9d,0x14(%rsp)
  0x000000010485083d: mov    %r8d,0x10(%rsp)
  0x0000000104850842: mov    %r11d,0xc(%rsp)
  0x0000000104850847: mov    %edi,0x8(%rsp)
  0x000000010485084b: mov    %rbx,(%rsp)
  0x000000010485084f: mov    %rbp,%rdx
  0x0000000104850852: shl    $0x3,%rdx          ;*getfield inCharBuf
                                                ; - java.util.Properties$LineReader::readLine@45 (line 434)

  0x0000000104850856: lea    (%r12,%rcx,8),%rsi  ;*getfield reader
                                                ; - java.util.Properties$LineReader::readLine@41 (line 434)

  0x000000010485085a: mov    %rbx,%rbp
  0x000000010485085d: xchg   %ax,%ax
  0x000000010485085f: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop off=1060}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)
                                                ;   {optimized virtual_call}
  0x0000000104850864: mov    %eax,0x24(%rsp)
  0x0000000104850868: jmpq   0x000000010485066c
  0x000000010485086d: mov    0x14(%rsp),%r11d
  0x0000000104850872: test   %r11d,%r11d
  0x0000000104850875: je     0x00000001048508e5  ;*iload_1
                                                ; - java.util.Properties$LineReader::readLine@99 (line 444)

  0x0000000104850877: mov    0x20(%rsp),%edi
  0x000000010485087b: jmpq   0x00000001048506cd
  0x0000000104850880: mov    %rbx,%rbp
  0x0000000104850883: mov    %edi,(%rsp)
  0x0000000104850886: mov    %edx,0x4(%rsp)
  0x000000010485088a: mov    %r11d,0x8(%rsp)
  0x000000010485088f: mov    %esi,0xc(%rsp)
  0x0000000104850893: mov    %r8d,0x10(%rsp)
  0x0000000104850898: mov    %r9d,0x14(%rsp)
  0x000000010485089d: mov    %r10d,0x18(%rsp)
  0x00000001048508a2: mov    %ecx,0x1c(%rsp)
  0x00000001048508a6: mov    $0xffffffe4,%esi
  0x00000001048508ab: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=NarrowOop off=1136}
                                                ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)
                                                ;   {runtime_call}
  0x00000001048508b0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048508b5: mov    %rbx,(%rsp)
  0x00000001048508b9: mov    %r11d,0xc(%rsp)
  0x00000001048508be: mov    %r8d,0x10(%rsp)
  0x00000001048508c3: mov    %r9d,0x14(%rsp)
  0x00000001048508c8: mov    %ecx,0x18(%rsp)
  0x00000001048508cc: mov    %edi,0x1c(%rsp)
  0x00000001048508d0: mov    %r10d,0x20(%rsp)
  0x00000001048508d5: mov    $0xffffffe4,%esi
  0x00000001048508da: nop
  0x00000001048508db: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=NarrowOop off=1184}
                                                ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x00000001048508e0: callq  0x0000000103c85e14  ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x00000001048508e5: mov    %rax,-0x8(%rsp)
  0x00000001048508ea: mov    0x8(%rsp),%eax
  0x00000001048508ee: mov    %eax,0x20(%rsp)
  0x00000001048508f2: mov    -0x8(%rsp),%rax
  0x00000001048508f7: jmpq   0x0000000104850877  ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)

  0x00000001048508fc: mov    %rbx,%rbp
  0x00000001048508ff: mov    %edi,(%rsp)
  0x0000000104850902: mov    %edx,0x4(%rsp)
  0x0000000104850906: mov    %r11d,0x8(%rsp)
  0x000000010485090b: mov    %esi,0xc(%rsp)
  0x000000010485090f: mov    %r8d,0x10(%rsp)
  0x0000000104850914: mov    %r9d,0x14(%rsp)
  0x0000000104850919: mov    %r13d,0x18(%rsp)
  0x000000010485091e: mov    $0xffffff65,%esi
  0x0000000104850923: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=NarrowOop off=1256}
                                                ;*ifnull
                                                ; - java.util.Properties$LineReader::readLine@105 (line 447)
                                                ;   {runtime_call}
  0x0000000104850928: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x000000010485092d: mov    %rbx,%rbp
  0x0000000104850930: mov    %edi,(%rsp)
  0x0000000104850933: mov    %r11d,0x8(%rsp)
  0x0000000104850938: mov    %r8d,0xc(%rsp)
  0x000000010485093d: mov    %r9d,0x10(%rsp)
  0x0000000104850942: mov    %r10d,0x14(%rsp)
  0x0000000104850947: mov    $0xffffff65,%esi
  0x000000010485094c: data32 xchg %ax,%ax
  0x000000010485094f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1300}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x0000000104850954: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@252 (line 478)
                                                ;   {runtime_call}
  0x0000000104850959: vmovq  %rcx,%xmm1
  0x000000010485095e: mov    %r10d,0x8(%rsp)
  0x0000000104850963: mov    %r9d,0x4(%rsp)
  0x0000000104850968: mov    %r8d,(%rsp)
  0x000000010485096c: mov    %r11d,%r14d
  0x000000010485096f: movslq %edx,%rdx
  0x0000000104850972: mov    %rdx,%r10
  0x0000000104850975: shl    %r10
  0x0000000104850978: add    $0x10,%r10
  0x000000010485097c: mov    %r10,%r11
  0x000000010485097f: and    $0xfffffffffffffff9,%r11
  0x0000000104850983: mov    %rsi,%rdi
  0x0000000104850986: add    %r11,%rdi
  0x0000000104850989: mov    %rsi,0x10(%rsp)
  0x000000010485098e: shr    $0x3,%r10
  0x0000000104850992: sub    %r10,%r13
  0x0000000104850995: mov    %r13,%rcx
  0x0000000104850998: xor    %rax,%rax
  0x000000010485099b: shl    $0x3,%rcx
  0x000000010485099f: rep rex.W stos %al,%es:(%rdi)
  0x00000001048509a2: vmovq  %xmm1,%rdi
  0x00000001048509a7: vmovq  %xmm0,%rsi
  0x00000001048509ac: movabs $0x1048294c0,%r10
  0x00000001048509b6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x00000001048509b9: mov    %r14d,%r11d
  0x00000001048509bc: mov    (%rsp),%r8d
  0x00000001048509c0: mov    0x4(%rsp),%r9d
  0x00000001048509c5: mov    0x8(%rsp),%r10d
  0x00000001048509ca: mov    0x10(%rsp),%rsi
  0x00000001048509cf: jmpq   0x00000001048507fa  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)

  0x00000001048509d4: mov    %rbx,%rbp
  0x00000001048509d7: mov    %edi,(%rsp)
  0x00000001048509da: mov    %edx,0x8(%rsp)
  0x00000001048509de: mov    %r11d,0xc(%rsp)
  0x00000001048509e3: mov    %esi,0x10(%rsp)
  0x00000001048509e7: mov    %r8d,0x14(%rsp)
  0x00000001048509ec: mov    %r9d,0x18(%rsp)
  0x00000001048509f1: mov    %r10d,0x1c(%rsp)
  0x00000001048509f6: mov    $0xffffff65,%esi
  0x00000001048509fb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1472}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@180 (line 461)
                                                ;   {runtime_call}
  0x0000000104850a00: callq  0x0000000103c85e14  ;*ifeq
                                                ; - java.util.Properties$LineReader::readLine@152 (line 454)
                                                ;   {runtime_call}
  0x0000000104850a05: mov    %rbx,%rbp
  0x0000000104850a08: mov    %edi,(%rsp)
  0x0000000104850a0b: mov    %edx,0x8(%rsp)
  0x0000000104850a0f: mov    %r11d,0xc(%rsp)
  0x0000000104850a14: mov    %esi,0x10(%rsp)
  0x0000000104850a18: mov    %r8d,0x14(%rsp)
  0x0000000104850a1d: mov    %r9d,0x18(%rsp)
  0x0000000104850a22: mov    %r10d,0x1c(%rsp)
  0x0000000104850a27: mov    $0xffffff65,%esi
  0x0000000104850a2c: data32 xchg %ax,%ax
  0x0000000104850a2f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1524}
                                                ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)
                                                ;   {runtime_call}
  0x0000000104850a34: callq  0x0000000103c85e14  ;*if_icmpne
                                                ; - java.util.Properties$LineReader::readLine@186 (line 461)
                                                ;   {runtime_call}
  0x0000000104850a39: mov    %ecx,0x38(%rsp)
  0x0000000104850a3d: vmovsd %xmm1,0x30(%rsp)
  0x0000000104850a43: mov    %r13,0x28(%rsp)
  0x0000000104850a48: mov    %edi,0x1c(%rsp)
  0x0000000104850a4c: mov    %rax,0x20(%rsp)
  0x0000000104850a51: mov    %edx,0x18(%rsp)
  0x0000000104850a55: mov    %r10d,0x14(%rsp)
  0x0000000104850a5a: mov    %r9d,0x10(%rsp)
  0x0000000104850a5f: mov    %r8d,0xc(%rsp)
  0x0000000104850a64: mov    %r11d,0x8(%rsp)
  0x0000000104850a69: mov    %rbx,(%rsp)        ;*ifge
                                                ; - java.util.Properties$LineReader::readLine@285 (line 482)

  0x0000000104850a6d: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104850a77: mov    %edi,%edx
  0x0000000104850a79: xchg   %ax,%ax
  0x0000000104850a7b: callq  0x0000000104846b60  ; OopMap{[0]=Oop [32]=Oop [56]=NarrowOop off=1600}
                                                ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)
                                                ;   {runtime_call}
  0x0000000104850a80: mov    %rax,%rcx
  0x0000000104850a83: mov    (%rsp),%rbx
  0x0000000104850a87: mov    0x8(%rsp),%r11d
  0x0000000104850a8c: mov    0xc(%rsp),%r8d
  0x0000000104850a91: mov    0x10(%rsp),%r9d
  0x0000000104850a96: mov    0x14(%rsp),%r10d
  0x0000000104850a9b: mov    0x18(%rsp),%edx
  0x0000000104850a9f: mov    0x20(%rsp),%rax
  0x0000000104850aa4: mov    0x1c(%rsp),%edi
  0x0000000104850aa8: mov    0x28(%rsp),%r13
  0x0000000104850aad: vmovsd 0x30(%rsp),%xmm1
  0x0000000104850ab3: mov    %rcx,%rsi
  0x0000000104850ab6: jmpq   0x0000000104850772  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)

  0x0000000104850abb: mov    %rbx,%rbp
  0x0000000104850abe: mov    %edi,(%rsp)
  0x0000000104850ac1: mov    %edx,0x8(%rsp)
  0x0000000104850ac5: mov    %r11d,0xc(%rsp)
  0x0000000104850aca: mov    %esi,0x10(%rsp)
  0x0000000104850ace: mov    %r9d,0x14(%rsp)
  0x0000000104850ad3: mov    %r10d,0x18(%rsp)
  0x0000000104850ad8: mov    $0xffffff65,%esi
  0x0000000104850add: xchg   %ax,%ax
  0x0000000104850adf: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1700}
                                                ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@200 (line 464)
                                                ;   {runtime_call}
  0x0000000104850ae4: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.util.Properties$LineReader::readLine@246 (line 478)
                                                ;   {runtime_call}
  0x0000000104850ae9: mov    %rbx,%rbp
  0x0000000104850aec: mov    %r8d,0x4(%rsp)
  0x0000000104850af1: mov    %r9d,0x8(%rsp)
  0x0000000104850af6: mov    %edi,0xc(%rsp)
  0x0000000104850afa: mov    $0xffffff65,%esi
  0x0000000104850aff: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1732}
                                                ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)
                                                ;   {runtime_call}
  0x0000000104850b04: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@353 (line 498)
                                                ;   {runtime_call}
  0x0000000104850b09: mov    %rbx,%rbp
  0x0000000104850b0c: mov    %edi,(%rsp)
  0x0000000104850b0f: mov    %r9d,0x4(%rsp)
  0x0000000104850b14: mov    %r13d,0x8(%rsp)
  0x0000000104850b19: mov    $0xffffff65,%esi
  0x0000000104850b1e: nop
  0x0000000104850b1f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1764}
                                                ;*if_icmplt
                                                ; - java.util.Properties$LineReader::readLine@377 (line 505)
                                                ;   {runtime_call}
  0x0000000104850b24: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x0000000104850b29: mov    %rbx,(%rsp)
  0x0000000104850b2d: mov    %r11d,0x8(%rsp)
  0x0000000104850b32: mov    %r8d,0xc(%rsp)
  0x0000000104850b37: mov    %r9d,0x10(%rsp)
  0x0000000104850b3c: mov    $0xffffff65,%esi
  0x0000000104850b41: xchg   %ax,%ax
  0x0000000104850b43: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=1800}
                                                ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x0000000104850b48: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.util.Properties$LineReader::readLine@328 (line 491)
                                                ;   {runtime_call}
  0x0000000104850b4d: movslq %edi,%r13          ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x0000000104850b50: jmpq   0x0000000104850705
  0x0000000104850b55: mov    %rsi,0x18(%rsp)
  0x0000000104850b5a: mov    %rax,%rsi
  0x0000000104850b5d: mov    %edx,%r14d
  0x0000000104850b60: mov    %r10d,0x14(%rsp)
  0x0000000104850b65: mov    %r9d,0x10(%rsp)
  0x0000000104850b6a: mov    %r8d,0xc(%rsp)
  0x0000000104850b6f: mov    %r11d,0x8(%rsp)
  0x0000000104850b74: mov    %rbx,(%rsp)
  0x0000000104850b78: vmovq  %xmm0,%rdi
  0x0000000104850b7d: xor    %rax,%rax
  0x0000000104850b80: shl    $0x3,%rcx
  0x0000000104850b84: rep rex.W stos %al,%es:(%rdi)
  0x0000000104850b87: xor    %edx,%edx
  0x0000000104850b89: mov    0x18(%rsp),%rcx
  0x0000000104850b8e: xor    %r8d,%r8d
  0x0000000104850b91: mov    %r14d,%r9d
  0x0000000104850b94: data32 xchg %ax,%ax
  0x0000000104850b97: callq  0x0000000104844620  ; OopMap{[0]=Oop [24]=Oop off=1884}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)
                                                ;   {runtime_call}
  0x0000000104850b9c: mov    (%rsp),%rbx
  0x0000000104850ba0: mov    0x8(%rsp),%r11d
  0x0000000104850ba5: mov    0xc(%rsp),%r8d
  0x0000000104850baa: mov    0x10(%rsp),%r9d
  0x0000000104850baf: mov    0x14(%rsp),%r10d
  0x0000000104850bb4: mov    0x18(%rsp),%rsi
  0x0000000104850bb9: jmpq   0x00000001048507fa
  0x0000000104850bbe: vmovq  %xmm0,%rdi
  0x0000000104850bc3: xor    %rax,%rax
  0x0000000104850bc6: shl    $0x3,%rcx
  0x0000000104850bca: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)

  0x0000000104850bcd: jmpq   0x00000001048507fa
  0x0000000104850bd2: mov    %edi,(%rsp)
  0x0000000104850bd5: mov    %edx,0x4(%rsp)
  0x0000000104850bd9: mov    %r11d,0x8(%rsp)
  0x0000000104850bde: mov    %esi,0xc(%rsp)
  0x0000000104850be2: mov    %r8d,0x10(%rsp)
  0x0000000104850be7: mov    %r9d,0x14(%rsp)
  0x0000000104850bec: mov    %rbx,0x18(%rsp)
  0x0000000104850bf1: mov    %r13d,0x20(%rsp)
  0x0000000104850bf6: mov    %r10d,0x24(%rsp)
  0x0000000104850bfb: mov    $0xffffffde,%esi
  0x0000000104850c00: data32 xchg %ax,%ax
  0x0000000104850c03: callq  0x00000001047dc1a0  ; OopMap{[24]=Oop [32]=NarrowOop [36]=NarrowOop off=1992}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {runtime_call}
  0x0000000104850c08: callq  0x0000000103c85e14  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)
                                                ;   {runtime_call}
  0x0000000104850c0d: mov    $0xfffffff6,%esi
  0x0000000104850c12: nop
  0x0000000104850c13: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=2008}
                                                ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)
                                                ;   {runtime_call}
  0x0000000104850c18: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104850c1d: mov    $0xfffffff6,%esi
  0x0000000104850c22: mov    %ecx,%ebp
  0x0000000104850c24: data32 xchg %ax,%ax
  0x0000000104850c27: callq  0x00000001047dc1a0  ; OopMap{off=2028}
                                                ;*baload
                                                ; - java.util.Properties$LineReader::readLine@126 (line 450)
                                                ;   {runtime_call}
  0x0000000104850c2c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104850c31: mov    $0xfffffff6,%esi
  0x0000000104850c36: mov    %edi,%ebp
  0x0000000104850c38: mov    %r10d,(%rsp)
  0x0000000104850c3c: data32 xchg %ax,%ax
  0x0000000104850c3f: callq  0x00000001047dc1a0  ; OopMap{off=2052}
                                                ;*castore
                                                ; - java.util.Properties$LineReader::readLine@264 (line 479)
                                                ;   {runtime_call}
  0x0000000104850c44: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Properties$LineReader::readLine@311 (line 486)
                                                ;   {runtime_call}
  0x0000000104850c49: mov    %rax,%rsi
  0x0000000104850c4c: jmp    0x0000000104850c5b  ;*newarray
                                                ; - java.util.Properties$LineReader::readLine@294 (line 485)

  0x0000000104850c4e: mov    %rax,%rsi
  0x0000000104850c51: jmp    0x0000000104850c5b  ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@48 (line 434)

  0x0000000104850c53: mov    %rax,%rsi
  0x0000000104850c56: jmp    0x0000000104850c5b
  0x0000000104850c58: mov    %rax,%rsi          ;*invokevirtual read
                                                ; - java.util.Properties$LineReader::readLine@62 (line 435)

  0x0000000104850c5b: add    $0x50,%rsp
  0x0000000104850c5f: pop    %rbp
  0x0000000104850c60: jmpq   0x00000001048446e0  ;*aload_0
                                                ; - java.util.Properties$LineReader::readLine@21 (line 433)
                                                ;   {runtime_call}
  0x0000000104850c65: hlt    
  0x0000000104850c66: hlt    
  0x0000000104850c67: hlt    
  0x0000000104850c68: hlt    
  0x0000000104850c69: hlt    
  0x0000000104850c6a: hlt    
  0x0000000104850c6b: hlt    
  0x0000000104850c6c: hlt    
  0x0000000104850c6d: hlt    
  0x0000000104850c6e: hlt    
  0x0000000104850c6f: hlt    
  0x0000000104850c70: hlt    
  0x0000000104850c71: hlt    
  0x0000000104850c72: hlt    
  0x0000000104850c73: hlt    
  0x0000000104850c74: hlt    
  0x0000000104850c75: hlt    
  0x0000000104850c76: hlt    
  0x0000000104850c77: hlt    
  0x0000000104850c78: hlt    
  0x0000000104850c79: hlt    
  0x0000000104850c7a: hlt    
  0x0000000104850c7b: hlt    
  0x0000000104850c7c: hlt    
  0x0000000104850c7d: hlt    
  0x0000000104850c7e: hlt    
  0x0000000104850c7f: hlt    
[Stub Code]
  0x0000000104850c80: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104850c8a: jmpq   0x0000000104850c8a  ;   {runtime_call}
  0x0000000104850c8f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104850c99: jmpq   0x0000000104850c99  ;   {runtime_call}
[Exception Handler]
  0x0000000104850c9e: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104850ca3: callq  0x0000000104850ca8
  0x0000000104850ca8: subq   $0x5,(%rsp)
  0x0000000104850cad: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104850cb2: hlt    
  0x0000000104850cb3: hlt    
  0x0000000104850cb4: hlt    
  0x0000000104850cb5: hlt    
  0x0000000104850cb6: hlt    
  0x0000000104850cb7: hlt    
<nmethod compile_id='2' compiler='C2' entry='0x0000000104850440' size='5840' address='0x0000000104850290' relocation_offset='296' insts_offset='432' stub_offset='2544' scopes_data_offset='2632' scopes_pcs_offset='3904' dependencies_offset='5712' handler_table_offset='5720' nul_chk_table_offset='5816' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='5000' backedge_count='5000' iicount='33' stamp='0.107'/>
<writer thread='7171'/>
[Loaded java.net.InetAddress$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Decoding compiled method 0x0000000104851990:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e43180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000104851ae0: mov    0x8(%rsi),%r10d
  0x0000000104851ae4: shl    $0x3,%r10
  0x0000000104851ae8: cmp    %r10,%rax
  0x0000000104851aeb: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104851af1: data32 xchg %ax,%ax
  0x0000000104851af4: nopl   0x0(%rax,%rax,1)
  0x0000000104851afc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104851b00: mov    %eax,-0x14000(%rsp)
  0x0000000104851b07: push   %rbp
  0x0000000104851b08: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x0000000104851b0c: mov    %rsi,%r10
  0x0000000104851b0f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000104851b13: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000104851c4d
  0x0000000104851b18: test   %ecx,%ecx
  0x0000000104851b1a: jl     0x0000000104851c15  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000104851b20: mov    $0xffffffff,%eax
  0x0000000104851b25: cmp    %ebp,%ecx
  0x0000000104851b27: jge    0x0000000104851bdd  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000104851b2d: cmp    $0x10000,%edx
  0x0000000104851b33: jge    0x0000000104851c31  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000104851b39: cmp    %ebp,%ecx
  0x0000000104851b3b: jae    0x0000000104851bf9
  0x0000000104851b41: mov    %ebp,%r10d
  0x0000000104851b44: dec    %r10d
  0x0000000104851b47: cmp    %ebp,%r10d
  0x0000000104851b4a: jae    0x0000000104851bf9
  0x0000000104851b50: lea    (%r12,%r8,8),%r9
  0x0000000104851b54: mov    %ecx,%r11d
  0x0000000104851b57: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000104851b5a: movzwl 0x10(%r9,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851b60: cmp    %edx,%r8d
  0x0000000104851b63: je     0x0000000104851bf5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851b69: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000104851b6b: cmp    %r11d,%ecx
  0x0000000104851b6e: jl     0x0000000104851b5a  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000104851b70: mov    %ebp,%r11d
  0x0000000104851b73: add    $0xfffffffffffffffd,%r11d
  0x0000000104851b77: mov    $0x80000000,%r8d
  0x0000000104851b7d: cmp    %r11d,%r10d
  0x0000000104851b80: cmovl  %r8d,%r11d
  0x0000000104851b84: cmp    %r11d,%ecx
  0x0000000104851b87: jge    0x0000000104851bc5
  0x0000000104851b89: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000104851b90: movzwl 0x10(%r9,%rcx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851b96: cmp    %edx,%r10d
  0x0000000104851b99: je     0x0000000104851bf5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851b9b: movslq %ecx,%r10
  0x0000000104851b9e: movzwl 0x12(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851ba4: cmp    %edx,%ebx
  0x0000000104851ba6: je     0x0000000104851be9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851ba8: movzwl 0x14(%r9,%r10,2),%ebx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851bae: cmp    %edx,%ebx
  0x0000000104851bb0: je     0x0000000104851bed  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851bb2: movzwl 0x16(%r9,%r10,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851bb8: cmp    %edx,%r8d
  0x0000000104851bbb: je     0x0000000104851bf2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851bbd: add    $0x4,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000104851bc0: cmp    %r11d,%ecx
  0x0000000104851bc3: jl     0x0000000104851b90  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000104851bc5: cmp    %ebp,%ecx
  0x0000000104851bc7: jge    0x0000000104851bdd
  0x0000000104851bc9: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000104851bcc: movzwl 0x10(%r9,%rcx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000104851bd2: cmp    %edx,%r11d
  0x0000000104851bd5: je     0x0000000104851bf5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000104851bd7: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000104851bd9: cmp    %ebp,%ecx
  0x0000000104851bdb: jl     0x0000000104851bcc  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000104851bdd: add    $0x30,%rsp
  0x0000000104851be1: pop    %rbp
  0x0000000104851be2: test   %eax,-0x2067be8(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104851be8: retq   
  0x0000000104851be9: inc    %ecx
  0x0000000104851beb: jmp    0x0000000104851bf5
  0x0000000104851bed: add    $0x2,%ecx
  0x0000000104851bf0: jmp    0x0000000104851bf5
  0x0000000104851bf2: add    $0x3,%ecx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000104851bf5: mov    %ecx,%eax
  0x0000000104851bf7: jmp    0x0000000104851bdd
  0x0000000104851bf9: mov    $0xffffff86,%esi
  0x0000000104851bfe: mov    %edx,(%rsp)
  0x0000000104851c01: mov    %ecx,0x4(%rsp)
  0x0000000104851c05: mov    %r8d,0x8(%rsp)
  0x0000000104851c0a: nop
  0x0000000104851c0b: callq  0x00000001047dc1a0  ; OopMap{[8]=NarrowOop off=304}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x0000000104851c10: callq  0x0000000103c85e14  ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x0000000104851c15: mov    $0xffffff65,%esi
  0x0000000104851c1a: mov    %edx,(%rsp)
  0x0000000104851c1d: mov    %ecx,0x8(%rsp)
  0x0000000104851c21: mov    %r10,0x10(%rsp)
  0x0000000104851c26: nop
  0x0000000104851c27: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=332}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x0000000104851c2c: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x0000000104851c31: mov    $0xffffff65,%esi
  0x0000000104851c36: mov    %ecx,0x4(%rsp)
  0x0000000104851c3a: mov    %edx,0x8(%rsp)
  0x0000000104851c3e: mov    %r10,0x10(%rsp)
  0x0000000104851c43: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=360}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x0000000104851c48: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x0000000104851c4d: mov    $0xfffffff6,%esi
  0x0000000104851c52: nop
  0x0000000104851c53: callq  0x00000001047dc1a0  ; OopMap{off=376}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000104851c58: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000104851c5d: hlt    
  0x0000000104851c5e: hlt    
  0x0000000104851c5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104851c60: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104851c65: callq  0x0000000104851c6a
  0x0000000104851c6a: subq   $0x5,(%rsp)
  0x0000000104851c6f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104851c74: hlt    
  0x0000000104851c75: hlt    
  0x0000000104851c76: hlt    
  0x0000000104851c77: hlt    
<nmethod compile_id='3' compiler='C2' entry='0x0000000104851ae0' size='1544' address='0x0000000104851990' relocation_offset='296' insts_offset='336' stub_offset='720' scopes_data_offset='752' scopes_pcs_offset='912' dependencies_offset='1520' nul_chk_table_offset='1528' method='java/lang/String indexOf (II)I' bytes='70' count='361' backedge_count='6083' iicount='361' stamp='0.109'/>
<writer thread='7171'/>
[Loaded java.net.InetAddress$InetAddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$Cache$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImplFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6AddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.nameservice.NameService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.IPAddressUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet4Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksConsts from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketOptions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.PlainSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.AbstractPlainSocketImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocksSocketImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.ProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetProperties$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URI$Parser from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$NonProxyInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.spi.DefaultProxySelector$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Proxy$Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList$Itr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.NetHooks$Provider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.sdp.SdpProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet6Address$Inet6AddressHolder from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InterfaceAddress from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.DefaultInterface from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetworkInterface$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataOutput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Socket$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$BlockDataOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$HandleTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectOutputStream$ReplaceTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInput from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandles$Lookup from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType$ConcurrentWeakInternSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodTypeForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.Invokers from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandles from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.Wrapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.Wrapper$Format from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte$ByteCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short$ShortCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character$CharacterCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long$LongCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.VerifyAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.ValueConversions from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104850110:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010914e0a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x0000000104850240: mov    0x8(%rsp),%rbx
  0x0000000104850245: mov    0x18(%rbx),%rbx
  0x0000000104850249: test   %rbx,%rbx
  0x000000010485024c: je     0x0000000104850255
  0x0000000104850252: jmpq   *0x40(%rbx)
  0x0000000104850255: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485025a: hlt    
  0x000000010485025b: hlt    
  0x000000010485025c: hlt    
  0x000000010485025d: hlt    
  0x000000010485025e: hlt    
  0x000000010485025f: hlt    
<nmethod compile_id='4' compile_kind='c2n' entry='0x0000000104850240' size='336' address='0x0000000104850110' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.127'/>
[Loaded java.lang.invoke.LambdaForm$BasicType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$Name from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$NamedFunction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.SimpleMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$SpeciesData from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.BytecodeDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104853a10:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109164860} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104853b40: mov    0x18(%r8),%rbx
  0x0000000104853b44: test   %rbx,%rbx
  0x0000000104853b47: je     0x0000000104853b50
  0x0000000104853b4d: jmpq   *0x40(%rbx)
  0x0000000104853b50: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104853b55: hlt    
  0x0000000104853b56: hlt    
  0x0000000104853b57: hlt    
<nmethod compile_id='5' compile_kind='c2n' entry='0x0000000104853b40' size='328' address='0x0000000104853a10' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.130'/>
[Loaded java.lang.invoke.DirectMethodHandle$Lazy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InstantiationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104853890:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109165848} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00000001048539c0: mov    0x18(%rdx),%rbx
  0x00000001048539c4: test   %rbx,%rbx
  0x00000001048539c7: je     0x00000001048539d0
  0x00000001048539cd: jmpq   *0x40(%rbx)
  0x00000001048539d0: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048539d5: hlt    
  0x00000001048539d6: hlt    
  0x00000001048539d7: hlt    
<nmethod compile_id='6' compile_kind='c2n' entry='0x00000001048539c0' size='328' address='0x0000000104853890' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.131'/>
[Loaded java.util.Arrays$ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList$Itr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InvokerBytecodeGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ClassVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ClassWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.ByteVector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Item from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.MethodVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.MethodWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Label from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.Frame from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.AnnotationVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.AnnotationWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$Intrinsic from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InvokerBytecodeGenerator$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.util.VerifyType from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.invoke.empty.Empty from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Values from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$HashIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$ValueIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$DMH/1872034366 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104852890:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091932a8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00000001048529c0: mov    0x18(%rdx),%rbx
  0x00000001048529c4: test   %rbx,%rbx
  0x00000001048529c7: je     0x00000001048529d0
  0x00000001048529cd: jmpq   *0x40(%rbx)
  0x00000001048529d0: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048529d5: hlt    
  0x00000001048529d6: hlt    
  0x00000001048529d7: hlt    
<nmethod compile_id='7' compile_kind='c2n' entry='0x00000001048529c0' size='328' address='0x0000000104852890' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.135'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1581781576 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104852710:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109193400} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104852840: mov    0x18(%rdx),%rbx
  0x0000000104852844: test   %rbx,%rbx
  0x0000000104852847: je     0x0000000104852850
  0x000000010485284d: jmpq   *0x40(%rbx)
  0x0000000104852850: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104852855: hlt    
  0x0000000104852856: hlt    
  0x0000000104852857: hlt    
<nmethod compile_id='8' compile_kind='c2n' entry='0x0000000104852840' size='328' address='0x0000000104852710' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)J' bytes='0' count='0' iicount='0' stamp='0.136'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1725154839 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104852590:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109193518} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x00000001048526c0: mov    0x18(%rcx),%rbx
  0x00000001048526c4: test   %rbx,%rbx
  0x00000001048526c7: je     0x00000001048526d0
  0x00000001048526cd: jmpq   *0x40(%rbx)
  0x00000001048526d0: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048526d5: hlt    
  0x00000001048526d6: hlt    
  0x00000001048526d7: hlt    
<nmethod compile_id='9' compile_kind='c2n' entry='0x00000001048526c0' size='328' address='0x0000000104852590' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.136'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1670675563 from java.lang.invoke.LambdaForm]
<task_queued compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='5000' backedge_count='1' iicount='10000' stamp='0.137' comment='count' hot_count='10000'/>
[Loaded java.lang.invoke.LambdaForm$DMH/723074861 from java.lang.invoke.LambdaForm]
[Loaded java.lang.NoSuchFieldException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x00000001048521d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e41db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000104852320: mov    0x8(%rsi),%r10d
  0x0000000104852324: shl    $0x3,%r10
  0x0000000104852328: cmp    %r10,%rax
  0x000000010485232b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104852331: data32 xchg %ax,%ax
  0x0000000104852334: nopl   0x0(%rax,%rax,1)
  0x000000010485233c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104852340: mov    %eax,-0x14000(%rsp)
  0x0000000104852347: push   %rbp
  0x0000000104852348: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010485234c: test   %edx,%edx
  0x000000010485234e: jl     0x000000010485238d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000104852350: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
<writer thread='7171'/>
[Loaded java.lang.invoke.InvokerBytecodeGenerator$CpPatch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>

  0x0000000104852354: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00000001048523bd
  0x0000000104852359: cmp    %ebp,%edx
  0x000000010485235b: jge    0x00000001048523a5  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010485235d: cmp    %ebp,%edx
  0x000000010485235f: jae    0x0000000104852377
  0x0000000104852361: shl    $0x3,%r10
  0x0000000104852365: movzwl 0x10(%r10,%rdx,2),%eax
  0x000000010485236b: add    $0x20,%rsp
  0x000000010485236f: pop    %rbp
  0x0000000104852370: test   %eax,-0x2068376(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104852376: retq   
  0x0000000104852377: mov    $0xffffffe4,%esi
  0x000000010485237c: mov    %edx,%ebp
  0x000000010485237e: mov    %r10d,(%rsp)
  0x0000000104852382: nop
  0x0000000104852383: callq  0x00000001047dc1a0  ; OopMap{[0]=NarrowOop off=104}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000104852388: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010485238d: mov    %rsi,%rbp
  0x0000000104852390: mov    %edx,0x4(%rsp)
  0x0000000104852394: mov    $0xffffff65,%esi
  0x0000000104852399: xchg   %ax,%ax
  0x000000010485239b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00000001048523a0: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x00000001048523a5: mov    %rsi,(%rsp)
  0x00000001048523a9: mov    %edx,0xc(%rsp)
  0x00000001048523ad: mov    $0xffffff65,%esi
  0x00000001048523b2: nop
  0x00000001048523b3: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=152}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00000001048523b8: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x00000001048523bd: mov    $0xfffffff6,%esi
  0x00000001048523c2: nop
  0x00000001048523c3: callq  0x00000001047dc1a0  ; OopMap{off=168}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00000001048523c8: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00000001048523cd: hlt    
  0x00000001048523ce: hlt    
  0x00000001048523cf: hlt    
  0x00000001048523d0: hlt    
  0x00000001048523d1: hlt    
  0x00000001048523d2: hlt    
  0x00000001048523d3: hlt    
  0x00000001048523d4: hlt    
  0x00000001048523d5: hlt    
  0x00000001048523d6: hlt    
  0x00000001048523d7: hlt    
  0x00000001048523d8: hlt    
  0x00000001048523d9: hlt    
  0x00000001048523da: hlt    
  0x00000001048523db: hlt    
  0x00000001048523dc: hlt    
  0x00000001048523dd: hlt    
  0x00000001048523de: hlt    
  0x00000001048523df: hlt    
[Exception Handler]
[Stub Code]
  0x00000001048523e0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001048523e5: callq  0x00000001048523ea
  0x00000001048523ea: subq   $0x5,(%rsp)
  0x00000001048523ef: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048523f4: hlt    
  0x00000001048523f5: hlt    
  0x00000001048523f6: hlt    
  0x00000001048523f7: hlt    
<nmethod compile_id='10' compiler='C2' entry='0x0000000104852320' size='928' address='0x00000001048521d0' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='6296' backedge_count='1' iicount='11296' stamp='0.139'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$MH/1304836502 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.DirectMethodHandle$Accessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/225534817 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1878246837 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/929338653 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1259475182 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1300109446 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1020371697 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/789451787 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1950409828 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1229416514 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/2016447921 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/666988784 from java.lang.invoke.LambdaForm]
[Loaded java.util.SubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccessSubList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.SubList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList$ListItr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$DMH/617901222 from java.lang.invoke.LambdaForm]
[Loaded sun.misc.ObjectStreamClassValidator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104852050:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109198f68} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104852180: mov    0x18(%rcx),%rbx
  0x0000000104852184: test   %rbx,%rbx
  0x0000000104852187: je     0x0000000104852190
  0x000000010485218d: jmpq   *0x40(%rbx)
  0x0000000104852190: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104852195: hlt    
  0x0000000104852196: hlt    
  0x0000000104852197: hlt    
<nmethod compile_id='11' compile_kind='c2n' entry='0x0000000104852180' size='328' address='0x0000000104852050' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.146'/>
[Loaded java.lang.invoke.LambdaForm$DMH/798154996 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$DMH/681842940 from java.lang.invoke.LambdaForm]
[Loaded sun.misc.JavaObjectInputStreamAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104857750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x0000000109199ab0} &apos;linkToVirtual&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104857880: mov    0x8(%rsi),%r10d
  0x0000000104857884: shl    $0x3,%r10
  0x0000000104857888: mov    0x10(%rdx),%r11
  0x000000010485788c: mov    0x1b8(%r10,%r11,8),%rbx
  0x0000000104857894: test   %rbx,%rbx
  0x0000000104857897: je     0x00000001048578a0
  0x000000010485789d: jmpq   *0x40(%rbx)
  0x00000001048578a0: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048578a5: hlt    
  0x00000001048578a6: hlt    
  0x00000001048578a7: hlt    
<nmethod compile_id='12' compile_kind='c2n' entry='0x0000000104857880' size='344' address='0x0000000104857750' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle linkToVirtual (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.147'/>
[Loaded java.lang.invoke.LambdaForm$DMH/523429237 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.DelegatingMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$AsVarargsCollector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.WrongMethodTypeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x00000001048573d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919d960} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104857500: mov    0x14(%rsi),%ebx
  0x0000000104857503: shl    $0x3,%rbx
  0x0000000104857507: mov    0x28(%rbx),%ebx
  0x000000010485750a: shl    $0x3,%rbx
  0x000000010485750e: mov    0x18(%rbx),%rbx
  0x0000000104857512: test   %rbx,%rbx
  0x0000000104857515: je     0x000000010485751e
  0x000000010485751b: jmpq   *0x40(%rbx)
  0x000000010485751e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104857523: hlt    
  0x0000000104857524: hlt    
  0x0000000104857525: hlt    
  0x0000000104857526: hlt    
  0x0000000104857527: hlt    
<nmethod compile_id='13' compile_kind='c2n' entry='0x0000000104857500' size='344' address='0x00000001048573d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.148'/>
Decoding compiled method 0x0000000104857250:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919da78} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104857380: cmp    (%rsi),%rax
  0x0000000104857383: mov    0x18(%rcx),%rbx
  0x0000000104857387: test   %rbx,%rbx
  0x000000010485738a: je     0x0000000104857393
  0x0000000104857390: jmpq   *0x40(%rbx)
  0x0000000104857393: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='14' compile_kind='c2n' entry='0x0000000104857380' size='328' address='0x0000000104857250' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.149'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1421795058 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1555009629 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/41359092 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.MethodHandleImpl$Lazy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x00000001048570d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919ed88} &apos;linkToStatic&apos; &apos;(Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104857200: mov    0x18(%rsi),%rbx
  0x0000000104857204: test   %rbx,%rbx
  0x0000000104857207: je     0x0000000104857210
  0x000000010485720d: jmpq   *0x40(%rbx)
  0x0000000104857210: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104857215: hlt    
  0x0000000104857216: hlt    
  0x0000000104857217: hlt    
<nmethod compile_id='15' compile_kind='c2n' entry='0x0000000104857200' size='328' address='0x00000001048570d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.150'/>
<task_queued compile_id='16' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='380' backedge_count='5000' iicount='380' stamp='0.150' comment='count' hot_count='380'/>
[Loaded java.lang.invoke.LambdaForm$DMH/149928006 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000104856f50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919f9a0} &apos;invokeBasic&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104857080: mov    0x14(%rsi),%ebx
  0x0000000104857083: shl    $0x3,%rbx
  0x0000000104857087: mov    0x28(%rbx),%ebx
  0x000000010485708a: shl    $0x3,%rbx
  0x000000010485708e: mov    0x18(%rbx),%rbx
  0x0000000104857092: test   %rbx,%rbx
  0x0000000104857095: je     0x000000010485709e
  0x000000010485709b: jmpq   *0x40(%rbx)
  0x000000010485709e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048570a3: hlt    
  0x00000001048570a4: hlt    
  0x00000001048570a5: hlt    
  0x00000001048570a6: hlt    
  0x00000001048570a7: hlt    
<nmethod compile_id='17' compile_kind='c2n' entry='0x0000000104857080' size='344' address='0x0000000104856f50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic ()Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.151'/>
Decoding compiled method 0x0000000104856dd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919fab8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856f00: cmp    (%rsi),%rax
  0x0000000104856f03: mov    0x18(%rdx),%rbx
  0x0000000104856f07: test   %rbx,%rbx
  0x0000000104856f0a: je     0x0000000104856f13
  0x0000000104856f10: jmpq   *0x40(%rbx)
  0x0000000104856f13: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='18' compile_kind='c2n' entry='0x0000000104856f00' size='328' address='0x0000000104856dd0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.151'/>
[Loaded java.lang.invoke.LambdaForm$DMH/713338599 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/168423058 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104856c50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x000000010919ff08} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856d80: mov    0x14(%rsi),%ebx
  0x0000000104856d83: shl    $0x3,%rbx
  0x0000000104856d87: mov    0x28(%rbx),%ebx
  0x0000000104856d8a: shl    $0x3,%rbx
  0x0000000104856d8e: mov    0x18(%rbx),%rbx
  0x0000000104856d92: test   %rbx,%rbx
  0x0000000104856d95: je     0x0000000104856d9e
  0x0000000104856d9b: jmpq   *0x40(%rbx)
  0x0000000104856d9e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104856da3: hlt    
  0x0000000104856da4: hlt    
  0x0000000104856da5: hlt    
  0x0000000104856da6: hlt    
  0x0000000104856da7: hlt    
<nmethod compile_id='19' compile_kind='c2n' entry='0x0000000104856d80' size='344' address='0x0000000104856c50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.152'/>
Decoding compiled method 0x0000000104856ad0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0020} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856c00: cmp    (%rsi),%rax
  0x0000000104856c03: mov    0x18(%r8),%rbx
  0x0000000104856c07: test   %rbx,%rbx
  0x0000000104856c0a: je     0x0000000104856c13
  0x0000000104856c10: jmpq   *0x40(%rbx)
  0x0000000104856c13: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='20' compile_kind='c2n' entry='0x0000000104856c00' size='328' address='0x0000000104856ad0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.153'/>
[Loaded java.lang.invoke.LambdaForm$DMH/821270929 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1160460865 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104856950:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0138} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856a80: mov    0x14(%rsi),%ebx
  0x0000000104856a83: shl    $0x3,%rbx
  0x0000000104856a87: mov    0x28(%rbx),%ebx
  0x0000000104856a8a: shl    $0x3,%rbx
  0x0000000104856a8e: mov    0x18(%rbx),%rbx
  0x0000000104856a92: test   %rbx,%rbx
  0x0000000104856a95: je     0x0000000104856a9e
  0x0000000104856a9b: jmpq   *0x40(%rbx)
  0x0000000104856a9e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104856aa3: hlt    
  0x0000000104856aa4: hlt    
  0x0000000104856aa5: hlt    
  0x0000000104856aa6: hlt    
  0x0000000104856aa7: hlt    
<nmethod compile_id='21' compile_kind='c2n' entry='0x0000000104856a80' size='344' address='0x0000000104856950' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.154'/>
Decoding compiled method 0x00000001048567d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0250} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856900: cmp    (%rsi),%rax
  0x0000000104856903: mov    0x18(%r9),%rbx
  0x0000000104856907: test   %rbx,%rbx
  0x000000010485690a: je     0x0000000104856913
  0x0000000104856910: jmpq   *0x40(%rbx)
  0x0000000104856913: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='22' compile_kind='c2n' entry='0x0000000104856900' size='328' address='0x00000001048567d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.154'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1247233941 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/258952499 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104856650:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0368} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856780: mov    0x18(%r9),%rbx
  0x0000000104856784: test   %rbx,%rbx
  0x0000000104856787: je     0x0000000104856790
  0x000000010485678d: jmpq   *0x40(%rbx)
  0x0000000104856790: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104856795: hlt    
  0x0000000104856796: hlt    
  0x0000000104856797: hlt    
<nmethod compile_id='23' compile_kind='c2n' entry='0x0000000104856780' size='328' address='0x0000000104856650' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.156'/>
<writer thread='19203'/>
Decoding compiled method 0x00000001048596d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000109178f40} &apos;putUTF8&apos; &apos;(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVe
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/603742814 from java.lang.invoke.LambdaForm]
<writer thread='19203'/>
ctor;&apos; in &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # this:     rsi:rsi   = &apos;jdk/internal/org/objectweb/asm/ByteVector&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000104859840: mov    0x8(%rsi),%r10d
  0x0000000104859844: shl    $0x3,%r10
  0x0000000104859848: cmp    %r10,%rax
  0x000000010485984b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104859851: data32 xchg %ax,%ax
  0x0000000104859854: nopl   0x0(%rax,%rax,1)
  0x000000010485985c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104859860: mov    %eax,-0x14000(%rsp)
  0x0000000104859867: push   %rbp
  0x0000000104859868: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@-1 (line 240)

  0x000000010485986c: mov    %rsi,%r10
  0x000000010485986f: mov    %rdx,0x10(%rsp)
  0x0000000104859874: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x0000000104859cd6
  0x0000000104859877: mov    0xc(%r12,%rcx,8),%r8d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ; implicit exception: dispatches to 0x0000000104859ce5
  0x000000010485987c: cmp    $0xffff,%r8d
  0x0000000104859883: jg     0x0000000104859c93  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)

  0x0000000104859889: mov    %rsi,%r9
  0x000000010485988c: mov    0x10(%rsi),%r13d   ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@30 (line 245)

  0x0000000104859890: mov    0xc(%r12,%r13,8),%eax  ; implicit exception: dispatches to 0x0000000104859cf5
  0x0000000104859895: mov    0xc(%rsi),%ebx     ;*getfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@20 (line 244)

  0x0000000104859898: mov    %r8d,%edi
  0x000000010485989b: add    %ebx,%edi          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x000000010485989d: mov    %r8d,%edx
  0x00000001048598a0: shr    $0x8,%edx          ;*iushr
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@59 (line 255)

  0x00000001048598a3: mov    %edi,%esi
  0x00000001048598a5: add    $0x2,%esi
  0x00000001048598a8: movsbl %dl,%r11d          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@60 (line 255)

  0x00000001048598ac: cmp    %eax,%esi
  0x00000001048598ae: jle    0x0000000104859906  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@34 (line 245)

  0x00000001048598b0: mov    %r11d,0x18(%rsp)
  0x00000001048598b5: mov    %edx,0xc(%rsp)
  0x00000001048598b9: mov    %edi,0x8(%rsp)
  0x00000001048598bd: mov    %ebx,0x4(%rsp)
  0x00000001048598c1: mov    %r9,%rbp
  0x00000001048598c4: mov    %r8d,%edx
  0x00000001048598c7: mov    %r8d,(%rsp)
  0x00000001048598cb: add    $0x2,%edx          ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@40 (line 246)

  0x00000001048598ce: mov    %r9,%rsi
  0x00000001048598d1: xchg   %ax,%ax
  0x00000001048598d3: callq  0x000000010481d020  ; OopMap{rbp=Oop [16]=Oop off=152}
                                                ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {optimized virtual_call}
  0x00000001048598d8: mov    %rbp,%r9
  0x00000001048598db: mov    0x10(%r9),%r13d    ;*getfield data
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@45 (line 248)

  0x00000001048598df: test   %r13d,%r13d
  0x00000001048598e2: je     0x0000000104859cb6  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x00000001048598e8: mov    0x10(%rsp),%r10
  0x00000001048598ed: mov    0xc(%r10),%ecx
  0x00000001048598f1: mov    (%rsp),%r8d
  0x00000001048598f5: mov    0x4(%rsp),%ebx
  0x00000001048598f9: mov    0x8(%rsp),%edi
  0x00000001048598fd: mov    0xc(%rsp),%edx
  0x0000000104859901: mov    0x18(%rsp),%r11d   ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859906: mov    0xc(%r12,%r13,8),%ebp  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010485990b: mov    %ebx,%r10d
  0x000000010485990e: inc    %r10d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@53 (line 255)

  0x0000000104859911: cmp    %ebp,%ebx
  0x0000000104859913: jae    0x0000000104859b81  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x0000000104859919: lea    (%r12,%r13,8),%rax
  0x000000010485991d: mov    %ebx,%r11d
  0x0000000104859920: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859924: movslq %ebx,%rsi
  0x0000000104859927: mov    %dl,0x10(%rax,%rsi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)

  0x000000010485992b: cmp    %ebp,%r10d
  0x000000010485992e: jae    0x0000000104859bb5
  0x0000000104859934: movslq %ebx,%r10
  0x0000000104859937: mov    %r8b,0x11(%rax,%r10,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)

  0x000000010485993c: test   %r8d,%r8d
  0x000000010485993f: jle    0x0000000104859ad7  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000104859945: mov    0xc(%r12,%rcx,8),%edx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ; implicit exception: dispatches to 0x0000000104859be1
  0x000000010485994a: test   %edx,%edx
  0x000000010485994c: jbe    0x0000000104859be1
  0x0000000104859952: mov    %r8d,%r10d
  0x0000000104859955: dec    %r10d
  0x0000000104859958: cmp    %edx,%r10d
  0x000000010485995b: jae    0x0000000104859be1
  0x0000000104859961: cmp    %ebp,%r11d
  0x0000000104859964: jae    0x0000000104859be1
  0x000000010485996a: inc    %edi
  0x000000010485996c: cmp    %ebp,%edi
  0x000000010485996e: jae    0x0000000104859be1
  0x0000000104859974: lea    (%r12,%rcx,8),%rbp
  0x0000000104859978: xor    %edi,%edi
  0x000000010485997a: mov    $0x1,%r10d
  0x0000000104859980: cmp    %r10d,%r8d
  0x0000000104859983: mov    %r8d,%ecx
  0x0000000104859986: cmovg  %r10d,%ecx         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x000000010485998a: mov    %edi,%r11d
  0x000000010485998d: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859990: test   %edi,%edi
  0x0000000104859992: jl     0x0000000104859c0d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859998: cmp    %edx,%edi
  0x000000010485999a: jge    0x0000000104859c4a  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x00000001048599a0: movzwl 0x10(%rbp,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x00000001048599a6: cmp    $0x1,%r10d
  0x00000001048599aa: jl     0x0000000104859c41  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x00000001048599b0: cmp    $0x7f,%r10d
  0x00000001048599b4: jg     0x0000000104859c81  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x00000001048599ba: movslq %r11d,%rsi
  0x00000001048599bd: mov    %r10b,0x12(%rax,%rsi,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x00000001048599c2: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x00000001048599c4: cmp    %ecx,%edi
  0x00000001048599c6: jl     0x000000010485998a  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x00000001048599c8: cmp    %edx,%r8d
  0x00000001048599cb: mov    %r8d,%r10d
  0x00000001048599ce: cmovg  %edx,%r10d
  0x00000001048599d2: mov    %r10d,%ecx
  0x00000001048599d5: add    $0xfffffffffffffffd,%ecx
  0x00000001048599d8: mov    $0x80000000,%esi
  0x00000001048599dd: cmp    %ecx,%r10d
  0x00000001048599e0: cmovl  %esi,%ecx
  0x00000001048599e3: cmp    %ecx,%edi
  0x00000001048599e5: jge    0x0000000104859a8d
  0x00000001048599eb: jmp    0x00000001048599f4
  0x00000001048599ed: data32 xchg %ax,%ax
  0x00000001048599f0: vmovd  %xmm1,%edx         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x00000001048599f4: movzwl 0x10(%rbp,%rdi,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x00000001048599f9: mov    %edi,%r11d
  0x00000001048599fc: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x00000001048599ff: cmp    $0x1,%esi
  0x0000000104859a02: jl     0x0000000104859aea  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859a08: cmp    $0x7f,%esi
  0x0000000104859a0b: jg     0x0000000104859b35  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859a11: vmovd  %edx,%xmm1
  0x0000000104859a15: movslq %edi,%rdx
  0x0000000104859a18: movzwl 0x12(%rbp,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859a1e: movslq %r11d,%r14
  0x0000000104859a21: mov    %sil,0x12(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000104859a26: cmp    $0x1,%r10d
  0x0000000104859a2a: jl     0x0000000104859afc  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859a30: cmp    $0x7f,%r10d
  0x0000000104859a34: jg     0x0000000104859b47  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859a3a: mov    %r10b,0x13(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000104859a3f: movzwl 0x14(%rbp,%rdx,2),%esi  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859a44: cmp    $0x1,%esi
  0x0000000104859a47: jl     0x0000000104859af0  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859a4d: cmp    $0x7f,%esi
  0x0000000104859a50: jg     0x0000000104859b3b  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859a56: mov    %sil,0x14(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000104859a5b: movzwl 0x16(%rbp,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859a61: cmp    $0x1,%r10d
  0x0000000104859a65: jl     0x0000000104859b04  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859a6b: cmp    $0x7f,%r10d
  0x0000000104859a6f: jg     0x0000000104859b4f  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859a75: mov    %r10b,0x15(%rax,%r14,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000104859a7a: add    $0x4,%edi          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000104859a7d: cmp    %ecx,%edi
  0x0000000104859a7f: jl     0x00000001048599f0  ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000104859a85: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859a89: vmovd  %xmm1,%edx
  0x0000000104859a8d: cmp    %r8d,%edi
  0x0000000104859a90: jge    0x0000000104859ad3
  0x0000000104859a92: xchg   %ax,%ax            ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859a94: mov    %edi,%r11d
  0x0000000104859a97: add    %ebx,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859a9a: test   %edi,%edi
  0x0000000104859a9c: jl     0x0000000104859c13  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859aa2: cmp    %edx,%edi
  0x0000000104859aa4: jge    0x0000000104859c50  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859aaa: movzwl 0x10(%rbp,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859ab0: cmp    $0x1,%r10d
  0x0000000104859ab4: jl     0x0000000104859c8a  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859aba: cmp    $0x7f,%r10d
  0x0000000104859abe: jg     0x0000000104859cad  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859ac4: movslq %r11d,%rcx
  0x0000000104859ac7: mov    %r10b,0x12(%rax,%rcx,1)  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@110 (line 260)

  0x0000000104859acc: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000104859ace: cmp    %r8d,%edi
  0x0000000104859ad1: jl     0x0000000104859a94
  0x0000000104859ad3: add    $0x3,%r11d         ;*if_icmpge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@77 (line 257)

  0x0000000104859ad7: mov    %r11d,0xc(%r9)     ;*putfield length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@137 (line 266)

  0x0000000104859adb: mov    %r9,%rax
  0x0000000104859ade: add    $0x40,%rsp
  0x0000000104859ae2: pop    %rbp
  0x0000000104859ae3: test   %eax,-0x206fae9(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104859ae9: retq   
  0x0000000104859aea: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859aee: jmp    0x0000000104859af7
  0x0000000104859af0: add    $0x4,%r11d
  0x0000000104859af4: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859af7: mov    %esi,%r10d
  0x0000000104859afa: jmp    0x0000000104859b0b
  0x0000000104859afc: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859b00: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000104859b02: jmp    0x0000000104859b0b
  0x0000000104859b04: add    $0x5,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859b08: add    $0x3,%edi          ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)

  0x0000000104859b0b: mov    $0xffffff65,%esi
  0x0000000104859b10: mov    %r11d,%ebp
  0x0000000104859b13: mov    %edi,(%rsp)
  0x0000000104859b16: mov    %r10d,0x8(%rsp)
  0x0000000104859b1b: mov    %r9,0x18(%rsp)
  0x0000000104859b20: mov    %r8d,0xc(%rsp)
  0x0000000104859b25: mov    %r13d,0x20(%rsp)
  0x0000000104859b2a: nop
  0x0000000104859b2b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=752}
                                                ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x0000000104859b30: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@91 (line 259)
                                                ;   {runtime_call}
  0x0000000104859b35: add    $0x2,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859b39: jmp    0x0000000104859b42
  0x0000000104859b3b: add    $0x4,%r11d
  0x0000000104859b3f: add    $0x2,%edi          ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859b42: mov    %esi,%r10d
  0x0000000104859b45: jmp    0x0000000104859b56
  0x0000000104859b47: add    $0x3,%r11d         ;*iadd
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@26 (line 245)

  0x0000000104859b4b: inc    %edi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@129 (line 257)

  0x0000000104859b4d: jmp    0x0000000104859b56
  0x0000000104859b4f: add    $0x5,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859b53: add    $0x3,%edi          ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)

  0x0000000104859b56: mov    $0xffffff65,%esi
  0x0000000104859b5b: mov    %r11d,%ebp
  0x0000000104859b5e: mov    %edi,(%rsp)
  0x0000000104859b61: mov    %r10d,0x8(%rsp)
  0x0000000104859b66: mov    %r9,0x18(%rsp)
  0x0000000104859b6b: mov    %r8d,0xc(%rsp)
  0x0000000104859b70: mov    %r13d,0x20(%rsp)
  0x0000000104859b75: xchg   %ax,%ax
  0x0000000104859b77: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=828}
                                                ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x0000000104859b7c: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@98 (line 259)
                                                ;   {runtime_call}
  0x0000000104859b81: mov    $0xffffffe4,%esi
  0x0000000104859b86: mov    %ebx,%ebp
  0x0000000104859b88: mov    %r9,(%rsp)
  0x0000000104859b8c: rex.W pushq 0x10(%rsp)
  0x0000000104859b91: rex.W popq 0x8(%rsp)
  0x0000000104859b96: mov    %r8d,0x10(%rsp)
  0x0000000104859b9b: mov    %r10d,0x14(%rsp)
  0x0000000104859ba0: mov    %r13d,0x1c(%rsp)
  0x0000000104859ba5: mov    %r11d,0x20(%rsp)
  0x0000000104859baa: nop
  0x0000000104859bab: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [28]=NarrowOop off=880}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x0000000104859bb0: callq  0x0000000103c85e14  ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x0000000104859bb5: movsbl %r8b,%ebp          ;*i2b  ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@69 (line 256)

  0x0000000104859bb9: mov    $0xffffffe4,%esi
  0x0000000104859bbe: mov    %r11d,(%rsp)
  0x0000000104859bc2: mov    %r9,0x8(%rsp)
  0x0000000104859bc7: mov    %r8d,0x4(%rsp)
  0x0000000104859bcc: mov    %r13d,0x1c(%rsp)
  0x0000000104859bd1: mov    %r10d,0x20(%rsp)
  0x0000000104859bd6: nop
  0x0000000104859bd7: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop [28]=NarrowOop off=924}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@70 (line 256)
                                                ;   {runtime_call}
  0x0000000104859bdc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104859be1: mov    $0xffffff86,%esi
  0x0000000104859be6: mov    %r11d,%ebp
  0x0000000104859be9: mov    %r9,(%rsp)
  0x0000000104859bed: rex.W pushq 0x10(%rsp)
  0x0000000104859bf2: rex.W popq 0x8(%rsp)
  0x0000000104859bf7: mov    %r8d,0x10(%rsp)
  0x0000000104859bfc: mov    %r13d,0x14(%rsp)
  0x0000000104859c01: xchg   %ax,%ax
  0x0000000104859c03: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=968}
                                                ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x0000000104859c08: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104859c0d: add    $0x2,%r11d
  0x0000000104859c11: jmp    0x0000000104859c17
  0x0000000104859c13: add    $0x2,%r11d         ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859c17: mov    $0xffffff65,%esi
  0x0000000104859c1c: mov    %r11d,%ebp
  0x0000000104859c1f: mov    %edi,0x4(%rsp)
  0x0000000104859c23: mov    %edi,0x8(%rsp)
  0x0000000104859c27: mov    %r9,0x18(%rsp)
  0x0000000104859c2c: mov    %r8d,0xc(%rsp)
  0x0000000104859c31: mov    %r13d,0x20(%rsp)
  0x0000000104859c36: nop
  0x0000000104859c37: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=1020}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000000104859c3c: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000000104859c41: add    $0x2,%r11d
  0x0000000104859c45: jmpq   0x0000000104859b0b
  0x0000000104859c4a: add    $0x2,%r11d
  0x0000000104859c4e: jmp    0x0000000104859c54
  0x0000000104859c50: add    $0x2,%r11d         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)

  0x0000000104859c54: mov    $0xffffff65,%esi
  0x0000000104859c59: mov    %r11d,%ebp
  0x0000000104859c5c: mov    %edi,0x4(%rsp)
  0x0000000104859c60: mov    %edi,0x8(%rsp)
  0x0000000104859c64: mov    %r9,0x18(%rsp)
  0x0000000104859c69: mov    %r8d,0xc(%rsp)
  0x0000000104859c6e: mov    %r13d,0x20(%rsp)
  0x0000000104859c73: mov    %edx,0x24(%rsp)
  0x0000000104859c77: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop [32]=NarrowOop off=1084}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000000104859c7c: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@83 (line 258)
                                                ;   {runtime_call}
  0x0000000104859c81: add    $0x2,%r11d
  0x0000000104859c85: jmpq   0x0000000104859b56
  0x0000000104859c8a: add    $0x2,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859c8e: jmpq   0x0000000104859b0b
  0x0000000104859c93: mov    $0xffffff65,%esi
  0x0000000104859c98: mov    %r10,%rbp
  0x0000000104859c9b: mov    %r8d,0xc(%rsp)
  0x0000000104859ca0: data32 xchg %ax,%ax
  0x0000000104859ca3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop off=1128}
                                                ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x0000000104859ca8: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@8 (line 241)
                                                ;   {runtime_call}
  0x0000000104859cad: add    $0x2,%r11d         ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)

  0x0000000104859cb1: jmpq   0x0000000104859b56
  0x0000000104859cb6: mov    $0xfffffff6,%esi
  0x0000000104859cbb: mov    0x4(%rsp),%ebp
  0x0000000104859cbf: callq  0x00000001047dc1a0  ; OopMap{off=1156}
                                                ;*bastore
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@61 (line 255)
                                                ;   {runtime_call}
  0x0000000104859cc4: callq  0x0000000103c85e14  ;*invokespecial enlarge
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@41 (line 246)
                                                ;   {runtime_call}
  0x0000000104859cc9: mov    %rax,%rsi
  0x0000000104859ccc: add    $0x40,%rsp
  0x0000000104859cd0: pop    %rbp
  0x0000000104859cd1: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104859cd6: mov    $0xfffffff6,%esi
  0x0000000104859cdb: callq  0x00000001047dc1a0  ; OopMap{off=1184}
                                                ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x0000000104859ce0: callq  0x0000000103c85e14  ;*invokevirtual length
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x0000000104859ce5: mov    $0xfffffff6,%esi
  0x0000000104859cea: nop
  0x0000000104859ceb: callq  0x00000001047dc1a0  ; OopMap{off=1200}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x0000000104859cf0: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@1 (line 240)
                                                ;   {runtime_call}
  0x0000000104859cf5: mov    $0xfffffff6,%esi
  0x0000000104859cfa: nop
  0x0000000104859cfb: callq  0x00000001047dc1a0  ; OopMap{off=1216}
                                                ;*arraylength
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@33 (line 245)
                                                ;   {runtime_call}
  0x0000000104859d00: callq  0x0000000103c85e14  ;*aload_1
                                                ; - jdk.internal.org.objectweb.asm.ByteVector::putUTF8@80 (line 258)
                                                ;   {runtime_call}
  0x0000000104859d05: hlt    
  0x0000000104859d06: hlt    
  0x0000000104859d07: hlt    
  0x0000000104859d08: hlt    
  0x0000000104859d09: hlt    
  0x0000000104859d0a: hlt    
  0x0000000104859d0b: hlt    
  0x0000000104859d0c: hlt    
  0x0000000104859d0d: hlt    
  0x0000000104859d0e: hlt    
  0x0000000104859d0f: hlt    
  0x0000000104859d10: hlt    
  0x0000000104859d11: hlt    
  0x0000000104859d12: hlt    
  0x0000000104859d13: hlt    
  0x0000000104859d14: hlt    
  0x0000000104859d15: hlt    
  0x0000000104859d16: hlt    
  0x0000000104859d17: hlt    
  0x0000000104859d18: hlt    
  0x0000000104859d19: hlt    
  0x0000000104859d1a: hlt    
  0x0000000104859d1b: hlt    
  0x0000000104859d1c: hlt    
  0x0000000104859d1d: hlt    
  0x0000000104859d1e: hlt    
  0x0000000104859d1f: hlt    
[Stub Code]
  0x0000000104859d20: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104859d2a: jmpq   0x0000000104859d2a  ;   {runtime_call}
[Exception Handler]
  0x0000000104859d2f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104859d34: callq  0x0000000104859d39
  0x0000000104859d39: subq   $0x5,(%rsp)
  0x0000000104859d3e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104859d43: hlt    
  0x0000000104859d44: hlt    
  0x0000000104859d45: hlt    
  0x0000000104859d46: hlt    
  0x0000000104859d47: hlt    
<nmethod compile_id='16' compiler='C2' entry='0x0000000104859840' size='3976' address='0x00000001048596d0' relocation_offset='296' insts_offset='368' stub_offset='1616' scopes_data_offset='1680' scopes_pcs_offset='2208' dependencies_offset='3904' handler_table_offset='3912' nul_chk_table_offset='3936' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='514' backedge_count='8965' iicount='514' stamp='0.161'/>
<writer thread='7171'/>
Decoding compiled method 0x00000001048564d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0480} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856600: mov    0x14(%rsi),%ebx
  0x0000000104856603: shl    $0x3,%rbx
  0x0000000104856607: mov    0x28(%rbx),%ebx
  0x000000010485660a: shl    $0x3,%rbx
  0x000000010485660e: mov    0x18(%rbx),%rbx
  0x0000000104856612: test   %rbx,%rbx
  0x0000000104856615: je     0x000000010485661e
  0x000000010485661b: jmpq   *0x40(%rbx)
  0x000000010485661e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104856623: hlt    
  0x0000000104856624: hlt    
  0x0000000104856625: hlt    
  0x0000000104856626: hlt    
  0x0000000104856627: hlt    
<nmethod compile_id='24' compile_kind='c2n' entry='0x0000000104856600' size='344' address='0x00000001048564d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.161'/>
Decoding compiled method 0x0000000104856350:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0598} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856480: cmp    (%rsi),%rax
  0x0000000104856483: mov    0x18(%rdi),%rbx
  0x0000000104856487: test   %rbx,%rbx
  0x000000010485648a: je     0x0000000104856493
  0x0000000104856490: jmpq   *0x40(%rbx)
  0x0000000104856493: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='25' compile_kind='c2n' entry='0x0000000104856480' size='328' address='0x0000000104856350' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.162'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1067040082 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1325547227 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x00000001048561d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a06b0} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856300: mov    0x18(%rdi),%rbx
  0x0000000104856304: test   %rbx,%rbx
  0x0000000104856307: je     0x0000000104856310
  0x000000010485630d: jmpq   *0x40(%rbx)
  0x0000000104856310: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104856315: hlt    
  0x0000000104856316: hlt    
  0x0000000104856317: hlt    
<nmethod compile_id='26' compile_kind='c2n' entry='0x0000000104856300' size='328' address='0x00000001048561d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.163'/>
[Loaded java.lang.invoke.LambdaForm$DMH/980546781 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104856050:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0c10} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x0000000104856180: mov    0x14(%rsi),%ebx
  0x0000000104856183: shl    $0x3,%rbx
  0x0000000104856187: mov    0x28(%rbx),%ebx
  0x000000010485618a: shl    $0x3,%rbx
  0x000000010485618e: mov    0x18(%rbx),%rbx
  0x0000000104856192: test   %rbx,%rbx
  0x0000000104856195: je     0x000000010485619e
  0x000000010485619b: jmpq   *0x40(%rbx)
  0x000000010485619e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048561a3: hlt    
  0x00000001048561a4: hlt    
  0x00000001048561a5: hlt    
  0x00000001048561a6: hlt    
  0x00000001048561a7: hlt    
<nmethod compile_id='27' compile_kind='c2n' entry='0x0000000104856180' size='344' address='0x0000000104856050' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.164'/>
Decoding compiled method 0x0000000104855ed0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0d28} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/invoke/MemberName&apos;  (sp of caller)
  0x0000000104856000: mov    0x8(%rsp),%rbx
  0x0000000104856005: cmp    (%rsi),%rax
  0x0000000104856008: mov    0x18(%rbx),%rbx
  0x000000010485600c: test   %rbx,%rbx
  0x000000010485600f: je     0x0000000104856018
  0x0000000104856015: jmpq   *0x40(%rbx)
  0x0000000104856018: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485601d: hlt    
  0x000000010485601e: hlt    
  0x000000010485601f: hlt    
<nmethod compile_id='28' compile_kind='c2n' entry='0x0000000104856000' size='336' address='0x0000000104855ed0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.165'/>
[Loaded java.lang.invoke.LambdaForm$DMH/2061475679 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/140435067 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104855d50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0e40} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  0x0000000104855e80: mov    0x14(%rsi),%ebx
  0x0000000104855e83: shl    $0x3,%rbx
  0x0000000104855e87: mov    0x28(%rbx),%ebx
  0x0000000104855e8a: shl    $0x3,%rbx
  0x0000000104855e8e: mov    0x18(%rbx),%rbx
  0x0000000104855e92: test   %rbx,%rbx
  0x0000000104855e95: je     0x0000000104855e9e
  0x0000000104855e9b: jmpq   *0x40(%rbx)
  0x0000000104855e9e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104855ea3: hlt    
  0x0000000104855ea4: hlt    
  0x0000000104855ea5: hlt    
  0x0000000104855ea6: hlt    
  0x0000000104855ea7: hlt    
<nmethod compile_id='29' compile_kind='c2n' entry='0x0000000104855e80' size='344' address='0x0000000104855d50' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.166'/>
Decoding compiled method 0x0000000104855bd0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a0f58} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855d00: mov    0x10(%rsp),%rbx
  0x0000000104855d05: cmp    (%rsi),%rax
  0x0000000104855d08: mov    0x18(%rbx),%rbx
  0x0000000104855d0c: test   %rbx,%rbx
  0x0000000104855d0f: je     0x0000000104855d18
  0x0000000104855d15: jmpq   *0x40(%rbx)
  0x0000000104855d18: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104855d1d: hlt    
  0x0000000104855d1e: hlt    
  0x0000000104855d1f: hlt    
<nmethod compile_id='30' compile_kind='c2n' entry='0x0000000104855d00' size='336' address='0x0000000104855bd0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.166'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1450495309 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1670782018 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104855a50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a1070} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855b80: mov    0x10(%rsp),%rbx
  0x0000000104855b85: mov    0x18(%rbx),%rbx
  0x0000000104855b89: test   %rbx,%rbx
  0x0000000104855b8c: je     0x0000000104855b95
  0x0000000104855b92: jmpq   *0x40(%rbx)
  0x0000000104855b95: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104855b9a: hlt    
  0x0000000104855b9b: hlt    
  0x0000000104855b9c: hlt    
  0x0000000104855b9d: hlt    
  0x0000000104855b9e: hlt    
  0x0000000104855b9f: hlt    
<nmethod compile_id='31' compile_kind='c2n' entry='0x0000000104855b80' size='336' address='0x0000000104855a50' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.168'/>
<task_queued compile_id='32' method='java/lang/String lastIndexOf (II)I' bytes='52' count='516' backedge_count='5000' iicount='516' stamp='0.168' comment='count' hot_count='516'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1706377736 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x00000001048558d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a1188} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  0x0000000104855a00: mov    0x14(%rsi),%ebx
  0x0000000104855a03: shl    $0x3,%rbx
  0x0000000104855a07: mov    0x28(%rbx),%ebx
  0x0000000104855a0a: shl    $0x3,%rbx
  0x0000000104855a0e: mov    0x18(%rbx),%rbx
  0x0000000104855a12: test   %rbx,%rbx
  0x0000000104855a15: je     0x0000000104855a1e
  0x0000000104855a1b: jmpq   *0x40(%rbx)
  0x0000000104855a1e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x0000000104855a23: hlt    
  0x0000000104855a24: hlt    
  0x0000000104855a25: hlt    
  0x0000000104855a26: hlt    
  0x0000000104855a27: hlt    
<nmethod compile_id='33' compile_kind='c2n' entry='0x0000000104855a00' size='344' address='0x00000001048558d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.168'/>
Decoding compiled method 0x0000000104855750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a12a0} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855880: mov    0x18(%rsp),%rbx
  0x0000000104855885: cmp    (%rsi),%rax
  0x0000000104855888: mov    0x18(%rbx),%rbx
  0x000000010485588c: test   %rbx,%rbx
  0x000000010485588f: je     0x0000000104855898
  0x0000000104855895: jmpq   *0x40(%rbx)
  0x0000000104855898: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485589d: hlt    
  0x000000010485589e: hlt    
  0x000000010485589f: hlt    
<nmethod compile_id='34' compile_kind='c2n' entry='0x0000000104855880' size='336' address='0x0000000104855750' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.169'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104857bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e433d0} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/468121027 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>
[sp+0x30]  (sp of caller)
  0x0000000104857d20: mov    0x8(%rsi),%r10d
  0x0000000104857d24: shl    $0x3,%r10
  0x0000000104857d28: cmp    %r10,%rax
  0x0000000104857d2b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104857d31: data32 xchg %ax,%ax
  0x0000000104857d34: nopl   0x0(%rax,%rax,1)
  0x0000000104857d3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104857d40: mov    %eax,-0x14000(%rsp)
  0x0000000104857d47: push   %rbp
  0x0000000104857d48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x0000000104857d4c: mov    %rsi,%r10
  0x0000000104857d4f: cmp    $0x10000,%edx
  0x0000000104857d55: jge    0x0000000104857e35  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000104857d5b: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000104857d5e: mov    0xc(%r12,%rbp,8),%r11d  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x0000000104857e51
  0x0000000104857d63: mov    %r11d,%eax
  0x0000000104857d66: dec    %eax               ;*isub
                                                ; - java.lang.String::lastIndexOf@15 (line 1653)

  0x0000000104857d68: cmp    %eax,%ecx
  0x0000000104857d6a: cmovl  %ecx,%eax          ;*invokestatic min
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000104857d6d: test   %eax,%eax
  0x0000000104857d6f: jl     0x0000000104857dfe  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000104857d75: test   %r11d,%r11d
  0x0000000104857d78: jbe    0x0000000104857e1d
  0x0000000104857d7e: cmp    %r11d,%eax
  0x0000000104857d81: jae    0x0000000104857e1d
  0x0000000104857d87: mov    %eax,%r10d
  0x0000000104857d8a: dec    %r10d
  0x0000000104857d8d: lea    (%r12,%rbp,8),%r11  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x0000000104857d91: movzwl 0x10(%r11,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857d97: cmp    %edx,%r9d
  0x0000000104857d9a: je     0x0000000104857e0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857d9c: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x0000000104857d9e: cmp    %r10d,%eax
  0x0000000104857da1: jg     0x0000000104857d91  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000104857da3: cmp    $0x2,%eax
  0x0000000104857da6: jle    0x0000000104857de4
  0x0000000104857da8: nopl   0x0(%rax,%rax,1)   ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x0000000104857db0: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857db6: cmp    %edx,%r10d
  0x0000000104857db9: je     0x0000000104857e0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857dbb: movzwl 0xe(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857dc1: cmp    %edx,%r10d
  0x0000000104857dc4: je     0x0000000104857e05  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857dc6: movzwl 0xc(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857dcc: cmp    %edx,%r10d
  0x0000000104857dcf: je     0x0000000104857e09  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857dd1: movzwl 0xa(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857dd7: cmp    %edx,%r10d
  0x0000000104857dda: je     0x0000000104857e18  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857ddc: add    $0xfffffffffffffffc,%eax  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x0000000104857ddf: cmp    $0x2,%eax
  0x0000000104857de2: jg     0x0000000104857db0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000104857de4: cmp    $0xffffffffffffffff,%eax
  0x0000000104857de7: jle    0x0000000104857dfe
  0x0000000104857de9: data32 xchg %ax,%ax       ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)

  0x0000000104857dec: movzwl 0x10(%r11,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000104857df2: cmp    %edx,%r10d
  0x0000000104857df5: je     0x0000000104857e0c  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000104857df7: dec    %eax               ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x0000000104857df9: cmp    $0xffffffffffffffff,%eax
  0x0000000104857dfc: jg     0x0000000104857dec  ;*iconst_m1
                                                ; - java.lang.String::lastIndexOf@43 (line 1659)

  0x0000000104857dfe: mov    $0xffffffff,%eax
  0x0000000104857e03: jmp    0x0000000104857e0c
  0x0000000104857e05: dec    %eax
  0x0000000104857e07: jmp    0x0000000104857e0c
  0x0000000104857e09: add    $0xfffffffffffffffe,%eax  ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)

  0x0000000104857e0c: add    $0x20,%rsp
  0x0000000104857e10: pop    %rbp
  0x0000000104857e11: test   %eax,-0x206de17(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104857e17: retq   
  0x0000000104857e18: add    $0xfffffffffffffffd,%eax  ;*iinc
                                                ; - java.lang.String::lastIndexOf@37 (line 1654)

  0x0000000104857e1b: jmp    0x0000000104857e0c
  0x0000000104857e1d: mov    $0xffffff86,%esi
  0x0000000104857e22: mov    %edx,(%rsp)
  0x0000000104857e25: mov    %eax,0x4(%rsp)
  0x0000000104857e29: xchg   %ax,%ax
  0x0000000104857e2b: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=272}
                                                ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x0000000104857e30: callq  0x0000000103c85e14  ;*aload_3
                                                ; - java.lang.String::lastIndexOf@26 (line 1655)
                                                ;   {runtime_call}
  0x0000000104857e35: mov    $0xffffff65,%esi
  0x0000000104857e3a: mov    %edx,(%rsp)
  0x0000000104857e3d: mov    %r10,0x8(%rsp)
  0x0000000104857e42: mov    %ecx,0x4(%rsp)
  0x0000000104857e46: nop
  0x0000000104857e47: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=300}
                                                ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x0000000104857e4c: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)
                                                ;   {runtime_call}
  0x0000000104857e51: mov    $0xfffffff6,%esi
  0x0000000104857e56: nop
  0x0000000104857e57: callq  0x00000001047dc1a0  ; OopMap{off=316}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000000104857e5c: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000000104857e61: hlt    
  0x0000000104857e62: hlt    
  0x0000000104857e63: hlt    
  0x0000000104857e64: hlt    
  0x0000000104857e65: hlt    
  0x0000000104857e66: hlt    
  0x0000000104857e67: hlt    
  0x0000000104857e68: hlt    
  0x0000000104857e69: hlt    
  0x0000000104857e6a: hlt    
  0x0000000104857e6b: hlt    
  0x0000000104857e6c: hlt    
  0x0000000104857e6d: hlt    
  0x0000000104857e6e: hlt    
  0x0000000104857e6f: hlt    
  0x0000000104857e70: hlt    
  0x0000000104857e71: hlt    
  0x0000000104857e72: hlt    
  0x0000000104857e73: hlt    
  0x0000000104857e74: hlt    
  0x0000000104857e75: hlt    
  0x0000000104857e76: hlt    
  0x0000000104857e77: hlt    
  0x0000000104857e78: hlt    
  0x0000000104857e79: hlt    
  0x0000000104857e7a: hlt    
  0x0000000104857e7b: hlt    
  0x0000000104857e7c: hlt    
  0x0000000104857e7d: hlt    
  0x0000000104857e7e: hlt    
  0x0000000104857e7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104857e80: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104857e85: callq  0x0000000104857e8a
  0x0000000104857e8a: subq   $0x5,(%rsp)
  0x0000000104857e8f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104857e94: hlt    
  0x0000000104857e95: hlt    
  0x0000000104857e96: hlt    
  0x0000000104857e97: hlt    
<nmethod compile_id='32' compiler='C2' entry='0x0000000104857d20' size='1496' address='0x0000000104857bd0' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='864' dependencies_offset='1472' nul_chk_table_offset='1480' method='java/lang/String lastIndexOf (II)I' bytes='52' count='529' backedge_count='5176' iicount='529' stamp='0.171'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$MH/1804094807 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x00000001048555d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a13b8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855700: mov    0x18(%rsp),%rbx
  0x0000000104855705: mov    0x18(%rbx),%rbx
  0x0000000104855709: test   %rbx,%rbx
  0x000000010485570c: je     0x0000000104855715
  0x0000000104855712: jmpq   *0x40(%rbx)
  0x0000000104855715: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485571a: hlt    
  0x000000010485571b: hlt    
  0x000000010485571c: hlt    
  0x000000010485571d: hlt    
  0x000000010485571e: hlt    
  0x000000010485571f: hlt    
<nmethod compile_id='35' compile_kind='c2n' entry='0x0000000104855700' size='336' address='0x00000001048555d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.172'/>
<task_queued compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1295' backedge_count='5000' iicount='1295' stamp='0.172' comment='count' hot_count='1295'/>
[Loaded java.lang.invoke.LambdaForm$DMH/951007336 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104855450:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a14d0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  0x0000000104855580: mov    0x14(%rsi),%ebx
  0x0000000104855583: shl    $0x3,%rbx
  0x0000000104855587: mov    0x28(%rbx),%ebx
  0x000000010485558a: shl    $0x3,%rbx
  0x000000010485558e: mov    0x18(%rbx),%rbx
  0x0000000104855592: test   %rbx,%rbx
  0x0000000104855595: je     0x000000010485559e
  0x000000010485559b: jmpq   *0x40(%rbx)
  0x000000010485559e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x00000001048555a3: hlt    
  0x00000001048555a4: hlt    
  0x00000001048555a5: hlt    
  0x00000001048555a6: hlt    
  0x00000001048555a7: hlt    
<nmethod compile_id='37' compile_kind='c2n' entry='0x0000000104855580' size='344' address='0x0000000104855450' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.173'/>
Decoding compiled method 0x00000001048552d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a15e8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855400: mov    0x20(%rsp),%rbx
  0x0000000104855405: cmp    (%rsi),%rax
  0x0000000104855408: mov    0x18(%rbx),%rbx
  0x000000010485540c: test   %rbx,%rbx
  0x000000010485540f: je     0x0000000104855418
  0x0000000104855415: jmpq   *0x40(%rbx)
  0x0000000104855418: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485541d: hlt    
  0x000000010485541e: hlt    
  0x000000010485541f: hlt    
<nmethod compile_id='38' compile_kind='c2n' entry='0x0000000104855400' size='336' address='0x00000001048552d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.174'/>
[Loaded java.lang.invoke.LambdaForm$DMH/2001049719 from java.lang.invoke.LambdaForm]
<task_queued compile_id='39' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5000' backedge_count='1' iicount='10000' stamp='0.175' comment='count' hot_count='10000'/>
[Loaded java.lang.invoke.LambdaForm$MH/1528902577 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x0000000104855150:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a1860} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/invoke/MemberName&apos;
  0x0000000104855280: mov    0x20(%rsp),%rbx
  0x0000000104855285: mov    0x18(%rbx),%rbx
  0x0000000104855289: test   %rbx,%rbx
  0x000000010485528c: je     0x0000000104855295
  0x0000000104855292: jmpq   *0x40(%rbx)
  0x0000000104855295: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485529a: hlt    
  0x000000010485529b: hlt    
  0x000000010485529c: hlt    
  0x000000010485529d: hlt    
  0x000000010485529e: hlt    
  0x000000010485529f: hlt    
<nmethod compile_id='40' compile_kind='c2n' entry='0x0000000104855280' size='336' address='0x0000000104855150' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.175'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104854e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e3e480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000104854f60: mov    0x8(%rsi),%r10d
  0x0000000104854f64: shl    $0x3,%r10
  0x0000000104854f68: cmp    %r10,%rax
  0x0000000104854f6b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104854f71: data32 xchg %ax,%ax
  0x0000000104854f74: nopl   0x0(%rax,%rax,1)
  0x0000000104854f7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104854f80: mov    %eax,-0x14000(%rsp)
  0x0000000104854f87: push   %rbp
  0x0000000104854f88: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x0000000104854f8c: mov    0x8(%rsi),%r11d
  0x0000000104854f90: movabs $0x0,%r10
  0x0000000104854f9a: lea    (%r10,%r11,8),%r10
  0x0000000104854f9e: mov    $0x40000000,%r8d
  0x0000000104854fa4: test   %r8d,0x9c(%r10)
  0x0000000104854fab: je     0x0000000104854fb8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000104854fad: mov    %rsi,%rbp
  0x0000000104854fb0: data32 xchg %ax,%ax
  0x0000000104854fb3: callq  0x0000000104844560  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1927950199 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>
@0 (line 37)
                                                ;   {runtime_call}
  0x0000000104854fb8: add    $0x10,%rsp
  0x0000000104854fbc: pop    %rbp
  0x0000000104854fbd: test   %eax,-0x206afc3(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104854fc3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000104854fc4: mov    %rax,%rsi
  0x0000000104854fc7: add    $0x10,%rsp
  0x0000000104854fcb: pop    %rbp
  0x0000000104854fcc: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104854fd1: hlt    
  0x0000000104854fd2: hlt    
  0x0000000104854fd3: hlt    
  0x0000000104854fd4: hlt    
  0x0000000104854fd5: hlt    
  0x0000000104854fd6: hlt    
  0x0000000104854fd7: hlt    
  0x0000000104854fd8: hlt    
  0x0000000104854fd9: hlt    
  0x0000000104854fda: hlt    
  0x0000000104854fdb: hlt    
  0x0000000104854fdc: hlt    
  0x0000000104854fdd: hlt    
  0x0000000104854fde: hlt    
  0x0000000104854fdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104854fe0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104854fe5: callq  0x0000000104854fea
  0x0000000104854fea: subq   $0x5,(%rsp)
  0x0000000104854fef: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104854ff4: hlt    
  0x0000000104854ff5: hlt    
  0x0000000104854ff6: hlt    
  0x0000000104854ff7: hlt    
<nmethod compile_id='39' compiler='C2' entry='0x0000000104854f60' size='648' address='0x0000000104854e10' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='496' scopes_pcs_offset='520' dependencies_offset='616' handler_table_offset='624' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5155' backedge_count='1' iicount='10155' stamp='0.176'/>
<writer thread='7171'/>
Decoding compiled method 0x000000010485bd90:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a1c80} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  0x000000010485bec0: mov    0x14(%rsi),%ebx
  0x000000010485bec3: shl    $0x3,%rbx
  0x000000010485bec7: mov    0x28(%rbx),%ebx
  0x000000010485beca: shl    $0x3,%rbx
  0x000000010485bece: mov    0x18(%rbx),%rbx
  0x000000010485bed2: test   %rbx,%rbx
  0x000000010485bed5: je     0x000000010485bede
  0x000000010485bedb: jmpq   *0x40(%rbx)
  0x000000010485bede: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485bee3: hlt    
  0x000000010485bee4: hlt    
  0x000000010485bee5: hlt    
  0x000000010485bee6: hlt    
  0x000000010485bee7: hlt    
<nmethod compile_id='41' compile_kind='c2n' entry='0x000000010485bec0' size='344' address='0x000000010485bd90' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.177'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010485b550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e42618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010485b6a0: mov    0x8(%rsi),%r10d
  0x000000010485b6a4: shl    $0x3,%r10
  0x000000010485b6a8: cmp    %r10,%rax
  0x000000010485b6ab: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010485b6b1: data32 xchg %ax,%ax
  0x000000010485b6b4: nopl   0x0(%rax,%rax,1)
  0x000000010485b6bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010485b6c0: mov    %eax,-0x14000(%rsp)
  0x000000010485b6c7: push   %rbp
  0x000000010485b6c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010485b6cc: cmp    %rdx,%rsi
  0x000000010485b6cf: jne    0x000000010485b6dc  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010485b6d1: mov    $0x1,%r13d
  0x000000010485b6d7: jmpq   0x000000010485b856
  0x000000010485b6dc: mov    0x8(%rdx),%r10d    ; implicit exception: dispatches to 0x000000010485b8c1
  0x000000010485b6e0: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485b6e7: jne    0x000000010485b8a9  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010485b6ed: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010485b6f0: mov    0xc(%r12,%rdi,8),%ecx  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ; implicit exception: dispatches to 0x000000010485b8d5
  0x000000010485b6f5: mov    0xc(%rdx),%eax     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010485b6f8: mov    0xc(%r12,%rax,8),%r14d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010485b8e5
  0x000000010485b6fd: cmp    %r14d,%ecx
  0x000000010485b700: je     0x000000010485b70a  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010485b702: xor    %r13d,%r13d
  0x000000010485b705: jmpq   0x000000010485b856
  0x000000010485b70a: test   %ecx,%ecx
  0x000000010485b70c: je     0x000000010485b850  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010485b712: mov    %ecx,%r10d
  0x000000010485b715: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010485b718: vmovd  %r10d,%xmm0
  0x000000010485b71d: movslq %ecx,%r10
  0x000000010485b720: lea    (%r12,%rdi,8),%r11
  0x000000010485b724: lea    (%r12,%rax,8),%rsi
  0x000000010485b728: mov    %ecx,%r9d
  0x000000010485b72b: add    $0xfffffffffffffffe,%r9d
  0x000000010485b72f: mov    $0xffffffff,%r8d
  0x000000010485b735: cmp    %r8d,%r9d
  0x000000010485b738: cmovl  %r8d,%r9d
  0x000000010485b73c: vmovd  %xmm0,%ebx
  0x000000010485b740: xor    %r13d,%r13d
  0x000000010485b743: vmovd  %xmm0,%edx
  0x000000010485b747: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010485b749: cmp    %ecx,%edx
  0x000000010485b74b: jae    0x000000010485b86b
  0x000000010485b751: vmovd  %eax,%xmm1
  0x000000010485b755: mov    %edi,%eax
  0x000000010485b757: movslq %ebx,%rbp
  0x000000010485b75a: mov    %r10,%rdi
  0x000000010485b75d: sub    %rbp,%rdi
  0x000000010485b760: movzwl 0xe(%r11,%rdi,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b766: cmp    %r14d,%edx
  0x000000010485b769: jae    0x000000010485b889  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b76f: movzwl 0xe(%rsi,%rdi,2),%edx
  0x000000010485b774: cmp    %edx,%ebp
  0x000000010485b776: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b77c: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010485b77e: cmp    %r9d,%ebx
  0x000000010485b781: jle    0x000000010485b78b  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010485b783: mov    %eax,%edi
  0x000000010485b785: vmovd  %xmm1,%eax
  0x000000010485b789: jmp    0x000000010485b743
  0x000000010485b78b: mov    %ecx,%edi
  0x000000010485b78d: sub    %r14d,%edi
  0x000000010485b790: dec    %edi
  0x000000010485b792: cmp    %r8d,%edi
  0x000000010485b795: cmovl  %r8d,%edi
  0x000000010485b799: mov    %edi,%edx
  0x000000010485b79b: add    $0x3,%edx
  0x000000010485b79e: mov    $0x7fffffff,%r9d
  0x000000010485b7a4: cmp    %edx,%edi
  0x000000010485b7a6: cmovg  %r9d,%edx
  0x000000010485b7aa: cmp    %edx,%ebx
  0x000000010485b7ac: jle    0x000000010485b818
  0x000000010485b7ae: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010485b7b0: movslq %ebx,%r8
  0x000000010485b7b3: mov    %r10,%r9
  0x000000010485b7b6: sub    %r8,%r9
  0x000000010485b7b9: movzwl 0xe(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b7bf: movzwl 0xe(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b7c5: cmp    %r8d,%edi
  0x000000010485b7c8: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b7ce: movzwl 0x10(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b7d4: movzwl 0x10(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b7da: cmp    %r8d,%edi
  0x000000010485b7dd: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b7df: mov    %ebx,%r9d
  0x000000010485b7e2: add    $0xfffffffffffffffe,%r9d
  0x000000010485b7e6: movslq %r9d,%r8
  0x000000010485b7e9: mov    %r10,%r9
  0x000000010485b7ec: sub    %r8,%r9
  0x000000010485b7ef: movzwl 0xe(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b7f5: movzwl 0xe(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b7fb: cmp    %r8d,%edi
  0x000000010485b7fe: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b800: movzwl 0x10(%rsi,%r9,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b806: movzwl 0x10(%r11,%r9,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b80c: cmp    %r8d,%edi
  0x000000010485b80f: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b811: add    $0xfffffffffffffffc,%ebx  ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010485b814: cmp    %edx,%ebx
  0x000000010485b816: jg     0x000000010485b7b0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010485b818: cmp    $0xffffffffffffffff,%ebx
  0x000000010485b81b: je     0x000000010485b850
  0x000000010485b81d: data32 xchg %ax,%ax
  0x000000010485b820: vmovd  %xmm0,%edx
  0x000000010485b824: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000010485b826: cmp    %ecx,%edx
  0x000000010485b828: jae    0x000000010485b865
  0x000000010485b82a: movslq %ebx,%r9
  0x000000010485b82d: mov    %r10,%r8
  0x000000010485b830: sub    %r9,%r8
  0x000000010485b833: movzwl 0xe(%r11,%r8,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010485b839: cmp    %r14d,%edx
  0x000000010485b83c: jae    0x000000010485b889  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010485b83e: movzwl 0xe(%rsi,%r8,2),%r8d
  0x000000010485b844: cmp    %r8d,%ebp
  0x000000010485b847: jne    0x000000010485b856  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010485b849: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000010485b84b: cmp    $0xffffffffffffffff,%ebx
  0x000000010485b84e: jne    0x000000010485b820  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x000000010485b850: mov    $0x1,%r13d         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000010485b856: mov    %r13d,%eax
  0x000000010485b859: add    $0x30,%rsp
  0x000000010485b85d: pop    %rbp
  0x000000010485b85e: test   %eax,-0x2071864(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485b864: retq   
  0x000000010485b865: mov    %eax,%edi
  0x000000010485b867: vmovd  %xmm1,%eax
  0x000000010485b86b: mov    $0xffffffe4,%esi
  0x000000010485b870: mov    %ebx,%ebp
  0x000000010485b872: mov    %edx,0x4(%rsp)
  0x000000010485b876: mov    %eax,0xc(%rsp)
  0x000000010485b87a: mov    %edi,0x10(%rsp)
  0x000000010485b87e: nop
  0x000000010485b87f: callq  0x00000001047dc1a0  ; OopMap{[12]=NarrowOop [16]=NarrowOop off=484}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010485b884: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010485b889: mov    $0xffffffe4,%esi
  0x000000010485b88e: mov    %ebx,(%rsp)
  0x000000010485b891: mov    %edx,0x8(%rsp)
  0x000000010485b895: mov    %eax,0xc(%rsp)
  0x000000010485b899: vmovss %xmm1,0x14(%rsp)
  0x000000010485b89f: callq  0x00000001047dc1a0  ; OopMap{[12]=NarrowOop [20]=NarrowOop off=516}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010485b8a4: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010485b8a9: mov    %rsi,%rbp
  0x000000010485b8ac: mov    %rdx,0x8(%rsp)
  0x000000010485b8b1: mov    $0xffffffde,%esi
  0x000000010485b8b6: nop
  0x000000010485b8b7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=540}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010485b8bc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010485b8c1: mov    %rsi,%rbp
  0x000000010485b8c4: mov    $0xfffffff4,%esi
  0x000000010485b8c9: xchg   %ax,%ax
  0x000000010485b8cb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=560}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010485b8d0: callq  0x0000000103c85e14  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000010485b8d5: mov    $0xfffffff6,%esi
  0x000000010485b8da: nop
  0x000000010485b8db: callq  0x00000001047dc1a0  ; OopMap{off=576}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010485b8e0: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010485b8e5: mov    $0xfffffff6,%esi
  0x000000010485b8ea: nop
  0x000000010485b8eb: callq  0x00000001047dc1a0  ; OopMap{off=592}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010485b8f0: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010485b8f5: hlt    
  0x000000010485b8f6: hlt    
  0x000000010485b8f7: hlt    
  0x000000010485b8f8: hlt    
  0x000000010485b8f9: hlt    
  0x000000010485b8fa: hlt    
  0x000000010485b8fb: hlt    
  0x000000010485b8fc: hlt    
  0x000000010485b8fd: hlt    
  0x000000010485b8fe: hlt    
  0x000000010485b8ff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485b900: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485b905: callq  0x000000010485b90a
  0x000000010485b90a: subq   $0x5,(%rsp)
  0x000000010485b90f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485b914: hlt    
  0x000000010485b915: hlt    
  0x000000010485b916: hlt    
  0x000000010485b917: hlt    
<nmethod compile_id='36' compiler='C2' entry='0x000000010485b6a0' size='2072' address='0x000000010485b550' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='984' scopes_pcs_offset='1216' dependencies_offset='2032' nul_chk_table_offset='2040' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1360' backedge_count='5583' iicount='1360' stamp='0.179'/>
<writer thread='7171'/>
Decoding compiled method 0x000000010485b3d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a1d98} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010485b500: mov    0x28(%rsp),%rbx
  0x000000010485b505: cmp    (%rsi),%rax
  0x000000010485b508: mov    0x18(%rbx),%rbx
  0x000000010485b50c: test   %rbx,%rbx
  0x000000010485b50f: je     0x000000010485b518
  0x000000010485b515: jmpq   *0x40(%rbx)
  0x000000010485b518: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485b51d: hlt    
  0x000000010485b51e: hlt    
  0x000000010485b51f: hlt    
<nmethod compile_id='42' compile_kind='c2n' entry='0x000000010485b500' size='336' address='0x000000010485b3d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.179'/>
<task_queued compile_id='43' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='361' backedge_count='5000' iicount='361' stamp='0.180' comment='count' hot_count='361'/>
[Loaded java.lang.invoke.LambdaForm$DMH/868693306 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1746572565 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485b250:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a2298} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010485b380: mov    0x28(%rsp),%rbx
  0x000000010485b385: mov    0x18(%rbx),%rbx
  0x000000010485b389: test   %rbx,%rbx
  0x000000010485b38c: je     0x000000010485b395
  0x000000010485b392: jmpq   *0x40(%rbx)
  0x000000010485b395: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485b39a: hlt    
  0x000000010485b39b: hlt    
  0x000000010485b39c: hlt    
  0x000000010485b39d: hlt    
  0x000000010485b39e: hlt    
  0x000000010485b39f: hlt    
<nmethod compile_id='44' compile_kind='c2n' entry='0x000000010485b380' size='336' address='0x000000010485b250' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.181'/>
[Loaded java.lang.invoke.LambdaForm$DMH/989110044 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485b0d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a23b0} &apos;invokeBasic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  # parm3:    r9:r9     = &apos;java/lang/Object&apos;
  # parm4:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm5:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm6:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm7:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x20]   = &apos;java/lang/Object&apos;
  0x000000010485b200: mov    0x14(%rsi),%ebx
  0x000000010485b203: shl    $0x3,%rbx
  0x000000010485b207: mov    0x28(%rbx),%ebx
  0x000000010485b20a: shl    $0x3,%rbx
  0x000000010485b20e: mov    0x18(%rbx),%rbx
  0x000000010485b212: test   %rbx,%rbx
  0x000000010485b215: je     0x000000010485b21e
  0x000000010485b21b: jmpq   *0x40(%rbx)
  0x000000010485b21e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485b223: hlt    
  0x000000010485b224: hlt    
  0x000000010485b225: hlt    
  0x000000010485b226: hlt    
  0x000000010485b227: hlt    
<nmethod compile_id='45' compile_kind='c2n' entry='0x000000010485b200' size='344' address='0x000000010485b0d0' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.182'/>
Decoding compiled method 0x000000010485af50:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a24c8} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010485b080: mov    0x30(%rsp),%rbx
  0x000000010485b085: cmp    (%rsi),%rax
  0x000000010485b088: mov    0x18(%rbx),%rbx
  0x000000010485b08c: test   %rbx,%rbx
  0x000000010485b08f: je     0x000000010485b098
  0x000000010485b095: jmpq   *0x40(%rbx)
  0x000000010485b098: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485b09d: hlt    
  0x000000010485b09e: hlt    
  0x000000010485b09f: hlt    
<nmethod compile_id='46' compile_kind='c2n' entry='0x000000010485b080' size='336' address='0x000000010485af50' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.183'/>
[Loaded java.lang.invoke.LambdaForm$DMH/424058530 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/321001045 from java.lang.invoke.LambdaForm]
[Loaded java.lang.NoSuchFieldError from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalAccessException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010485add0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a2d50} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010485af00: mov    0x30(%rsp),%rbx
  0x000000010485af05: mov    0x18(%rbx),%rbx
  0x000000010485af09: test   %rbx,%rbx
  0x000000010485af0c: je     0x000000010485af15
  0x000000010485af12: jmpq   *0x40(%rbx)
  0x000000010485af15: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485af1a: hlt    
  0x000000010485af1b: hlt    
  0x000000010485af1c: hlt    
  0x000000010485af1d: hlt    
  0x000000010485af1e: hlt    
  0x000000010485af1f: hlt    
<nmethod compile_id='47' compile_kind='c2n' entry='0x000000010485af00' size='336' address='0x000000010485add0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.185'/>
[Loaded java.lang.invoke.LambdaForm$DMH/834600351 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485a9d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a2e68} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/Object&apos;
  # parm5:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm6:    [sp+0x0]   = &apos;java/lang/Object&apos;  (sp of caller)
  # parm7:    [sp+0x8]   = &apos;java/lang/Object&apos;
  # parm8:    [sp+0x10]   = &apos;java/lang/Object&apos;
  # parm9:    [sp+0x18]   = &apos;java/lang/Object&apos;
  # parm10:   [sp+0x20]   = &apos;java/lang/Object&apos;
  # parm11:   [sp+0x28]   = &apos;java/lang/Object&apos;
  # parm12:   [sp+0x30]   = &apos;java/lang/invoke/MemberName&apos;
  0x000000010485ab00: mov    0x38(%rsp),%rbx
  0x000000010485ab05: mov    0x18(%rbx),%rbx
  0x000000010485ab09: test   %rbx,%rbx
  0x000000010485ab0c: je     0x000000010485ab15
  0x000000010485ab12: jmpq   *0x40(%rbx)
  0x000000010485ab15: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485ab1a: hlt    
  0x000000010485ab1b: hlt    
  0x000000010485ab1c: hlt    
  0x000000010485ab1d: hlt    
  0x000000010485ab1e: hlt    
  0x000000010485ab1f: hlt    
<nmethod compile_id='48' compile_kind='c2n' entry='0x000000010485ab00' size='336' address='0x000000010485a9d0' relocation_offset='296' consts_offset='336' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.187'/>
[Loaded java.lang.invoke.LambdaForm$DMH/471910020 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485a850:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a33d8} &apos;linkToStatic&apos; &apos;(Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010485a980: mov    0x18(%rcx),%rbx
  0x000000010485a984: test   %rbx,%rbx
  0x000000010485a987: je     0x000000010485a990
  0x000000010485a98d: jmpq   *0x40(%rbx)
  0x000000010485a990: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485a995: hlt    
  0x000000010485a996: hlt    
  0x000000010485a997: hlt    
<nmethod compile_id='49' compile_kind='c2n' entry='0x000000010485a980' size='328' address='0x000000010485a850' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (Ljava/lang/Object;ILjava/lang/invoke/MemberName;)V' bytes='0' count='0' iicount='0' stamp='0.188'/>
[Loaded java.lang.invoke.LambdaForm$DMH/1418481495 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485a690:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091a34f0} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010485a7c0: mov    0x18(%rcx),%rbx
  0x000000010485a7c4: test   %rbx,%rbx
  0x000000010485a7c7: je     0x000000010485a7d0
  0x000000010485a7cd: jmpq   *0x40(%rbx)
  0x000000010485a7d0: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485a7d5: hlt    
  0x000000010485a7d6: hlt    
  0x000000010485a7d7: hlt    
<nmethod compile_id='50' compile_kind='c2n' entry='0x000000010485a7c0' size='328' address='0x000000010485a690' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/invoke/MemberName;)I' bytes='0' count='0' iicount='0' stamp='0.189'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010485ca50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e43f38} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x40]  (sp of caller)
  0x000000010485cbc0: mov    0x8(%rsi),%r10d
  0x000000010485cbc4: shl    $0x3,%r10
  0x000000010485cbc8: cmp    %r10,%rax
  0x000000010485cbcb: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010485cbd1: data32 xchg %ax,%ax
  0x000000010485cbd4: nopl   0x0(%rax,%rax,1)
  0x000000010485cbdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010485cbe0: mov    %eax,-0x14000(%rsp)
  0x000000010485cbe7: push   %rbp
  0x000000010485cbe8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010485cbec: mov    %rsi,%r11
  0x000000010485cbef: mov    %ecx,0x8(%rsp)
  0x000000010485cbf3: mov    %edx,%r10d
  0x000000010485cbf6: cmp    %ecx,%edx
  0x000000010485cbf8: je     0x000000010485d0b1  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000000010485cbfe: mov    %rsi,%rcx
  0x000000010485cc01: mov    0xc(%rsi),%r8d     ;*getfield value
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$DMH/142257191 from java.lang.invoke.LambdaForm]
<writer thread='19715'/>

                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010485cc05: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x000000010485d0f5
  0x000000010485cc0a: test   %r11d,%r11d
  0x000000010485cc0d: jle    0x000000010485d085  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010485cc13: test   %r11d,%r11d
  0x000000010485cc16: jbe    0x000000010485cfb1
  0x000000010485cc1c: mov    %r11d,%r9d
  0x000000010485cc1f: dec    %r9d
  0x000000010485cc22: cmp    %r11d,%r9d
  0x000000010485cc25: jae    0x000000010485cfb1  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485cc2b: movzwl 0x10(%r12,%r8,8),%esi
  0x000000010485cc31: mov    %r11d,%ebx
  0x000000010485cc34: add    $0xfffffffffffffffd,%ebx
  0x000000010485cc37: lea    (%r12,%r8,8),%rdx  ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010485cc3b: cmp    %ebx,%r9d
  0x000000010485cc3e: mov    $0x80000000,%edi
  0x000000010485cc43: cmovl  %edi,%ebx
  0x000000010485cc46: cmp    %r10d,%esi
  0x000000010485cc49: je     0x000000010485cf2c  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485cc4f: mov    $0x1,%ebp
  0x000000010485cc54: cmp    $0x1,%ebx
  0x000000010485cc57: jle    0x000000010485d011
  0x000000010485cc5d: xor    %esi,%esi
  0x000000010485cc5f: nop                       ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485cc60: movzwl 0x10(%rdx,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485cc66: cmp    %r10d,%r9d
  0x000000010485cc69: je     0x000000010485cc7e  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485cc6b: movslq %ebp,%rax
  0x000000010485cc6e: movzwl 0x12(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485cc73: cmp    %r10d,%edi
  0x000000010485cc76: jne    0x000000010485cdd3  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485cc7c: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485cc7e: cmp    %r11d,%ebp
  0x000000010485cc81: jge    0x000000010485d0c9  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010485cc87: cmp    $0x80000,%r11d
  0x000000010485cc8e: ja     0x000000010485cf47
  0x000000010485cc94: mov    0x60(%r15),%r13
  0x000000010485cc98: movslq %r11d,%rcx
  0x000000010485cc9b: shl    %rcx
  0x000000010485cc9e: add    $0x17,%rcx
  0x000000010485cca2: mov    %rcx,%r9
  0x000000010485cca5: and    $0xfffffffffffffff8,%r9
  0x000000010485cca9: mov    %r13,%rax
  0x000000010485ccac: add    %r9,%rax
  0x000000010485ccaf: cmp    0x70(%r15),%rax
  0x000000010485ccb3: jae    0x000000010485cf47
  0x000000010485ccb9: mov    %rax,0x60(%r15)
  0x000000010485ccbd: prefetchnta 0xc0(%rax)
  0x000000010485ccc4: movq   $0x1,0x0(%r13)
  0x000000010485cccc: prefetchnta 0x100(%rax)
  0x000000010485ccd3: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000010485ccdb: mov    %r11d,0xc(%r13)
  0x000000010485ccdf: prefetchnta 0x140(%rax)
  0x000000010485cce6: mov    %r13,%rdi
  0x000000010485cce9: add    $0x10,%rdi
  0x000000010485cced: prefetchnta 0x180(%rax)
  0x000000010485ccf4: shr    $0x3,%rcx
  0x000000010485ccf8: add    $0xfffffffffffffffe,%rcx
  0x000000010485ccfc: xor    %rax,%rax
  0x000000010485ccff: shl    $0x3,%rcx
  0x000000010485cd03: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x000000010485cd06: mov    %r13,0x10(%rsp)
  0x000000010485cd0b: test   %ebp,%ebp
  0x000000010485cd0d: jle    0x000000010485cd97  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485cd13: mov    %ebp,%ecx
  0x000000010485cd15: dec    %ecx
  0x000000010485cd17: cmp    %r11d,%ecx
  0x000000010485cd1a: jae    0x000000010485d059
  0x000000010485cd20: mov    $0x4,%r9d
  0x000000010485cd26: cmp    %r9d,%ebp
  0x000000010485cd29: mov    %ebp,%ecx
  0x000000010485cd2b: cmovg  %r9d,%ecx          ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485cd2f: movzwl 0x10(%rdx,%rsi,2),%r9d
  0x000000010485cd35: mov    0x10(%rsp),%rdi
  0x000000010485cd3a: mov    %r9w,0x10(%rdi,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485cd40: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485cd42: cmp    %ecx,%esi
  0x000000010485cd44: jl     0x000000010485cd2f  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485cd46: mov    %ebp,%ecx
  0x000000010485cd48: add    $0xfffffffffffffffd,%ecx
  0x000000010485cd4b: cmp    %ecx,%ebp
  0x000000010485cd4d: mov    $0x80000000,%edi
  0x000000010485cd52: cmovl  %edi,%ecx
  0x000000010485cd55: cmp    %ecx,%esi
  0x000000010485cd57: jge    0x000000010485cd79
  0x000000010485cd59: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485cd60: vmovq  0x10(%rdx,%rsi,2),%xmm0
  0x000000010485cd66: mov    0x10(%rsp),%r9
  0x000000010485cd6b: vmovq  %xmm0,0x10(%r9,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485cd72: add    $0x4,%esi          ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485cd75: cmp    %ecx,%esi
  0x000000010485cd77: jl     0x000000010485cd60  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485cd79: cmp    %ebp,%esi
  0x000000010485cd7b: jge    0x000000010485cd97
  0x000000010485cd7d: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485cd80: movzwl 0x10(%rdx,%rsi,2),%r9d
  0x000000010485cd86: mov    0x10(%rsp),%rcx
  0x000000010485cd8b: mov    %r9w,0x10(%rcx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485cd91: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485cd93: cmp    %ebp,%esi
  0x000000010485cd95: jl     0x000000010485cd80  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485cd97: cmp    %r11d,%ebp
  0x000000010485cd9a: jae    0x000000010485cfdd
  0x000000010485cda0: mov    %ebp,%r8d
  0x000000010485cda3: inc    %r8d               ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485cda6: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485cdab: cmp    %r10d,%ecx
  0x000000010485cdae: je     0x000000010485cf23
  0x000000010485cdb4: mov    0x10(%rsp),%r9
  0x000000010485cdb9: mov    %cx,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485cdbf: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485cdc1: cmp    %r8d,%ebp
  0x000000010485cdc4: jl     0x000000010485cda6  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485cdc6: cmp    %ebx,%ebp
  0x000000010485cdc8: jge    0x000000010485ce89
  0x000000010485cdce: jmpq   0x000000010485ce4e
  0x000000010485cdd3: movzwl 0x14(%rdx,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485cdd9: cmp    %r10d,%r9d
  0x000000010485cddc: jne    0x000000010485cde6  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485cdde: add    $0x2,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485cde1: jmpq   0x000000010485cc7e
  0x000000010485cde6: movzwl 0x16(%rdx,%rax,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485cdec: cmp    %r10d,%r9d
  0x000000010485cdef: je     0x000000010485cf35  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485cdf5: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485cdf8: cmp    %ebx,%ebp
  0x000000010485cdfa: jl     0x000000010485cc60  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010485ce00: jmpq   0x000000010485d013
  0x000000010485ce05: mov    0x8(%rsp),%r9d
  0x000000010485ce0a: nopw   0x0(%rax,%rax,1)
  0x000000010485ce10: mov    0x10(%rsp),%r8
  0x000000010485ce15: mov    %r9w,0x12(%r8,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ce1b: movzwl 0x14(%rdx,%rcx,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ce21: cmp    %r10d,%r8d
  0x000000010485ce24: je     0x000000010485ce82
  0x000000010485ce26: mov    0x10(%rsp),%r9
  0x000000010485ce2b: mov    %r8w,0x14(%r9,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ce31: movzwl 0x16(%rdx,%rcx,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ce37: cmp    %r10d,%r9d
  0x000000010485ce3a: je     0x000000010485ce7b
  0x000000010485ce3c: mov    0x10(%rsp),%r8
  0x000000010485ce41: mov    %r9w,0x16(%r8,%rcx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ce47: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485ce4a: cmp    %ebx,%ebp
  0x000000010485ce4c: jge    0x000000010485ce89  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485ce4e: movzwl 0x10(%rdx,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ce54: cmp    %r10d,%r8d
  0x000000010485ce57: je     0x000000010485ce74
  0x000000010485ce59: mov    0x10(%rsp),%r9
  0x000000010485ce5e: mov    %r8w,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ce64: movslq %ebp,%rcx
  0x000000010485ce67: movzwl 0x12(%rdx,%rcx,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ce6d: cmp    %r10d,%r9d
  0x000000010485ce70: jne    0x000000010485ce10  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010485ce72: jmp    0x000000010485ce05
  0x000000010485ce74: mov    0x8(%rsp),%r8d
  0x000000010485ce79: jmp    0x000000010485ce59
  0x000000010485ce7b: mov    0x8(%rsp),%r9d
  0x000000010485ce80: jmp    0x000000010485ce3c
  0x000000010485ce82: mov    0x8(%rsp),%r8d
  0x000000010485ce87: jmp    0x000000010485ce26
  0x000000010485ce89: cmp    %r11d,%ebp
  0x000000010485ce8c: jge    0x000000010485ceb1
  0x000000010485ce8e: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485ce90: movzwl 0x10(%rdx,%rbp,2),%r8d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ce96: cmp    %r10d,%r8d
  0x000000010485ce99: je     0x000000010485cf3d
  0x000000010485ce9f: mov    0x10(%rsp),%r9
  0x000000010485cea4: mov    %r8w,0x10(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ceaa: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485ceac: cmp    %r11d,%ebp
  0x000000010485ceaf: jl     0x000000010485ce90  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485ceb1: mov    0x60(%r15),%rax
  0x000000010485ceb5: mov    %rax,%r10
  0x000000010485ceb8: add    $0x18,%r10
  0x000000010485cebc: cmp    0x70(%r15),%r10
  0x000000010485cec0: jae    0x000000010485cf97
  0x000000010485cec6: mov    %r10,0x60(%r15)
  0x000000010485ceca: prefetchnta 0xc0(%r10)
  0x000000010485ced2: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485ced8: shl    $0x3,%r10
  0x000000010485cedc: mov    0xa8(%r10),%r10
  0x000000010485cee3: mov    %r10,(%rax)
  0x000000010485cee6: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485ceed: mov    %r12d,0xc(%rax)
  0x000000010485cef1: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010485cef5: mov    0x10(%rsp),%r10
  0x000000010485cefa: shr    $0x3,%r10
  0x000000010485cefe: mov    %r10d,0xc(%rax)
  0x000000010485cf02: mov    %rax,%r10
  0x000000010485cf05: shr    $0x9,%r10
  0x000000010485cf09: movabs $0x104297000,%r11
  0x000000010485cf13: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010485cf17: add    $0x30,%rsp
  0x000000010485cf1b: pop    %rbp
  0x000000010485cf1c: test   %eax,-0x2072f22(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485cf22: retq   
  0x000000010485cf23: mov    0x8(%rsp),%ecx
  0x000000010485cf27: jmpq   0x000000010485cdb4
  0x000000010485cf2c: xor    %ebp,%ebp
  0x000000010485cf2e: xor    %esi,%esi
  0x000000010485cf30: jmpq   0x000000010485cc7e
  0x000000010485cf35: add    $0x3,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485cf38: jmpq   0x000000010485cc7e
  0x000000010485cf3d: mov    0x8(%rsp),%r8d
  0x000000010485cf42: jmpq   0x000000010485ce9f
  0x000000010485cf47: mov    %esi,0x14(%rsp)
  0x000000010485cf4b: mov    %rdx,0x18(%rsp)
  0x000000010485cf50: mov    %ebx,0x10(%rsp)
  0x000000010485cf54: mov    %r11d,0xc(%rsp)
  0x000000010485cf59: mov    %r8d,0x4(%rsp)
  0x000000010485cf5e: mov    %r10d,(%rsp)
  0x000000010485cf62: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010485cf6c: mov    %r11d,%edx
  0x000000010485cf6f: callq  0x0000000104846a60  ; OopMap{[4]=NarrowOop [24]=Oop off=948}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010485cf74: mov    (%rsp),%r10d
  0x000000010485cf78: mov    0x4(%rsp),%r8d
  0x000000010485cf7d: mov    0xc(%rsp),%r11d
  0x000000010485cf82: mov    0x10(%rsp),%ebx
  0x000000010485cf86: mov    0x18(%rsp),%rdx
  0x000000010485cf8b: mov    0x14(%rsp),%esi
  0x000000010485cf8f: mov    %rax,%r13
  0x000000010485cf92: jmpq   0x000000010485cd06  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485cf97: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485cfa1: mov    0x10(%rsp),%rbp
  0x000000010485cfa6: nop
  0x000000010485cfa7: callq  0x0000000104846960  ; OopMap{rbp=Oop [16]=Oop off=1004}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010485cfac: jmpq   0x000000010485cef5
  0x000000010485cfb1: mov    $0xffffff86,%esi
  0x000000010485cfb6: mov    %edx,%ebp
  0x000000010485cfb8: mov    0x8(%rsp),%r9d
  0x000000010485cfbd: mov    %r9d,(%rsp)
  0x000000010485cfc1: mov    %rcx,0x8(%rsp)
  0x000000010485cfc6: mov    %r11d,0x4(%rsp)
  0x000000010485cfcb: mov    %r8d,0x10(%rsp)
  0x000000010485cfd0: data32 xchg %ax,%ax
  0x000000010485cfd3: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1048}
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)
                                                ;   {runtime_call}
  0x000000010485cfd8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010485cfdd: mov    $0xffffff86,%esi
  0x000000010485cfe2: mov    %r10d,(%rsp)
  0x000000010485cfe6: mov    0x8(%rsp),%r9d
  0x000000010485cfeb: mov    %r9d,0x4(%rsp)
  0x000000010485cff0: rex.W pushq 0x10(%rsp)
  0x000000010485cff5: rex.W popq 0x8(%rsp)
  0x000000010485cffa: mov    %r11d,0x10(%rsp)
  0x000000010485cfff: mov    %r8d,0x14(%rsp)
  0x000000010485d004: data32 xchg %ax,%ax
  0x000000010485d007: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1100}
                                                ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010485d00c: callq  0x0000000103c85e14  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010485d011: xor    %esi,%esi
  0x000000010485d013: cmp    %r11d,%ebp
  0x000000010485d016: jge    0x000000010485d02d  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485d018: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485d01d: cmp    %r10d,%edi
  0x000000010485d020: je     0x000000010485cc7e  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485d026: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485d028: cmp    %r11d,%ebp
  0x000000010485d02b: jl     0x000000010485d018  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010485d02d: mov    $0xffffff65,%esi
  0x000000010485d032: mov    %r10d,(%rsp)
  0x000000010485d036: mov    0x8(%rsp),%r9d
  0x000000010485d03b: mov    %r9d,0x4(%rsp)
  0x000000010485d040: mov    %rcx,0x10(%rsp)
  0x000000010485d045: mov    %r8d,0x18(%rsp)
  0x000000010485d04a: mov    %r11d,0x1c(%rsp)
  0x000000010485d04f: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=NarrowOop off=1172}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010485d054: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010485d059: mov    $0xffffff86,%esi
  0x000000010485d05e: mov    %r10d,(%rsp)
  0x000000010485d062: mov    0x8(%rsp),%r10d
  0x000000010485d067: mov    %r10d,0x4(%rsp)
  0x000000010485d06c: mov    %r13,0x8(%rsp)
  0x000000010485d071: mov    %r11d,0x10(%rsp)
  0x000000010485d076: mov    %r8d,0x14(%rsp)
  0x000000010485d07b: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1216}
                                                ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010485d080: callq  0x0000000103c85e14  ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010485d085: mov    $0xffffff65,%esi
  0x000000010485d08a: mov    %edx,%ebp
  0x000000010485d08c: mov    0x8(%rsp),%r10d
  0x000000010485d091: mov    %r10d,(%rsp)
  0x000000010485d095: mov    %rcx,0x8(%rsp)
  0x000000010485d09a: mov    %r8d,0x10(%rsp)
  0x000000010485d09f: mov    %r11d,0x14(%rsp)
  0x000000010485d0a4: data32 xchg %ax,%ax
  0x000000010485d0a7: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1260}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010485d0ac: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)
                                                ;   {runtime_call}
  0x000000010485d0b1: mov    $0xffffff65,%esi
  0x000000010485d0b6: mov    %edx,0x4(%rsp)
  0x000000010485d0ba: mov    %r11,0x10(%rsp)
  0x000000010485d0bf: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=1284}
                                                ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010485d0c4: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010485d0c9: mov    $0xffffff65,%esi
  0x000000010485d0ce: mov    %r10d,(%rsp)
  0x000000010485d0d2: mov    0x8(%rsp),%r10d
  0x000000010485d0d7: mov    %r10d,0x4(%rsp)
  0x000000010485d0dc: mov    %rcx,0x10(%rsp)
  0x000000010485d0e1: mov    %r8d,0x18(%rsp)
  0x000000010485d0e6: mov    %r11d,0x1c(%rsp)
  0x000000010485d0eb: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=NarrowOop off=1328}
                                                ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)
                                                ;   {runtime_call}
  0x000000010485d0f0: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)
                                                ;   {runtime_call}
  0x000000010485d0f5: mov    $0xfffffff6,%esi
  0x000000010485d0fa: nop
  0x000000010485d0fb: callq  0x00000001047dc1a0  ; OopMap{off=1344}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x000000010485d100: callq  0x0000000103c85e14  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010485d105: mov    %rax,%rsi
  0x000000010485d108: jmp    0x000000010485d10d
  0x000000010485d10a: mov    %rax,%rsi          ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010485d10d: add    $0x30,%rsp
  0x000000010485d111: pop    %rbp
  0x000000010485d112: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010485d117: hlt    
  0x000000010485d118: hlt    
  0x000000010485d119: hlt    
  0x000000010485d11a: hlt    
  0x000000010485d11b: hlt    
  0x000000010485d11c: hlt    
  0x000000010485d11d: hlt    
  0x000000010485d11e: hlt    
  0x000000010485d11f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485d120: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485d125: callq  0x000000010485d12a
  0x000000010485d12a: subq   $0x5,(%rsp)
  0x000000010485d12f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485d134: hlt    
  0x000000010485d135: hlt    
  0x000000010485d136: hlt    
  0x000000010485d137: hlt    
<nmethod compile_id='43' compiler='C2' entry='0x000000010485cbc0' size='3616' address='0x000000010485ca50' relocation_offset='296' insts_offset='368' stub_offset='1744' scopes_data_offset='1792' scopes_pcs_offset='2184' dependencies_offset='3544' handler_table_offset='3552' nul_chk_table_offset='3600' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='459' backedge_count='7337' iicount='459' stamp='0.194'/>
<writer thread='7171'/>
[Loaded java.lang.invoke.LambdaForm$BMH/1826771953 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaFormEditor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormEditor$Transform$Kind from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormEditor$Transform from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaFormBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/1406718218 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/245257410 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1705736037 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485c8d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091ae4d0} &apos;linkToStatic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi       = int
  # parm1:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010485ca00: mov    0x18(%r8),%rbx
  0x000000010485ca04: test   %rbx,%rbx
  0x000000010485ca07: je     0x000000010485ca10
  0x000000010485ca0d: jmpq   *0x40(%rbx)
  0x000000010485ca10: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485ca15: hlt    
  0x000000010485ca16: hlt    
  0x000000010485ca17: hlt    
<nmethod compile_id='51' compile_kind='c2n' entry='0x000000010485ca00' size='328' address='0x000000010485c8d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToStatic (ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.197'/>
<task_queued compile_id='52' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='160' backedge_count='5000' iicount='160' stamp='0.197' comment='count' hot_count='160'/>
[Loaded java.lang.invoke.LambdaForm$DMH/455659002 from java.lang.invoke.LambdaForm]
Decoding compiled method 0x000000010485c750:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091ae5e8} &apos;invokeBasic&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # this:     rsi:rsi   = &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm2:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010485c880: mov    0x14(%rsi),%ebx
  0x000000010485c883: shl    $0x3,%rbx
  0x000000010485c887: mov    0x28(%rbx),%ebx
  0x000000010485c88a: shl    $0x3,%rbx
  0x000000010485c88e: mov    0x18(%rbx),%rbx
  0x000000010485c892: test   %rbx,%rbx
  0x000000010485c895: je     0x000000010485c89e
  0x000000010485c89b: jmpq   *0x40(%rbx)
  0x000000010485c89e: jmpq   0x000000010482ede0  ;   {runtime_call}
  0x000000010485c8a3: hlt    
  0x000000010485c8a4: hlt    
  0x000000010485c8a5: hlt    
  0x000000010485c8a6: hlt    
  0x000000010485c8a7: hlt    
<nmethod compile_id='53' compile_kind='c2n' entry='0x000000010485c880' size='344' address='0x000000010485c750' relocation_offset='296' consts_offset='344' insts_offset='304' method='java/lang/invoke/MethodHandle invokeBasic (ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.198'/>
Decoding compiled method 0x000000010485c5d0:
Code:
[Entry Point]
[Verified Entry Point]
  # {method} {0x00000001091ae700} &apos;linkToSpecial&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;&apos; in &apos;java/lang/invoke/MethodHandle&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8:r8     = &apos;java/lang/Object&apos;
  # parm4:    r9:r9     = &apos;java/lang/invoke/MemberName&apos;
  #           [sp+0x0]  (sp of caller)
  0x000000010485c700: cmp    (%rsi),%rax
  0x000000010485c703: mov    0x18(%r9),%rbx
  0x000000010485c707: test   %rbx,%rbx
  0x000000010485c70a: je     0x000000010485c713
  0x000000010485c710: jmpq   *0x40(%rbx)
  0x000000010485c713: jmpq   0x000000010482ede0  ;   {runtime_call}
<nmethod compile_id='54' compile_kind='c2n' entry='0x000000010485c700' size='328' address='0x000000010485c5d0' relocation_offset='296' consts_offset='328' insts_offset='304' method='java/lang/invoke/MethodHandle linkToSpecial (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;Ljava/lang/invoke/MemberName;)Ljava/lang/Object;' bytes='0' count='0' iicount='0' stamp='0.199'/>
[Loaded java.lang.invoke.LambdaForm$DMH/250421012 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/1915318863 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1283928880 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/295530567 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/2003749087 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$SpeciesData$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.BoundMethodHandle$Factory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ReservationNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.FieldVisitor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded jdk.internal.org.objectweb.asm.FieldWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19203'/>
Decoding compiled method 0x000000010485f550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000109186590} &apos;getArgumentsAndReturnSizes&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;jdk/internal/org/objectweb/asm/Type&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010485f700: mov    %eax,-0x14000(%rsp)
  0x000000010485f707: push   %rbp
  0x000000010485f708: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@-1 (line 437)

  0x000000010485f70c: mov    %rsi,%r10
  0x000000010485f70f: mov    0xc(%rsi),%r8d     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010485fb25
  0x000000010485f713: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010485fb35
  0x000000010485f718: cmp    $0x1,%ebp
  0x000000010485f71b: jle    0x000000010485faad  ;*if_icmplt
                                                ; -
<writer thread='7171'/>
[Loaded java.lang.invoke.BoundMethodHandle$Species_LL from __JVM_DefineClass__]
<writer thread='19203'/>
 java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f721: cmp    $0x1,%ebp
  0x000000010485f724: jbe    0x000000010485fa79
  0x000000010485f72a: movzwl 0x12(%r12,%r8,8),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f730: mov    $0x1,%ebp
  0x000000010485f735: mov    $0x2,%eax
  0x000000010485f73a: cmp    $0x29,%edx
  0x000000010485f73d: je     0x000000010485f855  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@16 (line 441)

  0x000000010485f743: mov    %r8d,%edi
  0x000000010485f746: mov    $0x3,%ecx
  0x000000010485f74b: mov    $0x2,%r11d
  0x000000010485f751: jmp    0x000000010485f7af
  0x000000010485f753: mov    %ecx,%r11d         ; OopMap{r10=Oop r8=NarrowOop rdi=NarrowOop off=86}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)

  0x000000010485f756: test   %eax,-0x207575c(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@148 (line 461)
                                                ;   {poll}
  0x000000010485f75c: mov    %r11d,%r9d
  0x000000010485f75f: inc    %r9d               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@6 (line 440)

  0x000000010485f762: test   %r11d,%r11d
  0x000000010485f765: jl     0x000000010485f9d1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f76b: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ; implicit exception: dispatches to 0x000000010485fb05
  0x000000010485f770: cmp    %ebp,%r11d
  0x000000010485f773: jge    0x000000010485fa15  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f779: cmp    %ebp,%r11d
  0x000000010485f77c: jae    0x000000010485f989
  0x000000010485f782: lea    (%r12,%r8,8),%rcx
  0x000000010485f786: movzwl 0x10(%rcx,%r11,2),%edx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f78c: cmp    $0x29,%edx
  0x000000010485f78f: je     0x000000010485f860  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@16 (line 441)

  0x000000010485f795: mov    0xc(%r10),%ebx     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f799: mov    %eax,%esi
  0x000000010485f79b: inc    %esi               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@79 (line 448)

  0x000000010485f79d: mov    %r11d,%ecx
  0x000000010485f7a0: add    $0x2,%ecx          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010485f7a3: mov    %eax,%ebp
  0x000000010485f7a5: mov    %esi,%eax
  0x000000010485f7a7: mov    %edi,%r8d
  0x000000010485f7aa: mov    %ebx,%edi
  0x000000010485f7ac: mov    %r9d,%r11d         ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@79 (line 448)

  0x000000010485f7af: cmp    $0x4c,%edx
  0x000000010485f7b2: jne    0x000000010485f8b3  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@60 (line 445)

  0x000000010485f7b8: test   %r11d,%r11d
  0x000000010485f7bb: jl     0x000000010485f9f5  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f7c1: mov    0xc(%r12,%r8,8),%r9d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ; implicit exception: dispatches to 0x000000010485fb15
  0x000000010485f7c6: cmp    %r9d,%r11d
  0x000000010485f7c9: jge    0x000000010485fa39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f7cf: cmp    %r9d,%r11d
  0x000000010485f7d2: jae    0x000000010485f9ad  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f7d8: lea    (%r12,%r8,8),%rdx
  0x000000010485f7dc: movzwl 0x10(%rdx,%r11,2),%r11d
  0x000000010485f7e2: cmp    $0x3b,%r11d
  0x000000010485f7e6: je     0x000000010485f753  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@73 (line 446)

  0x000000010485f7ec: mov    %ecx,%r11d
  0x000000010485f7ef: inc    %r11d              ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010485f7f2: test   %ecx,%ecx
  0x000000010485f7f4: jge    0x000000010485f806  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f7f6: mov    %r11d,%ebx
  0x000000010485f7f9: mov    %ecx,%r11d
  0x000000010485f7fc: jmp    0x000000010485f836
  0x000000010485f7fe: xchg   %ax,%ax
  0x000000010485f800: mov    %r11d,%ecx
  0x000000010485f803: mov    %ebx,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f806: cmp    %r9d,%ecx
  0x000000010485f809: jge    0x000000010485f965  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f80f: cmp    %r9d,%ecx
  0x000000010485f812: jae    0x000000010485f944  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f818: movzwl 0x10(%rdx,%rcx,2),%ecx
  0x000000010485f81d: cmp    $0x3b,%ecx
  0x000000010485f820: je     0x000000010485f756  ; OopMap{r10=Oop r8=NarrowOop rdi=NarrowOop rdx=Oop off=294}
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)

  0x000000010485f826: test   %eax,-0x207582c(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@76 (line 446)
                                                ;   {poll}
  0x000000010485f82c: mov    %r11d,%ebx
  0x000000010485f82f: inc    %ebx               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@65 (line 446)

  0x000000010485f831: test   %r11d,%r11d
  0x000000010485f834: jge    0x000000010485f800  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)

  0x000000010485f836: mov    $0xffffff65,%esi
  0x000000010485f83b: mov    %ebx,0x8(%rsp)
  0x000000010485f83f: mov    %r10,0x10(%rsp)
  0x000000010485f844: mov    %r11d,0x18(%rsp)
  0x000000010485f849: xchg   %ax,%ax
  0x000000010485f84b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=336}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f850: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f855: mov    $0x2,%r9d
  0x000000010485f85b: mov    $0x1,%eax          ;*aload_0
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@19 (line 442)

  0x000000010485f860: test   %r9d,%r9d
  0x000000010485f863: jl     0x000000010485fa91  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010485f869: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ; implicit exception: dispatches to 0x000000010485fb45
  0x000000010485f86e: cmp    %ebp,%r9d
  0x000000010485f871: jge    0x000000010485fac1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010485f877: cmp    %ebp,%r9d
  0x000000010485f87a: jae    0x000000010485fa5d
  0x000000010485f880: lea    (%r12,%r8,8),%r10
  0x000000010485f884: movzwl 0x10(%r10,%r9,2),%ebp  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)

  0x000000010485f88a: shl    $0x2,%eax          ;*ishl
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@27 (line 443)

  0x000000010485f88d: cmp    $0x56,%ebp
  0x000000010485f890: je     0x000000010485f8a7  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@31 (line 443)

  0x000000010485f892: cmp    $0x44,%ebp
  0x000000010485f895: je     0x000000010485fadd  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)

  0x000000010485f89b: cmp    $0x4a,%ebp
  0x000000010485f89e: je     0x000000010485faf1  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)

  0x000000010485f8a4: or     $0x1,%eax          ;*ior  ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@55 (line 443)

  0x000000010485f8a7: add    $0x30,%rsp
  0x000000010485f8ab: pop    %rbp
  0x000000010485f8ac: test   %eax,-0x20758b2(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485f8b2: retq   
  0x000000010485f8b3: cmp    $0x5b,%edx
  0x000000010485f8b6: je     0x000000010485f8d0  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@88 (line 449)

  0x000000010485f8b8: cmp    $0x44,%edx
  0x000000010485f8bb: je     0x000000010485f8c6  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@130 (line 456)

  0x000000010485f8bd: cmp    $0x4a,%edx
  0x000000010485f8c0: jne    0x000000010485f756
  0x000000010485f8c6: mov    %ebp,%eax
  0x000000010485f8c8: add    $0x2,%eax          ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@139 (line 457)

  0x000000010485f8cb: jmpq   0x000000010485f756
  0x000000010485f8d0: mov    %r11d,0xc(%rsp)
  0x000000010485f8d5: mov    %ecx,0x8(%rsp)
  0x000000010485f8d9: mov    %r10,(%rsp)
  0x000000010485f8dd: mov    %r10,%rsi
  0x000000010485f8e0: mov    %r11d,%edx
  0x000000010485f8e3: callq  0x000000010481d020  ; OopMap{[0]=Oop off=488}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {optimized virtual_call}
  0x000000010485f8e8: cmp    $0x5b,%eax
  0x000000010485f8eb: je     0x000000010485f91d
  0x000000010485f8ed: mov    0xc(%rsp),%r11d    ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@100 (line 450)

  0x000000010485f8f2: mov    (%rsp),%r10
  0x000000010485f8f6: mov    0xc(%r10),%edi     ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)

  0x000000010485f8fa: cmp    $0x44,%eax
  0x000000010485f8fd: je     0x000000010485f938  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@112 (line 453)

  0x000000010485f8ff: cmp    $0x4a,%eax
  0x000000010485f902: je     0x000000010485f938  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@118 (line 453)

  0x000000010485f904: mov    %edi,%r8d
  0x000000010485f907: mov    %ebp,%eax
  0x000000010485f909: jmpq   0x000000010485f756
  0x000000010485f90e: xchg   %ax,%ax
  0x000000010485f910: mov    0x8(%rsp),%r10d
  0x000000010485f915: inc    %r10d
  0x000000010485f918: mov    %r10d,0x8(%rsp)    ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@103 (line 451)

  0x000000010485f91d: mov    (%rsp),%rsi
  0x000000010485f921: mov    0x8(%rsp),%edx
  0x000000010485f925: xchg   %ax,%ax
  0x000000010485f927: callq  0x000000010481d020  ; OopMap{[0]=Oop off=556}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)
                                                ;   {optimized virtual_call}
  0x000000010485f92c: cmp    $0x5b,%eax
  0x000000010485f92f: je     0x000000010485f910  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@100 (line 450)

  0x000000010485f931: mov    0x8(%rsp),%r11d
  0x000000010485f936: jmp    0x000000010485f8f2
  0x000000010485f938: mov    %ebp,%eax
  0x000000010485f93a: dec    %eax               ;*iinc
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@121 (line 454)

  0x000000010485f93c: mov    %edi,%r8d
  0x000000010485f93f: jmpq   0x000000010485f756
  0x000000010485f944: mov    $0xffffffe4,%esi
  0x000000010485f949: mov    %r10,(%rsp)
  0x000000010485f94d: mov    %r11d,0x8(%rsp)
  0x000000010485f952: mov    %r8d,0xc(%rsp)
  0x000000010485f957: mov    %ecx,0x10(%rsp)
  0x000000010485f95b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [12]=NarrowOop off=608}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f960: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f965: mov    $0xffffff65,%esi
  0x000000010485f96a: mov    %r11d,0x8(%rsp)
  0x000000010485f96f: mov    %r10,0x10(%rsp)
  0x000000010485f974: mov    %ecx,0x18(%rsp)
  0x000000010485f978: mov    %r9d,0x1c(%rsp)
  0x000000010485f97d: xchg   %ax,%ax
  0x000000010485f97f: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=644}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f984: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f989: mov    $0xffffffe4,%esi
  0x000000010485f98e: mov    %r10,%rbp
  0x000000010485f991: mov    %eax,(%rsp)
  0x000000010485f994: mov    %r9d,0x4(%rsp)
  0x000000010485f999: mov    %r8d,0x8(%rsp)
  0x000000010485f99e: mov    %r11d,0xc(%rsp)
  0x000000010485f9a3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=NarrowOop off=680}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485f9a8: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485f9ad: mov    $0xffffffe4,%esi
  0x000000010485f9b2: mov    %r10,(%rsp)
  0x000000010485f9b6: mov    %ecx,0x8(%rsp)
  0x000000010485f9ba: mov    %r8d,0xc(%rsp)
  0x000000010485f9bf: mov    %r11d,0x10(%rsp)
  0x000000010485f9c4: data32 xchg %ax,%ax
  0x000000010485f9c7: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [12]=NarrowOop off=716}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f9cc: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485f9d1: mov    $0xffffff65,%esi
  0x000000010485f9d6: mov    %eax,(%rsp)
  0x000000010485f9d9: mov    %r9d,0x4(%rsp)
  0x000000010485f9de: mov    %r10,0x8(%rsp)
  0x000000010485f9e3: mov    %r11d,0x14(%rsp)
  0x000000010485f9e8: data32 xchg %ax,%ax
  0x000000010485f9eb: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=752}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485f9f0: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485f9f5: mov    $0xffffff65,%esi
  0x000000010485f9fa: mov    %ecx,0x8(%rsp)
  0x000000010485f9fe: mov    %r10,0x10(%rsp)
  0x000000010485fa03: mov    %r11d,0x18(%rsp)
  0x000000010485fa08: data32 xchg %ax,%ax
  0x000000010485fa0b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=784}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fa10: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fa15: mov    $0xffffff65,%esi
  0x000000010485fa1a: mov    %eax,0x8(%rsp)
  0x000000010485fa1e: mov    %r9d,0xc(%rsp)
  0x000000010485fa23: mov    %r10,0x10(%rsp)
  0x000000010485fa28: mov    %r11d,0x1c(%rsp)
  0x000000010485fa2d: xchg   %ax,%ax
  0x000000010485fa2f: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=820}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fa34: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fa39: mov    $0xffffff65,%esi
  0x000000010485fa3e: mov    %ecx,0x8(%rsp)
  0x000000010485fa42: mov    %r10,0x10(%rsp)
  0x000000010485fa47: mov    %r11d,0x18(%rsp)
  0x000000010485fa4c: mov    %r9d,0x1c(%rsp)
  0x000000010485fa51: xchg   %ax,%ax
  0x000000010485fa53: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=856}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fa58: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fa5d: mov    $0xffffffe4,%esi
  0x000000010485fa62: mov    %eax,%ebp
  0x000000010485fa64: mov    %r8d,(%rsp)
  0x000000010485fa68: mov    %r9d,0x4(%rsp)
  0x000000010485fa6d: xchg   %ax,%ax
  0x000000010485fa6f: callq  0x00000001047dc1a0  ; OopMap{[0]=NarrowOop off=884}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485fa74: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485fa79: mov    $0xffffffe4,%esi
  0x000000010485fa7e: mov    %r10,%rbp
  0x000000010485fa81: mov    %r8d,(%rsp)
  0x000000010485fa85: xchg   %ax,%ax
  0x000000010485fa87: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=NarrowOop off=908}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fa8c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fa91: mov    $0xffffff65,%esi
  0x000000010485fa96: mov    %eax,%ebp
  0x000000010485fa98: mov    %r10,(%rsp)
  0x000000010485fa9c: mov    %r9d,0xc(%rsp)
  0x000000010485faa1: xchg   %ax,%ax
  0x000000010485faa3: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=936}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485faa8: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485faad: mov    $0xffffff65,%esi
  0x000000010485fab2: mov    %r10,0x8(%rsp)
  0x000000010485fab7: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=956}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fabc: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fac1: mov    $0xffffff65,%esi
  0x000000010485fac6: mov    %eax,(%rsp)
  0x000000010485fac9: mov    %r10,0x8(%rsp)
  0x000000010485face: mov    %r9d,0x10(%rsp)
  0x000000010485fad3: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=984}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485fad8: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485fadd: mov    $0xffffff65,%esi
  0x000000010485fae2: mov    %eax,(%rsp)
  0x000000010485fae5: xchg   %ax,%ax
  0x000000010485fae7: callq  0x00000001047dc1a0  ; OopMap{off=1004}
                                                ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)
                                                ;   {runtime_call}
  0x000000010485faec: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@41 (line 443)
                                                ;   {runtime_call}
  0x000000010485faf1: mov    $0xffffff65,%esi
  0x000000010485faf6: mov    %eax,(%rsp)
  0x000000010485faf9: xchg   %ax,%ax
  0x000000010485fafb: callq  0x00000001047dc1a0  ; OopMap{off=1024}
                                                ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)
                                                ;   {runtime_call}
  0x000000010485fb00: callq  0x0000000103c85e14  ;*if_icmpne
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@47 (line 443)
                                                ;   {runtime_call}
  0x000000010485fb05: mov    $0xfffffff6,%esi
  0x000000010485fb0a: nop
  0x000000010485fb0b: callq  0x00000001047dc1a0  ; OopMap{off=1040}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb10: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb15: mov    $0xfffffff6,%esi
  0x000000010485fb1a: nop
  0x000000010485fb1b: callq  0x00000001047dc1a0  ; OopMap{off=1056}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fb20: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@68 (line 446)
                                                ;   {runtime_call}
  0x000000010485fb25: mov    $0xfffffff6,%esi
  0x000000010485fb2a: nop
  0x000000010485fb2b: callq  0x00000001047dc1a0  ; OopMap{off=1072}
                                                ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb30: callq  0x0000000103c85e14  ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb35: mov    $0xfffffff6,%esi
  0x000000010485fb3a: nop
  0x000000010485fb3b: callq  0x00000001047dc1a0  ; OopMap{off=1088}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb40: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@9 (line 440)
                                                ;   {runtime_call}
  0x000000010485fb45: mov    $0xfffffff6,%esi
  0x000000010485fb4a: nop
  0x000000010485fb4b: callq  0x00000001047dc1a0  ; OopMap{off=1104}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@21 (line 442)
                                                ;   {runtime_call}
  0x000000010485fb50: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010485fb55: mov    %rax,%rsi
  0x000000010485fb58: jmp    0x000000010485fb5d
  0x000000010485fb5a: mov    %rax,%rsi          ;*invokevirtual charAt
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@93 (line 450)

  0x000000010485fb5d: add    $0x30,%rsp
  0x000000010485fb61: pop    %rbp
  0x000000010485fb62: jmpq   0x00000001048446e0  ;*if_icmpeq
                                                ; - jdk.internal.org.objectweb.asm.Type::getArgumentsAndReturnSizes@73 (line 446)
                                                ;   {runtime_call}
  0x000000010485fb67: hlt    
  0x000000010485fb68: hlt    
  0x000000010485fb69: hlt    
  0x000000010485fb6a: hlt    
  0x000000010485fb6b: hlt    
  0x000000010485fb6c: hlt    
  0x000000010485fb6d: hlt    
  0x000000010485fb6e: hlt    
  0x000000010485fb6f: hlt    
  0x000000010485fb70: hlt    
  0x000000010485fb71: hlt    
  0x000000010485fb72: hlt    
  0x000000010485fb73: hlt    
  0x000000010485fb74: hlt    
  0x000000010485fb75: hlt    
  0x000000010485fb76: hlt    
  0x000000010485fb77: hlt    
  0x000000010485fb78: hlt    
  0x000000010485fb79: hlt    
  0x000000010485fb7a: hlt    
  0x000000010485fb7b: hlt    
  0x000000010485fb7c: hlt    
  0x000000010485fb7d: hlt    
  0x000000010485fb7e: hlt    
  0x000000010485fb7f: hlt    
[Stub Code]
  0x000000010485fb80: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010485fb8a: jmpq   0x000000010485fb8a  ;   {runtime_call}
  0x000000010485fb8f: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010485fb99: jmpq   0x000000010485fb99  ;   {runtime_call}
[Exception Handler]
  0x000000010485fb9e: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010485fba3: callq  0x000000010485fba8
  0x000000010485fba8: subq   $0x5,(%rsp)
  0x000000010485fbad: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485fbb2: hlt    
  0x000000010485fbb3: hlt    
  0x000000010485fbb4: hlt    
  0x000000010485fbb5: hlt    
  0x000000010485fbb6: hlt    
  0x000000010485fbb7: hlt    
<nmethod compile_id='52' compiler='C2' entry='0x000000010485f700' size='4168' address='0x000000010485f550' relocation_offset='296' insts_offset='432' stub_offset='1584' scopes_data_offset='1656' scopes_pcs_offset='2464' dependencies_offset='4064' handler_table_offset='4072' nul_chk_table_offset='4120' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='203' backedge_count='7126' iicount='203' stamp='0.208'/>
<writer thread='7171'/>
[Loaded sun.reflect.UnsafeFieldAccessorFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticObjectFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$EntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$BMH/1096979270 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$BMH/1078694789 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L3 from __JVM_DefineClass__]
[Loaded java.lang.invoke.LambdaForm$BMH/1747585824 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.BoundMethodHandle$Species_L4 from __JVM_DefineClass__]
<task_queued compile_id='55' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='417' backedge_count='5000' iicount='417' stamp='0.214' comment='count' hot_count='417'/>
[Loaded java.lang.invoke.LambdaForm$BMH/558638686 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.AbstractValidatingLambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.PropertyPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.SecurityConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.NetPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecurityPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InfoFromMemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.TypeConvertingMethodAdapter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory$ForwardingMethodGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$$Lambda$1/2093631819 from java.io.ObjectInputStream]
[Loaded java.lang.invoke.InnerClassLambdaMetafactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm$MH/2074407503 from java.lang.invoke.LambdaForm]
[Loaded java.lang.invoke.LambdaForm$MH/999966131 from java.lang.invoke.LambdaForm]
[Loaded java.net.Socket$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.SocketInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x00000001048605d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108e437e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x60]   = int  (sp of caller)
  0x0000000104860740: 
<writer thread='7171'/>
[Loaded java.io.ObjectInputStream$BlockDataInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
mov    %eax,-0x14000(%rsp)
  0x0000000104860747: push   %rbp
  0x0000000104860748: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)

  0x000000010486074c: mov    %r8,%r10
  0x000000010486074f: mov    %edx,0x14(%rsp)
  0x0000000104860753: mov    %ecx,%r11d
  0x0000000104860756: mov    0x60(%rsp),%r8d
  0x000000010486075b: cmp    %ecx,%r8d
  0x000000010486075e: jge    0x0000000104860a41  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000104860764: test   %r8d,%r8d
  0x0000000104860767: jl     0x0000000104860a71  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010486076d: mov    %edi,%ecx
  0x000000010486076f: test   %edi,%edi
  0x0000000104860771: je     0x0000000104860a9d  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000104860777: mov    %r10,%r14
  0x000000010486077a: mov    0xc(%r10),%ebx     ; implicit exception: dispatches to 0x0000000104860b49
  0x000000010486077e: mov    %r9d,%edi
  0x0000000104860781: cmp    %ebx,%r9d
  0x0000000104860784: jae    0x0000000104860961  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010486078a: mov    %edx,%r10d
  0x000000010486078d: add    0x60(%rsp),%r10d   ;*iadd
                                                ; - java.lang.String::indexOf@50 (line 1769)

  0x0000000104860792: mov    %r11d,%edx
  0x0000000104860795: sub    %ecx,%edx
  0x0000000104860797: add    0x14(%rsp),%edx    ;*iadd
                                                ; - java.lang.String::indexOf@44 (line 1767)

  0x000000010486079b: cmp    %edx,%r10d
  0x000000010486079e: jle    0x0000000104860857  ;*iconst_m1
                                                ; - java.lang.String::indexOf@164 (line 1788)

  0x00000001048607a4: mov    $0xffffffff,%eax
  0x00000001048607a9: jmpq   0x000000010486084b
  0x00000001048607ae: xchg   %ax,%ax
  0x00000001048607b0: mov    %eax,%ebx          ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x00000001048607b2: movzwl 0x10(%rsi,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001048607b8: cmp    %r11d,%r10d
  0x00000001048607bb: je     0x000000010486087c  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00000001048607c1: movslq %ebx,%rbp
  0x00000001048607c4: movzwl 0x12(%rsi,%rbp,2),%eax  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001048607c9: cmp    %r11d,%eax
  0x00000001048607cc: je     0x0000000104860882  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00000001048607d2: movzwl 0x14(%rsi,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001048607d8: cmp    %r11d,%r10d
  0x00000001048607db: je     0x000000010486088b  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00000001048607e1: movzwl 0x16(%rsi,%rbp,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001048607e7: mov    %ebx,%eax
  0x00000001048607e9: add    $0x4,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000001048607ec: cmp    %r11d,%r10d
  0x00000001048607ef: je     0x0000000104860895  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00000001048607f5: cmp    %r8d,%eax
  0x00000001048607f8: jl     0x00000001048607b0  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000001048607fa: add    $0x3,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000001048607fd: cmp    %r13d,%eax
  0x0000000104860800: jge    0x0000000104860828
  0x0000000104860802: xchg   %ax,%ax            ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000104860804: movzwl 0x10(%rsi,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x000000010486080a: mov    %eax,%ebx
  0x000000010486080c: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x000000010486080e: cmp    %r11d,%r10d
  0x0000000104860811: je     0x000000010486089e  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104860817: cmp    %r13d,%ebx
  0x000000010486081a: jge    0x0000000104860820  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x000000010486081c: mov    %ebx,%eax
  0x000000010486081e: jmp    0x0000000104860804
  0x0000000104860820: mov    %ebx,%r10d
  0x0000000104860823: mov    %eax,%ebx
  0x0000000104860825: mov    %r10d,%eax
  0x0000000104860828: add    $0x2,%ebx          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x000000010486082b: cmp    %edx,%eax
  0x000000010486082d: jg     0x00000001048608a2  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x000000010486082f: mov    %ecx,%r8d
  0x0000000104860832: add    %eax,%r8d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104860835: cmp    %r8d,%ebx
  0x0000000104860838: jl     0x0000000104860b0d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x000000010486083e: cmp    %r8d,%ebx
  0x0000000104860841: jne    0x0000000104860acd  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000104860847: sub    0x14(%rsp),%eax    ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x000000010486084b: add    $0x50,%rsp
  0x000000010486084f: pop    %rbp
  0x0000000104860850: test   %eax,-0x2076856(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104860856: retq   
  0x0000000104860857: movzwl 0x10(%r14,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x000000010486085d: mov    0xc(%rsi),%r9d     ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ; implicit exception: dispatches to 0x0000000104860b5d
  0x0000000104860861: mov    %edx,%r13d
  0x0000000104860864: inc    %r13d
  0x0000000104860867: mov    %edx,%r8d
  0x000000010486086a: add    $0xfffffffffffffffe,%r8d
  0x000000010486086e: mov    $0x80000000,%eax
  0x0000000104860873: cmp    %r8d,%r13d
  0x0000000104860876: cmovl  %eax,%r8d
  0x000000010486087a: jmp    0x00000001048608b3
  0x000000010486087c: mov    %ebx,%eax
  0x000000010486087e: inc    %eax
  0x0000000104860880: jmp    0x0000000104860898
  0x0000000104860882: mov    %ebx,%eax
  0x0000000104860884: add    $0x2,%eax
  0x0000000104860887: inc    %ebx
  0x0000000104860889: jmp    0x0000000104860898
  0x000000010486088b: mov    %ebx,%eax
  0x000000010486088d: add    $0x3,%eax
  0x0000000104860890: add    $0x2,%ebx
  0x0000000104860893: jmp    0x0000000104860898
  0x0000000104860895: add    $0x3,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104860898: mov    %ebx,%ebp
  0x000000010486089a: mov    %eax,%ebx
  0x000000010486089c: mov    %ebp,%eax
  0x000000010486089e: cmp    %edx,%eax
  0x00000001048608a0: jle    0x000000010486082f  ; OopMap{rsi=Oop r14=Oop off=354}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00000001048608a2: test   %eax,-0x20768a8(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x00000001048608a8: cmp    %edx,%ebx
  0x00000001048608aa: jg     0x00000001048607a4  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00000001048608b0: mov    %ebx,%r10d         ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)

  0x00000001048608b3: cmp    %r9d,%r10d
  0x00000001048608b6: jae    0x0000000104860928
  0x00000001048608b8: movzwl 0x10(%rsi,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000001048608be: cmp    %r11d,%ebp
  0x00000001048608c1: je     0x0000000104860a07  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00000001048608c7: mov    %r10d,%ebp
  0x00000001048608ca: add    $0x2,%ebp          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x00000001048608cd: inc    %r10d              ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000001048608d0: cmp    %edx,%r10d
  0x00000001048608d3: jg     0x000000010486091a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000001048608d5: cmp    %r9d,%r10d
  0x00000001048608d8: jae    0x000000010486098d
  0x00000001048608de: cmp    %r9d,%edx
  0x00000001048608e1: jae    0x000000010486098d
  0x00000001048608e7: cmp    $0x7ffffffe,%edx
  0x00000001048608ed: jg     0x00000001048609c5  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x00000001048608f3: movzwl 0x10(%rsi,%r10,2),%eax  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000001048608f9: mov    %r10d,%ebx
  0x00000001048608fc: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000001048608fe: cmp    %r11d,%eax
  0x0000000104860901: je     0x000000010486091e  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104860903: cmp    %ebp,%ebx
  0x0000000104860905: jge    0x000000010486090c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104860907: mov    %ebx,%r10d
  0x000000010486090a: jmp    0x00000001048608f3
  0x000000010486090c: cmp    %r8d,%ebx
  0x000000010486090f: jge    0x00000001048609fd
  0x0000000104860915: jmpq   0x00000001048607b2
  0x000000010486091a: mov    %ebp,%ebx
  0x000000010486091c: jmp    0x00000001048608a2
  0x000000010486091e: mov    %ebx,%eax
  0x0000000104860920: mov    %r10d,%ebx
  0x0000000104860923: jmpq   0x0000000104860898
  0x0000000104860928: mov    %r11d,0x60(%rsp)
  0x000000010486092d: mov    %rsi,0x8(%rsp)
  0x0000000104860932: mov    %r10d,0x4(%rsp)
  0x0000000104860937: mov    0x14(%rsp),%r11d
  0x000000010486093c: mov    %r11d,0x10(%rsp)
  0x0000000104860941: mov    %r14,0x18(%rsp)
  0x0000000104860946: mov    %edi,0x14(%rsp)
  0x000000010486094a: mov    %ecx,0x20(%rsp)
  0x000000010486094e: mov    %edx,0x24(%rsp)
  0x0000000104860952: mov    $0xffffffe4,%esi
  0x0000000104860957: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [24]=Oop off=540}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x000000010486095c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104860961: mov    %rsi,%rbp
  0x0000000104860964: mov    %edx,0x60(%rsp)
  0x0000000104860968: mov    %r11d,(%rsp)
  0x000000010486096c: mov    %ecx,0x10(%rsp)
  0x0000000104860970: mov    %r8d,0x14(%rsp)
  0x0000000104860975: mov    %r10,0x18(%rsp)
  0x000000010486097a: mov    %edi,0x20(%rsp)
  0x000000010486097e: mov    $0xffffffe4,%esi
  0x0000000104860983: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=Oop off=584}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000104860988: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010486098d: mov    %rsi,%rbp
  0x0000000104860990: mov    %r11d,0x60(%rsp)
  0x0000000104860995: mov    %r10d,(%rsp)
  0x0000000104860999: mov    0x14(%rsp),%r11d
  0x000000010486099e: mov    %r11d,0x4(%rsp)
  0x00000001048609a3: mov    %r14,0x8(%rsp)
  0x00000001048609a8: mov    %edi,0x10(%rsp)
  0x00000001048609ac: mov    %ecx,0x14(%rsp)
  0x00000001048609b0: mov    %edx,0x18(%rsp)
  0x00000001048609b4: mov    $0xffffff86,%esi
  0x00000001048609b9: xchg   %ax,%ax
  0x00000001048609bb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=640}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x00000001048609c0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048609c5: mov    %rsi,%rbp
  0x00000001048609c8: mov    %r11d,0x60(%rsp)
  0x00000001048609cd: mov    %r10d,(%rsp)
  0x00000001048609d1: mov    0x14(%rsp),%r11d
  0x00000001048609d6: mov    %r11d,0x4(%rsp)
  0x00000001048609db: mov    %r14,0x8(%rsp)
  0x00000001048609e0: mov    %edi,0x10(%rsp)
  0x00000001048609e4: mov    %ecx,0x14(%rsp)
  0x00000001048609e8: mov    %edx,0x18(%rsp)
  0x00000001048609ec: mov    $0xffffff7e,%esi
  0x00000001048609f1: xchg   %ax,%ax
  0x00000001048609f3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=696}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x00000001048609f8: callq  0x0000000103c85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x00000001048609fd: mov    %ebx,%eax
  0x00000001048609ff: mov    %r10d,%ebx
  0x0000000104860a02: jmpq   0x00000001048607fd
  0x0000000104860a07: mov    %rsi,(%rsp)
  0x0000000104860a0b: mov    %r10d,0x8(%rsp)
  0x0000000104860a10: mov    %r11d,0xc(%rsp)
  0x0000000104860a15: mov    0x14(%rsp),%r11d
  0x0000000104860a1a: mov    %r11d,0x10(%rsp)
  0x0000000104860a1f: mov    %r14,0x18(%rsp)
  0x0000000104860a24: mov    %edi,0x14(%rsp)
  0x0000000104860a28: mov    %ecx,0x20(%rsp)
  0x0000000104860a2c: mov    %edx,0x24(%rsp)
  0x0000000104860a30: mov    $0xffffff65,%esi
  0x0000000104860a35: xchg   %ax,%ax
  0x0000000104860a37: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop off=764}
                                                ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)
                                                ;   {runtime_call}
  0x0000000104860a3c: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)
                                                ;   {runtime_call}
  0x0000000104860a41: mov    %rsi,%rbp
  0x0000000104860a44: mov    %edx,0x60(%rsp)
  0x0000000104860a48: mov    %r10,0x8(%rsp)
  0x0000000104860a4d: mov    %r9d,0x4(%rsp)
  0x0000000104860a52: mov    %edi,0x10(%rsp)
  0x0000000104860a56: mov    %r8d,0x18(%rsp)
  0x0000000104860a5b: mov    %ecx,0x1c(%rsp)
  0x0000000104860a5f: mov    $0xffffff65,%esi
  0x0000000104860a64: data32 xchg %ax,%ax
  0x0000000104860a67: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=812}
                                                ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x0000000104860a6c: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x0000000104860a71: mov    %rsi,%rbp
  0x0000000104860a74: mov    %edx,0x60(%rsp)
  0x0000000104860a78: mov    %ecx,(%rsp)
  0x0000000104860a7b: mov    %r10,0x8(%rsp)
  0x0000000104860a80: mov    %r9d,0x4(%rsp)
  0x0000000104860a85: mov    %edi,0x10(%rsp)
  0x0000000104860a89: mov    %r8d,0x18(%rsp)
  0x0000000104860a8e: mov    $0xffffff65,%esi
  0x0000000104860a93: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=856}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x0000000104860a98: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x0000000104860a9d: mov    %rsi,%rbp
  0x0000000104860aa0: mov    %edx,0x60(%rsp)
  0x0000000104860aa4: mov    %r11d,(%rsp)
  0x0000000104860aa8: mov    %r10,0x8(%rsp)
  0x0000000104860aad: mov    %r9d,0x4(%rsp)
  0x0000000104860ab2: mov    %r8d,0x14(%rsp)
  0x0000000104860ab7: mov    %ecx,0x18(%rsp)
  0x0000000104860abb: mov    $0xffffff65,%esi
  0x0000000104860ac0: data32 xchg %ax,%ax
  0x0000000104860ac3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=904}
                                                ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x0000000104860ac8: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x0000000104860acd: mov    %rsi,%rbp
  0x0000000104860ad0: mov    %r11d,0x60(%rsp)
  0x0000000104860ad5: mov    %eax,(%rsp)
  0x0000000104860ad8: mov    %ebx,0x4(%rsp)
  0x0000000104860adc: mov    0x14(%rsp),%r10d
  0x0000000104860ae1: mov    %r10d,0x8(%rsp)
  0x0000000104860ae6: mov    %r14,0x10(%rsp)
  0x0000000104860aeb: mov    %edi,0xc(%rsp)
  0x0000000104860aef: mov    %ecx,0x18(%rsp)
  0x0000000104860af3: mov    %edx,0x1c(%rsp)
  0x0000000104860af7: mov    %r8d,0x20(%rsp)
  0x0000000104860afc: mov    $0xffffff65,%esi
  0x0000000104860b01: xchg   %ax,%ax
  0x0000000104860b03: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop off=968}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)
                                                ;   {runtime_call}
  0x0000000104860b08: callq  0x0000000103c85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)
                                                ;   {runtime_call}
  0x0000000104860b0d: mov    %edi,%ebp
  0x0000000104860b0f: inc    %ebp               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x0000000104860b11: mov    %rsi,(%rsp)
  0x0000000104860b15: mov    %r11d,0x60(%rsp)
  0x0000000104860b1a: mov    %eax,0x8(%rsp)
  0x0000000104860b1e: mov    %ebx,0x10(%rsp)
  0x0000000104860b22: mov    %r14,0x18(%rsp)
  0x0000000104860b27: mov    %edi,0x20(%rsp)
  0x0000000104860b2b: mov    %ecx,0x24(%rsp)
  0x0000000104860b2f: mov    %edx,0x28(%rsp)
  0x0000000104860b33: mov    %r8d,0x30(%rsp)
  0x0000000104860b38: mov    $0xffffff65,%esi
  0x0000000104860b3d: xchg   %ax,%ax
  0x0000000104860b3f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop off=1028}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)
                                                ;   {runtime_call}
  0x0000000104860b44: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)
                                                ;   {runtime_call}
  0x0000000104860b49: mov    $0xfffffff6,%esi
  0x0000000104860b4e: mov    %r9d,%ebp
  0x0000000104860b51: xchg   %ax,%ax
  0x0000000104860b53: callq  0x00000001047dc1a0  ; OopMap{off=1048}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000104860b58: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000104860b5d: mov    %rsi,%rbp
  0x0000000104860b60: mov    %r11d,0x60(%rsp)
  0x0000000104860b65: mov    %r10d,(%rsp)
  0x0000000104860b69: mov    0x14(%rsp),%r11d
  0x0000000104860b6e: mov    %r11d,0x4(%rsp)
  0x0000000104860b73: mov    %r14,0x8(%rsp)
  0x0000000104860b78: mov    %edi,0x10(%rsp)
  0x0000000104860b7c: mov    %ecx,0x14(%rsp)
  0x0000000104860b80: mov    %edx,0x18(%rsp)
  0x0000000104860b84: mov    $0xffffff86,%esi
  0x0000000104860b89: xchg   %ax,%ax
  0x0000000104860b8b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1104}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x0000000104860b90: callq  0x0000000103c85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x0000000104860b95: hlt    
  0x0000000104860b96: hlt    
  0x0000000104860b97: hlt    
  0x0000000104860b98: hlt    
  0x0000000104860b99: hlt    
  0x0000000104860b9a: hlt    
  0x0000000104860b9b: hlt    
  0x0000000104860b9c: hlt    
  0x0000000104860b9d: hlt    
  0x0000000104860b9e: hlt    
  0x0000000104860b9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104860ba0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104860ba5: callq  0x0000000104860baa
  0x0000000104860baa: subq   $0x5,(%rsp)
  0x0000000104860baf: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104860bb4: hlt    
  0x0000000104860bb5: hlt    
  0x0000000104860bb6: hlt    
  0x0000000104860bb7: hlt    
<nmethod compile_id='55' compiler='C2' entry='0x0000000104860740' size='3344' address='0x00000001048605d0' relocation_offset='296' insts_offset='368' stub_offset='1488' scopes_data_offset='1520' scopes_pcs_offset='2128' dependencies_offset='3312' nul_chk_table_offset='3320' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='424' backedge_count='5232' iicount='424' stamp='0.222'/>
<writer thread='7171'/>
[Loaded java.io.ObjectInputStream$PeekInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DataInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$HandleTable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$HandleTable$HandleList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectInputStream$ValidationList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='55' compiler='C2' stamp='0.223'>
<jvms bci='66' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='424' backedge_count='5232' iicount='424'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='55' compiler='C2' stamp='0.223'/>
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$ForwardingPrintStream$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.OutputFrame$Type from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.format.OutputFormat from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.BinaryLinkClient$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.reflect.Proxy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.BiFunction from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$KeyFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$ProxyClassFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$CacheKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Proxy$Key1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Supplier from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ProxyMethod from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BenchmarkParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.IterationParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.IterationResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.BenchmarkResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='43' compiler='C2' stamp='0.232'>
<jvms bci='26' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='459' backedge_count='7337' iicount='459'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='43' compiler='C2' stamp='0.232'/>
[Loaded sun.misc.ProxyGenerator$PrimitiveTypeInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$MethodInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$ValueEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ConstantPool$IndirectEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$FieldInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.ProxyGenerator$ExceptionTableEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded com.sun.proxy.$Proxy0 from sun.misc.Launcher$AppClassLoader]
[Loaded java.lang.reflect.WeakCache$Value from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.WeakCache$CacheValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.UndeclaredThrowableException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.annotations.Mode from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Utils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.NumberFormatException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.StringWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.WorkloadParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.TimeUnit from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.options.TimeValue from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Multimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.IterationType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.DelegatingMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.TreeMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.SortedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.NavigableMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.HandshakeInitFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.management.ManagementFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.ManagementFactoryHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.ManagementFactoryHelper$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.VMManagement from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.VMManagementImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.management.PlatformManagedObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.management.RuntimeMXBean from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.management.RuntimeImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Inet4AddressImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.InetAddressCachePolicy$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedKeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedHashIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedKeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$ListItr from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.InetAddress$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$Caches from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$WeakClassKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$EntryFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Externalizable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays$LegacyMergeSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ComparableTimSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassFileConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.AccessorGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorGenerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVectorFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ByteVectorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassFileAssembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UTF8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Label from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Label$PatchInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorGenerator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassDefiner from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ClassDefiner$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.SerializationConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor1 from __JVM_DefineClass__]
[Loaded sun.reflect.BootstrapConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CloneNotSupportedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$FieldReflectorKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$FieldReflector from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$ClassDataSlot from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.HandshakeResponseFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='56' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='182' backedge_count='5000' iicount='182' stamp='0.270' comment='count' hot_count='182'/>
[Loaded org.openjdk.jmh.runner.options.Options from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor2 from __JVM_DefineClass__]
Decoding compiled method 0x0000000104858990:
Code:
[Entry Point]
  # {method} {0x0000000108e57930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000104858b00: mov    0x8(%rsi),%r10d
  0x0000000104858b04: shl    $0x3,%r10
  0x0000000104858b08: cmp    %r10,%rax
  0x0000000104858b0b: je     0x0000000104858b18
  0x0000000104858b11: jmpq   0x000000010481ce20  ;   {runtime_call}
  0x0000000104858b16: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000104858b18: mov    %eax,-0x14000(%rsp)
  0x0000000104858b1f: push   %rbp
  0x0000000104858b20: mov    %rsp,%rbp
  0x0000000104858b23: sub    $0x50,%rsp
  0x0000000104858b27: mov    %r9,(%rsp)
  0x0000000104858b2b: mov    %r8,%r9
  0x0000000104858b2e: mov    %rcx,0x18(%rsp)
  0x0000000104858b33: cmp    $0x0,%rcx
  0x0000000104858b37: lea    0x18(%rsp),%r8
  0x0000000104858b3c: cmove  0x18(%rsp),%r8
  0x0000000104858b42: mov    %rdx,%rcx
  0x0000000104858b45: mov    %rsi,0x8(%rsp)
  0x0000000104858b4a: cmp    $0x0,%rsi
  0x0000000104858b4e: lea    0x8(%rsp),%rdx
  0x0000000104858b53: cmove  0x8(%rsp),%rdx
  0x0000000104858b59: movabs $0x76ab00c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000104858b63: mov    %r14,0x38(%rsp)
  0x0000000104858b68: lea    0x38(%rsp),%r14
  0x0000000104858b6d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x0000000104858b70: movabs $0x104858b70,%r10  ;   {section_word}
  0x0000000104858b7a: mov    %r10,0x1e0(%r15)
  0x0000000104858b81: mov    %rsp,0x1d8(%r15)
  0x0000000104858b88: cmpb   $0x0,-0x7718c5(%rip)        # 0x00000001040e72ca
                                                ;   {external_word}
  0x0000000104858b8f: je     0x0000000104858bd3
  0x0000000104858b95: push   %rsi
  0x0000000104858b96: push   %rdx
  0x0000000104858b97: push   %rcx
  0x0000000104858b98: push   %r8
  0x0000000104858b9a: push   %r9
  0x0000000104858b9c: movabs $0x108e57930,%rsi  ;   {metadata({method} {0x0000000108e57930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000104858ba6: mov    %r15,%rdi
  0x0000000104858ba9: test   $0xf,%esp
  0x0000000104858baf: je     0x0000000104858bc7
  0x0000000104858bb5: sub    $0x8,%rsp
  0x0000000104858bb9: callq  0x0000000103ce7b1c  ;   {runtime_call}
  0x0000000104858bbe: add    $0x8,%rsp
  0x0000000104858bc2: jmpq   0x0000000104858bcc
  0x0000000104858bc7: callq  0x0000000103ce7b1c  ;   {runtime_call}
  0x0000000104858bcc: pop    %r9
  0x0000000104858bce: pop    %r8
  0x0000000104858bd0: pop    %rcx
  0x0000000104858bd1: pop    %rdx
  0x0000000104858bd2: pop    %rsi
  0x0000000104858bd3: lea    0x1f8(%r15),%rdi
  0x0000000104858bda: movl   $0x4,0x270(%r15)
  0x0000000104858be5: callq  0x0000000103b43bec  ;   {runtime_call}
  0x0000000104858bea: vzeroupper 
  0x0000000104858bed: movl   $0x5,0x270(%r15)
  0x0000000104858bf8: lock addl $0x0,(%rsp)
  0x0000000104858bfd: cmpl   $0x0,-0x766fa7(%rip)        # 0x00000001040f1c60
                                                ;   {external_word}
  0x0000000104858c07: jne    0x0000000104858c1b
  0x0000000104858c0d: cmpl   $0x0,0x30(%r15)
  0x0000000104858c15: je     0x0000000104858c34
  0x0000000104858c1b: mov    %r15,%rdi
  0x0000000104858c1e: mov    %rsp,%r12
  0x0000000104858c21: sub    $0x0,%rsp
  0x0000000104858c25: and    $0xfffffffffffffff0,%rsp
  0x0000000104858c29: callq  0x0000000103d6a2e4  ;   {runtime_call}
  0x0000000104858c2e: mov    %r12,%rsp
  0x0000000104858c31: xor    %r12,%r12
  0x0000000104858c34: movl   $0x8,0x270(%r15)
  0x0000000104858c3f: cmpl   $0x1,0x29c(%r15)
  0x0000000104858c4a: je     0x0000000104858cd2
  0x0000000104858c50: cmpb   $0x0,-0x77198d(%rip)        # 0x00000001040e72ca
                                                ;   {external_word}
  0x0000000104858c57: je     0x0000000104858c8d
  0x0000000104858c5d: movabs $0x108e57930,%rsi  ;   {metadata({method} {0x0000000108e57930} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000104858c67: mov    %r15,%rdi
  0x0000000104858c6a: test   $0xf,%esp
  0x0000000104858c70: je     0x0000000104858c88
  0x0000000104858c76: sub    $0x8,%rsp
  0x0000000104858c7a: callq  0x0000000103ce7a8e  ;   {runtime_call}
  0x0000000104858c7f: add    $0x8,%rsp
  0x0000000104858c83: jmpq   0x0000000104858c8d
  0x0000000104858c88: callq  0x0000000103ce7a8e  ;   {runtime_call}
  0x0000000104858c8d: movabs $0x0,%r10
  0x0000000104858c97: mov    %r10,0x1d8(%r15)
  0x0000000104858c9e: movabs $0x0,%r10
  0x0000000104858ca8: mov    %r10,0x1e0(%r15)
  0x0000000104858caf: mov    0x38(%r15),%rcx
  0x0000000104858cb3: movl   $0x0,0x100(%rcx)
  0x0000000104858cbd: leaveq 
  0x0000000104858cbe: cmpq   $0x0,0x8(%r15)
  0x0000000104858cc6: jne    0x0000000104858ccd
  0x0000000104858ccc: retq   
  0x0000000104858ccd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000104858cd2: mov    %rsp,%r12
  0x0000000104858cd5: sub    $0x0,%rsp
  0x0000000104858cd9: and    $0xfffffffffffffff0,%rsp
  0x0000000104858cdd: callq  0x0000000103ce58f4  ;   {runtime_call}
  0x0000000104858ce2: mov    %r12,%rsp
  0x0000000104858ce5: xor    %r12,%r12
  0x0000000104858ce8: jmpq   0x0000000104858c50
  0x0000000104858ced: hlt    
  0x0000000104858cee: hlt    
  0x0000000104858cef: hlt    
<nmethod compile_id='57' compile_kind='c2n' entry='0x0000000104858b00' size='864' address='0x0000000104858990' relocation_offset='296' consts_offset='864' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='5000' backedge_count='1' iicount='10000' stamp='0.273'/>
<writer thread='19203'/>
Decoding compiled method 0x00000001048581d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108f8adf8} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rsi:rsi   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = &apos;[B&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000104858320: mov    0x8(%rsi),%r10d
  0x0000000104858324: shl    $0x3,%r10
  0x0000000104858328: cmp    %r10,%rax
  0x000000010485832b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104858331: data32 xchg %ax,%ax
  0x0000000104858334: nopl   0x0(%rax,%rax,1)
  0x000000010485833c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104858340: mov    %eax,-0x14000(%rsp)
  0x0000000104858347: push   %rbp
  0x0000000104858348: 
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.options.CommandLineOptions from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19203'/>
sub    $0x40,%rsp                               ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x000000010485834c: mov    %rsi,%r13
  0x000000010485834f: mov    %r9,%rbx
  0x0000000104858352: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x0000000104858559
  0x0000000104858356: cmp    %r11d,%r8d
  0x0000000104858359: mov    %r11d,%r10d
  0x000000010485835c: cmovl  %r8d,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000104858360: mov    %ecx,%r9d
  0x0000000104858363: add    %r8d,%r9d          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x0000000104858366: xor    %eax,%eax
  0x0000000104858368: test   %r10d,%r10d
  0x000000010485836b: jle    0x0000000104858497  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000104858371: mov    0xc(%rdx),%r8d     ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x00000001048584e9
  0x0000000104858375: cmp    %r8d,%ecx
  0x0000000104858378: jae    0x00000001048584e9
  0x000000010485837e: mov    %ecx,%esi
  0x0000000104858380: add    %r10d,%esi
  0x0000000104858383: dec    %esi
  0x0000000104858385: cmp    %r8d,%esi
  0x0000000104858388: jae    0x00000001048584e9
  0x000000010485838e: test   %r11d,%r11d
  0x0000000104858391: jbe    0x00000001048584e9
  0x0000000104858397: mov    %r10d,%edi
  0x000000010485839a: dec    %edi
  0x000000010485839c: cmp    %r11d,%edi
  0x000000010485839f: jae    0x00000001048584e9  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000001048583a5: movzwl 0x10(%rdx,%rcx,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000001048583aa: cmp    $0x80,%ebp
  0x00000001048583b0: jge    0x0000000104858549  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000001048583b6: mov    %bpl,0x10(%rbx)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000001048583ba: mov    %r10d,%edi
  0x00000001048583bd: add    $0xfffffffffffffffd,%edi
  0x00000001048583c0: mov    $0x80000000,%r11d
  0x00000001048583c6: cmp    %edi,%r10d
  0x00000001048583c9: cmovl  %r11d,%edi
  0x00000001048583cd: mov    $0x1,%eax
  0x00000001048583d2: cmp    $0x1,%edi
  0x00000001048583d5: jle    0x0000000104858515
  0x00000001048583db: nopl   0x0(%rax,%rax,1)
  0x00000001048583e0: mov    %eax,%r11d
  0x00000001048583e3: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000001048583e6: movzwl 0x10(%rdx,%r11,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000001048583ec: cmp    $0x80,%r8d
  0x00000001048583f3: jge    0x00000001048584a3  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000001048583f9: movslq %r11d,%r14
  0x00000001048583fc: movzwl 0x12(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104858402: movslq %eax,%rsi
  0x0000000104858405: mov    %r8b,0x10(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010485840a: cmp    $0x80,%ebp
  0x0000000104858410: jge    0x00000001048584a8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104858416: movzwl 0x14(%rdx,%r14,2),%r8d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010485841c: movslq %eax,%rsi
  0x000000010485841f: mov    %bpl,0x11(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104858424: cmp    $0x80,%r8d
  0x000000010485842b: jge    0x000000010485849c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010485842d: mov    %r8b,0x12(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104858432: movzwl 0x16(%rdx,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104858438: cmp    $0x80,%ebp
  0x000000010485843e: jge    0x00000001048584af  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104858440: mov    %bpl,0x13(%rbx,%rsi,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104858445: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000104858448: cmp    %edi,%eax
  0x000000010485844a: jl     0x00000001048583e0
  0x000000010485844c: add    $0x3,%r11d
  0x0000000104858450: cmp    %r10d,%eax
  0x0000000104858453: jge    0x000000010485847f
  0x0000000104858455: data32 xchg %ax,%ax
  0x0000000104858458: mov    %eax,%r11d
  0x000000010485845b: add    %ecx,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x000000010485845e: movzwl 0x10(%rdx,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000104858464: cmp    $0x80,%ebp
  0x000000010485846a: jge    0x0000000104858551  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000104858470: movslq %eax,%r8
  0x0000000104858473: mov    %bpl,0x10(%rbx,%r8,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000104858478: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x000000010485847a: cmp    %r10d,%eax
  0x000000010485847d: jl     0x0000000104858458
  0x000000010485847f: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000104858482: cmp    %r9d,%r11d
  0x0000000104858485: jl     0x000000010485851d
  0x000000010485848b: add    $0x40,%rsp
  0x000000010485848f: pop    %rbp
  0x0000000104858490: test   %eax,-0x206e496(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104858496: retq   
  0x0000000104858497: mov    %ecx,%r11d
  0x000000010485849a: jmp    0x0000000104858482
  0x000000010485849c: add    $0x2,%r11d
  0x00000001048584a0: add    $0x2,%eax
  0x00000001048584a3: mov    %r8d,%ebp
  0x00000001048584a6: jmp    0x00000001048584b6  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000001048584a8: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000001048584aa: inc    %r11d
  0x00000001048584ad: jmp    0x00000001048584b6  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000001048584af: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000001048584b2: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000001048584b6: mov    %eax,(%rsp)
  0x00000001048584b9: mov    $0xffffff65,%esi
  0x00000001048584be: mov    %rdx,0x8(%rsp)
  0x00000001048584c3: mov    %r11d,0x4(%rsp)
  0x00000001048584c8: mov    %r13,0x10(%rsp)
  0x00000001048584cd: mov    %rbx,0x18(%rsp)
  0x00000001048584d2: mov    %r9d,0x20(%rsp)
  0x00000001048584d7: mov    %r10d,0x24(%rsp)
  0x00000001048584dc: data32 xchg %ax,%ax
  0x00000001048584df: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=452}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x00000001048584e4: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x00000001048584e9: mov    $0xffffff86,%esi
  0x00000001048584ee: mov    %rdx,%rbp
  0x00000001048584f1: mov    %ecx,(%rsp)
  0x00000001048584f4: mov    %r13,0x8(%rsp)
  0x00000001048584f9: mov    %rbx,0x10(%rsp)
  0x00000001048584fe: mov    %r9d,0x4(%rsp)
  0x0000000104858503: mov    %r10d,0x18(%rsp)
  0x0000000104858508: data32 xchg %ax,%ax
  0x000000010485850b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=496}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x0000000104858510: callq  0x0000000103c85e14  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x0000000104858515: mov    %ecx,%r11d
  0x0000000104858518: jmpq   0x0000000104858450  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010485851d: mov    $0xffffff65,%esi
  0x0000000104858522: mov    %rdx,%rbp
  0x0000000104858525: mov    %eax,0x4(%rsp)
  0x0000000104858529: mov    %r11d,0x8(%rsp)
  0x000000010485852e: mov    %r13,0x10(%rsp)
  0x0000000104858533: mov    %rbx,0x18(%rsp)
  0x0000000104858538: mov    %r9d,0x20(%rsp)
  0x000000010485853d: xchg   %ax,%ax
  0x000000010485853f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=548}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x0000000104858544: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x0000000104858549: mov    %ecx,%r11d
  0x000000010485854c: jmpq   0x00000001048584b6  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000104858551: mov    %eax,(%rsp)
  0x0000000104858554: jmpq   0x00000001048584b9
  0x0000000104858559: mov    $0xfffffff6,%esi
  0x000000010485855e: nop
  0x000000010485855f: callq  0x00000001047dc1a0  ; OopMap{off=580}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x0000000104858564: callq  0x0000000103c85e14  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x0000000104858569: hlt    
  0x000000010485856a: hlt    
  0x000000010485856b: hlt    
  0x000000010485856c: hlt    
  0x000000010485856d: hlt    
  0x000000010485856e: hlt    
  0x000000010485856f: hlt    
  0x0000000104858570: hlt    
  0x0000000104858571: hlt    
  0x0000000104858572: hlt    
  0x0000000104858573: hlt    
  0x0000000104858574: hlt    
  0x0000000104858575: hlt    
  0x0000000104858576: hlt    
  0x0000000104858577: hlt    
  0x0000000104858578: hlt    
  0x0000000104858579: hlt    
  0x000000010485857a: hlt    
  0x000000010485857b: hlt    
  0x000000010485857c: hlt    
  0x000000010485857d: hlt    
  0x000000010485857e: hlt    
  0x000000010485857f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104858580: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104858585: callq  0x000000010485858a
  0x000000010485858a: subq   $0x5,(%rsp)
  0x000000010485858f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104858594: hlt    
  0x0000000104858595: hlt    
  0x0000000104858596: hlt    
  0x0000000104858597: hlt    
<nmethod compile_id='56' compiler='C2' entry='0x0000000104858320' size='1968' address='0x00000001048581d0' relocation_offset='296' insts_offset='336' stub_offset='944' scopes_data_offset='976' scopes_pcs_offset='1184' dependencies_offset='1936' nul_chk_table_offset='1944' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='185' backedge_count='5209' iicount='185' stamp='0.275'/>
<writer thread='7171'/>
[Loaded joptsimple.OptionException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.HelpFormatter from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.ValueConverter from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionSpec from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.options.CommandLineOptionException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Optional from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionDeclarer from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded joptsimple.OptionParser from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor3 from __JVM_DefineClass__]
[Loaded joptsimple.OptionSet from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='58' compile_kind='osr' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='245' backedge_count='7045' iicount='703' decompiles='1' unstable_if_traps='1' osr_bci='78' stamp='0.281' comment='backedge_count' hot_count='7045'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor4 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor5 from __JVM_DefineClass__]
[Loaded java.util.function.UnaryOperator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Spliterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Consumer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Predicate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.SerialCallbackContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$ExceptionInfo from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor6 from __JVM_DefineClass__]
<writer thread='19715'/>
Decoding compiled method 0x0000000104862c90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108e43f38} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  0x0000000104862e00: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104862e05: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000104862e10: mov    %eax,-0x14000(%rsp)
  0x0000000104862e17: push   %rbp
  0x0000000104862e18: sub    $0x40,%rsp
  0x0000000104862e1c: mov    0x18(%rsi),%r13d
  0x0000000104862e20: mov    0x20(%rsi),%r11d
  0x0000000104862e24: mov    %r11d,0x10(%rsp)
  0x0000000104862e29: mov    0x10(%rsi),%rbp
  0x0000000104862e2d: mov    0x8(%rsi),%r10
  0x0000000104862e31: mov    %r10,0x8(%rsp)
  0x0000000104862e36: mov    0x28(%rsi),%ebx
  0x0000000104862e39: mov    0x30(%rsi),%r14d
  0x0000000104862e3d: mov    %rsi,%rdi
  0x0000000104862e40: movabs $0x103ce473e,%r10
  0x0000000104862e4a: callq  *%r10
  0x0000000104862e4d: test   %rbp,%rbp
  0x0000000104862e50: je     0x0000000104863079
  0x0000000104862e56: mov    %rbp,%r10
  0x0000000104862e59: mov    0x8(%rbp),%r11d
  0x0000000104862e5d: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000104862e64: jne    0x0000000104863115
  0x0000000104862e6a: mov    %rbp,%r8
  0x0000000104862e6d: mov    0x8(%rsp),%r11
  0x0000000104862e72: test   %r11,%r11
  0x0000000104862e75: je     0x0000000104863084
  0x0000000104862e7b: mov    0x8(%r11),%r9d
  0x0000000104862e7f: cmp    $0xf8000041,%r9d   ;   {metadata({type array char})}
  0x0000000104862e86: jne    0x0000000104863115
  0x0000000104862e8c: mov    %r11,%r10          ;*iload
                                                ; - java.lang.String::replace@78 (line 2082)

  0x0000000104862e8f: mov    %r10,0x18(%rsp)
  0x0000000104862e94: mov    %r10,%rdx
  0x0000000104862e97: add    $0xc,%rdx
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor7 from __JVM_DefineClass__]
<writer thread='19715'/>
          ;*castore                             ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862e9b: cmp    0x10(%rsp),%r13d
  0x0000000104862ea0: jge    0x0000000104862ff0  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x0000000104862ea6: mov    %r13d,%r11d
  0x0000000104862ea9: inc    %r11d
  0x0000000104862eac: xor    %r10d,%r10d
  0x0000000104862eaf: cmp    %r10d,%r11d
  0x0000000104862eb2: cmovl  %r10d,%r11d
  0x0000000104862eb6: cmp    0x10(%rsp),%r11d
  0x0000000104862ebb: mov    0x10(%rsp),%r9d
  0x0000000104862ec0: cmovg  %r9d,%r11d         ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862ec4: mov    0xc(%r8),%ecx      ; implicit exception: dispatches to 0x0000000104863135
  0x0000000104862ec8: cmp    %ecx,%r13d
  0x0000000104862ecb: jae    0x00000001048630aa
  0x0000000104862ed1: movzwl 0x10(%r8,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862ed7: cmp    %r14d,%ebp
  0x0000000104862eda: je     0x000000010486306b
  0x0000000104862ee0: mov    0x18(%rsp),%r10
  0x0000000104862ee5: test   %r10,%r10
  0x0000000104862ee8: je     0x00000001048630d9
  0x0000000104862eee: mov    (%rdx),%edi
  0x0000000104862ef0: cmp    %edi,%r13d
  0x0000000104862ef3: jae    0x00000001048630ed
  0x0000000104862ef9: mov    %bp,0x10(%r10,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862eff: inc    %r13d              ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x0000000104862f02: cmp    %r11d,%r13d
  0x0000000104862f05: jl     0x0000000104862ec4  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x0000000104862f07: cmp    %edi,%ecx
  0x0000000104862f09: mov    %ecx,%r11d
  0x0000000104862f0c: cmovg  %edi,%r11d
  0x0000000104862f10: cmp    %r9d,%r11d
  0x0000000104862f13: cmovg  %r9d,%r11d
  0x0000000104862f17: mov    %r11d,%esi
  0x0000000104862f1a: add    $0xfffffffffffffffd,%esi
  0x0000000104862f1d: mov    $0x80000000,%r10d
  0x0000000104862f23: cmp    %esi,%r11d
  0x0000000104862f26: cmovl  %r10d,%esi
  0x0000000104862f2a: cmp    %esi,%r13d
  0x0000000104862f2d: jge    0x0000000104862fb5
  0x0000000104862f33: jmp    0x0000000104862f54
  0x0000000104862f35: mov    %ebx,%r11d
  0x0000000104862f38: nopl   0x0(%rax,%rax,1)
  0x0000000104862f40: mov    0x18(%rsp),%r10
  0x0000000104862f45: mov    %r11w,0x16(%r10,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862f4b: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x0000000104862f4f: cmp    %esi,%r13d
  0x0000000104862f52: jge    0x0000000104862fb5  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862f54: movzwl 0x10(%r8,%r13,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862f5a: cmp    %r14d,%r10d
  0x0000000104862f5d: je     0x0000000104862fa6
  0x0000000104862f5f: mov    0x18(%rsp),%r11
  0x0000000104862f64: mov    %r10w,0x10(%r11,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862f6a: movslq %r13d,%rdx
  0x0000000104862f6d: movzwl 0x12(%r8,%rdx,2),%r11d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862f73: cmp    %r14d,%r11d
  0x0000000104862f76: je     0x0000000104862fb0
  0x0000000104862f78: mov    0x18(%rsp),%r10
  0x0000000104862f7d: mov    %r11w,0x12(%r10,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862f83: movzwl 0x14(%r8,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862f89: cmp    %r14d,%r10d
  0x0000000104862f8c: je     0x0000000104862fab
  0x0000000104862f8e: mov    0x18(%rsp),%r11
  0x0000000104862f93: mov    %r10w,0x14(%r11,%rdx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862f99: movzwl 0x16(%r8,%rdx,2),%r11d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862f9f: cmp    %r14d,%r11d
  0x0000000104862fa2: jne    0x0000000104862f40  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x0000000104862fa4: jmp    0x0000000104862f35
  0x0000000104862fa6: mov    %ebx,%r10d
  0x0000000104862fa9: jmp    0x0000000104862f5f
  0x0000000104862fab: mov    %ebx,%r10d
  0x0000000104862fae: jmp    0x0000000104862f8e
  0x0000000104862fb0: mov    %ebx,%r11d
  0x0000000104862fb3: jmp    0x0000000104862f78
  0x0000000104862fb5: cmp    %r9d,%r13d
  0x0000000104862fb8: jge    0x0000000104862ff0
  0x0000000104862fba: xchg   %ax,%ax            ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862fbc: cmp    %ecx,%r13d
  0x0000000104862fbf: jae    0x00000001048630aa
  0x0000000104862fc5: movzwl 0x10(%r8,%r13,2),%ebp  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000104862fcb: cmp    %r14d,%ebp
  0x0000000104862fce: je     0x0000000104863072
  0x0000000104862fd4: cmp    %edi,%r13d
  0x0000000104862fd7: jae    0x00000001048630ed
  0x0000000104862fdd: mov    0x18(%rsp),%r10
  0x0000000104862fe2: mov    %bp,0x10(%r10,%r13,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000104862fe8: inc    %r13d              ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x0000000104862feb: cmp    %r9d,%r13d
  0x0000000104862fee: jl     0x0000000104862fbc  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x0000000104862ff0: mov    0x60(%r15),%rax
  0x0000000104862ff4: mov    %rax,%r10
  0x0000000104862ff7: add    $0x18,%r10
  0x0000000104862ffb: cmp    0x70(%r15),%r10
  0x0000000104862fff: jae    0x0000000104863096
  0x0000000104863005: mov    %r10,0x60(%r15)
  0x0000000104863009: prefetchnta 0xc0(%r10)
  0x0000000104863011: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104863017: movabs $0x0,%r10
  0x0000000104863021: lea    (%r10,%r11,8),%r10
  0x0000000104863025: mov    0xa8(%r10),%r10
  0x000000010486302c: mov    %r10,(%rax)
  0x000000010486302f: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104863036: mov    %r12,0x10(%rax)
  0x000000010486303a: mov    0x18(%rsp),%r10
  0x000000010486303f: mov    %r10,%r11
  0x0000000104863042: shr    $0x3,%r11
  0x0000000104863046: mov    %r11d,0xc(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010486304a: mov    %rax,%r10
  0x000000010486304d: shr    $0x9,%r10
  0x0000000104863051: movabs $0x104297000,%r11
  0x000000010486305b: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010486305f: add    $0x40,%rsp
  0x0000000104863063: pop    %rbp
  0x0000000104863064: test   %eax,-0x207906a(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486306a: retq   
  0x000000010486306b: mov    %ebx,%ebp
  0x000000010486306d: jmpq   0x0000000104862ee0
  0x0000000104863072: mov    %ebx,%ebp
  0x0000000104863074: jmpq   0x0000000104862fd4
  0x0000000104863079: xor    %r8d,%r8d
  0x000000010486307c: mov    %rbp,%r10
  0x000000010486307f: jmpq   0x0000000104862e6d
  0x0000000104863084: mov    $0xc,%edx
  0x0000000104863089: xor    %r10d,%r10d
  0x000000010486308c: mov    %r10,0x18(%rsp)
  0x0000000104863091: jmpq   0x0000000104862e9b  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x0000000104863096: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001048630a0: data32 xchg %ax,%ax
  0x00000001048630a3: callq  0x0000000104846960  ; OopMap{[24]=Oop off=680}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x00000001048630a8: jmp    0x000000010486303a
  0x00000001048630aa: mov    $0xffffffe4,%esi
  0x00000001048630af: mov    %r14d,%ebp
  0x00000001048630b2: mov    %ebx,(%rsp)
  0x00000001048630b5: rex.W pushq 0x18(%rsp)
  0x00000001048630ba: rex.W popq 0x10(%rsp)
  0x00000001048630bf: mov    %r8,0x18(%rsp)
  0x00000001048630c4: mov    %r13d,0x20(%rsp)
  0x00000001048630c9: mov    %r9d,0x24(%rsp)
  0x00000001048630ce: nop
  0x00000001048630cf: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop off=724}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x00000001048630d4: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048630d9: mov    $0xfffffff6,%esi
  0x00000001048630de: mov    %r13d,(%rsp)
  0x00000001048630e2: nop
  0x00000001048630e3: callq  0x00000001047dc1a0  ; OopMap{off=744}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x00000001048630e8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048630ed: mov    $0xffffffe4,%esi
  0x00000001048630f2: mov    %r14d,(%rsp)
  0x00000001048630f6: mov    %ebx,0x4(%rsp)
  0x00000001048630fa: mov    %r8,0x10(%rsp)
  0x00000001048630ff: mov    %r13d,0xc(%rsp)
  0x0000000104863104: mov    %r9d,0x28(%rsp)
  0x0000000104863109: xchg   %ax,%ax
  0x000000010486310b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [24]=Oop off=784}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x0000000104863110: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104863115: mov    $0xffffff9d,%esi
  0x000000010486311a: mov    %r14d,%ebp
  0x000000010486311d: mov    %ebx,(%rsp)
  0x0000000104863120: mov    %r13d,0x4(%rsp)
  0x0000000104863125: mov    %r10,0x18(%rsp)
  0x000000010486312a: nop
  0x000000010486312b: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [24]=Oop off=816}
                                                ;*iload
                                                ; - java.lang.String::replace@78 (line 2082)
                                                ;   {runtime_call}
  0x0000000104863130: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104863135: mov    $0xfffffff6,%esi
  0x000000010486313a: mov    %r13d,%ebp
  0x000000010486313d: xchg   %ax,%ax
  0x000000010486313f: callq  0x00000001047dc1a0  ; OopMap{off=836}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x0000000104863144: callq  0x0000000103c85e14  ;*new
                                                ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x0000000104863149: mov    %rax,%rsi
  0x000000010486314c: add    $0x40,%rsp
  0x0000000104863150: pop    %rbp
  0x0000000104863151: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104863156: hlt    
  0x0000000104863157: hlt    
  0x0000000104863158: hlt    
  0x0000000104863159: hlt    
  0x000000010486315a: hlt    
  0x000000010486315b: hlt    
  0x000000010486315c: hlt    
  0x000000010486315d: hlt    
  0x000000010486315e: hlt    
  0x000000010486315f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104863160: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104863165: callq  0x000000010486316a
  0x000000010486316a: subq   $0x5,(%rsp)
  0x000000010486316f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104863174: hlt    
  0x0000000104863175: hlt    
  0x0000000104863176: hlt    
  0x0000000104863177: hlt    
<nmethod compile_id='58' compile_kind='osr' compiler='C2' entry='0x0000000104862e00' size='2120' address='0x0000000104862c90' relocation_offset='296' insts_offset='368' stub_offset='1232' scopes_data_offset='1280' scopes_pcs_offset='1496' dependencies_offset='2072' handler_table_offset='2080' nul_chk_table_offset='2104' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5020' iicount='713' decompiles='1' unstable_if_traps='1' stamp='0.288'/>
<writer thread='7171'/>
<task_queued compile_id='59' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5000' iicount='714' decompiles='1' unstable_if_traps='1' stamp='0.288' comment='count' hot_count='5001'/>
[Loaded org.openjdk.jmh.util.HashMultimap from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='60' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.289' comment='count' hot_count='10000'/>
<task_queued compile_id='61' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='5000' backedge_count='1' iicount='10000' stamp='0.289' comment='count' hot_count='10000'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor8 from __JVM_DefineClass__]
<writer thread='19715'/>
Decoding compiled method 0x0000000104863510:
Code:
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor9 from __JVM_DefineClass__]
<writer thread='19715'/>
[Entry Point]
[Constants]
  # {method} {0x0000000109225290} &apos;emitByte&apos; &apos;(B)V&apos; in &apos;sun/reflect/ClassFileAssembler&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ClassFileAssembler&apos;
  # parm0:    rdx       = byte
  #           [sp+0x30]  (sp of caller)
  0x0000000104863680: mov    0x8(%rsi),%r10d
  0x0000000104863684: shl    $0x3,%r10
  0x0000000104863688: cmp    %r10,%rax
  0x000000010486368b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104863691: data32 xchg %ax,%ax
  0x0000000104863694: nopl   0x0(%rax,%rax,1)
  0x000000010486369c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001048636a0: mov    %eax,-0x14000(%rsp)
  0x00000001048636a7: push   %rbp
  0x00000001048636a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitByte@-1 (line 74)

  0x00000001048636ac: mov    %edx,(%rsp)
  0x00000001048636af: mov    0x1c(%rsi),%r10d   ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)

  0x00000001048636b3: mov    0x8(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x0000000104863765
  0x00000001048636b8: cmp    $0xf80129ee,%r8d   ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x00000001048636bf: jne    0x0000000104863751
  0x00000001048636c5: shl    $0x3,%r10          ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x00000001048636c9: mov    0x10(%r10),%ebp    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x00000001048636cd: mov    0xc(%r10),%r8d
  0x00000001048636d1: inc    %r8d               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x00000001048636d4: mov    %r8d,0xc(%r10)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x00000001048636d8: mov    0xc(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x0000000104863779
  0x00000001048636dd: cmp    %r11d,%r8d
  0x00000001048636e0: jge    0x0000000104863708  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x00000001048636e2: mov    0xc(%r12,%rbp,8),%r10d
  0x00000001048636e7: cmp    %r10d,%r8d
  0x00000001048636ea: jae    0x000000010486373d
  0x00000001048636ec: movslq %r8d,%r10
  0x00000001048636ef: lea    (%r12,%rbp,8),%r11
  0x00000001048636f3: mov    (%rsp),%r9d
  0x00000001048636f7: mov    %r9b,0x10(%r11,%r10,1)  ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitByte@-1 (line 74)

  0x00000001048636fc: add    $0x20,%rsp
  0x0000000104863700: pop    %rbp
  0x0000000104863701: test   %eax,-0x2079707(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104863707: retq                      ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x0000000104863708: mov    %r10,%rsi
  0x000000010486370b: mov    %r8d,%edx
  0x000000010486370e: mov    %r10,%rbp
  0x0000000104863711: xchg   %ax,%ax
  0x0000000104863713: callq  0x000000010481d020  ; OopMap{rbp=Oop off=152}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {optimized virtual_call}
  0x0000000104863718: mov    %rbp,%r10
  0x000000010486371b: mov    0xc(%r10),%r8d     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x000000010486371f: mov    0x10(%r10),%ebp    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)

  0x0000000104863723: test   %ebp,%ebp
  0x0000000104863725: jne    0x00000001048636e2
  0x0000000104863727: mov    $0xfffffff6,%esi
  0x000000010486372c: mov    (%rsp),%ebp
  0x000000010486372f: mov    %r8d,(%rsp)
  0x0000000104863733: callq  0x00000001047dc1a0  ; OopMap{off=184}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863738: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486373d: mov    $0xffffffe4,%esi
  0x0000000104863742: mov    %r8d,0x4(%rsp)
  0x0000000104863747: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=204}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x000000010486374c: callq  0x0000000103c85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863751: mov    $0xffffffde,%esi
  0x0000000104863756: mov    %r10d,%ebp
  0x0000000104863759: xchg   %ax,%ax
  0x000000010486375b: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=224}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863760: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104863765: mov    $0xfffffff6,%esi
  0x000000010486376a: mov    %edx,%ebp
  0x000000010486376c: data32 xchg %ax,%ax
  0x000000010486376f: callq  0x00000001047dc1a0  ; OopMap{off=244}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863774: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104863779: mov    $0xfffffff6,%esi
  0x000000010486377e: nop
  0x000000010486377f: callq  0x00000001047dc1a0  ; OopMap{off=260}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863784: callq  0x0000000103c85e14  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ;   {runtime_call}
  0x0000000104863789: mov    %rax,%rsi
  0x000000010486378c: add    $0x20,%rsp
  0x0000000104863790: pop    %rbp
  0x0000000104863791: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104863796: hlt    
  0x0000000104863797: hlt    
  0x0000000104863798: hlt    
  0x0000000104863799: hlt    
  0x000000010486379a: hlt    
  0x000000010486379b: hlt    
  0x000000010486379c: hlt    
  0x000000010486379d: hlt    
  0x000000010486379e: hlt    
  0x000000010486379f: hlt    
[Stub Code]
  0x00000001048637a0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000001048637aa: jmpq   0x00000001048637aa  ;   {runtime_call}
[Exception Handler]
  0x00000001048637af: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x00000001048637b4: callq  0x00000001048637b9
  0x00000001048637b9: subq   $0x5,(%rsp)
  0x00000001048637be: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048637c3: hlt    
  0x00000001048637c4: hlt    
  0x00000001048637c5: hlt    
  0x00000001048637c6: hlt    
  0x00000001048637c7: hlt    
<nmethod compile_id='60' compiler='C2' entry='0x0000000104863680' size='1272' address='0x0000000104863510' relocation_offset='296' insts_offset='368' stub_offset='656' scopes_data_offset='720' scopes_pcs_offset='880' dependencies_offset='1216' handler_table_offset='1224' nul_chk_table_offset='1248' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='7742' backedge_count='1' iicount='12742' stamp='0.291'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor10 from __JVM_DefineClass__]
[Loaded java.util.function.BiConsumer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x0000000104861310:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000109223f08} &apos;add&apos; &apos;(B)V&apos; in &apos;sun/reflect/ByteVectorImpl&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ByteVectorImpl&apos;
  # parm0:    rdx       = byte
  #           [sp+0x30]  (sp of caller)
  0x0000000104861460: mov    0x8(%rsi),%r10d
  0x0000000104861464: shl    $0x3,%r10
  0x0000000104861468: cmp    %r10,%rax
  0x000000010486146b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104861471: data32 xchg %ax,%ax
  0x0000000104861474: nopl   0x0(%rax,%rax,1)
  0x000000010486147c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104861480: mov    %eax,-0x14000(%rsp)
  0x0000000104861487: push   %rbp
  0x0000000104861488: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)

  0x000000010486148c: mov    %edx,0x4(%rsp)
  0x0000000104861490: mov    %rsi,%rbp
  0x0000000104861493: mov    0xc(%rsi),%edx
  0x0000000104861496: mov    0x10(%rsi),%r11d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)

  0x000000010486149a: inc    %edx               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)

  0x000000010486149c: mov    %edx,0xc(%rsi)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)

  0x000000010486149f: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x000000010486150d
  0x00000001048614a4: cmp    %r10d,%edx
  0x00000001048614a7: jge    0x00000001048614d0  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)

  0x00000001048614a9: mov    0xc(%r12,%r11,8),%r8d
  0x00000001048614ae: cmp    %r8d,%edx
  0x00000001048614b1: jae    0x00000001048614f5
  0x00000001048614b3: movslq %edx,%r10
  0x00000001048614b6: shl    $0x3,%r11
  0x00000001048614ba: mov    0x4(%rsp),%r8d
  0x00000001048614bf: mov    %r8b,0x10(%r11,%r10,1)  ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)

  0x00000001048614c4: add    $0x20,%rsp
  0x00000001048614c8: pop    %rbp
  0x00000001048614c9: test   %eax,-0x20774cf(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x00000001048614cf: retq                      ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)

  0x00000001048614d0: data32 xchg %ax,%ax
  0x00000001048614d3: callq  0x000000010481d020  ; OopMap{rbp=Oop off=120}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ;   {optimized virtual_call}
  0x00000001048614d8: mov    0xc(%rbp),%edx     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)

  0x00000001048614db: mov    0x10(%rbp),%r11d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)

  0x00000001048614df: test   %r11d,%r11d
  0x00000001048614e2: jne    0x00000001048614a9
  0x00000001048614e4: mov    $0xfffffff6,%esi
  0x00000001048614e9: mov    %edx,%ebp
  0x00000001048614eb: callq  0x00000001047dc1a0  ; OopMap{off=144}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ;   {runtime_call}
  0x00000001048614f0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048614f5: mov    $0xffffffe4,%esi
  0x00000001048614fa: mov    %r11d,%ebp
  0x00000001048614fd: mov    %edx,(%rsp)
  0x0000000104861500: data32 xchg %ax,%ax
  0x0000000104861503: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=168}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ;   {runtime_call}
  0x0000000104861508: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486150d: mov    $0xfffffff6,%esi
  0x0000000104861512: nop
  0x0000000104861513: callq  0x00000001047dc1a0  ; OopMap{off=184}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ;   {runtime_call}
  0x0000000104861518: callq  0x0000000103c85e14  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ;   {runtime_call}
  0x000000010486151d: mov    %rax,%rsi
  0x0000000104861520: add    $0x20,%rsp
  0x0000000104861524: pop    %rbp
  0x0000000104861525: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010486152a: hlt    
  0x000000010486152b: hlt    
  0x000000010486152c: hlt    
  0x000000010486152d: hlt    
  0x000000010486152e: hlt    
  0x000000010486152f: hlt    
  0x0000000104861530: hlt    
  0x0000000104861531: hlt    
  0x0000000104861532: hlt    
  0x0000000104861533: hlt    
  0x0000000104861534: hlt    
  0x0000000104861535: hlt    
  0x0000000104861536: hlt    
  0x0000000104861537: hlt    
  0x0000000104861538: hlt    
  0x0000000104861539: hlt    
  0x000000010486153a: hlt    
  0x000000010486153b: hlt    
  0x000000010486153c: hlt    
  0x000000010486153d: hlt    
  0x000000010486153e: hlt    
  0x000000010486153f: hlt    
[Stub Code]
  0x0000000104861540: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010486154a: jmpq   0x000000010486154a  ;   {runtime_call}
[Exception Handler]
  0x000000010486154f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104861554: callq  0x0000000104861559
  0x0000000104861559: subq   $0x5,(%rsp)
  0x000000010486155e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104861563: hlt    
  0x0000000104861564: hlt    
  0x0000000104861565: hlt    
  0x0000000104861566: hlt    
  0x0000000104861567: hlt    
<nmethod compile_id='61' compiler='C2' entry='0x0000000104861460' size='1024' address='0x0000000104861310' relocation_offset='296' insts_offset='336' stub_offset='560' scopes_data_offset='608' scopes_pcs_offset='720' dependencies_offset='976' handler_table_offset='984' nul_chk_table_offset='1008' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='7742' backedge_count='1' iicount='12742' stamp='0.293'/>
<writer thread='7171'/>
[Loaded java.util.concurrent.TimeUnit$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$5 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$6 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.TimeUnit$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BaseRunner from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ForkedRunner from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.IterationResultAcceptor from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19203'/>
Decoding compiled method 0x000000010485e850:
Code:
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.ForkedRunner$SavedIOException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19203'/>
[Entry Point]
[Constants]
  # {method} {0x0000000108e43f38} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = char
  # parm1:    rcx       = char
  #           [sp+0x40]  (sp of caller)
  0x000000010485e9c0: mov    0x8(%rsi),%r10d
  0x000000010485e9c4: shl    $0x3,%r10
  0x000000010485e9c8: cmp    %r10,%rax
  0x000000010485e9cb: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010485e9d1: data32 xchg %ax,%ax
  0x000000010485e9d4: nopl   0x0(%rax,%rax,1)
  0x000000010485e9dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010485e9e0: mov    %eax,-0x14000(%rsp)
  0x000000010485e9e7: push   %rbp
  0x000000010485e9e8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)

  0x000000010485e9ec: mov    %rsi,%r10
  0x000000010485e9ef: mov    %ecx,0x8(%rsp)
  0x000000010485e9f3: mov    %edx,%r11d
  0x000000010485e9f6: cmp    %ecx,%edx
  0x000000010485e9f8: je     0x000000010485ee3d  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x000000010485e9fe: mov    %rsi,%rcx
  0x000000010485ea01: mov    0xc(%rsi),%ebx     ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x000000010485ea04: mov    0xc(%r12,%rbx,8),%r8d  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x000000010485ee55
  0x000000010485ea09: test   %r8d,%r8d
  0x000000010485ea0c: jle    0x000000010485eab1  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010485ea12: test   %r8d,%r8d
  0x000000010485ea15: jbe    0x000000010485edb1
  0x000000010485ea1b: mov    %r8d,%r9d
  0x000000010485ea1e: dec    %r9d
  0x000000010485ea21: cmp    %r8d,%r9d
  0x000000010485ea24: jae    0x000000010485edb1  ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485ea2a: movzwl 0x10(%r12,%rbx,8),%r10d
  0x000000010485ea30: mov    %r8d,%r9d
  0x000000010485ea33: add    $0xfffffffffffffffd,%r9d
  0x000000010485ea37: lea    (%r12,%rbx,8),%rdx
  0x000000010485ea3b: cmp    %r11d,%r10d
  0x000000010485ea3e: je     0x000000010485ed29  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485ea44: mov    $0x1,%ebp
  0x000000010485ea49: cmp    $0x1,%r9d
  0x000000010485ea4d: jle    0x000000010485ee09
  0x000000010485ea53: xor    %esi,%esi
  0x000000010485ea55: data32 data32 nopw 0x0(%rax,%rax,1)
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485ea60: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485ea65: cmp    %r11d,%edi
  0x000000010485ea68: je     0x000000010485eabe  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485ea6a: movslq %ebp,%rax
  0x000000010485ea6d: movzwl 0x12(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485ea72: cmp    %r11d,%edi
  0x000000010485ea75: je     0x000000010485eabc  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485ea77: movzwl 0x14(%rdx,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485ea7d: cmp    %r11d,%r10d
  0x000000010485ea80: je     0x000000010485ed32  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485ea86: movzwl 0x16(%rdx,%rax,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485ea8b: cmp    %r11d,%edi
  0x000000010485ea8e: je     0x000000010485eab9  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485ea90: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485ea93: cmp    %r9d,%ebp
  0x000000010485ea96: jl     0x000000010485ea60  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x000000010485ea98: cmp    %r8d,%ebp
  0x000000010485ea9b: jge    0x000000010485eab1
  0x000000010485ea9d: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)

  0x000000010485eaa0: movzwl 0x10(%rdx,%rbp,2),%edi  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x000000010485eaa5: cmp    %r11d,%edi
  0x000000010485eaa8: je     0x000000010485eabe  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x000000010485eaaa: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485eaac: cmp    %r8d,%ebp
  0x000000010485eaaf: jl     0x000000010485eaa0  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010485eab1: mov    %rcx,%rax
  0x000000010485eab4: jmpq   0x000000010485ed14
  0x000000010485eab9: add    $0x2,%ebp
  0x000000010485eabc: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485eabe: cmp    %r8d,%ebp
  0x000000010485eac1: jge    0x000000010485eab1  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x000000010485eac3: cmp    $0x80000,%r8d
  0x000000010485eaca: ja     0x000000010485ed44
  0x000000010485ead0: mov    0x60(%r15),%r13
  0x000000010485ead4: movslq %r8d,%rcx
  0x000000010485ead7: shl    %rcx
  0x000000010485eada: add    $0x17,%rcx
  0x000000010485eade: mov    %rcx,%r10
  0x000000010485eae1: and    $0xfffffffffffffff8,%r10
  0x000000010485eae5: mov    %r13,%rax
  0x000000010485eae8: add    %r10,%rax
  0x000000010485eaeb: cmp    0x70(%r15),%rax
  0x000000010485eaef: jae    0x000000010485ed44
  0x000000010485eaf5: mov    %rax,0x60(%r15)
  0x000000010485eaf9: prefetchnta 0xc0(%rax)
  0x000000010485eb00: movq   $0x1,0x0(%r13)
  0x000000010485eb08: prefetchnta 0x100(%rax)
  0x000000010485eb0f: movl   $0xf8000041,0x8(%r13)  ;   {metadata({type array char})}
  0x000000010485eb17: mov    %r8d,0xc(%r13)
  0x000000010485eb1b: prefetchnta 0x140(%rax)
  0x000000010485eb22: mov    %r13,%rdi
  0x000000010485eb25: add    $0x10,%rdi
  0x000000010485eb29: prefetchnta 0x180(%rax)
  0x000000010485eb30: shr    $0x3,%rcx
  0x000000010485eb34: add    $0xfffffffffffffffe,%rcx
  0x000000010485eb38: xor    %rax,%rax
  0x000000010485eb3b: shl    $0x3,%rcx
  0x000000010485eb3f: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x000000010485eb42: mov    %r13,0x10(%rsp)
  0x000000010485eb47: test   %ebp,%ebp
  0x000000010485eb49: jle    0x000000010485ebc6  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485eb4f: mov    %ebp,%ecx
  0x000000010485eb51: dec    %ecx
  0x000000010485eb53: cmp    %r8d,%ecx
  0x000000010485eb56: jae    0x000000010485ee10
  0x000000010485eb5c: mov    $0x2,%r10d
  0x000000010485eb62: cmp    %r10d,%ebp
  0x000000010485eb65: mov    %ebp,%edi
  0x000000010485eb67: cmovg  %r10d,%edi         ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485eb6b: movzwl 0x10(%rdx,%rsi,2),%eax
  0x000000010485eb70: mov    0x10(%rsp),%r10
  0x000000010485eb75: mov    %ax,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485eb7b: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485eb7d: cmp    %edi,%esi
  0x000000010485eb7f: jl     0x000000010485eb6b  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485eb81: mov    $0x80000000,%edi
  0x000000010485eb86: cmp    %ecx,%ebp
  0x000000010485eb88: cmovl  %edi,%ecx
  0x000000010485eb8b: cmp    %ecx,%esi
  0x000000010485eb8d: jge    0x000000010485eba9
  0x000000010485eb8f: nop                       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485eb90: vmovd  0x10(%rdx,%rsi,2),%xmm0
  0x000000010485eb96: mov    0x10(%rsp),%r10
  0x000000010485eb9b: vmovd  %xmm0,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485eba2: add    $0x2,%esi          ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485eba5: cmp    %ecx,%esi
  0x000000010485eba7: jl     0x000000010485eb90  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485eba9: cmp    %ebp,%esi
  0x000000010485ebab: jge    0x000000010485ebc6
  0x000000010485ebad: data32 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)

  0x000000010485ebb0: movzwl 0x10(%rdx,%rsi,2),%ecx
  0x000000010485ebb5: mov    0x10(%rsp),%r10
  0x000000010485ebba: mov    %cx,0x10(%r10,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x000000010485ebc0: inc    %esi               ;*iinc
                                                ; - java.lang.String::replace@72 (line 2079)

  0x000000010485ebc2: cmp    %ebp,%esi
  0x000000010485ebc4: jl     0x000000010485ebb0  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x000000010485ebc6: cmp    %r8d,%ebp
  0x000000010485ebc9: jae    0x000000010485edd9
  0x000000010485ebcf: mov    %ebp,%r10d
  0x000000010485ebd2: inc    %r10d              ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485ebd5: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ebda: cmp    %r11d,%ecx
  0x000000010485ebdd: je     0x000000010485ed20
  0x000000010485ebe3: mov    0x10(%rsp),%rbx
  0x000000010485ebe8: mov    %cx,0x10(%rbx,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ebed: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485ebef: cmp    %r10d,%ebp
  0x000000010485ebf2: jl     0x000000010485ebd5  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485ebf4: cmp    %r9d,%ebp
  0x000000010485ebf7: jge    0x000000010485ec7a
  0x000000010485ebfd: jmp    0x000000010485ec2c
  0x000000010485ebff: mov    0x8(%rsp),%ecx
  0x000000010485ec03: mov    0x10(%rsp),%r10
  0x000000010485ec08: mov    %cx,0x14(%r10,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ec0e: movzwl 0x16(%rdx,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ec14: cmp    %r11d,%r10d
  0x000000010485ec17: je     0x000000010485ec66
  0x000000010485ec19: mov    0x10(%rsp),%rcx
  0x000000010485ec1e: mov    %r10w,0x16(%rcx,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ec24: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485ec27: cmp    %r9d,%ebp
  0x000000010485ec2a: jge    0x000000010485ec7a  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485ec2c: movzwl 0x10(%rdx,%rbp,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ec31: cmp    %r11d,%ecx
  0x000000010485ec34: je     0x000000010485ec6d
  0x000000010485ec36: mov    0x10(%rsp),%r10
  0x000000010485ec3b: mov    %cx,0x10(%r10,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ec41: movslq %ebp,%rbx
  0x000000010485ec44: movzwl 0x12(%rdx,%rbx,2),%r10d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ec4a: cmp    %r11d,%r10d
  0x000000010485ec4d: je     0x000000010485ec73
  0x000000010485ec4f: mov    0x10(%rsp),%rcx
  0x000000010485ec54: mov    %r10w,0x12(%rcx,%rbx,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ec5a: movzwl 0x14(%rdx,%rbx,2),%ecx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ec5f: cmp    %r11d,%ecx
  0x000000010485ec62: jne    0x000000010485ec03  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x000000010485ec64: jmp    0x000000010485ebff
  0x000000010485ec66: mov    0x8(%rsp),%r10d
  0x000000010485ec6b: jmp    0x000000010485ec19
  0x000000010485ec6d: mov    0x8(%rsp),%ecx
  0x000000010485ec71: jmp    0x000000010485ec36
  0x000000010485ec73: mov    0x8(%rsp),%r10d
  0x000000010485ec78: jmp    0x000000010485ec4f
  0x000000010485ec7a: cmp    %r8d,%ebp
  0x000000010485ec7d: jge    0x000000010485eca1
  0x000000010485ec7f: nop                       ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)

  0x000000010485ec80: movzwl 0x10(%rdx,%rbp,2),%r9d  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x000000010485ec86: cmp    %r11d,%r9d
  0x000000010485ec89: je     0x000000010485ed3a
  0x000000010485ec8f: mov    0x10(%rsp),%r10
  0x000000010485ec94: mov    %r9w,0x10(%r10,%rbp,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x000000010485ec9a: inc    %ebp               ;*iinc
                                                ; - java.lang.String::replace@108 (line 2085)

  0x000000010485ec9c: cmp    %r8d,%ebp
  0x000000010485ec9f: jl     0x000000010485ec80  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485eca1: mov    0x60(%r15),%rax
  0x000000010485eca5: mov    %rax,%r10
  0x000000010485eca8: add    $0x18,%r10
  0x000000010485ecac: cmp    0x70(%r15),%r10
  0x000000010485ecb0: jae    0x000000010485ed97
  0x000000010485ecb6: mov    %r10,0x60(%r15)
  0x000000010485ecba: prefetchnta 0xc0(%r10)
  0x000000010485ecc2: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485ecc8: movabs $0x0,%r10
  0x000000010485ecd2: lea    (%r10,%r11,8),%r10
  0x000000010485ecd6: mov    0xa8(%r10),%r10
  0x000000010485ecdd: mov    %r10,(%rax)
  0x000000010485ece0: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485ece7: mov    %r12d,0xc(%rax)
  0x000000010485eceb: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010485ecef: mov    0x10(%rsp),%r10
  0x000000010485ecf4: mov    %r10,%r11
  0x000000010485ecf7: shr    $0x3,%r11
  0x000000010485ecfb: mov    %r11d,0xc(%rax)
  0x000000010485ecff: mov    %rax,%r10
  0x000000010485ed02: shr    $0x9,%r10
  0x000000010485ed06: movabs $0x104297000,%r11
  0x000000010485ed10: mov    %r12b,(%r11,%r10,1)  ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)

  0x000000010485ed14: add    $0x30,%rsp
  0x000000010485ed18: pop    %rbp
  0x000000010485ed19: test   %eax,-0x2074d1f(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485ed1f: retq   
  0x000000010485ed20: mov    0x8(%rsp),%ecx
  0x000000010485ed24: jmpq   0x000000010485ebe3
  0x000000010485ed29: xor    %ebp,%ebp
  0x000000010485ed2b: xor    %esi,%esi
  0x000000010485ed2d: jmpq   0x000000010485eabe
  0x000000010485ed32: add    $0x2,%ebp          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x000000010485ed35: jmpq   0x000000010485eabe
  0x000000010485ed3a: mov    0x8(%rsp),%r9d
  0x000000010485ed3f: jmpq   0x000000010485ec8f
  0x000000010485ed44: mov    %esi,0x14(%rsp)
  0x000000010485ed48: mov    %rdx,0x18(%rsp)
  0x000000010485ed4d: mov    %r9d,0x10(%rsp)
  0x000000010485ed52: mov    %r8d,0xc(%rsp)
  0x000000010485ed57: mov    %ebx,0x4(%rsp)
  0x000000010485ed5b: mov    %r11d,(%rsp)
  0x000000010485ed5f: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010485ed69: mov    %r8d,%edx
  0x000000010485ed6c: data32 xchg %ax,%ax
  0x000000010485ed6f: callq  0x0000000104846a60  ; OopMap{[4]=NarrowOop [24]=Oop off=948}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010485ed74: mov    (%rsp),%r11d
  0x000000010485ed78: mov    0x4(%rsp),%ebx
  0x000000010485ed7c: mov    0xc(%rsp),%r8d
  0x000000010485ed81: mov    0x10(%rsp),%r9d
  0x000000010485ed86: mov    0x18(%rsp),%rdx
  0x000000010485ed8b: mov    0x14(%rsp),%esi
  0x000000010485ed8f: mov    %rax,%r13
  0x000000010485ed92: jmpq   0x000000010485eb42  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x000000010485ed97: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010485eda1: mov    0x10(%rsp),%rbp
  0x000000010485eda6: nop
  0x000000010485eda7: callq  0x0000000104846960  ; OopMap{rbp=Oop [16]=Oop off=1004}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x000000010485edac: jmpq   0x000000010485ecef
  0x000000010485edb1: mov    $0xffffff86,%esi
  0x000000010485edb6: mov    %edx,%ebp
  0x000000010485edb8: mov    0x8(%rsp),%r10d
  0x000000010485edbd: mov    %r10d,(%rsp)
  0x000000010485edc1: mov    %rcx,0x8(%rsp)
  0x000000010485edc6: mov    %r8d,0x4(%rsp)
  0x000000010485edcb: mov    %ebx,0x10(%rsp)
  0x000000010485edcf: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=NarrowOop off=1044}
                                                ;*aload
                                                ; - java.lang.String::replace@29 (line 2073)
                                                ;   {runtime_call}
  0x000000010485edd4: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010485edd9: mov    $0xffffff86,%esi
  0x000000010485edde: mov    %r11d,(%rsp)
  0x000000010485ede2: mov    0x8(%rsp),%r11d
  0x000000010485ede7: mov    %r11d,0x4(%rsp)
  0x000000010485edec: rex.W pushq 0x10(%rsp)
  0x000000010485edf1: rex.W popq 0x8(%rsp)
  0x000000010485edf6: mov    %r8d,0x10(%rsp)
  0x000000010485edfb: mov    %ebx,0x14(%rsp)
  0x000000010485edff: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1092}
                                                ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010485ee04: callq  0x0000000103c85e14  ;*aload
                                                ; - java.lang.String::replace@84 (line 2083)
                                                ;   {runtime_call}
  0x000000010485ee09: xor    %esi,%esi
  0x000000010485ee0b: jmpq   0x000000010485ea98
  0x000000010485ee10: mov    $0xffffff86,%esi
  0x000000010485ee15: mov    %r11d,(%rsp)
  0x000000010485ee19: mov    0x8(%rsp),%r10d
  0x000000010485ee1e: mov    %r10d,0x4(%rsp)
  0x000000010485ee23: mov    %r13,0x8(%rsp)
  0x000000010485ee28: mov    %r8d,0x10(%rsp)
  0x000000010485ee2d: mov    %ebx,0x14(%rsp)
  0x000000010485ee31: xchg   %ax,%ax
  0x000000010485ee33: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [20]=NarrowOop off=1144}
                                                ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010485ee38: callq  0x0000000103c85e14  ;*aload
                                                ; - java.lang.String::replace@62 (line 2080)
                                                ;   {runtime_call}
  0x000000010485ee3d: mov    $0xffffff65,%esi
  0x000000010485ee42: mov    %edx,0x4(%rsp)
  0x000000010485ee46: mov    %r10,0x10(%rsp)
  0x000000010485ee4b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=1168}
                                                ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010485ee50: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)
                                                ;   {runtime_call}
  0x000000010485ee55: mov    $0xfffffff6,%esi
  0x000000010485ee5a: nop
  0x000000010485ee5b: callq  0x00000001047dc1a0  ; OopMap{off=1184}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x000000010485ee60: callq  0x0000000103c85e14  ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x000000010485ee65: mov    %rax,%rsi
  0x000000010485ee68: jmp    0x000000010485ee6d
  0x000000010485ee6a: mov    %rax,%rsi          ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x000000010485ee6d: add    $0x30,%rsp
  0x000000010485ee71: pop    %rbp
  0x000000010485ee72: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010485ee77: hlt    
  0x000000010485ee78: hlt    
  0x000000010485ee79: hlt    
  0x000000010485ee7a: hlt    
  0x000000010485ee7b: hlt    
  0x000000010485ee7c: hlt    
  0x000000010485ee7d: hlt    
  0x000000010485ee7e: hlt    
  0x000000010485ee7f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485ee80: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485ee85: callq  0x000000010485ee8a
  0x000000010485ee8a: subq   $0x5,(%rsp)
  0x000000010485ee8f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485ee94: hlt    
  0x000000010485ee95: hlt    
  0x000000010485ee96: hlt    
  0x000000010485ee97: hlt    
<nmethod compile_id='59' compiler='C2' entry='0x000000010485e9c0' size='3272' address='0x000000010485e850' relocation_offset='296' insts_offset='368' stub_offset='1584' scopes_data_offset='1632' scopes_pcs_offset='1952' dependencies_offset='3200' handler_table_offset='3208' nul_chk_table_offset='3256' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5025' iicount='739' decompiles='1' unstable_if_traps='1' stamp='0.300'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.link.InfraFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.InfraFrame$Type from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor11 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.link.ActionPlanFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ActionPlan from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor12 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.ActionType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='62' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='671' backedge_count='5000' iicount='671' stamp='0.320' comment='count' hot_count='671'/>
<task_queued compile_id='63' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='671' backedge_count='5000' iicount='671' stamp='0.320' comment='count' hot_count='671'/>
<task_queued compile_id='64' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='671' backedge_count='5000' iicount='671' stamp='0.320' comment='count' hot_count='671'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor13 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.Action from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.ActionMode from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor14 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor15 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor16 from __JVM_DefineClass__]
<task_queued compile_id='65' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='0.328' comment='count' hot_count='10000'/>
<writer thread='19203'/>
Decoding compiled method 0x00000001048645d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092291d0} &apos;encode&apos; &apos;(Ljava/lang/String;)[B&apos; in &apos;sun/reflect/UTF8&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000104864740: mov    %eax,-0x14000(%rsp)
  0x0000000104864747: push   %rbp
  0x0000000104864748: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.reflect.UTF8::encode@-1 (line 35)

  0x000000010486474c: mov    %rsi,%r13
  0x000000010486474f: mov    0xc(%rsi),%r10d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; implicit exception: dispatches to 0x0000000104864c65
  0x0000000104864753: mov    0xc(%r12,%r10,8),%r9d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; implicit exception: dispatches to 0x0000000104864c75
  0x0000000104864758: mov    %r9d,%esi
  0x000000010486475b: dec    %esi
  0x000000010486475d: mov    %r9d,%ebx
  0x0000000104864760: add    $0xfffffffffffffffd,%ebx
  0x0000000104864763: lea    (%r12,%r10,8),%rbp
  0x0000000104864767: mov    $0x80000000,%r10d
  0x000000010486476d: cmp    %ebx,%r9d
  0x0000000104864770: cmovl  %r10d,%ebx
  0x0000000104864774: mov    $0x1,%r10d
  0x000000010486477a: cmp    %r10d,%r9d
  0x000000010486477d: mov    %r9d,%edx
  0x0000000104864780: cmovg  %r10d,%edx
  0x0000000104864784: test   %r9d,%r9d
  0x0000000104864787: jle    0x0000000104864a55  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486478d: test   %r9d,%r9d
  0x0000000104864790: jbe    0x0000000104864ba9
  0x0000000104864796: cmp    %r9d,%esi
  0x0000000104864799: jae    0x0000000104864ba9
  0x000000010486479f: xor    %r10d,%r10d
  0x00000001048647a2: xor    %r8d,%r8d          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647a5: test   %r10d,%r10d
  0x00000001048647a8: jl     0x0000000104864be9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647ae: cmp    %r9d,%r10d
  0x00000001048647b1: jge    0x0000000104864c39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647b7: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647bd: cmp    $0x1,%ecx
  0x00000001048647c0: jl     0x0000000104864b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647c6: cmp    $0x7f,%ecx
  0x00000001048647c9: jg     0x0000000104864b64  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647cf: inc    %r10d              ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647d2: cmp    %edx,%r10d
  0x00000001048647d5: jl     0x00000001048647a5  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647d7: cmp    %ebx,%r10d
  0x00000001048647da: jge    0x000000010486484c
  0x00000001048647dc: nopl   0x0(%rax)          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647e0: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647e6: cmp    $0x1,%ecx
  0x00000001048647e9: jl     0x0000000104864b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647ef: cmp    $0x7f,%ecx
  0x00000001048647f2: jg     0x0000000104864b64  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x00000001048647f8: movslq %r10d,%r11
  0x00000001048647fb: movzwl 0x12(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864801: cmp    $0x1,%ecx
  0x0000000104864804: jl     0x0000000104864af1  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486480a: cmp    $0x7f,%ecx
  0x000000010486480d: jg     0x0000000104864b55  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864813: movzwl 0x14(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864819: cmp    $0x1,%ecx
  0x000000010486481c: jl     0x0000000104864af6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864822: cmp    $0x7f,%ecx
  0x0000000104864825: jg     0x0000000104864b5a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486482b: movzwl 0x16(%rbp,%r11,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864831: cmp    $0x1,%ecx
  0x0000000104864834: jl     0x0000000104864afc  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486483a: cmp    $0x7f,%ecx
  0x000000010486483d: jg     0x0000000104864b60  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864843: add    $0x4,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864847: cmp    %ebx,%r10d
  0x000000010486484a: jl     0x00000001048647e0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486484c: cmp    %r9d,%r10d
  0x000000010486484f: jge    0x0000000104864886
  0x0000000104864851: data32 xchg %ax,%ax       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864854: test   %r10d,%r10d
  0x0000000104864857: jl     0x0000000104864be9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486485d: cmp    %r9d,%r10d
  0x0000000104864860: jge    0x0000000104864c39  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864866: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486486c: cmp    $0x1,%ecx
  0x000000010486486f: jl     0x0000000104864b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864875: cmp    $0x7f,%ecx
  0x0000000104864878: jg     0x0000000104864b64  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x000000010486487e: inc    %r10d              ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864881: cmp    %r9d,%r10d
  0x0000000104864884: jl     0x0000000104864854  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864886: cmp    $0x100000,%r10d
  0x000000010486488d: ja     0x0000000104864b85
  0x0000000104864893: movslq %r10d,%rcx
  0x0000000104864896: cmp    $0x100000,%r10d
  0x000000010486489d: ja     0x0000000104864a60
  0x00000001048648a3: add    $0x17,%rcx
  0x00000001048648a7: mov    %rcx,%rdi
  0x00000001048648aa: and    $0xfffffffffffffff8,%rdi
  0x00000001048648ae: mov    0x60(%r15),%r11
  0x00000001048648b2: mov    %r11,%rax
  0x00000001048648b5: add    %rdi,%rax
  0x00000001048648b8: cmp    0x70(%r15),%rax
  0x00000001048648bc: jae    0x0000000104864a60
  0x00000001048648c2: mov    %rax,0x60(%r15)
  0x00000001048648c6: prefetchnta 0xc0(%rax)
  0x00000001048648cd: movq   $0x1,(%r11)
  0x00000001048648d4: prefetchnta 0x100(%rax)
  0x00000001048648db: movl   $0xf80000f5,0x8(%r11)  ;   {metadata({type array byte})}
  0x00000001048648e3: mov    %r10d,0xc(%r11)
  0x00000001048648e7: prefetchnta 0x140(%rax)
  0x00000001048648ee: mov    %r11,%rdi
  0x00000001048648f1: add    $0x10,%rdi
  0x00000001048648f5: prefetchnta 0x180(%rax)
  0x00000001048648fc: shr    $0x3,%rcx
  0x0000000104864900: add    $0xfffffffffffffffe,%rcx
  0x0000000104864904: xor    %rax,%rax
  0x0000000104864907: shl    $0x3,%rcx
  0x000000010486490b: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)

  0x000000010486490e: test   %r9d,%r9d
  0x0000000104864911: jle    0x0000000104864a46  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x0000000104864917: test   %r9d,%r9d
  0x000000010486491a: jbe    0x0000000104864b8d
  0x0000000104864920: cmp    %r9d,%esi
  0x0000000104864923: jae    0x0000000104864b8d
  0x0000000104864929: test   %r10d,%r10d
  0x000000010486492c: jbe    0x0000000104864b8d
  0x0000000104864932: cmp    %r10d,%esi
  0x0000000104864935: jae    0x0000000104864b8d  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x000000010486493b: test   %r8d,%r8d
  0x000000010486493e: jl     0x0000000104864bc1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864944: cmp    %r9d,%r8d
  0x0000000104864947: jge    0x0000000104864c11  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x000000010486494d: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x0000000104864950: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864956: cmp    $0x1,%ecx
  0x0000000104864959: jl     0x0000000104864aca  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x000000010486495f: cmp    $0x7f,%ecx
  0x0000000104864962: jg     0x0000000104864b30  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x0000000104864968: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x000000010486496d: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x0000000104864970: cmp    %edx,%r8d
  0x0000000104864973: jl     0x000000010486493b  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x0000000104864975: cmp    %ebx,%r8d
  0x0000000104864978: jge    0x0000000104864a07
  0x000000010486497e: xchg   %ax,%ax            ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x0000000104864980: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x0000000104864983: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864989: cmp    $0x1,%ecx
  0x000000010486498c: jl     0x0000000104864aca  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x0000000104864992: cmp    $0x7f,%ecx
  0x0000000104864995: jg     0x0000000104864b30  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x000000010486499b: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x00000001048649a0: movslq %r8d,%r10
  0x00000001048649a3: movzwl 0x12(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x00000001048649a9: cmp    $0x1,%ecx
  0x00000001048649ac: jl     0x0000000104864abb  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x00000001048649b2: cmp    $0x7f,%ecx
  0x00000001048649b5: jg     0x0000000104864b21  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x00000001048649bb: mov    %cl,0x11(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x00000001048649c0: movzwl 0x14(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x00000001048649c6: cmp    $0x1,%ecx
  0x00000001048649c9: jl     0x0000000104864ac0  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x00000001048649cf: cmp    $0x7f,%ecx
  0x00000001048649d2: jg     0x0000000104864b26  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x00000001048649d8: mov    %cl,0x12(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x00000001048649dd: movzwl 0x16(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x00000001048649e3: cmp    $0x1,%ecx
  0x00000001048649e6: jl     0x0000000104864ac6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x00000001048649ec: cmp    $0x7f,%ecx
  0x00000001048649ef: jg     0x0000000104864b2c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x00000001048649f5: mov    %cl,0x13(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x00000001048649fa: add    $0x4,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x00000001048649fe: cmp    %ebx,%r8d
  0x0000000104864a01: jl     0x0000000104864980  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)

  0x0000000104864a07: cmp    %r9d,%r8d
  0x0000000104864a0a: jge    0x0000000104864a46  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)

  0x0000000104864a0c: test   %r8d,%r8d
  0x0000000104864a0f: jl     0x0000000104864bc1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864a15: cmp    %r9d,%r8d
  0x0000000104864a18: jge    0x0000000104864c11  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864a1e: movslq %r8d,%r10          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x0000000104864a21: movzwl 0x10(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)

  0x0000000104864a27: cmp    $0x1,%ecx
  0x0000000104864a2a: jl     0x0000000104864aca  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x0000000104864a30: cmp    $0x7f,%ecx
  0x0000000104864a33: jg     0x0000000104864b30  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x0000000104864a39: mov    %cl,0x10(%r11,%r10,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)

  0x0000000104864a3e: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)

  0x0000000104864a41: cmp    %r9d,%r8d
  0x0000000104864a44: jl     0x0000000104864a0c  ;*synchronization entry
                                                ; - sun.reflect.UTF8::encode@-1 (line 35)

  0x0000000104864a46: mov    %r11,%rax
  0x0000000104864a49: add    $0x40,%rsp
  0x0000000104864a4d: pop    %rbp
  0x0000000104864a4e: test   %eax,-0x207aa54(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104864a54: retq   
  0x0000000104864a55: xor    %r10d,%r10d
  0x0000000104864a58: xor    %r8d,%r8d
  0x0000000104864a5b: jmpq   0x0000000104864886
  0x0000000104864a60: mov    %edx,0x1c(%rsp)
  0x0000000104864a64: mov    %r8d,0x18(%rsp)
  0x0000000104864a69: mov    %ebx,0x14(%rsp)
  0x0000000104864a6d: mov    %esi,0x10(%rsp)
  0x0000000104864a71: mov    %r9d,0xc(%rsp)
  0x0000000104864a76: mov    %r10d,0x8(%rsp)
  0x0000000104864a7b: mov    %r13,(%rsp)
  0x0000000104864a7f: movabs $0x7c00007a8,%rsi  ;   {metadata({type array byte})}
  0x0000000104864a89: mov    %r10d,%edx
  0x0000000104864a8c: data32 xchg %ax,%ax
  0x0000000104864a8f: callq  0x0000000104846a60  ; OopMap{rbp=Oop [0]=Oop off=852}
                                                ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ;   {runtime_call}
  0x0000000104864a94: mov    (%rsp),%r13
  0x0000000104864a98: mov    0x8(%rsp),%r10d
  0x0000000104864a9d: mov    %rax,%r11
  0x0000000104864aa0: mov    0xc(%rsp),%r9d
  0x0000000104864aa5: mov    0x10(%rsp),%esi
  0x0000000104864aa9: mov    0x14(%rsp),%ebx
  0x0000000104864aad: mov    0x18(%rsp),%r8d
  0x0000000104864ab2: mov    0x1c(%rsp),%edx
  0x0000000104864ab6: jmpq   0x000000010486490e
  0x0000000104864abb: inc    %r8d
  0x0000000104864abe: jmp    0x0000000104864aca
  0x0000000104864ac0: add    $0x2,%r8d
  0x0000000104864ac4: jmp    0x0000000104864aca
  0x0000000104864ac6: add    $0x3,%r8d          ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)

  0x0000000104864aca: mov    $0xffffff65,%esi
  0x0000000104864acf: mov    %r9d,%ebp
  0x0000000104864ad2: mov    %r11,(%rsp)
  0x0000000104864ad6: mov    %r8d,0xc(%rsp)
  0x0000000104864adb: mov    %ecx,0x14(%rsp)
  0x0000000104864adf: mov    %r13,0x18(%rsp)
  0x0000000104864ae4: data32 xchg %ax,%ax
  0x0000000104864ae7: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop off=940}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ;   {runtime_call}
  0x0000000104864aec: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ;   {runtime_call}
  0x0000000104864af1: inc    %r10d
  0x0000000104864af4: jmp    0x0000000104864b00
  0x0000000104864af6: add    $0x2,%r10d
  0x0000000104864afa: jmp    0x0000000104864b00
  0x0000000104864afc: add    $0x3,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864b00: mov    $0xffffff65,%esi
  0x0000000104864b05: mov    %r9d,(%rsp)
  0x0000000104864b09: mov    %r10d,0x8(%rsp)
  0x0000000104864b0e: mov    %ecx,0x10(%rsp)
  0x0000000104864b12: mov    %r13,0x20(%rsp)
  0x0000000104864b17: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop off=988}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864b1c: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864b21: inc    %r8d
  0x0000000104864b24: jmp    0x0000000104864b30
  0x0000000104864b26: add    $0x2,%r8d
  0x0000000104864b2a: jmp    0x0000000104864b30
  0x0000000104864b2c: add    $0x3,%r8d          ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)

  0x0000000104864b30: mov    $0xffffff65,%esi
  0x0000000104864b35: mov    %r9d,%ebp
  0x0000000104864b38: mov    %r11,(%rsp)
  0x0000000104864b3c: mov    %r8d,0xc(%rsp)
  0x0000000104864b41: mov    %ecx,0x14(%rsp)
  0x0000000104864b45: mov    %r13,0x18(%rsp)
  0x0000000104864b4a: nop
  0x0000000104864b4b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop off=1040}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ;   {runtime_call}
  0x0000000104864b50: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ;   {runtime_call}
  0x0000000104864b55: inc    %r10d
  0x0000000104864b58: jmp    0x0000000104864b64
  0x0000000104864b5a: add    $0x2,%r10d
  0x0000000104864b5e: jmp    0x0000000104864b64
  0x0000000104864b60: add    $0x3,%r10d         ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)

  0x0000000104864b64: mov    $0xffffff65,%esi
  0x0000000104864b69: mov    %r9d,(%rsp)
  0x0000000104864b6d: mov    %r10d,0x8(%rsp)
  0x0000000104864b72: mov    %ecx,0x10(%rsp)
  0x0000000104864b76: mov    %r13,0x20(%rsp)
  0x0000000104864b7b: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop off=1088}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864b80: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864b85: movslq %r10d,%rcx         ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)

  0x0000000104864b88: jmpq   0x0000000104864896
  0x0000000104864b8d: mov    $0xffffff86,%esi
  0x0000000104864b92: mov    %r9d,%ebp
  0x0000000104864b95: mov    %r11,(%rsp)
  0x0000000104864b99: mov    %r13,0x8(%rsp)
  0x0000000104864b9e: nop
  0x0000000104864b9f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop off=1124}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ;   {runtime_call}
  0x0000000104864ba4: callq  0x0000000103c85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ;   {runtime_call}
  0x0000000104864ba9: mov    $0xffffff86,%esi
  0x0000000104864bae: mov    %r9d,(%rsp)
  0x0000000104864bb2: mov    %r13,0x10(%rsp)
  0x0000000104864bb7: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=1148}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864bbc: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864bc1: mov    $0xffffff65,%esi
  0x0000000104864bc6: mov    %r9d,%ebp
  0x0000000104864bc9: mov    %r11,(%rsp)
  0x0000000104864bcd: mov    %r8d,0xc(%rsp)
  0x0000000104864bd2: mov    %r8d,0x10(%rsp)
  0x0000000104864bd7: mov    %r13,0x20(%rsp)
  0x0000000104864bdc: data32 xchg %ax,%ax
  0x0000000104864bdf: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [32]=Oop off=1188}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864be4: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864be9: mov    $0xffffff65,%esi
  0x0000000104864bee: mov    %r9d,(%rsp)
  0x0000000104864bf2: mov    %r10d,0x8(%rsp)
  0x0000000104864bf7: mov    %r10d,0xc(%rsp)
  0x0000000104864bfc: mov    %r13,0x20(%rsp)
  0x0000000104864c01: mov    %r13,0x28(%rsp)
  0x0000000104864c06: nop
  0x0000000104864c07: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop [40]=Oop off=1228}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864c0c: callq  0x0000000103c85e14  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864c11: mov    $0xffffff65,%esi
  0x0000000104864c16: mov    %r11,(%rsp)
  0x0000000104864c1a: mov    %r8d,0xc(%rsp)
  0x0000000104864c1f: mov    %r8d,0x10(%rsp)
  0x0000000104864c24: mov    %r9d,0x18(%rsp)
  0x0000000104864c29: mov    %r13,0x28(%rsp)
  0x0000000104864c2e: nop
  0x0000000104864c2f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [40]=Oop off=1268}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864c34: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ;   {runtime_call}
  0x0000000104864c39: mov    $0xffffff65,%esi
  0x0000000104864c3e: mov    %r9d,(%rsp)
  0x0000000104864c42: mov    %r10d,0x8(%rsp)
  0x0000000104864c47: mov    %r10d,0xc(%rsp)
  0x0000000104864c4c: mov    %r9d,0x14(%rsp)
  0x0000000104864c51: mov    %r13,0x20(%rsp)
  0x0000000104864c56: mov    %r13,0x28(%rsp)
  0x0000000104864c5b: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop [40]=Oop off=1312}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864c60: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ;   {runtime_call}
  0x0000000104864c65: mov    $0xfffffff6,%esi
  0x0000000104864c6a: nop
  0x0000000104864c6b: callq  0x00000001047dc1a0  ; OopMap{off=1328}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x0000000104864c70: callq  0x0000000103c85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x0000000104864c75: mov    $0xfffffff6,%esi
  0x0000000104864c7a: mov    %r13,%rbp
  0x0000000104864c7d: xchg   %ax,%ax
  0x0000000104864c7f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1348}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ;   {runtime_call}
  0x0000000104864c84: callq  0x0000000103c85e14  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ;   {runtime_call}
  0x0000000104864c89: mov    %rax,%rsi
  0x0000000104864c8c: add    $0x40,%rsp
  0x0000000104864c90: pop    %rbp
  0x0000000104864c91: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104864c96: hlt    
  0x0000000104864c97: hlt    
  0x0000000104864c98: hlt    
  0x0000000104864c99: hlt    
  0x0000000104864c9a: hlt    
  0x0000000104864c9b: hlt    
  0x0000000104864c9c: hlt    
  0x0000000104864c9d: hlt    
  0x0000000104864c9e: hlt    
  0x0000000104864c9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104864ca0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104864ca5: callq  0x0000000104864caa
  0x0000000104864caa: subq   $0x5,(%rsp)
  0x0000000104864caf: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104864cb4: hlt    
  0x0000000104864cb5: hlt    
  0x0000000104864cb6: hlt    
  0x0000000104864cb7: hlt    
<nmethod compile_id='63' compiler='C2' entry='0x0000000104864740' size='4160' address='0x00000001048645d0' relocation_offset='296' insts_offset='368' stub_offset='1744' scopes_data_offset='1808' scopes_pcs_offset='2360' dependencies_offset='4104' handler_table_offset='4112' nul_chk_table_offset='4136' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='864' backedge_count='7529' iicount='864' stamp='0.335'/>
<writer thread='7171'/>
<task_queued compile_id='66' compile_kind='osr' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='15' backedge_count='14637' iicount='15' osr_bci='43' stamp='0.335' comment='backedge_count' hot_count='14637'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104869350:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000109225548} &apos;emitConstantPoolUTF8&apos; &apos;(Ljava/lang/String;)V&apos; in &apos;sun/reflect/ClassFileAssembler&apos;
  # this:     rsi:rsi   = &apos;sun/reflect/ClassFileAssembler&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000104869520: mov    0x8(%rsi),%r10d
  0x0000000104869524: shl    $0x3,%r10
  0x0000000104869528: cmp    %r10,%rax
  0x000000010486952b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104869531: data32 xchg %ax,%ax
  0x0000000104869534: nopl   0x0(%rax,%rax,1)
  0x000000010486953c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104869540: mov    %eax,-0x14000(%rsp)
  0x0000000104869547: push   %rbp
  0x0000000104869548: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x000000010486954c: mov    %rsi,(%rsp)
  0x0000000104869550: mov    %rdx,%r13
  0x0000000104869553: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ; implicit exception: dispatches to 0x0000000104869d21
  0x0000000104869557: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ; implicit exception: dispatches to 0x0000000104869d35
  0x000000010486955c: mov    %r11d,%r9d
  0x000000010486955f: dec    %r9d
  0x0000000104869562: mov    %r11d,%edx
  0x0000000104869565: add    $0xfffffffffffffffd,%edx
  0x0000000104869568: lea    (%r12,%r8,8),%rbp
  0x000000010486956c: mov    $0x1,%r8d
  0x0000000104869572: cmp    %r8d,%r11d
  0x0000000104869575: mov    %r11d,%esi
  0x0000000104869578: cmovg  %r8d,%esi
  0x000000010486957c: mov    $0x80000000,%r8d
  0x0000000104869582: cmp    %edx,%r11d
  0x0000000104869585: cmovl  %r8d,%edx
  0x0000000104869589: test   %r11d,%r11d
  0x000000010486958c: jle    0x000000010486998f  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869592: test   %r11d,%r11d
  0x0000000104869595: jbe    0x0000000104869bdd
  0x000000010486959b: cmp    %r11d,%r9d
  0x000000010486959e: jae    0x0000000104869bdd
  0x00000001048695a4: xor    %ebx,%ebx
  0x00000001048695a6: xor    %r8d,%r8d          ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695a9: test   %r8d,%r8d
  0x00000001048695ac: jl     0x0000000104869c21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695b2: cmp    %r11d,%r8d
  0x00000001048695b5: jge    0x0000000104869c79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695bb: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695c1: cmp    $0x1,%ecx
  0x00000001048695c4: jl     0x0000000104869ac8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695ca: cmp    $0x7f,%ecx
  0x00000001048695cd: jg     0x0000000104869b3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor17 from __JVM_DefineClass__]
<writer thread='19715'/>

  0x00000001048695d3: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695d6: cmp    %esi,%r8d
  0x00000001048695d9: jl     0x00000001048695a9  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695db: cmp    %edx,%r8d
  0x00000001048695de: jge    0x000000010486964c  ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695e0: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695e6: cmp    $0x1,%ecx
  0x00000001048695e9: jl     0x0000000104869ac8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695ef: cmp    $0x7f,%ecx
  0x00000001048695f2: jg     0x0000000104869b3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048695f8: movslq %r8d,%r10
  0x00000001048695fb: movzwl 0x12(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869601: cmp    $0x1,%ecx
  0x0000000104869604: jl     0x0000000104869ab9  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486960a: cmp    $0x7f,%ecx
  0x000000010486960d: jg     0x0000000104869b2d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869613: movzwl 0x14(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869619: cmp    $0x1,%ecx
  0x000000010486961c: jl     0x0000000104869abe  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869622: cmp    $0x7f,%ecx
  0x0000000104869625: jg     0x0000000104869b32  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486962b: movzwl 0x16(%rbp,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869631: cmp    $0x1,%ecx
  0x0000000104869634: jl     0x0000000104869ac4  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486963a: cmp    $0x7f,%ecx
  0x000000010486963d: jg     0x0000000104869b38  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869643: add    $0x4,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869647: cmp    %edx,%r8d
  0x000000010486964a: jl     0x00000001048695e0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486964c: cmp    %r11d,%r8d
  0x000000010486964f: jge    0x0000000104869686
  0x0000000104869651: data32 xchg %ax,%ax       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869654: test   %r8d,%r8d
  0x0000000104869657: jl     0x0000000104869c21  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486965d: cmp    %r11d,%r8d
  0x0000000104869660: jge    0x0000000104869c79  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869666: movzwl 0x10(%rbp,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486966c: cmp    $0x1,%ecx
  0x000000010486966f: jl     0x0000000104869ac8  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869675: cmp    $0x7f,%ecx
  0x0000000104869678: jg     0x0000000104869b3c  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486967e: inc    %r8d               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869681: cmp    %r11d,%r8d
  0x0000000104869684: jl     0x0000000104869654  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869686: cmp    $0x100000,%r8d
  0x000000010486968d: ja     0x0000000104869ba1
  0x0000000104869693: movslq %r8d,%rcx
  0x0000000104869696: cmp    $0x100000,%r8d
  0x000000010486969d: ja     0x0000000104869a23
  0x00000001048696a3: add    $0x17,%rcx
  0x00000001048696a7: mov    %rcx,%rdi
  0x00000001048696aa: and    $0xfffffffffffffff8,%rdi
  0x00000001048696ae: mov    0x60(%r15),%r10
  0x00000001048696b2: mov    %r10,%rax
  0x00000001048696b5: add    %rdi,%rax
  0x00000001048696b8: cmp    0x70(%r15),%rax
  0x00000001048696bc: jae    0x0000000104869a23
  0x00000001048696c2: mov    %rax,0x60(%r15)
  0x00000001048696c6: prefetchnta 0xc0(%rax)
  0x00000001048696cd: movq   $0x1,(%r10)
  0x00000001048696d4: prefetchnta 0x100(%rax)
  0x00000001048696db: movl   $0xf80000f5,0x8(%r10)  ;   {metadata({type array byte})}
  0x00000001048696e3: mov    %r8d,0xc(%r10)
  0x00000001048696e7: prefetchnta 0x140(%rax)
  0x00000001048696ee: mov    %r10,%rdi
  0x00000001048696f1: add    $0x10,%rdi
  0x00000001048696f5: prefetchnta 0x180(%rax)
  0x00000001048696fc: shr    $0x3,%rcx
  0x0000000104869700: add    $0xfffffffffffffffe,%rcx
  0x0000000104869704: xor    %rax,%rax
  0x0000000104869707: shl    $0x3,%rcx
  0x000000010486970b: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486970e: test   %r11d,%r11d
  0x0000000104869711: jle    0x0000000104869841  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869717: test   %r11d,%r11d
  0x000000010486971a: jbe    0x0000000104869bfd
  0x0000000104869720: cmp    %r11d,%r9d
  0x0000000104869723: jae    0x0000000104869bfd
  0x0000000104869729: test   %r8d,%r8d
  0x000000010486972c: jbe    0x0000000104869bfd
  0x0000000104869732: cmp    %r8d,%r9d
  0x0000000104869735: jae    0x0000000104869bfd
  0x000000010486973b: xor    %r9d,%r9d          ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486973e: test   %r9d,%r9d
  0x0000000104869741: jl     0x0000000104869c4d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869747: cmp    %r11d,%r9d
  0x000000010486974a: jge    0x0000000104869cad  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869750: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869753: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869758: cmp    $0x1,%ecx
  0x000000010486975b: jl     0x0000000104869b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869761: cmp    $0x7f,%ecx
  0x0000000104869764: jg     0x0000000104869b74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486976a: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486976f: inc    %r9d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869772: cmp    %esi,%r9d
  0x0000000104869775: jl     0x000000010486973e  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869777: cmp    %edx,%r9d
  0x000000010486977a: jge    0x0000000104869803  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869780: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869783: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869788: cmp    $0x1,%ecx
  0x000000010486978b: jl     0x0000000104869b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869791: cmp    $0x7f,%ecx
  0x0000000104869794: jg     0x0000000104869b74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486979a: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486979f: movslq %r9d,%rdi
  0x00000001048697a2: movzwl 0x12(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697a7: cmp    $0x1,%ecx
  0x00000001048697aa: jl     0x0000000104869af1  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697b0: cmp    $0x7f,%ecx
  0x00000001048697b3: jg     0x0000000104869b65  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697b9: mov    %cl,0x11(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697be: movzwl 0x14(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697c3: cmp    $0x1,%ecx
  0x00000001048697c6: jl     0x0000000104869af6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697cc: cmp    $0x7f,%ecx
  0x00000001048697cf: jg     0x0000000104869b6a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697d5: mov    %cl,0x12(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697da: movzwl 0x16(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697df: cmp    $0x1,%ecx
  0x00000001048697e2: jl     0x0000000104869afc  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697e8: cmp    $0x7f,%ecx
  0x00000001048697eb: jg     0x0000000104869b70  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697f1: mov    %cl,0x13(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697f6: add    $0x4,%r9d          ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x00000001048697fa: cmp    %edx,%r9d
  0x00000001048697fd: jl     0x0000000104869780  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869803: cmp    %r11d,%r9d
  0x0000000104869806: jge    0x0000000104869841  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869808: test   %r9d,%r9d
  0x000000010486980b: jl     0x0000000104869c4d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869811: cmp    %r11d,%r9d
  0x0000000104869814: jge    0x0000000104869cad  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486981a: movslq %r9d,%rdi          ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486981d: movzwl 0x10(%rbp,%rdi,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869822: cmp    $0x1,%ecx
  0x0000000104869825: jl     0x0000000104869b00  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486982b: cmp    $0x7f,%ecx
  0x000000010486982e: jg     0x0000000104869b74  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869834: mov    %cl,0x10(%r10,%rdi,1)  ;*bastore
                                                ; - sun.reflect.UTF8::encode@55 (line 42)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869839: inc    %r9d               ;*iinc
                                                ; - sun.reflect.UTF8::encode@166 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x000000010486983c: cmp    %r11d,%r9d
  0x000000010486983f: jl     0x0000000104869808  ;*if_icmpge
                                                ; - sun.reflect.UTF8::encode@20 (line 39)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869841: mov    (%rsp),%rdx
  0x0000000104869845: mov    0x1c(%rdx),%ebp    ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869848: mov    0x8(%r12,%rbp,8),%r11d  ; implicit exception: dispatches to 0x0000000104869d4d
  0x000000010486984d: cmp    $0xf80129ee,%r11d  ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x0000000104869854: jne    0x0000000104869bc9
  0x000000010486985a: lea    (%r12,%rbp,8),%rcx  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010486985e: mov    0x10(%rcx),%r9d    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869862: mov    0xc(%rcx),%r11d
  0x0000000104869866: inc    %r11d              ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869869: mov    %r11d,0xc(%rcx)    ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010486986d: mov    0xc(%r12,%r9,8),%edi  ; implicit exception: dispatches to 0x0000000104869d5d
  0x0000000104869872: cmp    %edi,%r11d
  0x0000000104869875: jge    0x00000001048699d8  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x000000010486987b: mov    0xc(%r12,%r9,8),%edi
  0x0000000104869880: cmp    %edi,%r11d
  0x0000000104869883: jae    0x0000000104869ba9  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869889: mov    %r10,0x18(%rsp)
  0x000000010486988e: mov    %ebx,0x10(%rsp)
  0x0000000104869892: mov    %rdx,(%rsp)
  0x0000000104869896: movslq %r11d,%r10
  0x0000000104869899: mov    %r8d,0x8(%rsp)
  0x000000010486989e: movswl %r8w,%ebp          ;*i2s  ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@13 (line 105)

  0x00000001048698a2: lea    (%r12,%r9,8),%r11
  0x00000001048698a6: movb   $0x1,0x10(%r11,%r10,1)  ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitShort@-1 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x00000001048698ac: mov    %ebp,%r10d
  0x00000001048698af: shr    $0x8,%r10d
  0x00000001048698b3: movsbl %r10b,%edx         ;*i2b  ; - sun.reflect.ClassFileAssembler::emitShort@9 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x00000001048698b7: mov    (%rsp),%rsi
  0x00000001048698bb: callq  0x000000010481d020  ; OopMap{[0]=Oop [24]=Oop off=928}
                                                ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@10 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)
                                                ;   {optimized virtual_call}
  0x00000001048698c0: movsbl 0x8(%rsp),%edx     ;*i2b  ; - sun.reflect.ClassFileAssembler::emitShort@19 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x00000001048698c5: mov    (%rsp),%rsi
  0x00000001048698c9: xchg   %ax,%ax
  0x00000001048698cb: callq  0x000000010481d020  ; OopMap{[0]=Oop [24]=Oop off=944}
                                                ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@20 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)
                                                ;   {optimized virtual_call}
  0x00000001048698d0: mov    0x8(%rsp),%ecx
  0x00000001048698d4: test   %ecx,%ecx
  0x00000001048698d6: jle    0x0000000104869999  ;*if_icmpge
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@22 (line 106)

  0x00000001048698dc: test   %ecx,%ecx
  0x00000001048698de: jbe    0x00000001048698eb
  0x00000001048698e0: mov    %ecx,%r8d
  0x00000001048698e3: dec    %r8d
  0x00000001048698e6: cmp    %ecx,%r8d
  0x00000001048698e9: jb     0x000000010486990e
  0x00000001048698eb: mov    $0xffffff86,%esi
  0x00000001048698f0: mov    (%rsp),%rbp
  0x00000001048698f4: data32 xchg %ax,%ax
  0x00000001048698f7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=Oop off=988}
                                                ;*aload_0
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@25 (line 107)
                                                ;   {runtime_call}
  0x00000001048698fc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869901: mov    %r8,(%rsp)
  0x0000000104869905: mov    %ebx,0x10(%rsp)
  0x0000000104869909: mov    %r9,0x18(%rsp)     ;*aload_0
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@25 (line 107)

  0x000000010486990e: mov    (%rsp),%r8
  0x0000000104869912: mov    0x1c(%r8),%r11d    ;*getfield vec
                                                ; - sun.reflect.ClassFileAssembler::emitByte@1 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x0000000104869916: movslq 0x10(%rsp),%r10
  0x000000010486991b: mov    0x18(%rsp),%r9
  0x0000000104869920: movsbl 0x10(%r9,%r10,1),%ebp  ;*baload
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@28 (line 107)

  0x0000000104869926: mov    0x8(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x0000000104869d01
  0x000000010486992b: cmp    $0xf80129ee,%r10d  ;   {metadata(&apos;sun/reflect/ByteVectorImpl&apos;)}
  0x0000000104869932: jne    0x0000000104869aa5
  0x0000000104869938: shl    $0x3,%r11          ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010486993c: mov    0xc(%r11),%edx
  0x0000000104869940: mov    0x10(%r11),%r10d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@12 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x0000000104869944: inc    %edx               ;*iadd
                                                ; - sun.reflect.ByteVectorImpl::add@6 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x0000000104869946: mov    %edx,0xc(%r11)     ;*putfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@8 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010486994a: mov    0xc(%r12,%r10,8),%ebx  ; implicit exception: dispatches to 0x0000000104869d11
  0x000000010486994f: cmp    %ebx,%edx
  0x0000000104869951: jge    0x000000010486999f  ;*aload_0
                                                ; - sun.reflect.ByteVectorImpl::add@27 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x0000000104869953: mov    0xc(%r12,%r10,8),%ebx
  0x0000000104869958: cmp    %ebx,%edx
  0x000000010486995a: jae    0x0000000104869a83
  0x0000000104869960: movslq %edx,%r11
  0x0000000104869963: shl    $0x3,%r10
  0x0000000104869967: mov    %bpl,0x10(%r10,%r11,1)  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x000000010486996c: mov    0x10(%rsp),%ebx
  0x0000000104869970: inc    %ebx               ;*iinc
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@32 (line 106)

  0x0000000104869972: cmp    %ecx,%ebx
  0x0000000104869974: jl     0x0000000104869901  ;*if_icmpge
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@22 (line 106)

  0x0000000104869976: movswl 0x18(%r8),%r11d
  0x000000010486997b: inc    %r11d
  0x000000010486997e: mov    %r11w,0x18(%r8)    ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x0000000104869983: add    $0x50,%rsp
  0x0000000104869987: pop    %rbp
  0x0000000104869988: test   %eax,-0x207f98e(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486998e: retq   
  0x000000010486998f: xor    %ebx,%ebx
  0x0000000104869991: xor    %r8d,%r8d
  0x0000000104869994: jmpq   0x0000000104869686
  0x0000000104869999: mov    (%rsp),%r8
  0x000000010486999d: jmp    0x0000000104869976
  0x000000010486999f: mov    %r11,0x20(%rsp)
  0x00000001048699a4: mov    %ecx,0x8(%rsp)     ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x00000001048699a8: mov    %r11,%rsi
  0x00000001048699ab: callq  0x000000010481d020  ; OopMap{[0]=Oop [24]=Oop [32]=Oop off=1168}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {optimized virtual_call}
  0x00000001048699b0: mov    0x20(%rsp),%r10
  0x00000001048699b5: mov    0xc(%r10),%edx     ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x00000001048699b9: mov    0x10(%r10),%r10d   ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x00000001048699bd: test   %r10d,%r10d
  0x00000001048699c0: je     0x0000000104869cd9  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x00000001048699c6: mov    (%rsp),%r8
  0x00000001048699ca: mov    0x8(%rsp),%ecx
  0x00000001048699ce: mov    0x18(%rsp),%r9
  0x00000001048699d3: jmpq   0x0000000104869953
  0x00000001048699d8: mov    %rcx,0x10(%rsp)
  0x00000001048699dd: mov    %r10,0x8(%rsp)
  0x00000001048699e2: mov    %r8d,0x4(%rsp)
  0x00000001048699e7: mov    %ebx,(%rsp)
  0x00000001048699ea: mov    %rdx,%rbp          ;*synchronization entry
                                                ; - sun.reflect.ByteVectorImpl::add@-1 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x00000001048699ed: mov    %rcx,%rsi
  0x00000001048699f0: mov    %r11d,%edx
  0x00000001048699f3: callq  0x000000010481d020  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=1240}
                                                ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {optimized virtual_call}
  0x00000001048699f8: mov    0x10(%rsp),%r10
  0x00000001048699fd: mov    0xc(%r10),%r11d    ;*getfield pos
                                                ; - sun.reflect.ByteVectorImpl::add@32 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869a01: mov    0x10(%r10),%r9d    ;*getfield data
                                                ; - sun.reflect.ByteVectorImpl::add@28 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869a05: test   %r9d,%r9d
  0x0000000104869a08: je     0x0000000104869ced  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869a0e: mov    %rbp,%rdx
  0x0000000104869a11: mov    (%rsp),%ebx
  0x0000000104869a14: mov    0x4(%rsp),%r8d
  0x0000000104869a19: mov    0x8(%rsp),%r10
  0x0000000104869a1e: jmpq   0x000000010486987b
  0x0000000104869a23: mov    %r8d,0x24(%rsp)
  0x0000000104869a28: mov    %ebx,0x20(%rsp)
  0x0000000104869a2c: mov    %esi,0x14(%rsp)
  0x0000000104869a30: mov    %rbp,0x18(%rsp)
  0x0000000104869a35: mov    %edx,0x10(%rsp)
  0x0000000104869a39: mov    %r9d,0xc(%rsp)
  0x0000000104869a3e: mov    %r11d,0x8(%rsp)
  0x0000000104869a43: mov    %r13,%rbp
  0x0000000104869a46: movabs $0x7c00007a8,%rsi  ;   {metadata({type array byte})}
  0x0000000104869a50: mov    %r8d,%edx
  0x0000000104869a53: callq  0x0000000104846a60  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1336}
                                                ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869a58: mov    %rbp,%r13
  0x0000000104869a5b: mov    0x8(%rsp),%r11d
  0x0000000104869a60: mov    0xc(%rsp),%r9d
  0x0000000104869a65: mov    0x10(%rsp),%edx
  0x0000000104869a69: mov    0x18(%rsp),%rbp
  0x0000000104869a6e: mov    0x14(%rsp),%esi
  0x0000000104869a72: mov    0x20(%rsp),%ebx
  0x0000000104869a76: mov    0x24(%rsp),%r8d
  0x0000000104869a7b: mov    %rax,%r10
  0x0000000104869a7e: jmpq   0x000000010486970e
  0x0000000104869a83: mov    $0xffffffe4,%esi
  0x0000000104869a88: mov    %r8,(%rsp)
  0x0000000104869a8c: mov    %r9,0x8(%rsp)
  0x0000000104869a91: mov    %r10d,0x14(%rsp)
  0x0000000104869a96: mov    %edx,0x18(%rsp)
  0x0000000104869a9a: nop
  0x0000000104869a9b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=1408}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869aa0: callq  0x0000000103c85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869aa5: mov    $0xffffffde,%esi
  0x0000000104869aaa: mov    %r11d,0x14(%rsp)
  0x0000000104869aaf: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [20]=NarrowOop [24]=Oop off=1428}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869ab4: callq  0x0000000103c85e14  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869ab9: inc    %r8d
  0x0000000104869abc: jmp    0x0000000104869ac8
  0x0000000104869abe: add    $0x2,%r8d
  0x0000000104869ac2: jmp    0x0000000104869ac8
  0x0000000104869ac4: add    $0x3,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869ac8: mov    $0xffffff65,%esi
  0x0000000104869acd: mov    (%rsp),%rbp
  0x0000000104869ad1: mov    %r8d,0x4(%rsp)
  0x0000000104869ad6: mov    %ecx,0xc(%rsp)
  0x0000000104869ada: mov    %r13,0x20(%rsp)
  0x0000000104869adf: mov    %r11d,0x1c(%rsp)
  0x0000000104869ae4: data32 xchg %ax,%ax
  0x0000000104869ae7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [32]=Oop off=1484}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869aec: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869af1: inc    %r9d
  0x0000000104869af4: jmp    0x0000000104869b00
  0x0000000104869af6: add    $0x2,%r9d
  0x0000000104869afa: jmp    0x0000000104869b00
  0x0000000104869afc: add    $0x3,%r9d          ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869b00: mov    $0xffffff65,%esi
  0x0000000104869b05: mov    (%rsp),%rbp
  0x0000000104869b09: mov    %r10,(%rsp)
  0x0000000104869b0d: mov    %r9d,0xc(%rsp)
  0x0000000104869b12: mov    %ecx,0x14(%rsp)
  0x0000000104869b16: mov    %r13,0x18(%rsp)
  0x0000000104869b1b: mov    %r11d,0x20(%rsp)
  0x0000000104869b20: data32 xchg %ax,%ax
  0x0000000104869b23: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1544}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869b28: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::encode@37 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869b2d: inc    %r8d
  0x0000000104869b30: jmp    0x0000000104869b3c
  0x0000000104869b32: add    $0x2,%r8d
  0x0000000104869b36: jmp    0x0000000104869b3c
  0x0000000104869b38: add    $0x3,%r8d          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869b3c: mov    $0xffffff65,%esi
  0x0000000104869b41: mov    (%rsp),%rbp
  0x0000000104869b45: mov    %r8d,0x4(%rsp)
  0x0000000104869b4a: mov    %ecx,0xc(%rsp)
  0x0000000104869b4e: mov    %r13,0x20(%rsp)
  0x0000000104869b53: mov    %r11d,0x1c(%rsp)
  0x0000000104869b58: data32 xchg %ax,%ax
  0x0000000104869b5b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [32]=Oop off=1600}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869b60: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869b65: inc    %r9d
  0x0000000104869b68: jmp    0x0000000104869b74
  0x0000000104869b6a: add    $0x2,%r9d
  0x0000000104869b6e: jmp    0x0000000104869b74
  0x0000000104869b70: add    $0x3,%r9d          ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869b74: mov    $0xffffff65,%esi
  0x0000000104869b79: mov    (%rsp),%rbp
  0x0000000104869b7d: mov    %r10,(%rsp)
  0x0000000104869b81: mov    %r9d,0xc(%rsp)
  0x0000000104869b86: mov    %ecx,0x14(%rsp)
  0x0000000104869b8a: mov    %r13,0x18(%rsp)
  0x0000000104869b8f: mov    %r11d,0x20(%rsp)
  0x0000000104869b94: data32 xchg %ax,%ax
  0x0000000104869b97: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [24]=Oop off=1660}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869b9c: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::encode@44 (line 41)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869ba1: movslq %r8d,%rcx          ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)

  0x0000000104869ba4: jmpq   0x0000000104869696
  0x0000000104869ba9: mov    $0xffffffe4,%esi
  0x0000000104869bae: mov    %rdx,%rbp
  0x0000000104869bb1: mov    %r10,(%rsp)
  0x0000000104869bb5: mov    %r9d,0x8(%rsp)
  0x0000000104869bba: mov    %r11d,0xc(%rsp)
  0x0000000104869bbf: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=NarrowOop off=1700}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869bc4: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869bc9: mov    $0xffffffde,%esi
  0x0000000104869bce: mov    %r10,0x8(%rsp)
  0x0000000104869bd3: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop off=1720}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869bd8: callq  0x0000000103c85e14  ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869bdd: mov    $0xffffff86,%esi
  0x0000000104869be2: mov    (%rsp),%rbp
  0x0000000104869be6: mov    %r13,0x10(%rsp)
  0x0000000104869beb: mov    %r11d,0xc(%rsp)
  0x0000000104869bf0: data32 xchg %ax,%ax
  0x0000000104869bf3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop off=1752}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869bf8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869bfd: mov    $0xffffff86,%esi
  0x0000000104869c02: mov    (%rsp),%rbp
  0x0000000104869c06: mov    %r10,(%rsp)
  0x0000000104869c0a: mov    %r13,0x8(%rsp)
  0x0000000104869c0f: mov    %r11d,0x10(%rsp)
  0x0000000104869c14: data32 xchg %ax,%ax
  0x0000000104869c17: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1788}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c1c: callq  0x0000000103c85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::encode@23 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c21: mov    $0xffffff65,%esi
  0x0000000104869c26: mov    (%rsp),%rbp
  0x0000000104869c2a: mov    %r8d,0x4(%rsp)
  0x0000000104869c2f: mov    %r8d,0x8(%rsp)
  0x0000000104869c34: mov    %r13,0x20(%rsp)
  0x0000000104869c39: mov    %r11d,0x1c(%rsp)
  0x0000000104869c3e: mov    %r13,0x28(%rsp)
  0x0000000104869c43: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [32]=Oop [40]=Oop off=1832}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c48: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c4d: mov    $0xffffff65,%esi
  0x0000000104869c52: mov    (%rsp),%rbp
  0x0000000104869c56: mov    %r10,(%rsp)
  0x0000000104869c5a: mov    %r9d,0xc(%rsp)
  0x0000000104869c5f: mov    %r9d,0x10(%rsp)
  0x0000000104869c64: mov    %r11d,0x20(%rsp)
  0x0000000104869c69: mov    %r13,0x28(%rsp)
  0x0000000104869c6e: nop
  0x0000000104869c6f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [40]=Oop off=1876}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c74: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869c79: mov    $0xffffff65,%esi
  0x0000000104869c7e: mov    (%rsp),%rbp
  0x0000000104869c82: mov    %r8d,0x4(%rsp)
  0x0000000104869c87: mov    %r8d,0x8(%rsp)
  0x0000000104869c8c: mov    %r13,0x20(%rsp)
  0x0000000104869c91: mov    %r11d,0x1c(%rsp)
  0x0000000104869c96: mov    %r13,0x28(%rsp)
  0x0000000104869c9b: mov    %r11d,0x30(%rsp)
  0x0000000104869ca0: data32 xchg %ax,%ax
  0x0000000104869ca3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [32]=Oop [40]=Oop off=1928}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ; - sun.reflect.UTF8::encode@6 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869ca8: callq  0x0000000103c85e14  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869cad: mov    $0xffffff65,%esi
  0x0000000104869cb2: mov    (%rsp),%rbp
  0x0000000104869cb6: mov    %r10,(%rsp)
  0x0000000104869cba: mov    %r9d,0xc(%rsp)
  0x0000000104869cbf: mov    %r9d,0x10(%rsp)
  0x0000000104869cc4: mov    %r13,0x28(%rsp)
  0x0000000104869cc9: mov    %r11d,0x24(%rsp)
  0x0000000104869cce: nop
  0x0000000104869ccf: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [40]=Oop off=1972}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869cd4: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::encode@26 (line 40)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869cd9: mov    $0xfffffff6,%esi
  0x0000000104869cde: mov    %edx,(%rsp)
  0x0000000104869ce1: xchg   %ax,%ax
  0x0000000104869ce3: callq  0x00000001047dc1a0  ; OopMap{off=1992}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869ce8: callq  0x0000000103c85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869ced: mov    $0xfffffff6,%esi
  0x0000000104869cf2: mov    %r11d,%ebp
  0x0000000104869cf5: xchg   %ax,%ax
  0x0000000104869cf7: callq  0x00000001047dc1a0  ; OopMap{off=2012}
                                                ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869cfc: callq  0x0000000103c85e14  ;*bastore
                                                ; - sun.reflect.ByteVectorImpl::add@36 (line 65)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869d01: mov    $0xfffffff6,%esi
  0x0000000104869d06: nop
  0x0000000104869d07: callq  0x00000001047dc1a0  ; OopMap{off=2028}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869d0c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869d11: mov    $0xfffffff6,%esi
  0x0000000104869d16: nop
  0x0000000104869d17: callq  0x00000001047dc1a0  ; OopMap{off=2044}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869d1c: callq  0x0000000103c85e14  ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)
                                                ;   {runtime_call}
  0x0000000104869d21: mov    $0xfffffff6,%esi
  0x0000000104869d26: mov    (%rsp),%rbp
  0x0000000104869d2a: nop
  0x0000000104869d2b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=2064}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869d30: callq  0x0000000103c85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869d35: mov    $0xfffffff6,%esi
  0x0000000104869d3a: mov    (%rsp),%rbp
  0x0000000104869d3e: mov    %rdx,(%rsp)
  0x0000000104869d42: nop
  0x0000000104869d43: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop off=2088}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::encode@1 (line 35)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869d48: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869d4d: mov    $0xfffffff6,%esi
  0x0000000104869d52: nop
  0x0000000104869d53: callq  0x00000001047dc1a0  ; OopMap{off=2104}
                                                ;*invokeinterface add
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869d58: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104869d5d: mov    $0xfffffff6,%esi
  0x0000000104869d62: nop
  0x0000000104869d63: callq  0x00000001047dc1a0  ; OopMap{off=2120}
                                                ;*arraylength
                                                ; - sun.reflect.ByteVectorImpl::add@15 (line 62)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)
                                                ;   {runtime_call}
  0x0000000104869d68: callq  0x0000000103c85e14  ;*newarray
                                                ; - sun.reflect.UTF8::encode@9 (line 36)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@1 (line 103)
                                                ;   {runtime_call}
  0x0000000104869d6d: mov    %rax,%rsi
  0x0000000104869d70: jmp    0x0000000104869d84  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@7 (line 104)

  0x0000000104869d72: mov    %rax,%rsi
  0x0000000104869d75: jmp    0x0000000104869d84  ;*invokespecial resize
                                                ; - sun.reflect.ByteVectorImpl::add@24 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitByte@5 (line 74)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@29 (line 107)

  0x0000000104869d77: mov    %rax,%rsi
  0x0000000104869d7a: jmp    0x0000000104869d84  ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@10 (line 63)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x0000000104869d7c: mov    %rax,%rsi
  0x0000000104869d7f: jmp    0x0000000104869d84  ;*invokevirtual emitByte
                                                ; - sun.reflect.ClassFileAssembler::emitShort@20 (line 64)
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@14 (line 105)

  0x0000000104869d81: mov    %rax,%rsi          ;*synchronization entry
                                                ; - sun.reflect.ClassFileAssembler::emitConstantPoolUTF8@-1 (line 103)

  0x0000000104869d84: add    $0x50,%rsp
  0x0000000104869d88: pop    %rbp
  0x0000000104869d89: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104869d8e: hlt    
  0x0000000104869d8f: hlt    
  0x0000000104869d90: hlt    
  0x0000000104869d91: hlt    
  0x0000000104869d92: hlt    
  0x0000000104869d93: hlt    
  0x0000000104869d94: hlt    
  0x0000000104869d95: hlt    
  0x0000000104869d96: hlt    
  0x0000000104869d97: hlt    
  0x0000000104869d98: hlt    
  0x0000000104869d99: hlt    
  0x0000000104869d9a: hlt    
  0x0000000104869d9b: hlt    
  0x0000000104869d9c: hlt    
  0x0000000104869d9d: hlt    
  0x0000000104869d9e: hlt    
  0x0000000104869d9f: hlt    
[Stub Code]
  0x0000000104869da0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104869daa: jmpq   0x0000000104869daa  ;   {runtime_call}
  0x0000000104869daf: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104869db9: jmpq   0x0000000104869db9  ;   {runtime_call}
  0x0000000104869dbe: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104869dc8: jmpq   0x0000000104869dc8  ;   {runtime_call}
  0x0000000104869dcd: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104869dd7: jmpq   0x0000000104869dd7  ;   {runtime_call}
[Exception Handler]
  0x0000000104869ddc: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104869de1: callq  0x0000000104869de6
  0x0000000104869de6: subq   $0x5,(%rsp)
  0x0000000104869deb: jmpq   0x000000010481e3c0  ;   {runtime_call}
<nmethod compile_id='62' compiler='C2' entry='0x0000000104869520' size='6896' address='0x0000000104869350' relocation_offset='296' insts_offset='464' stub_offset='2640' scopes_data_offset='2800' scopes_pcs_offset='4056' dependencies_offset='6712' handler_table_offset='6720' nul_chk_table_offset='6840' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='918' backedge_count='8296' iicount='918' stamp='0.346'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010485e050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092292c0} &apos;utf8Length&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;sun/reflect/UTF8&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x000000010485e1a0: mov    %eax,-0x14000(%rsp)
  0x000000010485e1a7: push   %rbp
  0x000000010485e1a8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - sun.reflect.UTF8::utf8Length@-1 (line 61)

  0x000000010485e1ac: mov    %rsi,%r9
  0x000000010485e1af: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ; implicit exception: dispatches to 0x000000010485e382
  0x000000010485e1b3: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ; implicit exception: dispatches to 0x000000010485e391
  0x000000010485e1b8: xor    %eax,%eax
  0x000000010485e1ba: test   %ebp,%ebp
  0x000000010485e1bc: jle    0x000000010485e2ce  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010485e1c2: test   %ebp,%ebp
  0x000000010485e1c4: jbe    0x000000010485e329
  0x000000010485e1ca: mov    %ebp,%r8d
  0x000000010485e1cd: dec    %r8d
  0x000000010485e1d0: cmp    %ebp,%r8d
  0x000000010485e1d3: jae    0x000000010485e329
  0x000000010485e1d9: lea    (%r12,%r11,8),%r10
  0x000000010485e1dd: mov    $0x1,%r8d
  0x000000010485e1e3: cmp    %r8d,%ebp
  0x000000010485e1e6: mov    %ebp,%r11d
  0x000000010485e1e9: cmovg  %r8d,%r11d         ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010485e1ed: test   %eax,%eax
  0x000000010485e1ef: jl     0x000000010485e33d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; -
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor18 from __JVM_DefineClass__]
<writer thread='19203'/>
 sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e1f5: cmp    %ebp,%eax
  0x000000010485e1f7: jge    0x000000010485e359  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e1fd: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e203: cmp    $0x1,%ecx
  0x000000010485e206: jl     0x000000010485e2e6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e20c: cmp    $0x7f,%ecx
  0x000000010485e20f: jg     0x000000010485e30d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e215: inc    %eax               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010485e217: cmp    %r11d,%eax
  0x000000010485e21a: jl     0x000000010485e1ed  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010485e21c: mov    %ebp,%r11d
  0x000000010485e21f: add    $0xfffffffffffffffd,%r11d
  0x000000010485e223: mov    $0x80000000,%r8d
  0x000000010485e229: cmp    %r11d,%ebp
  0x000000010485e22c: cmovl  %r8d,%r11d
  0x000000010485e230: cmp    %r11d,%eax
  0x000000010485e233: jge    0x000000010485e29b
  0x000000010485e235: data32 data32 nopw 0x0(%rax,%rax,1)
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010485e240: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e246: cmp    $0x1,%ecx
  0x000000010485e249: jl     0x000000010485e2e6  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e24f: cmp    $0x7f,%ecx
  0x000000010485e252: jg     0x000000010485e30d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e258: movslq %eax,%r8
  0x000000010485e25b: movzwl 0x12(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e261: cmp    $0x1,%ecx
  0x000000010485e264: jl     0x000000010485e2da  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e266: cmp    $0x7f,%ecx
  0x000000010485e269: jg     0x000000010485e301  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e26f: movzwl 0x14(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e275: cmp    $0x1,%ecx
  0x000000010485e278: jl     0x000000010485e2de  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e27a: cmp    $0x7f,%ecx
  0x000000010485e27d: jg     0x000000010485e305  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e283: movzwl 0x16(%r10,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e289: cmp    $0x1,%ecx
  0x000000010485e28c: jl     0x000000010485e2e3  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e28e: cmp    $0x7f,%ecx
  0x000000010485e291: jg     0x000000010485e30a  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e293: add    $0x4,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010485e296: cmp    %r11d,%eax
  0x000000010485e299: jl     0x000000010485e240  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010485e29b: cmp    %ebp,%eax
  0x000000010485e29d: jge    0x000000010485e2ce
  0x000000010485e29f: nop                       ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)

  0x000000010485e2a0: test   %eax,%eax
  0x000000010485e2a2: jl     0x000000010485e342  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e2a8: cmp    %ebp,%eax
  0x000000010485e2aa: jge    0x000000010485e35e  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e2b0: movzwl 0x10(%r10,%rax,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)

  0x000000010485e2b6: cmp    $0x1,%ecx
  0x000000010485e2b9: jl     0x000000010485e375  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)

  0x000000010485e2bf: cmp    $0x7f,%ecx
  0x000000010485e2c2: jg     0x000000010485e37d  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)

  0x000000010485e2c8: inc    %eax               ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010485e2ca: cmp    %ebp,%eax
  0x000000010485e2cc: jl     0x000000010485e2a0  ;*if_icmpge
                                                ; - sun.reflect.UTF8::utf8Length@11 (line 63)

  0x000000010485e2ce: add    $0x30,%rsp
  0x000000010485e2d2: pop    %rbp
  0x000000010485e2d3: test   %eax,-0x20742d9(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485e2d9: retq   
  0x000000010485e2da: inc    %eax
  0x000000010485e2dc: jmp    0x000000010485e2e6
  0x000000010485e2de: add    $0x2,%eax
  0x000000010485e2e1: jmp    0x000000010485e2e6
  0x000000010485e2e3: add    $0x3,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010485e2e6: mov    %eax,(%rsp)
  0x000000010485e2e9: mov    $0xffffff65,%esi
  0x000000010485e2ee: mov    %ecx,0x8(%rsp)
  0x000000010485e2f2: mov    %r9,0x10(%rsp)
  0x000000010485e2f7: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=348}
                                                ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ;   {runtime_call}
  0x000000010485e2fc: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - sun.reflect.UTF8::utf8Length@27 (line 65)
                                                ;   {runtime_call}
  0x000000010485e301: inc    %eax
  0x000000010485e303: jmp    0x000000010485e30d
  0x000000010485e305: add    $0x2,%eax
  0x000000010485e308: jmp    0x000000010485e30d
  0x000000010485e30a: add    $0x3,%eax          ;*iinc
                                                ; - sun.reflect.UTF8::utf8Length@73 (line 63)

  0x000000010485e30d: mov    %eax,(%rsp)
  0x000000010485e310: mov    $0xffffff65,%esi
  0x000000010485e315: mov    %ecx,0x8(%rsp)
  0x000000010485e319: mov    %r9,0x10(%rsp)
  0x000000010485e31e: nop
  0x000000010485e31f: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=388}
                                                ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ;   {runtime_call}
  0x000000010485e324: callq  0x0000000103c85e14  ;*if_icmpgt
                                                ; - sun.reflect.UTF8::utf8Length@34 (line 65)
                                                ;   {runtime_call}
  0x000000010485e329: mov    $0xffffff86,%esi
  0x000000010485e32e: mov    %r9,(%rsp)
  0x000000010485e332: nop
  0x000000010485e333: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=408}
                                                ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ;   {runtime_call}
  0x000000010485e338: callq  0x0000000103c85e14  ;*aload_0
                                                ; - sun.reflect.UTF8::utf8Length@14 (line 64)
                                                ;   {runtime_call}
  0x000000010485e33d: mov    %eax,(%rsp)
  0x000000010485e340: jmp    0x000000010485e345
  0x000000010485e342: mov    %eax,(%rsp)
  0x000000010485e345: mov    $0xffffff65,%esi
  0x000000010485e34a: mov    %r9,0x10(%rsp)
  0x000000010485e34f: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=436}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010485e354: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010485e359: mov    %eax,(%rsp)
  0x000000010485e35c: jmp    0x000000010485e361
  0x000000010485e35e: mov    %eax,(%rsp)
  0x000000010485e361: mov    $0xffffff65,%esi
  0x000000010485e366: mov    %r9,0x10(%rsp)
  0x000000010485e36b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=464}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010485e370: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - sun.reflect.UTF8::utf8Length@16 (line 64)
                                                ;   {runtime_call}
  0x000000010485e375: mov    %eax,(%rsp)
  0x000000010485e378: jmpq   0x000000010485e2e9
  0x000000010485e37d: mov    %eax,(%rsp)
  0x000000010485e380: jmp    0x000000010485e310
  0x000000010485e382: mov    $0xfffffff6,%esi
  0x000000010485e387: callq  0x00000001047dc1a0  ; OopMap{off=492}
                                                ;*invokevirtual length
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010485e38c: callq  0x0000000103c85e14  ;*invokevirtual length
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010485e391: mov    $0xfffffff6,%esi
  0x000000010485e396: nop
  0x000000010485e397: callq  0x00000001047dc1a0  ; OopMap{off=508}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010485e39c: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.reflect.UTF8::utf8Length@1 (line 61)
                                                ;   {runtime_call}
  0x000000010485e3a1: hlt    
  0x000000010485e3a2: hlt    
  0x000000010485e3a3: hlt    
  0x000000010485e3a4: hlt    
  0x000000010485e3a5: hlt    
  0x000000010485e3a6: hlt    
  0x000000010485e3a7: hlt    
  0x000000010485e3a8: hlt    
  0x000000010485e3a9: hlt    
  0x000000010485e3aa: hlt    
  0x000000010485e3ab: hlt    
  0x000000010485e3ac: hlt    
  0x000000010485e3ad: hlt    
  0x000000010485e3ae: hlt    
  0x000000010485e3af: hlt    
  0x000000010485e3b0: hlt    
  0x000000010485e3b1: hlt    
  0x000000010485e3b2: hlt    
  0x000000010485e3b3: hlt    
  0x000000010485e3b4: hlt    
  0x000000010485e3b5: hlt    
  0x000000010485e3b6: hlt    
  0x000000010485e3b7: hlt    
  0x000000010485e3b8: hlt    
  0x000000010485e3b9: hlt    
  0x000000010485e3ba: hlt    
  0x000000010485e3bb: hlt    
  0x000000010485e3bc: hlt    
  0x000000010485e3bd: hlt    
  0x000000010485e3be: hlt    
  0x000000010485e3bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485e3c0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485e3c5: callq  0x000000010485e3ca
  0x000000010485e3ca: subq   $0x5,(%rsp)
  0x000000010485e3cf: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485e3d4: hlt    
  0x000000010485e3d5: hlt    
  0x000000010485e3d6: hlt    
  0x000000010485e3d7: hlt    
<nmethod compile_id='64' compiler='C2' entry='0x000000010485e1a0' size='2024' address='0x000000010485e050' relocation_offset='296' insts_offset='336' stub_offset='880' scopes_data_offset='928' scopes_pcs_offset='1144' dependencies_offset='1992' nul_chk_table_offset='2000' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='864' backedge_count='7529' iicount='864' stamp='0.350'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010485d890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108eee728} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/ObjectStreamField&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010485d9e0: mov    0x8(%rsi),%r10d
  0x000000010485d9e4: shl    $0x3,%r10
  0x000000010485d9e8: cmp    %r10,%rax
  0x000000010485d9eb: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010485d9f1: data32 xchg %ax,%ax
  0x000000010485d9f4: nopl   0x0(%rax,%rax,1)
  0x000000010485d9fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010485da00: sub    $0x18,%rsp
  0x000000010485da07: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getName@-1 (line 150)

  0x000000010485da0c: mov    0x14(%rsi),%r11d
  0x000000010485da10: mov    %r11,%rax
  0x000000010485da13: shl    $0x3,%rax          ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)

  0x000000010485da17: add    $0x10,%rsp
  0x000000010485da1b: pop    %rbp
  0x000000010485da1c: test   %eax,-0x2073a22(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485da22: retq   
  0x000000010485da23: hlt    
  0x000000010485da24: hlt    
  0x000000010485da25: hlt    
  0x000000010485da26: hlt    
  0x000000010485da27: hlt    
  0x000000010485da28: hlt    
  0x000000010485da29: hlt    
  0x000000010485da2a: hlt    
  0x000000010485da2b: hlt    
  0x000000010485da2c: hlt    
  0x000000010485da2d: hlt    
  0x000000010485da2e: hlt    
  0x000000010485da2f: hlt    
  0x000000010485da30: hlt    
  0x000000010485da31: hlt    
  0x000000010485da32: hlt    
  0x000000010485da33: hlt    
  0x000000010485da34: hlt    
  0x000000010485da35: hlt    
  0x000000010485da36: hlt    
  0x000000010485da37: hlt    
  0x000000010485da38: hlt    
  0x000000010485da39: hlt    
  0x000000010485da3a: hlt    
  0x000000010485da3b: hlt    
  0x000000010485da3c: hlt    
  0x000000010485da3d: hlt    
  0x000000010485da3e: hlt    
  0x000000010485da3f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485da40: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485da45: callq  0x000000010485da4a
  0x000000010485da4a: subq   $0x5,(%rsp)
  0x000000010485da4f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485da54: hlt    
  0x000000010485da55: hlt    
  0x000000010485da56: hlt    
  0x000000010485da57: hlt    
<nmethod compile_id='65' compiler='C2' entry='0x000000010485d9e0' size='552' address='0x000000010485d890' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='6377' backedge_count='1' iicount='36372' stamp='0.351'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor19 from __JVM_DefineClass__]
<task_queued compile_id='67' method='java/lang/String length ()I' bytes='6' count='5000' backedge_count='1' iicount='10000' stamp='0.352' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010485dd50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e41c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x000000010485dea0: mov    0x8(%rsi),%r10d
  0x000000010485dea4: shl    $0x3,%r10
  0x000000010485dea8: cmp    %r10,%rax
  0x000000010485deab: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010485deb1: data32 xchg %ax,%ax
  0x000000010485deb4: nopl   0x0(%rax,%rax,1)
  0x000000010485debc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010485dec0: mov    %eax,-0x14000(%rsp)
  0x000000010485dec7: push   %rbp
  0x000000010485dec8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x000000010485decc: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000010485ded0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x000000010485dee1
  0x000000010485ded5: add    $0x10,%rsp
  0x000000010485ded9: pop    %rbp
  0x000000010485deda: test   %eax,-0x2073ee0(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010485dee0: retq   
  0x000000010485dee1: mov    $0xfffffff6,%esi
  0x000000010485dee6: nop
  0x000000010485dee7: callq  0x00000001047dc1a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010485deec: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000010485def1: hlt    
  0x000000010485def2: hlt    
  0x000000010485def3: hlt    
  0x000000010485def4: hlt    
  0x000000010485def5: hlt    
  0x000000010485def6: hlt    
  0x000000010485def7: hlt    
  0x000000010485def8: hlt    
  0x000000010485def9: hlt    
  0x000000010485defa: hlt    
  0x000000010485defb: hlt    
  0x000000010485defc: hlt    
  0x000000010485defd: hlt    
  0x000000010485defe: hlt    
  0x000000010485deff: hlt    
[Exception Handler]
[Stub Code]
  0x000000010485df00: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010485df05: callq  0x000000010485df0a
  0x000000010485df0a: subq   $0x5,(%rsp)
  0x000000010485df0f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010485df14: hlt    
  0x000000010485df15: hlt    
  0x000000010485df16: hlt    
  0x000000010485df17: hlt    
<nmethod compile_id='67' compiler='C2' entry='0x000000010485dea0' size='616' address='0x000000010485dd50' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='496' dependencies_offset='592' nul_chk_table_offset='600' method='java/lang/String length ()I' bytes='6' count='5042' backedge_count='1' iicount='10042' stamp='0.353'/>
<writer thread='7171'/>
<task_queued compile_id='68' method='java/lang/Math min (II)I' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.353' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x00000001048643d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108f31f98} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000104864500: sub    $0x18,%rsp
  0x0000000104864507: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x000000010486450c: cmp    %edx,%esi
  0x000000010486450e: mov    %edx,%eax
  0x0000000104864510: cmovle %esi,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000104864513: add    $0x10,%rsp
  0x0000000104864517: pop    %rbp
  0x0000000104864518: test   %eax,-0x207a51e(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486451e: retq   
  0x000000010486451f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104864520: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104864525: callq  0x000000010486452a
  0x000000010486452a: subq   $0x5,(%rsp)
  0x000000010486452f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104864534: hlt    
  0x0000000104864535: hlt    
  0x0000000104864536: hlt    
  0x0000000104864537: hlt    
<nmethod compile_id='68' compiler='C2' entry='0x0000000104864500' size='456' address='0x00000001048643d0' relocation_offset='296' insts_offset='304' stub_offset='336' scopes_data_offset='368' scopes_pcs_offset='384' dependencies_offset='448' method='java/lang/Math min (II)I' bytes='11' count='5204' backedge_count='1' iicount='10204' stamp='0.354'/>
<writer thread='7171'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor20 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor21 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor22 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor23 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor24 from __JVM_DefineClass__]
[Loaded java.util.TreeMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.SortedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.NavigableSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor25 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.WorkloadParams$Value from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor26 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor27 from __JVM_DefineClass__]
[Loaded org.openjdk.jmh.runner.ForkedRunner$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BaseRunner$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.BlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ExecutionException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CompletionService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Callable from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ExecutorType$5 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ThreadFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.util.ClassUtils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.net.MalformedURLException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_benchmarkDirect_jmhTest from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.CsvContent from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='69' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='140' backedge_count='5601' iicount='563' decompiles='1' unstable_if_traps='1' osr_bci='69' stamp='0.368' comment='backedge_count' hot_count='5601'/>
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType_B3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.CsvContent_jmhType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.FailureAssistException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.Result from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.ThroughputResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.AverageTimeResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.SampleTimeResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.SingleShotResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControlL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.InfraControl from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x0000000104866990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108e437e0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  0x0000000104866b00: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104866b05: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000104866b10: mov    %eax,-0x14000(%rsp)
  0x0000000104866b17: push   %rbp
  0x0000000104866b18: sub    $0x50,%rsp
  0x0000000104866b1c: mov    0x18(%rsi),%r13d
  0x0000000104866b20: mov    0x20(%rsi),%r14d
  0x0000000104866b24: mov    0x60(%rsi),%rbp
  0x0000000104866b28: mov    0x48(%rsi),%r10
  0x0000000104866b2c: mov    %r10,(%rsp)
  0x0000000104866b30: mov    0x28(%rsi),%ebx
  0x0000000104866b33: mov    0x58(%rsi),%r10d
  0x0000000104866b37: mov    %r10d,0x10(%rsp)
  0x0000000104866b3c: mov    0x40(%rsi),%r11d
  0x0000000104866b40: mov    %r11d,0x18(%rsp)
  0x0000000104866b45: mov    0x38(%rsi),%r10d
  0x0000000104866b49: mov    %r10d,0x1c(%rsp)
  0x0000000104866b4e: mov    %rsi,%rdi
  0x0000000104866b51: movabs $0x103ce473e,%r10
  0x0000000104866b5b: callq  *%r10
  0x0000000104866b5e: test   %rbp,%rbp
  0x0000000104866b61: je     0x0000000104866d6e
  0x0000000104866b67: mov    0x8(%rbp),%r11d
  0x0000000104866b6b: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000104866b72: jne    0x0000000104866f2d
  0x0000000104866b78: mov    %rbp,%r11
  0x0000000104866b7b: mov    (%rsp),%r8
  0x0000000104866b7f: test   %r8,%r8
  0x0000000104866b82: je     0x0000000104866d76
  0x0000000104866b88: mov    0x8(%r8),%r10d
  0x0000000104866b8c: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x0000000104866b93: jne    0x0000000104866f31  ;*iinc
                                                ; - java.lang.String::
<writer thread='7171'/>
[Loaded org.openjdk.jmh.infra.ThreadParamsL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
indexOf@69 (line 1772)

  0x0000000104866b99: mov    %r8,%rdx
  0x0000000104866b9c: add    $0xc,%rdx          ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000104866ba0: movslq 0x18(%rsp),%rsi
  0x0000000104866ba5: mov    0x18(%rsp),%edi
  0x0000000104866ba9: inc    %edi               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x0000000104866bab: jmpq   0x0000000104866c83  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=176}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000104866bb0: test   %eax,-0x207cbb6(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {poll}
  0x0000000104866bb6: mov    %eax,%ecx
  0x0000000104866bb8: mov    %ecx,%eax
  0x0000000104866bba: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104866bbc: cmp    %r14d,%eax
  0x0000000104866bbf: jg     0x0000000104866bd8  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104866bc1: cmp    %r9d,%eax
  0x0000000104866bc4: jae    0x0000000104866d83  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104866bca: movslq %ecx,%r10
  0x0000000104866bcd: movzwl 0x12(%r11,%r10,2),%r13d
  0x0000000104866bd3: cmp    %ebx,%r13d
  0x0000000104866bd6: jne    0x0000000104866bb0  ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x0000000104866bd8: mov    %eax,%r13d
  0x0000000104866bdb: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104866bde: movslq %eax,%r9           ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000104866be1: cmp    %r14d,%eax
  0x0000000104866be4: jg     0x0000000104866c47  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000104866be6: vmovd  %edi,%xmm0
  0x0000000104866bea: mov    %eax,%ecx
  0x0000000104866bec: add    0x1c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104866bf0: mov    %ecx,0x34(%rsp)
  0x0000000104866bf4: cmp    %ecx,%r13d
  0x0000000104866bf7: jge    0x0000000104866c40  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000104866bf9: mov    0xc(%r11),%ecx     ; implicit exception: dispatches to 0x0000000104867025
  0x0000000104866bfd: cmp    %ecx,%r13d
  0x0000000104866c00: jae    0x0000000104866e3d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000104866c06: test   %r8,%r8
  0x0000000104866c09: je     0x0000000104866ea5  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000104866c0f: vmovq  %r8,%xmm2
  0x0000000104866c14: movzwl 0x12(%r11,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000104866c1a: mov    %r10d,%r8d
  0x0000000104866c1d: mov    (%rdx),%r10d
  0x0000000104866c20: cmp    %r10d,%edi
  0x0000000104866c23: jae    0x0000000104866eb9
  0x0000000104866c29: vmovq  %xmm2,%r10
  0x0000000104866c2e: movzwl 0x12(%r10,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000104866c34: cmp    %ebp,%r8d
  0x0000000104866c37: je     0x0000000104866f89  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000104866c3d: mov    %r10,%r8           ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000104866c40: cmp    0x34(%rsp),%r13d
  0x0000000104866c45: je     0x0000000104866c5c  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=327}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000104866c47: test   %eax,-0x207cc4d(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000104866c4d: cmp    %r14d,%r13d
  0x0000000104866c50: jle    0x0000000104866c6c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000104866c52: mov    $0xffffffff,%eax
  0x0000000104866c57: jmp    0x0000000104866c60
  0x0000000104866c59: mov    %r13d,%eax
  0x0000000104866c5c: sub    0x10(%rsp),%eax    ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104866c60: add    $0x50,%rsp
  0x0000000104866c64: pop    %rbp
  0x0000000104866c65: test   %eax,-0x207cc6b(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104866c6b: retq   
  0x0000000104866c6c: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x0000000104867011
  0x0000000104866c70: cmp    %r10d,%r13d
  0x0000000104866c73: jae    0x0000000104866de1  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000104866c79: movzwl 0x12(%r11,%r9,2),%ecx
  0x0000000104866c7f: cmp    %ebx,%ecx
  0x0000000104866c81: je     0x0000000104866cb7
  0x0000000104866c83: mov    %r13d,%ecx
  0x0000000104866c86: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104866c88: cmp    %r14d,%ecx
  0x0000000104866c8b: jg     0x0000000104866d67  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104866c91: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x0000000104867000
  0x0000000104866c95: cmp    %r9d,%ecx
  0x0000000104866c98: jae    0x0000000104866d85  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104866c9e: movslq %r13d,%r10
  0x0000000104866ca1: movzwl 0x12(%r11,%r10,2),%r10d
  0x0000000104866ca7: cmp    %ebx,%r10d
  0x0000000104866caa: jne    0x0000000104866bb8  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104866cb0: mov    %ecx,%eax
  0x0000000104866cb2: jmpq   0x0000000104866bd8
  0x0000000104866cb7: vmovd  %edi,%xmm0         ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x0000000104866cbb: movslq %r13d,%rdi         ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000104866cbe: mov    %r13d,%ecx
  0x0000000104866cc1: inc    %ecx               ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104866cc3: vmovd  %ecx,%xmm1
  0x0000000104866cc7: cmp    %r14d,%r13d
  0x0000000104866cca: jg     0x0000000104866d33  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000104866ccc: mov    %r13d,%ecx
  0x0000000104866ccf: add    0x1c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104866cd3: mov    %ecx,0x34(%rsp)
  0x0000000104866cd7: vmovd  %xmm1,%ecx
  0x0000000104866cdb: cmp    0x34(%rsp),%ecx
  0x0000000104866cdf: jge    0x0000000104866d25  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000104866ce1: cmp    %r10d,%ecx
  0x0000000104866ce4: jae    0x0000000104866fdd  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000104866cea: test   %r8,%r8
  0x0000000104866ced: je     0x0000000104866ea5  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000104866cf3: vmovq  %r8,%xmm2
  0x0000000104866cf8: movzwl 0x12(%r11,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000104866cfe: mov    (%rdx),%r9d
  0x0000000104866d01: vmovd  %xmm0,%ecx
  0x0000000104866d05: cmp    %r9d,%ecx
  0x0000000104866d08: jae    0x0000000104866fe8
  0x0000000104866d0e: vmovq  %xmm2,%r9
  0x0000000104866d13: movzwl 0x12(%r9,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000104866d19: cmp    %ebp,%r8d
  0x0000000104866d1c: je     0x0000000104866ff5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000104866d22: mov    %r9,%r8            ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000104866d25: vmovd  %xmm1,%ecx
  0x0000000104866d29: cmp    0x34(%rsp),%ecx
  0x0000000104866d2d: je     0x0000000104866c59  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=563}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000104866d33: test   %eax,-0x207cd39(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000104866d39: vmovd  %xmm1,%r13d
  0x0000000104866d3e: cmp    %r14d,%r13d
  0x0000000104866d41: jg     0x0000000104866c52  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000104866d47: cmp    %r10d,%r13d
  0x0000000104866d4a: jae    0x0000000104866de1  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000104866d50: movzwl 0x12(%r11,%rdi,2),%ecx
  0x0000000104866d56: cmp    %ebx,%ecx
  0x0000000104866d58: je     0x0000000104866cbb  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000104866d5e: vmovd  %xmm0,%edi
  0x0000000104866d62: jmpq   0x0000000104866c83
  0x0000000104866d67: mov    %ecx,%eax
  0x0000000104866d69: jmpq   0x0000000104866bd8
  0x0000000104866d6e: xor    %r11d,%r11d
  0x0000000104866d71: jmpq   0x0000000104866b7b
  0x0000000104866d76: mov    $0xc,%edx
  0x0000000104866d7b: xor    %r8d,%r8d
  0x0000000104866d7e: jmpq   0x0000000104866ba0
  0x0000000104866d83: mov    %eax,%ecx
  0x0000000104866d85: mov    $0xffffffe4,%esi
  0x0000000104866d8a: mov    %rax,-0x8(%rsp)
  0x0000000104866d8f: mov    0x10(%rsp),%eax
  0x0000000104866d93: mov    %eax,(%rsp)
  0x0000000104866d96: mov    -0x8(%rsp),%rax
  0x0000000104866d9b: mov    %r8,0x8(%rsp)
  0x0000000104866da0: mov    %rax,-0x8(%rsp)
  0x0000000104866da5: mov    0x18(%rsp),%eax
  0x0000000104866da9: mov    %eax,0x4(%rsp)
  0x0000000104866dad: mov    -0x8(%rsp),%rax
  0x0000000104866db2: mov    %rax,-0x8(%rsp)
  0x0000000104866db7: mov    0x1c(%rsp),%eax
  0x0000000104866dbb: mov    %eax,0x10(%rsp)
  0x0000000104866dbf: mov    -0x8(%rsp),%rax
  0x0000000104866dc4: mov    %ebx,0x14(%rsp)
  0x0000000104866dc8: mov    %r14d,0x18(%rsp)
  0x0000000104866dcd: mov    %r11,0x20(%rsp)
  0x0000000104866dd2: mov    %ecx,0x28(%rsp)
  0x0000000104866dd6: nop
  0x0000000104866dd7: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [32]=Oop off=732}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000104866ddc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104866de1: mov    $0xffffffe4,%esi
  0x0000000104866de6: mov    %rax,-0x8(%rsp)
  0x0000000104866deb: mov    0x10(%rsp),%eax
  0x0000000104866def: mov    %eax,(%rsp)
  0x0000000104866df2: mov    -0x8(%rsp),%rax
  0x0000000104866df7: mov    %r8,0x8(%rsp)
  0x0000000104866dfc: mov    %rax,-0x8(%rsp)
  0x0000000104866e01: mov    0x18(%rsp),%eax
  0x0000000104866e05: mov    %eax,0x4(%rsp)
  0x0000000104866e09: mov    -0x8(%rsp),%rax
  0x0000000104866e0e: mov    %rax,-0x8(%rsp)
  0x0000000104866e13: mov    0x1c(%rsp),%eax
  0x0000000104866e17: mov    %eax,0x10(%rsp)
  0x0000000104866e1b: mov    -0x8(%rsp),%rax
  0x0000000104866e20: mov    %ebx,0x14(%rsp)
  0x0000000104866e24: mov    %r14d,0x18(%rsp)
  0x0000000104866e29: mov    %r11,0x20(%rsp)
  0x0000000104866e2e: mov    %r13d,0x28(%rsp)
  0x0000000104866e33: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [32]=Oop off=824}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104866e38: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104866e3d: mov    %eax,%ebp
  0x0000000104866e3f: mov    $0xffffffe4,%esi
  0x0000000104866e44: mov    %rax,-0x8(%rsp)
  0x0000000104866e49: mov    0x10(%rsp),%eax
  0x0000000104866e4d: mov    %eax,0x8(%rsp)
  0x0000000104866e51: mov    -0x8(%rsp),%rax
  0x0000000104866e56: mov    %r8,0x10(%rsp)
  0x0000000104866e5b: mov    %rax,-0x8(%rsp)
  0x0000000104866e60: mov    0x18(%rsp),%eax
  0x0000000104866e64: mov    %eax,0xc(%rsp)
  0x0000000104866e68: mov    -0x8(%rsp),%rax
  0x0000000104866e6d: mov    %rax,-0x8(%rsp)
  0x0000000104866e72: mov    0x1c(%rsp),%eax
  0x0000000104866e76: mov    %eax,0x18(%rsp)
  0x0000000104866e7a: mov    -0x8(%rsp),%rax
  0x0000000104866e7f: mov    %ebx,0x1c(%rsp)
  0x0000000104866e83: mov    %r14d,0x20(%rsp)
  0x0000000104866e88: mov    %r11,0x28(%rsp)
  0x0000000104866e8d: mov    %r13d,0x30(%rsp)
  0x0000000104866e92: vmovss %xmm0,0x38(%rsp)
  0x0000000104866e98: data32 xchg %ax,%ax
  0x0000000104866e9b: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop [40]=Oop off=928}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866ea0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104866ea5: mov    $0xfffffff6,%esi
  0x0000000104866eaa: vmovd  %xmm0,%ebp
  0x0000000104866eae: nop
  0x0000000104866eaf: callq  0x00000001047dc1a0  ; OopMap{off=948}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866eb4: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104866eb9: mov    %eax,%ebp
  0x0000000104866ebb: mov    $0xffffffe4,%esi
  0x0000000104866ec0: mov    %r11,(%rsp)
  0x0000000104866ec4: mov    %rax,-0x8(%rsp)
  0x0000000104866ec9: mov    0x10(%rsp),%eax
  0x0000000104866ecd: mov    %eax,0x8(%rsp)
  0x0000000104866ed1: mov    -0x8(%rsp),%rax
  0x0000000104866ed6: mov    %rax,-0x8(%rsp)
  0x0000000104866edb: mov    0x18(%rsp),%eax
  0x0000000104866edf: mov    %eax,0xc(%rsp)
  0x0000000104866ee3: mov    -0x8(%rsp),%rax
  0x0000000104866ee8: mov    %rax,-0x8(%rsp)
  0x0000000104866eed: mov    0x1c(%rsp),%eax
  0x0000000104866ef1: mov    %eax,0x18(%rsp)
  0x0000000104866ef5: mov    -0x8(%rsp),%rax
  0x0000000104866efa: mov    %ebx,0x1c(%rsp)
  0x0000000104866efe: mov    %r14d,0x20(%rsp)
  0x0000000104866f03: mov    %r13d,0x24(%rsp)
  0x0000000104866f08: vmovsd %xmm2,0x28(%rsp)
  0x0000000104866f0e: mov    0x34(%rsp),%r10d
  0x0000000104866f13: mov    %r10d,0x30(%rsp)
  0x0000000104866f18: mov    %r8d,0x38(%rsp)
  0x0000000104866f1d: vmovss %xmm0,0x3c(%rsp)
  0x0000000104866f23: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [40]=Oop off=1064}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866f28: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866f2d: mov    (%rsp),%r8
  0x0000000104866f31: mov    $0xffffff9d,%esi
  0x0000000104866f36: mov    %rax,-0x8(%rsp)
  0x0000000104866f3b: mov    0x10(%rsp),%eax
  0x0000000104866f3f: mov    %eax,(%rsp)
  0x0000000104866f42: mov    -0x8(%rsp),%rax
  0x0000000104866f47: mov    %r8,0x8(%rsp)
  0x0000000104866f4c: mov    %rax,-0x8(%rsp)
  0x0000000104866f51: mov    0x18(%rsp),%eax
  0x0000000104866f55: mov    %eax,0x4(%rsp)
  0x0000000104866f59: mov    -0x8(%rsp),%rax
  0x0000000104866f5e: mov    %rax,-0x8(%rsp)
  0x0000000104866f63: mov    0x1c(%rsp),%eax
  0x0000000104866f67: mov    %eax,0x10(%rsp)
  0x0000000104866f6b: mov    -0x8(%rsp),%rax
  0x0000000104866f70: mov    %ebx,0x14(%rsp)
  0x0000000104866f74: mov    %r14d,0x18(%rsp)
  0x0000000104866f79: mov    %r13d,0x1c(%rsp)
  0x0000000104866f7e: nop
  0x0000000104866f7f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1156}
                                                ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x0000000104866f84: callq  0x0000000103c85e14  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x0000000104866f89: mov    %eax,(%rsp)        ;*aload_0
                                                ; - java.lang.String::indexOf@126 (line 1779)

  0x0000000104866f8c: mov    $0xffffff65,%esi
  0x0000000104866f91: mov    %r11,0x8(%rsp)
  0x0000000104866f96: mov    %rax,-0x8(%rsp)
  0x0000000104866f9b: mov    0x10(%rsp),%eax
  0x0000000104866f9f: mov    %eax,0x4(%rsp)
  0x0000000104866fa3: mov    -0x8(%rsp),%rax
  0x0000000104866fa8: vmovsd %xmm2,0x10(%rsp)
  0x0000000104866fae: mov    %ebx,0x20(%rsp)
  0x0000000104866fb2: mov    %r14d,0x24(%rsp)
  0x0000000104866fb7: mov    %r13d,0x28(%rsp)
  0x0000000104866fbc: mov    0x34(%rsp),%r10d
  0x0000000104866fc1: mov    %r10d,0x2c(%rsp)
  0x0000000104866fc6: vmovss %xmm0,0x30(%rsp)
  0x0000000104866fcc: mov    %r8d,0x34(%rsp)
  0x0000000104866fd1: xchg   %ax,%ax
  0x0000000104866fd3: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop off=1240}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866fd8: callq  0x0000000103c85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866fdd: mov    %r13d,%ebp
  0x0000000104866fe0: mov    %ecx,%r13d
  0x0000000104866fe3: jmpq   0x0000000104866e3f
  0x0000000104866fe8: mov    %r13d,%ebp
  0x0000000104866feb: vmovd  %xmm1,%r13d
  0x0000000104866ff0: jmpq   0x0000000104866ebb
  0x0000000104866ff5: mov    %r13d,(%rsp)
  0x0000000104866ff9: vmovd  %xmm1,%r13d
  0x0000000104866ffe: jmp    0x0000000104866f8c
  0x0000000104867000: mov    $0xfffffff6,%esi
  0x0000000104867005: mov    %ecx,%ebp
  0x0000000104867007: callq  0x00000001047dc1a0  ; OopMap{off=1292}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x000000010486700c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104867011: mov    $0xfffffff6,%esi
  0x0000000104867016: mov    %r13d,%ebp
  0x0000000104867019: xchg   %ax,%ax
  0x000000010486701b: callq  0x00000001047dc1a0  ; OopMap{off=1312}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104867020: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104867025: mov    $0xfffffff6,%esi
  0x000000010486702a: mov    %r13d,%ebp
  0x000000010486702d: xchg   %ax,%ax
  0x000000010486702f: callq  0x00000001047dc1a0  ; OopMap{off=1332}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000104867034: callq  0x0000000103c85e14  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x0000000104867039: hlt    
  0x000000010486703a: hlt    
  0x000000010486703b: hlt    
  0x000000010486703c: hlt    
  0x000000010486703d: hlt    
  0x000000010486703e: hlt    
  0x000000010486703f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104867040: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104867045: callq  0x000000010486704a
  0x000000010486704a: subq   $0x5,(%rsp)
  0x000000010486704f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104867054: hlt    
  0x0000000104867055: hlt    
  0x0000000104867056: hlt    
  0x0000000104867057: hlt    
<nmethod compile_id='69' compile_kind='osr' compiler='C2' entry='0x0000000104866b00' size='3368' address='0x0000000104866990' relocation_offset='296' insts_offset='368' stub_offset='1712' scopes_data_offset='1752' scopes_pcs_offset='2304' dependencies_offset='3328' nul_chk_table_offset='3336' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5037' iicount='601' decompiles='1' unstable_if_traps='1' stamp='0.378'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.infra.ThreadParamsL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParamsL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ThreadParams from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='70' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5000' iicount='602' decompiles='1' unstable_if_traps='1' stamp='0.378' comment='count' hot_count='5001'/>
[Loaded org.openjdk.jmh.results.BenchmarkTaskResult from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.RawResults from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.BlackholeL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.Blackhole from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL0 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.ControlL4 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.infra.Control from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='71' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5000' backedge_count='1' iicount='10000' stamp='0.382' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104865b10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108e437e0} &apos;indexOf&apos; &apos;([CII[CIII
<writer thread='7171'/>
[Loaded org.github.arnaudroger.SimplifiedBenchmark from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  # parm3:    r8:r8     = &apos;[C&apos;
  # parm4:    r9        = int
  # parm5:    rdi       = int
  # parm6:    [sp+0x60]   = int  (sp of caller)
  0x0000000104865c80: mov    %eax,-0x14000(%rsp)
  0x0000000104865c87: push   %rbp
  0x0000000104865c88: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)

  0x0000000104865c8c: mov    %edx,0x14(%rsp)
  0x0000000104865c90: mov    %ecx,%r11d
  0x0000000104865c93: mov    0x60(%rsp),%r10d
  0x0000000104865c98: cmp    %ecx,%r10d
  0x0000000104865c9b: jge    0x00000001048660bd  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000104865ca1: test   %r10d,%r10d
  0x0000000104865ca4: jl     0x00000001048660ed  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000104865caa: mov    %edi,%ecx
  0x0000000104865cac: test   %edi,%edi
  0x0000000104865cae: je     0x0000000104866119  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000104865cb4: mov    %r8,%r14
  0x0000000104865cb7: mov    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x0000000104866149
  0x0000000104865cbb: mov    %r9d,%edi
  0x0000000104865cbe: cmp    %ebx,%r9d
  0x0000000104865cc1: jae    0x0000000104866045  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000104865cc7: mov    %edx,%r9d
  0x0000000104865cca: add    0x60(%rsp),%r9d    ;*iadd
                                                ; - java.lang.String::indexOf@50 (line 1769)

  0x0000000104865ccf: mov    %r11d,%edx
  0x0000000104865cd2: sub    %ecx,%edx
  0x0000000104865cd4: add    0x14(%rsp),%edx    ;*iadd
                                                ; - java.lang.String::indexOf@44 (line 1767)

  0x0000000104865cd8: cmp    %edx,%r9d
  0x0000000104865cdb: jg     0x0000000104865dba  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000104865ce1: movzwl 0x10(%r8,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000104865ce7: mov    0xc(%rsi),%r11d    ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ; implicit exception: dispatches to 0x000000010486615d
  0x0000000104865ceb: mov    %r11d,(%rsp)
  0x0000000104865cef: mov    %ebx,0x60(%rsp)
  0x0000000104865cf3: mov    %edx,%r11d
  0x0000000104865cf6: inc    %r11d
  0x0000000104865cf9: mov    %r11d,0x4(%rsp)
  0x0000000104865cfe: mov    %edx,%ebx
  0x0000000104865d00: add    $0xfffffffffffffffe,%ebx
  0x0000000104865d03: movslq %edi,%r10
  0x0000000104865d06: vmovq  %r10,%xmm0
  0x0000000104865d0b: mov    %edi,%r13d
  0x0000000104865d0e: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x0000000104865d11: mov    $0x80000000,%r11d
  0x0000000104865d17: mov    0x4(%rsp),%r10d
  0x0000000104865d1c: cmp    %ebx,%r10d
  0x0000000104865d1f: cmovl  %r11d,%ebx
  0x0000000104865d23: jmpq   0x0000000104865dcb
  0x0000000104865d28: nopl   0x0(%rax,%rax,1)
  0x0000000104865d30: mov    %r9d,%eax
  0x0000000104865d33: jmpq   0x0000000104865e38
  0x0000000104865d38: mov    %eax,%r10d
  0x0000000104865d3b: inc    %r10d
  0x0000000104865d3e: mov    %eax,%r11d
  0x0000000104865d41: mov    %r10d,%eax
  0x0000000104865d44: jmp    0x0000000104865d50
  0x0000000104865d46: mov    %eax,%r11d
  0x0000000104865d49: add    $0x2,%r11d
  0x0000000104865d4d: add    $0x3,%eax
  0x0000000104865d50: mov    %eax,%r9d
  0x0000000104865d53: mov    %r11d,%eax
  0x0000000104865d56: jmp    0x0000000104865d68
  0x0000000104865d58: mov    %eax,%r10d
  0x0000000104865d5b: inc    %r10d
  0x0000000104865d5e: mov    %eax,%r9d
  0x0000000104865d61: add    $0x2,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865d65: mov    %r10d,%eax
  0x0000000104865d68: cmp    %edx,%eax
  0x0000000104865d6a: jg     0x0000000104865daf  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104865d6c: mov    %eax,%r10d
  0x0000000104865d6f: add    %ecx,%r10d         ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104865d72: cmp    %r10d,%r9d
  0x0000000104865d75: jge    0x0000000104865da6  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000104865d77: cmp    (%rsp),%r9d
  0x0000000104865d7b: jae    0x0000000104865fbc
  0x0000000104865d81: movzwl 0x10(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000104865d87: cmp    0x60(%rsp),%r13d
  0x0000000104865d8c: jae    0x0000000104865ff9
  0x0000000104865d92: vmovq  %xmm0,%rbp
  0x0000000104865d97: movzwl 0x12(%r14,%rbp,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000104865d9d: cmp    %ebp,%r11d
  0x0000000104865da0: je     0x0000000104866071  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000104865da6: cmp    %r10d,%r9d
  0x0000000104865da9: je     0x0000000104865ef0  ; OopMap{rsi=Oop r14=Oop off=303}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000104865daf: test   %eax,-0x207bdb5(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000104865db5: cmp    %edx,%r9d
  0x0000000104865db8: jle    0x0000000104865dcb  ;*iconst_m1
                                                ; - java.lang.String::indexOf@164 (line 1788)

  0x0000000104865dba: mov    $0xffffffff,%eax   ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000104865dbf: add    $0x50,%rsp
  0x0000000104865dc3: pop    %rbp
  0x0000000104865dc4: test   %eax,-0x207bdca(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104865dca: retq                      ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)

  0x0000000104865dcb: cmp    (%rsp),%r9d
  0x0000000104865dcf: jae    0x0000000104865f07  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000104865dd5: movzwl 0x10(%rsi,%r9,2),%r11d
  0x0000000104865ddb: mov    %r9d,%r10d
  0x0000000104865dde: inc    %r10d              ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865de1: cmp    %r8d,%r11d
  0x0000000104865de4: je     0x0000000104865ecd  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000104865dea: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104865dee: cmp    %edx,%r10d
  0x0000000104865df1: jg     0x0000000104865daf  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104865df3: cmp    (%rsp),%r10d
  0x0000000104865df7: jae    0x0000000104865f41
  0x0000000104865dfd: cmp    (%rsp),%edx
  0x0000000104865e00: jae    0x0000000104865f41
  0x0000000104865e06: cmp    $0x7ffffffe,%edx
  0x0000000104865e0c: jg     0x0000000104865f79  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000104865e12: movzwl 0x10(%rsi,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e18: mov    %r10d,%eax
  0x0000000104865e1b: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865e1d: cmp    %r8d,%r11d
  0x0000000104865e20: je     0x0000000104865ee5  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865e26: cmp    %r9d,%eax
  0x0000000104865e29: jge    0x0000000104865e30  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104865e2b: mov    %eax,%r10d
  0x0000000104865e2e: jmp    0x0000000104865e12
  0x0000000104865e30: cmp    %ebx,%eax
  0x0000000104865e32: jge    0x0000000104865fb1  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000104865e38: movzwl 0x10(%rsi,%rax,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e3e: cmp    %r8d,%r11d
  0x0000000104865e41: je     0x0000000104865d38  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865e47: movslq %eax,%r9
  0x0000000104865e4a: movzwl 0x12(%rsi,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e50: cmp    %r8d,%r10d
  0x0000000104865e53: je     0x0000000104865d58  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865e59: movzwl 0x14(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e5f: cmp    %r8d,%r11d
  0x0000000104865e62: je     0x0000000104865d46  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865e68: movzwl 0x16(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e6e: mov    %eax,%r9d
  0x0000000104865e71: add    $0x4,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865e75: cmp    %r8d,%r11d
  0x0000000104865e78: je     0x0000000104865ec5  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865e7a: cmp    %ebx,%r9d
  0x0000000104865e7d: jl     0x0000000104865d30  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104865e83: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865e86: cmp    0x4(%rsp),%r9d
  0x0000000104865e8b: jge    0x0000000104865eab
  0x0000000104865e8d: data32 xchg %ax,%ax       ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000104865e90: movzwl 0x10(%rsi,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000104865e96: mov    %r9d,%eax
  0x0000000104865e99: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865e9b: cmp    %r8d,%r11d
  0x0000000104865e9e: je     0x0000000104865ef9  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000104865ea0: cmp    0x4(%rsp),%eax
  0x0000000104865ea4: jge    0x0000000104865eb4  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000104865ea6: mov    %eax,%r9d
  0x0000000104865ea9: jmp    0x0000000104865e90
  0x0000000104865eab: mov    %r9d,%r11d
  0x0000000104865eae: mov    %eax,%r9d
  0x0000000104865eb1: mov    %r11d,%eax
  0x0000000104865eb4: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000104865eb8: cmp    %edx,%eax
  0x0000000104865eba: jg     0x0000000104865daf  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000104865ec0: jmpq   0x0000000104865d6c
  0x0000000104865ec5: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000104865ec8: jmpq   0x0000000104865d68
  0x0000000104865ecd: cmp    %edx,%r9d
  0x0000000104865ed0: jle    0x0000000104865eda  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000104865ed2: mov    %r10d,%r9d
  0x0000000104865ed5: jmpq   0x0000000104865daf
  0x0000000104865eda: mov    %r9d,%eax
  0x0000000104865edd: mov    %r10d,%r9d
  0x0000000104865ee0: jmpq   0x0000000104865d6c
  0x0000000104865ee5: mov    %eax,%r9d
  0x0000000104865ee8: mov    %r10d,%eax
  0x0000000104865eeb: jmpq   0x0000000104865d68
  0x0000000104865ef0: sub    0x14(%rsp),%eax    ;*isub
                                                ; - java.lang.String::indexOf@156 (line 1784)

  0x0000000104865ef4: jmpq   0x0000000104865dbf
  0x0000000104865ef9: mov    %eax,%r10d
  0x0000000104865efc: mov    %r9d,%eax
  0x0000000104865eff: mov    %r10d,%r9d
  0x0000000104865f02: jmpq   0x0000000104865d68
  0x0000000104865f07: mov    %r8d,0x60(%rsp)
  0x0000000104865f0c: mov    %rsi,0x8(%rsp)
  0x0000000104865f11: mov    %r9d,0x4(%rsp)
  0x0000000104865f16: mov    0x14(%rsp),%r11d
  0x0000000104865f1b: mov    %r11d,0x10(%rsp)
  0x0000000104865f20: mov    %r14,0x18(%rsp)
  0x0000000104865f25: mov    %edi,0x14(%rsp)
  0x0000000104865f29: mov    %ecx,0x20(%rsp)
  0x0000000104865f2d: mov    %edx,0x24(%rsp)
  0x0000000104865f31: mov    $0xffffffe4,%esi
  0x0000000104865f36: nop
  0x0000000104865f37: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [24]=Oop off=700}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104865f3c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000104865f41: mov    %rsi,%rbp
  0x0000000104865f44: mov    %r8d,0x60(%rsp)
  0x0000000104865f49: mov    %r10d,(%rsp)
  0x0000000104865f4d: mov    0x14(%rsp),%r10d
  0x0000000104865f52: mov    %r10d,0x4(%rsp)
  0x0000000104865f57: mov    %r14,0x8(%rsp)
  0x0000000104865f5c: mov    %edi,0x10(%rsp)
  0x0000000104865f60: mov    %ecx,0x14(%rsp)
  0x0000000104865f64: mov    %edx,0x18(%rsp)
  0x0000000104865f68: mov    $0xffffff86,%esi
  0x0000000104865f6d: xchg   %ax,%ax
  0x0000000104865f6f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=756}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x0000000104865f74: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104865f79: mov    %rsi,%rbp
  0x0000000104865f7c: mov    %r8d,0x60(%rsp)
  0x0000000104865f81: mov    %r10d,(%rsp)
  0x0000000104865f85: mov    0x14(%rsp),%r10d
  0x0000000104865f8a: mov    %r10d,0x4(%rsp)
  0x0000000104865f8f: mov    %r14,0x8(%rsp)
  0x0000000104865f94: mov    %edi,0x10(%rsp)
  0x0000000104865f98: mov    %ecx,0x14(%rsp)
  0x0000000104865f9c: mov    %edx,0x18(%rsp)
  0x0000000104865fa0: mov    $0xffffff7e,%esi
  0x0000000104865fa5: xchg   %ax,%ax
  0x0000000104865fa7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=812}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x0000000104865fac: callq  0x0000000103c85e14  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x0000000104865fb1: mov    %eax,%r9d
  0x0000000104865fb4: mov    %r10d,%eax
  0x0000000104865fb7: jmpq   0x0000000104865e86
  0x0000000104865fbc: mov    %r8d,0x60(%rsp)
  0x0000000104865fc1: mov    %eax,(%rsp)
  0x0000000104865fc4: mov    %rsi,0x8(%rsp)
  0x0000000104865fc9: mov    %r9d,0x10(%rsp)
  0x0000000104865fce: mov    %r14,0x18(%rsp)
  0x0000000104865fd3: mov    %edi,0x20(%rsp)
  0x0000000104865fd7: mov    %ecx,0x24(%rsp)
  0x0000000104865fdb: mov    %edx,0x28(%rsp)
  0x0000000104865fdf: mov    %r10d,0x2c(%rsp)
  0x0000000104865fe4: mov    %r13d,0x30(%rsp)
  0x0000000104865fe9: mov    $0xffffffe4,%esi
  0x0000000104865fee: nop
  0x0000000104865fef: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [24]=Oop off=884}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000104865ff4: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000104865ff9: mov    %rsi,%rbp
  0x0000000104865ffc: mov    %r8d,0x60(%rsp)
  0x0000000104866001: mov    %eax,(%rsp)
  0x0000000104866004: mov    %r9d,0x4(%rsp)
  0x0000000104866009: mov    0x14(%rsp),%r8d
  0x000000010486600e: mov    %r8d,0x8(%rsp)
  0x0000000104866013: mov    %edi,0xc(%rsp)
  0x0000000104866017: mov    %ecx,0x18(%rsp)
  0x000000010486601b: mov    %edx,0x1c(%rsp)
  0x000000010486601f: mov    %r10d,0x20(%rsp)
  0x0000000104866024: mov    %r11d,0x28(%rsp)
  0x0000000104866029: mov    %r14,0x30(%rsp)
  0x000000010486602e: mov    %r13d,0x2c(%rsp)
  0x0000000104866033: mov    $0xffffffe4,%esi
  0x0000000104866038: data32 xchg %ax,%ax
  0x000000010486603b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [48]=Oop off=960}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866040: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000104866045: mov    %rsi,%rbp
  0x0000000104866048: mov    %edx,0x60(%rsp)
  0x000000010486604c: mov    %r11d,(%rsp)
  0x0000000104866050: mov    %ecx,0x10(%rsp)
  0x0000000104866054: mov    %r10d,0x14(%rsp)
  0x0000000104866059: mov    %r8,0x18(%rsp)
  0x000000010486605e: mov    %edi,0x20(%rsp)
  0x0000000104866062: mov    $0xffffffe4,%esi
  0x0000000104866067: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=Oop off=1004}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010486606c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000104866071: mov    %rsi,(%rsp)
  0x0000000104866075: mov    %r8d,0x60(%rsp)
  0x000000010486607a: mov    %eax,0x8(%rsp)
  0x000000010486607e: mov    %r9d,0xc(%rsp)
  0x0000000104866083: mov    0x14(%rsp),%r9d
  0x0000000104866088: mov    %r9d,0x10(%rsp)
  0x000000010486608d: mov    %r14,0x18(%rsp)
  0x0000000104866092: mov    %edi,0x14(%rsp)
  0x0000000104866096: mov    %ecx,0x20(%rsp)
  0x000000010486609a: mov    %edx,0x24(%rsp)
  0x000000010486609e: mov    %r10d,0x28(%rsp)
  0x00000001048660a3: mov    %r13d,0x2c(%rsp)
  0x00000001048660a8: mov    %r11d,0x30(%rsp)
  0x00000001048660ad: mov    $0xffffff65,%esi
  0x00000001048660b2: nop
  0x00000001048660b3: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop off=1080}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x00000001048660b8: callq  0x0000000103c85e14  ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x00000001048660bd: mov    %rsi,%rbp
  0x00000001048660c0: mov    %edx,0x60(%rsp)
  0x00000001048660c4: mov    %r8,0x8(%rsp)
  0x00000001048660c9: mov    %r9d,0x4(%rsp)
  0x00000001048660ce: mov    %edi,0x10(%rsp)
  0x00000001048660d2: mov    %r10d,0x18(%rsp)
  0x00000001048660d7: mov    %ecx,0x1c(%rsp)
  0x00000001048660db: mov    $0xffffff65,%esi
  0x00000001048660e0: data32 xchg %ax,%ax
  0x00000001048660e3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1128}
                                                ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x00000001048660e8: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x00000001048660ed: mov    %rsi,%rbp
  0x00000001048660f0: mov    %edx,0x60(%rsp)
  0x00000001048660f4: mov    %ecx,(%rsp)
  0x00000001048660f7: mov    %r8,0x8(%rsp)
  0x00000001048660fc: mov    %r9d,0x4(%rsp)
  0x0000000104866101: mov    %edi,0x10(%rsp)
  0x0000000104866105: mov    %r10d,0x18(%rsp)
  0x000000010486610a: mov    $0xffffff65,%esi
  0x000000010486610f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1172}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x0000000104866114: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x0000000104866119: mov    %rsi,%rbp
  0x000000010486611c: mov    %edx,0x60(%rsp)
  0x0000000104866120: mov    %r11d,(%rsp)
  0x0000000104866124: mov    %r8,0x8(%rsp)
  0x0000000104866129: mov    %r9d,0x4(%rsp)
  0x000000010486612e: mov    %r10d,0x14(%rsp)
  0x0000000104866133: mov    %ecx,0x18(%rsp)
  0x0000000104866137: mov    $0xffffff65,%esi
  0x000000010486613c: data32 xchg %ax,%ax
  0x000000010486613f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1220}
                                                ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x0000000104866144: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x0000000104866149: mov    $0xfffffff6,%esi
  0x000000010486614e: mov    %r9d,%ebp
  0x0000000104866151: xchg   %ax,%ax
  0x0000000104866153: callq  0x00000001047dc1a0  ; OopMap{off=1240}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000104866158: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x000000010486615d: mov    %rsi,%rbp
  0x0000000104866160: mov    %r8d,0x60(%rsp)
  0x0000000104866165: mov    %r9d,(%rsp)
  0x0000000104866169: mov    0x14(%rsp),%r11d
  0x000000010486616e: mov    %r11d,0x4(%rsp)
  0x0000000104866173: mov    %r14,0x8(%rsp)
  0x0000000104866178: mov    %edi,0x10(%rsp)
  0x000000010486617c: mov    %ecx,0x14(%rsp)
  0x0000000104866180: mov    %edx,0x18(%rsp)
  0x0000000104866184: mov    $0xffffff86,%esi
  0x0000000104866189: xchg   %ax,%ax
  0x000000010486618b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=1296}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x0000000104866190: callq  0x0000000103c85e14  ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)
                                                ;   {runtime_call}
  0x0000000104866195: hlt    
  0x0000000104866196: hlt    
  0x0000000104866197: hlt    
  0x0000000104866198: hlt    
  0x0000000104866199: hlt    
  0x000000010486619a: hlt    
  0x000000010486619b: hlt    
  0x000000010486619c: hlt    
  0x000000010486619d: hlt    
  0x000000010486619e: hlt    
  0x000000010486619f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001048661a0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001048661a5: callq  0x00000001048661aa
  0x00000001048661aa: subq   $0x5,(%rsp)
  0x00000001048661af: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048661b4: hlt    
  0x00000001048661b5: hlt    
  0x00000001048661b6: hlt    
  0x00000001048661b7: hlt    
<nmethod compile_id='70' compiler='C2' entry='0x0000000104865c80' size='3680' address='0x0000000104865b10' relocation_offset='296' insts_offset='368' stub_offset='1680' scopes_data_offset='1712' scopes_pcs_offset='2368' dependencies_offset='3648' nul_chk_table_offset='3656' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5044' iicount='639' decompiles='1' unstable_if_traps='1' stamp='0.387'/>
<writer thread='7171'/>
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType_B3 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.github.arnaudroger.generated.SimplifiedBenchmark_jmhType from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.SampleBuffer from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ProfilerFactory from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ProfilerException from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.lang.reflect.InvocationTargetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.profile.Profiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.InternalProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ClassloaderProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010486ae50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108eb2698} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010486afa0: mov    0x8(%rsi),%r10d
  0x000000010486afa4: shl    $0x3,%r10
  0x000000010486afa8: cmp    %r10,%rax
  0x000000010486afab: jne    0x000000010481ce20
<writer thread='7171'/>
[Loaded org.openjdk.jmh.profile.CompilerProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='19715'/>
  ;   {runtime_call}
  0x000000010486afb1: data32 xchg %ax,%ax
  0x000000010486afb4: nopl   0x0(%rax,%rax,1)
  0x000000010486afbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010486afc0: mov    %eax,-0x14000(%rsp)
  0x000000010486afc7: push   %rbp
  0x000000010486afc8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010486afcc: mov    %rsi,(%rsp)
  0x000000010486afd0: mov    0x10(%rsi),%r8d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010486afd4: mov    0xc(%r12,%r8,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010486b217
  0x000000010486afd9: mov    %edx,%r9d
  0x000000010486afdc: sub    %r11d,%r9d
  0x000000010486afdf: test   %r9d,%r9d
  0x000000010486afe2: jle    0x000000010486b129  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010486afe8: mov    %r11d,%r10d
  0x000000010486afeb: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486afee: mov    %r10d,%ecx
  0x000000010486aff1: sub    %edx,%ecx
  0x000000010486aff3: add    $0x2,%ecx
  0x000000010486aff6: test   %ecx,%ecx
  0x000000010486aff8: jl     0x000000010486b000  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486affa: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486affe: jmp    0x000000010486b003
  0x000000010486b000: mov    %edx,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486b003: test   %r10d,%r10d
  0x000000010486b006: jle    0x000000010486b014  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486b008: mov    $0x7ffffff7,%ecx
  0x000000010486b00d: sub    %r10d,%ecx
  0x000000010486b010: test   %ecx,%ecx
  0x000000010486b012: jge    0x000000010486b02f  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486b014: mov    %r11d,0x8(%rsp)
  0x000000010486b019: mov    %r8d,%ebp
  0x000000010486b01c: data32 xchg %ax,%ax
  0x000000010486b01f: callq  0x000000010481d020  ; OopMap{rbp=NarrowOop [0]=Oop off=132}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010486b024: mov    %eax,%r10d
  0x000000010486b027: mov    %ebp,%r8d
  0x000000010486b02a: mov    0x8(%rsp),%r11d    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486b02f: cmp    $0x80000,%r10d
  0x000000010486b036: ja     0x000000010486b1d9
  0x000000010486b03c: movslq %r10d,%rbx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b03f: shl    %rbx
  0x000000010486b042: lea    (%r12,%r8,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010486b046: add    $0x17,%rbx
  0x000000010486b04a: mov    %rbx,%rax
  0x000000010486b04d: and    $0xfffffffffffffff8,%rax
  0x000000010486b051: cmp    $0x80000,%r10d
  0x000000010486b058: ja     0x000000010486b175
  0x000000010486b05e: mov    0x60(%r15),%rbp
  0x000000010486b062: mov    %rbp,%r9
  0x000000010486b065: add    %rax,%r9
  0x000000010486b068: cmp    0x70(%r15),%r9
  0x000000010486b06c: jae    0x000000010486b175
  0x000000010486b072: mov    %r9,0x60(%r15)
  0x000000010486b076: prefetchnta 0xc0(%r9)
  0x000000010486b07e: movq   $0x1,0x0(%rbp)
  0x000000010486b086: prefetchnta 0x100(%r9)
  0x000000010486b08e: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010486b095: mov    %r10d,0xc(%rbp)
  0x000000010486b099: prefetchnta 0x140(%r9)
  0x000000010486b0a1: prefetchnta 0x180(%r9)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b0a9: cmp    %r10d,%r11d
  0x000000010486b0ac: mov    %r10d,%r9d
  0x000000010486b0af: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b0b3: mov    %rbp,%rsi
  0x000000010486b0b6: add    $0x10,%rsi
  0x000000010486b0ba: shr    $0x3,%rbx
  0x000000010486b0be: mov    %rbx,%rcx
  0x000000010486b0c1: add    $0xfffffffffffffffe,%rcx
  0x000000010486b0c5: cmp    %r9d,%r11d
  0x000000010486b0c8: jb     0x000000010486b1e1
  0x000000010486b0ce: cmp    %r9d,%r10d
  0x000000010486b0d1: jb     0x000000010486b1e1
  0x000000010486b0d7: test   %r9d,%r9d
  0x000000010486b0da: jle    0x000000010486b205
  0x000000010486b0e0: lea    0x10(%r12,%r8,8),%r11
  0x000000010486b0e5: cmp    %r10d,%r9d
  0x000000010486b0e8: jl     0x000000010486b135
  0x000000010486b0ea: add    $0xfffffffffffffff0,%rax
  0x000000010486b0ee: shr    $0x3,%rax
  0x000000010486b0f2: mov    %r11,%rdi
  0x000000010486b0f5: mov    %rax,%rdx
  0x000000010486b0f8: movabs $0x104829780,%r10
  0x000000010486b102: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b105: mov    %rbp,%r10
  0x000000010486b108: shr    $0x3,%r10
  0x000000010486b10c: mov    (%rsp),%r11
  0x000000010486b110: mov    %r10d,0x10(%r11)
  0x000000010486b114: mov    %r11,%r10
  0x000000010486b117: shr    $0x9,%r10
  0x000000010486b11b: movabs $0x104297000,%r11
  0x000000010486b125: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010486b129: add    $0x40,%rsp
  0x000000010486b12d: pop    %rbp
  0x000000010486b12e: test   %eax,-0x2081134(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486b134: retq   
  0x000000010486b135: movslq %r9d,%rdx
  0x000000010486b138: mov    %rdx,%r10
  0x000000010486b13b: shl    %r10
  0x000000010486b13e: add    $0x10,%r10
  0x000000010486b142: mov    %r10,%r8
  0x000000010486b145: and    $0xfffffffffffffff9,%r8
  0x000000010486b149: mov    %rbp,%rdi
  0x000000010486b14c: add    %r8,%rdi
  0x000000010486b14f: shr    $0x3,%r10
  0x000000010486b153: sub    %r10,%rbx
  0x000000010486b156: mov    %rbx,%rcx
  0x000000010486b159: xor    %rax,%rax
  0x000000010486b15c: shl    $0x3,%rcx
  0x000000010486b160: rep rex.W stos %al,%es:(%rdi)
  0x000000010486b163: mov    %r11,%rdi
  0x000000010486b166: movabs $0x1048294c0,%r10
  0x000000010486b170: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b173: jmp    0x000000010486b105
  0x000000010486b175: mov    %r11d,0x28(%rsp)
  0x000000010486b17a: mov    %r8d,0xc(%rsp)
  0x000000010486b17f: mov    %rax,0x20(%rsp)
  0x000000010486b184: mov    %rdx,0x18(%rsp)
  0x000000010486b189: mov    %rbx,0x10(%rsp)
  0x000000010486b18e: mov    %r10d,0x8(%rsp)
  0x000000010486b193: mov    (%rsp),%rbp
  0x000000010486b197: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010486b1a1: mov    %r10d,%edx
  0x000000010486b1a4: data32 xchg %ax,%ax
  0x000000010486b1a7: callq  0x0000000104846b60  ; OopMap{rbp=Oop [12]=NarrowOop [24]=Oop off=524}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010486b1ac: mov    %rax,%r11
  0x000000010486b1af: mov    %rbp,(%rsp)
  0x000000010486b1b3: mov    0x8(%rsp),%r10d
  0x000000010486b1b8: mov    0x10(%rsp),%rbx
  0x000000010486b1bd: mov    0x18(%rsp),%rdx
  0x000000010486b1c2: mov    0x20(%rsp),%rax
  0x000000010486b1c7: mov    %r11,%rbp
  0x000000010486b1ca: mov    0xc(%rsp),%r8d
  0x000000010486b1cf: mov    0x28(%rsp),%r11d
  0x000000010486b1d4: jmpq   0x000000010486b0a9
  0x000000010486b1d9: movslq %r10d,%rbx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b1dc: jmpq   0x000000010486b03f
  0x000000010486b1e1: mov    %rsi,%rdi
  0x000000010486b1e4: xor    %rax,%rax
  0x000000010486b1e7: shl    $0x3,%rcx
  0x000000010486b1eb: rep rex.W stos %al,%es:(%rdi)
  0x000000010486b1ee: mov    %rdx,%rsi
  0x000000010486b1f1: xor    %edx,%edx
  0x000000010486b1f3: mov    %rbp,%rcx
  0x000000010486b1f6: xor    %r8d,%r8d
  0x000000010486b1f9: xchg   %ax,%ax
  0x000000010486b1fb: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop off=608}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010486b200: jmpq   0x000000010486b105
  0x000000010486b205: mov    %rsi,%rdi
  0x000000010486b208: xor    %rax,%rax
  0x000000010486b20b: shl    $0x3,%rcx
  0x000000010486b20f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b212: jmpq   0x000000010486b105
  0x000000010486b217: mov    $0xfffffff6,%esi
  0x000000010486b21c: data32 xchg %ax,%ax
  0x000000010486b21f: callq  0x00000001047dc1a0  ; OopMap{off=644}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010486b224: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486b229: jmp    0x000000010486b22b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010486b22b: mov    %rax,%rsi
  0x000000010486b22e: jmp    0x000000010486b233  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010486b230: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x000000010486b233: add    $0x40,%rsp
  0x000000010486b237: pop    %rbp
  0x000000010486b238: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010486b23d: hlt    
  0x000000010486b23e: hlt    
  0x000000010486b23f: hlt    
[Stub Code]
  0x000000010486b240: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010486b24a: jmpq   0x000000010486b24a  ;   {runtime_call}
[Exception Handler]
  0x000000010486b24f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010486b254: callq  0x000000010486b259
  0x000000010486b259: subq   $0x5,(%rsp)
  0x000000010486b25e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486b263: hlt    
  0x000000010486b264: hlt    
  0x000000010486b265: hlt    
  0x000000010486b266: hlt    
  0x000000010486b267: hlt    
<nmethod compile_id='71' compiler='C2' entry='0x000000010486afa0' size='1832' address='0x000000010486ae50' relocation_offset='296' insts_offset='336' stub_offset='1008' scopes_data_offset='1080' scopes_pcs_offset='1272' dependencies_offset='1736' handler_table_offset='1744' nul_chk_table_offset='1816' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5076' backedge_count='1' iicount='10076' stamp='0.392'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.profile.GCProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.AbstractHotspotProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotClassloadingProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotCompilationProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotMemoryProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotRuntimeProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.HotspotThreadProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.StackProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.ExternalProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfNormProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.AbstractPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.LinuxPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<task_queued compile_id='72' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5000' backedge_count='2184' iicount='7816' stamp='0.398' comment='count' hot_count='7816'/>
[Loaded org.openjdk.jmh.profile.WinPerfAsmProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.profile.PausesProfiler from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.AbstractQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ArrayBlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractOwnableSynchronizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock$Sync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock$NonfairSync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x000000010486b590:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e42df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/St
<writer thread='7171'/>
[Loaded java.util.concurrent.locks.Condition from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
ring&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010486b6e0: mov    0x8(%rsi),%r10d
  0x000000010486b6e4: shl    $0x3,%r10
  0x000000010486b6e8: cmp    %r10,%rax
  0x000000010486b6eb: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010486b6f1: data32 xchg %ax,%ax
  0x000000010486b6f4: nopl   0x0(%rax,%rax,1)
  0x000000010486b6fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010486b700: mov    %eax,-0x14000(%rsp)
  0x000000010486b707: push   %rbp
  0x000000010486b708: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)

  0x000000010486b70c: mov    %rsi,%r10
  0x000000010486b70f: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ; implicit exception: dispatches to 0x000000010486b7d9
  0x000000010486b713: mov    0xc(%r12,%r8,8),%ebx  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010486b7e9
  0x000000010486b718: mov    0xc(%rsi),%ebp     ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010486b71b: test   %ecx,%ecx
  0x000000010486b71d: jl     0x000000010486b7b5  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010486b723: mov    0xc(%r12,%rbp,8),%r9d  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010486b7f9
  0x000000010486b728: mov    %r9d,%r10d
  0x000000010486b72b: sub    %ebx,%r10d
  0x000000010486b72e: xor    %eax,%eax
  0x000000010486b730: cmp    %r10d,%ecx
  0x000000010486b733: jg     0x000000010486b78d  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010486b735: mov    %ebx,%edi
  0x000000010486b737: dec    %edi               ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010486b739: test   %edi,%edi
  0x000000010486b73b: jl     0x000000010486b788  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010486b73d: cmp    %r9d,%ecx
  0x000000010486b740: jae    0x000000010486b799  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)

  0x000000010486b742: mov    %ecx,%r10d
  0x000000010486b745: add    %ebx,%r10d
  0x000000010486b748: dec    %r10d              ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)

  0x000000010486b74b: cmp    %r9d,%r10d
  0x000000010486b74e: jae    0x000000010486b799
  0x000000010486b750: test   %ebx,%ebx
  0x000000010486b752: jbe    0x000000010486b799
  0x000000010486b754: cmp    %ebx,%edi
  0x000000010486b756: jae    0x000000010486b799
  0x000000010486b758: movslq %ebx,%r11
  0x000000010486b75b: lea    (%r12,%rbp,8),%r9
  0x000000010486b75f: lea    (%r12,%r8,8),%rcx  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)

  0x000000010486b763: mov    %r10d,%ebx
  0x000000010486b766: sub    %edi,%ebx
  0x000000010486b768: movzwl 0x10(%r9,%rbx,2),%r8d  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010486b76e: movslq %edi,%rbx
  0x000000010486b771: mov    %r11,%rdx
  0x000000010486b774: sub    %rbx,%rdx
  0x000000010486b777: movzwl 0xe(%rcx,%rdx,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010486b77c: cmp    %ebx,%r8d
  0x000000010486b77f: jne    0x000000010486b78d  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010486b781: dec    %edi               ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010486b783: cmp    $0xffffffffffffffff,%edi
  0x000000010486b786: jg     0x000000010486b763  ;*iconst_1
                                                ; - java.lang.String::startsWith@70 (line 1417)

  0x000000010486b788: mov    $0x1,%eax          ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)

  0x000000010486b78d: add    $0x30,%rsp
  0x000000010486b791: pop    %rbp
  0x000000010486b792: test   %eax,-0x2081798(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486b798: retq   
  0x000000010486b799: mov    $0xffffff86,%esi
  0x000000010486b79e: mov    %edi,(%rsp)
  0x000000010486b7a1: mov    %ecx,0x4(%rsp)
  0x000000010486b7a5: mov    %r8d,0x8(%rsp)
  0x000000010486b7aa: nop
  0x000000010486b7ab: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [8]=NarrowOop off=208}
                                                ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)
                                                ;   {runtime_call}
  0x000000010486b7b0: callq  0x0000000103c85e14  ;*aload_3
                                                ; - java.lang.String::startsWith@50 (line 1413)
                                                ;   {runtime_call}
  0x000000010486b7b5: mov    $0xffffff65,%esi
  0x000000010486b7ba: mov    %r10,(%rsp)
  0x000000010486b7be: mov    %ecx,0xc(%rsp)
  0x000000010486b7c2: mov    %r8d,0x10(%rsp)
  0x000000010486b7c7: mov    %ebx,0x14(%rsp)
  0x000000010486b7cb: mov    %ecx,0x18(%rsp)
  0x000000010486b7cf: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [16]=NarrowOop off=244}
                                                ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)
                                                ;   {runtime_call}
  0x000000010486b7d4: callq  0x0000000103c85e14  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)
                                                ;   {runtime_call}
  0x000000010486b7d9: mov    $0xfffffff6,%esi
  0x000000010486b7de: nop
  0x000000010486b7df: callq  0x00000001047dc1a0  ; OopMap{off=260}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010486b7e4: callq  0x0000000103c85e14  ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010486b7e9: mov    $0xfffffff6,%esi
  0x000000010486b7ee: nop
  0x000000010486b7ef: callq  0x00000001047dc1a0  ; OopMap{off=276}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010486b7f4: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010486b7f9: mov    $0xfffffff6,%esi
  0x000000010486b7fe: nop
  0x000000010486b7ff: callq  0x00000001047dc1a0  ; OopMap{off=292}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010486b804: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010486b809: hlt    
  0x000000010486b80a: hlt    
  0x000000010486b80b: hlt    
  0x000000010486b80c: hlt    
  0x000000010486b80d: hlt    
  0x000000010486b80e: hlt    
  0x000000010486b80f: hlt    
  0x000000010486b810: hlt    
  0x000000010486b811: hlt    
  0x000000010486b812: hlt    
  0x000000010486b813: hlt    
  0x000000010486b814: hlt    
  0x000000010486b815: hlt    
  0x000000010486b816: hlt    
  0x000000010486b817: hlt    
  0x000000010486b818: hlt    
  0x000000010486b819: hlt    
  0x000000010486b81a: hlt    
  0x000000010486b81b: hlt    
  0x000000010486b81c: hlt    
  0x000000010486b81d: hlt    
  0x000000010486b81e: hlt    
  0x000000010486b81f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010486b820: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010486b825: callq  0x000000010486b82a
  0x000000010486b82a: subq   $0x5,(%rsp)
  0x000000010486b82f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486b834: hlt    
  0x000000010486b835: hlt    
  0x000000010486b836: hlt    
  0x000000010486b837: hlt    
<nmethod compile_id='72' compiler='C2' entry='0x000000010486b6e0' size='1392' address='0x000000010486b590' relocation_offset='296' insts_offset='336' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='872' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5085' backedge_count='2198' iicount='7901' stamp='0.401'/>
<writer thread='7171'/>
[Loaded java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StrictMath from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='73' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='5000' backedge_count='1' iicount='10000' stamp='0.402' comment='count' hot_count='10000'/>
<task_queued compile_id='74' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='349' backedge_count='5000' iicount='349' stamp='0.402' comment='count' hot_count='349'/>
<writer thread='19715'/>
Decoding compiled method 0x00000001048658d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e7b2f0} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/reflect/Field&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000104865a20: mov    0x8(%rsi),%r10d
  0x0000000104865a24: shl    $0x3,%r10
  0x0000000104865a28: cmp    %r10,%rax
  0x0000000104865a2b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104865a31: data32 xchg %ax,%ax
  0x0000000104865a34: nopl   0x0(%rax,%rax,1)
  0x0000000104865a3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104865a40: sub    $0x18,%rsp
  0x0000000104865a47: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.reflect.Field::getName@-1 (line 171)

  0x0000000104865a4c: mov    0x20(%rsi),%r11d
  0x0000000104865a50: mov    %r11,%rax
  0x0000000104865a53: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Field::getName@1 (line 171)

  0x0000000104865a57: add    $0x10,%rsp
  0x0000000104865a5b: pop    %rbp
  0x0000000104865a5c: test   %eax,-0x207ba62(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104865a62: retq   
  0x0000000104865a63: hlt    
  0x0000000104865a64: hlt    
  0x0000000104865a65: hlt    
  0x0000000104865a66: hlt    
  0x0000000104865a67: hlt    
  0x0000000104865a68: hlt    
  0x0000000104865a69: hlt    
  0x0000000104865a6a: hlt    
  0x0000000104865a6b: hlt    
  0x0000000104865a6c: hlt    
  0x0000000104865a6d: hlt    
  0x0000000104865a6e: hlt    
  0x0000000104865a6f: hlt    
  0x0000000104865a70: hlt    
  0x0000000104865a71: hlt    
  0x0000000104865a72: hlt    
  0x0000000104865a73: hlt    
  0x0000000104865a74: hlt    
  0x0000000104865a75: hlt    
  0x0000000104865a76: hlt    
  0x0000000104865a77: hlt    
  0x0000000104865a78: hlt    
  0x0000000104865a79: hlt    
  0x0000000104865a7a: hlt    
  0x0000000104865a7b: hlt    
  0x0000000104865a7c: hlt    
  0x0000000104865a7d: hlt    
  0x0000000104865a7e: hlt    
  0x0000000104865a7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104865a80: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104865a85: callq  0x0000000104865a8a
  0x0000000104865a8a: subq   $0x5,(%rsp)
  0x0000000104865a8f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104865a94: hlt    
  0x0000000104865a95: hlt    
  0x0000000104865a96: hlt    
  0x0000000104865a97: hlt    
<nmethod compile_id='73' compiler='C2' entry='0x0000000104865a20' size='552' address='0x00000001048658d0' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='7732' backedge_count='1' iicount='12740' stamp='0.402'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.WorkerThreadFactory from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.Executors from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executors$DefaultThreadFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ExecutorService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.AbstractExecutorService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.RejectedExecutionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor$AbortPolicy from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.LinkedBlockingQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.LinkedBlockingQueue$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.link.OutputFormatFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.ClassConventions from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor28 from __JVM_DefineClass__]
[Loaded java.io.ObjectStreamClass$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$MemberSignature from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TimSort from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamClass$5 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigestSpi from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigest from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.GetInstance from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.Providers from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InheritableThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderConfig from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Decoding compiled method 0x0000000104861990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108e4df78} &apos;searchFields&apos; &apos;([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;&apos; in &apos;java/lang/Class&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/lang/reflect/
<writer thread='7171'/>
[Loaded java.security.Provider from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='19715'/>
Field;&apos;
  # parm1:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000104861b20: mov    %eax,-0x14000(%rsp)
  0x0000000104861b27: push   %rbp
  0x0000000104861b28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Class::searchFields@-1 (line 2956)

  0x0000000104861b2c: mov    %rsi,%rbp
  0x0000000104861b2f: test   %rdx,%rdx
  0x0000000104861b32: je     0x0000000104861d64
  0x0000000104861b38: mov    %rdx,%rsi
  0x0000000104861b3b: callq  0x000000010481d020  ; OopMap{rbp=Oop off=32}
                                                ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {optimized virtual_call}
  0x0000000104861b40: mov    %rbp,%r9
  0x0000000104861b43: mov    0xc(%r9),%ecx      ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ; implicit exception: dispatches to 0x0000000104861db5
  0x0000000104861b47: test   %ecx,%ecx
  0x0000000104861b49: jle    0x0000000104861c14  ;*if_icmpge
                                                ; - java.lang.Class::searchFields@10 (line 2957)

  0x0000000104861b4f: test   %ecx,%ecx
  0x0000000104861b51: jbe    0x0000000104861d75
  0x0000000104861b57: mov    %ecx,%r10d
  0x0000000104861b5a: dec    %r10d
  0x0000000104861b5d: cmp    %ecx,%r10d
  0x0000000104861b60: jae    0x0000000104861d75  ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x0000000104861b66: mov    0x10(%r9),%r11d    ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861b6a: mov    0x20(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861b6f: shl    $0x3,%r10
  0x0000000104861b73: cmp    %rax,%r10
  0x0000000104861b76: je     0x0000000104861d41  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861b7c: mov    %ecx,%r10d
  0x0000000104861b7f: add    $0xfffffffffffffffd,%r10d
  0x0000000104861b83: cmp    $0x1,%r10d
  0x0000000104861b87: jle    0x0000000104861d89
  0x0000000104861b8d: mov    $0x1,%ebp          ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x0000000104861b92: mov    0x10(%r9,%rbp,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861b97: mov    0x20(%r12,%r8,8),%r11d  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861b9c: shl    $0x3,%r11
  0x0000000104861ba0: cmp    %rax,%r11
  0x0000000104861ba3: je     0x0000000104861c22  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861ba5: movslq %ebp,%r11
  0x0000000104861ba8: mov    0x14(%r9,%r11,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861bad: mov    0x20(%r12,%r8,8),%ebx  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861bb2: mov    %rbx,%r8
  0x0000000104861bb5: shl    $0x3,%r8
  0x0000000104861bb9: cmp    %rax,%r8
  0x0000000104861bbc: je     0x0000000104861c1b  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861bbe: mov    0x18(%r9,%r11,4),%r8d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861bc3: mov    0x20(%r12,%r8,8),%ebx  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861bc8: mov    %rbx,%r8
  0x0000000104861bcb: shl    $0x3,%r8
  0x0000000104861bcf: cmp    %rax,%r8
  0x0000000104861bd2: je     0x0000000104861c1f  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861bd4: mov    0x1c(%r9,%r11,4),%r11d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861bd9: mov    0x20(%r12,%r11,8),%r8d  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861bde: mov    %r8,%r11
  0x0000000104861be1: shl    $0x3,%r11
  0x0000000104861be5: cmp    %rax,%r11
  0x0000000104861be8: je     0x0000000104861c18  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861bea: add    $0x4,%ebp          ;*iinc
                                                ; - java.lang.Class::searchFields@33 (line 2957)

  0x0000000104861bed: cmp    %r10d,%ebp
  0x0000000104861bf0: jl     0x0000000104861b92  ;*if_icmpge
                                                ; - java.lang.Class::searchFields@10 (line 2957)

  0x0000000104861bf2: cmp    %ecx,%ebp
  0x0000000104861bf4: jge    0x0000000104861c14
  0x0000000104861bf6: xchg   %ax,%ax            ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)

  0x0000000104861bf8: mov    0x10(%r9,%rbp,4),%r10d  ;*aaload
                                                ; - java.lang.Class::searchFields@15 (line 2958)

  0x0000000104861bfd: mov    0x20(%r12,%r10,8),%r11d  ; implicit exception: dispatches to 0x0000000104861da5
  0x0000000104861c02: mov    %r11,%r10
  0x0000000104861c05: shl    $0x3,%r10
  0x0000000104861c09: cmp    %rax,%r10
  0x0000000104861c0c: je     0x0000000104861c22  ;*if_acmpne
                                                ; - java.lang.Class::searchFields@20 (line 2958)

  0x0000000104861c0e: inc    %ebp               ;*iinc
                                                ; - java.lang.Class::searchFields@33 (line 2957)

  0x0000000104861c10: cmp    %ecx,%ebp
  0x0000000104861c12: jl     0x0000000104861bf8  ;*aconst_null
                                                ; - java.lang.Class::searchFields@39 (line 2962)

  0x0000000104861c14: xor    %eax,%eax
  0x0000000104861c16: jmp    0x0000000104861c7c
  0x0000000104861c18: add    $0x2,%ebp
  0x0000000104861c1b: inc    %ebp
  0x0000000104861c1d: jmp    0x0000000104861c22
  0x0000000104861c1f: add    $0x2,%ebp          ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x0000000104861c22: movabs $0x76ab00ac8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x0000000104861c2c: cmp    0x70(%r10),%r12d
  0x0000000104861c30: je     0x0000000104861c88  ;*ifnonnull
                                                ; - java.lang.Class::getReflectionFactory@3 (line 3244)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x0000000104861c32: mov    0x10(%r9,%rbp,4),%ebp  ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x0000000104861c37: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x0000000104861c41: mov    0x70(%r10),%r10d   ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@0 (line 415)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861c45: test   %r10d,%r10d
  0x0000000104861c48: je     0x0000000104861d32  ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@11 (line 422)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861c4e: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x0000000104861c58: mov    0x70(%r10),%r10d
  0x0000000104861c5c: mov    %rbp,%rdx
  0x0000000104861c5f: shl    $0x3,%rdx          ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x0000000104861c63: mov    %r10,%rsi
  0x0000000104861c66: shl    $0x3,%rsi          ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@11 (line 422)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861c6a: data32 xchg %ax,%ax
  0x0000000104861c6d: movabs $0xffffffffffffffff,%rax
  0x0000000104861c77: callq  0x000000010481d220  ; OopMap{off=348}
                                                ;*invokeinterface copyField
                                                ; - sun.reflect.ReflectionFactory::copyField@4 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)
                                                ;   {virtual_call}
  0x0000000104861c7c: add    $0x20,%rsp
  0x0000000104861c80: pop    %rbp
  0x0000000104861c81: test   %eax,-0x2077c87(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104861c87: retq   
  0x0000000104861c88: mov    0x60(%r15),%rsi
  0x0000000104861c8c: mov    %rsi,%r10
  0x0000000104861c8f: add    $0x10,%r10
  0x0000000104861c93: cmp    0x70(%r15),%r10
  0x0000000104861c97: jae    0x0000000104861d48
  0x0000000104861c9d: mov    %r10,0x60(%r15)
  0x0000000104861ca1: prefetchnta 0xc0(%r10)
  0x0000000104861ca9: mov    $0xf80029d2,%r10d  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x0000000104861caf: shl    $0x3,%r10
  0x0000000104861cb3: mov    0xa8(%r10),%r10
  0x0000000104861cba: mov    %r10,(%rsi)
  0x0000000104861cbd: movl   $0xf80029d2,0x8(%rsi)  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x0000000104861cc4: mov    %r12d,0xc(%rsi)
  0x0000000104861cc8: mov    %r9,(%rsp)         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.Class::getReflectionFactory@10 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x0000000104861ccc: data32 xchg %ax,%ax
  0x0000000104861ccf: callq  0x000000010481d420  ; OopMap{[0]=Oop off=436}
                                                ;*invokestatic doPrivileged
                                                ; - java.lang.Class::getReflectionFactory@13 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {static_call}
  0x0000000104861cd4: mov    %rax,%r8
  0x0000000104861cd7: mov    0x8(%rax),%r10d    ; implicit exception: dispatches to 0x0000000104861dc5
  0x0000000104861cdb: cmp    $0xf8002de8,%r10d  ;   {metadata(&apos;sun/reflect/ReflectionFactory&apos;)}
  0x0000000104861ce2: jne    0x0000000104861d93  ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x0000000104861ce8: mov    (%rsp),%r10
  0x0000000104861cec: mov    0x10(%r10,%rbp,4),%ebp  ;*aaload
                                                ; - java.lang.Class::searchFields@28 (line 2959)

  0x0000000104861cf1: movabs $0x76ab069a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/reflect/ReflectionFactory&apos;)}
  0x0000000104861cfb: mov    0x70(%r10),%r10d   ;*getstatic langReflectAccess
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@0 (line 415)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861cff: movabs $0x76ab00ac8,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x0000000104861d09: shr    $0x3,%r8
  0x0000000104861d0d: movabs $0x76ab00ac8,%r9   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Class&apos;)}
  0x0000000104861d17: mov    %r8d,0x70(%r9)
  0x0000000104861d1b: shr    $0x9,%r11
  0x0000000104861d1f: movabs $0x104297000,%r8
  0x0000000104861d29: mov    %r12b,(%r8,%r11,1)  ;*putstatic reflectionFactory
                                                ; - java.lang.Class::getReflectionFactory@19 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x0000000104861d2d: jmpq   0x0000000104861c45
  0x0000000104861d32: mov    $0x1,%esi
  0x0000000104861d37: callq  0x000000010481d420  ; OopMap{rbp=NarrowOop off=540}
                                                ;*invokestatic isPublic
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@7 (line 420)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)
                                                ;   {static_call}
  0x0000000104861d3c: jmpq   0x0000000104861c4e
  0x0000000104861d41: xor    %ebp,%ebp
  0x0000000104861d43: jmpq   0x0000000104861c22
  0x0000000104861d48: mov    %r9,(%rsp)
  0x0000000104861d4c: movabs $0x7c0014e90,%rsi  ;   {metadata(&apos;sun/reflect/ReflectionFactory$GetReflectionFactoryAction&apos;)}
  0x0000000104861d56: nop
  0x0000000104861d57: callq  0x0000000104846960  ; OopMap{[0]=Oop off=572}
                                                ;*new  ; - java.lang.Class::getReflectionFactory@6 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x0000000104861d5c: mov    %rax,%rsi
  0x0000000104861d5f: jmpq   0x0000000104861ccc
  0x0000000104861d64: mov    $0xfffffff6,%esi
  0x0000000104861d69: xchg   %ax,%ax
  0x0000000104861d6b: callq  0x00000001047dc1a0  ; OopMap{off=592}
                                                ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {runtime_call}
  0x0000000104861d70: callq  0x0000000103c85e14  ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)
                                                ;   {runtime_call}
  0x0000000104861d75: mov    $0xffffff86,%esi
  0x0000000104861d7a: mov    %rax,(%rsp)
  0x0000000104861d7e: nop
  0x0000000104861d7f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop off=612}
                                                ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)
                                                ;   {runtime_call}
  0x0000000104861d84: callq  0x0000000103c85e14  ;*aload_0
                                                ; - java.lang.Class::searchFields@13 (line 2958)
                                                ;   {runtime_call}
  0x0000000104861d89: mov    $0x1,%ebp
  0x0000000104861d8e: jmpq   0x0000000104861bf2
  0x0000000104861d93: mov    $0xffffffde,%esi
  0x0000000104861d98: mov    %rax,%rbp
  0x0000000104861d9b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=640}
                                                ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x0000000104861da0: callq  0x0000000103c85e14  ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x0000000104861da5: mov    $0xfffffff6,%esi
  0x0000000104861daa: nop
  0x0000000104861dab: callq  0x00000001047dc1a0  ; OopMap{off=656}
                                                ;*invokevirtual getName
                                                ; - java.lang.Class::searchFields@16 (line 2958)
                                                ;   {runtime_call}
  0x0000000104861db0: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.lang.Class::searchFields@16 (line 2958)
                                                ;   {runtime_call}
  0x0000000104861db5: mov    $0xfffffff6,%esi
  0x0000000104861dba: nop
  0x0000000104861dbb: callq  0x00000001047dc1a0  ; OopMap{off=672}
                                                ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ;   {runtime_call}
  0x0000000104861dc0: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.Class::searchFields@9 (line 2957)
                                                ;   {runtime_call}
  0x0000000104861dc5: mov    $0xfffffff4,%esi
  0x0000000104861dca: nop
  0x0000000104861dcb: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=688}
                                                ;*checkcast
                                                ; - java.lang.Class::getReflectionFactory@16 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x0000000104861dd0: callq  0x0000000103c85e14  ;*new
                                                ; - java.lang.Class::getReflectionFactory@6 (line 3245)
                                                ; - java.lang.Class::searchFields@23 (line 2959)
                                                ;   {runtime_call}
  0x0000000104861dd5: jmp    0x0000000104861dd9  ;*invokestatic isPublic
                                                ; - sun.reflect.ReflectionFactory::langReflectAccess@7 (line 420)
                                                ; - sun.reflect.ReflectionFactory::copyField@0 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861dd7: jmp    0x0000000104861de3  ;*invokestatic doPrivileged
                                                ; - java.lang.Class::getReflectionFactory@13 (line 3247)
                                                ; - java.lang.Class::searchFields@23 (line 2959)

  0x0000000104861dd9: mov    %rax,%rsi
  0x0000000104861ddc: jmp    0x0000000104861de6  ;*invokevirtual intern
                                                ; - java.lang.Class::searchFields@1 (line 2956)

  0x0000000104861dde: mov    %rax,%rsi
  0x0000000104861de1: jmp    0x0000000104861de6  ;*invokeinterface copyField
                                                ; - sun.reflect.ReflectionFactory::copyField@4 (line 309)
                                                ; - java.lang.Class::searchFields@29 (line 2959)

  0x0000000104861de3: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.Class::searchFields@-1 (line 2956)

  0x0000000104861de6: add    $0x20,%rsp
  0x0000000104861dea: pop    %rbp
  0x0000000104861deb: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104861df0: hlt    
  0x0000000104861df1: hlt    
  0x0000000104861df2: hlt    
  0x0000000104861df3: hlt    
  0x0000000104861df4: hlt    
  0x0000000104861df5: hlt    
  0x0000000104861df6: hlt    
  0x0000000104861df7: hlt    
  0x0000000104861df8: hlt    
  0x0000000104861df9: hlt    
  0x0000000104861dfa: hlt    
  0x0000000104861dfb: hlt    
  0x0000000104861dfc: hlt    
  0x0000000104861dfd: hlt    
  0x0000000104861dfe: hlt    
  0x0000000104861dff: hlt    
[Stub Code]
  0x0000000104861e00: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104861e0a: jmpq   0x0000000104861e0a  ;   {runtime_call}
  0x0000000104861e0f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104861e19: jmpq   0x0000000104861e19  ;   {runtime_call}
  0x0000000104861e1e: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104861e28: jmpq   0x0000000104861e28  ;   {runtime_call}
[Exception Handler]
  0x0000000104861e2d: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104861e32: callq  0x0000000104861e37
  0x0000000104861e37: subq   $0x5,(%rsp)
  0x0000000104861e3c: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104861e41: hlt    
  0x0000000104861e42: hlt    
  0x0000000104861e43: hlt    
  0x0000000104861e44: hlt    
  0x0000000104861e45: hlt    
  0x0000000104861e46: hlt    
  0x0000000104861e47: hlt    
<nmethod compile_id='74' compiler='C2' entry='0x0000000104861b20' size='2688' address='0x0000000104861990' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1256' scopes_pcs_offset='1560' dependencies_offset='2488' handler_table_offset='2496' nul_chk_table_offset='2616' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='435' backedge_count='7819' iicount='435' stamp='0.411'/>
<writer thread='7171'/>
[Loaded sun.security.jca.ProviderList$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$ServiceKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$EngineDescription from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIConverter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$ExceptionalBinaryToASCIIBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$BinaryToASCIIBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$ASCIIToBinaryConverter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FloatingDecimal$PreparedASCIIToBinaryBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FDBigInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.ProviderList$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='70' compiler='C2' count='1' stamp='0.414'>
<jvms bci='3' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5044' iicount='639' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='70' compiler='C2' stamp='0.414'/>
[Loaded sun.security.jca.ProviderConfig$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar]
[Loaded sun.security.provider.Sun from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/jsse.jar]
[Loaded sun.security.provider.SunEntries from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.SunEntries$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureRandomSpi from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$Variant from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<uncommon_trap thread='7171' reason='unstable_if' action='reinterpret' compile_id='59' compiler='C2' count='1' stamp='0.416'>
<jvms bci='2' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5025' iicount='739' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<make_not_entrant thread='7171' compile_id='59' compiler='C2' stamp='0.416'/>
[Loaded sun.security.provider.NativePRNG$RandomIO from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$Blocking from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.NativePRNG$NonBlocking from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$LinkedEntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$Service from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Provider$UString from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.DigestBase from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.SHA from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.jca.GetInstance$Instance from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.MessageDigest$Delegate from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.provider.ByteArrayAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor29 from __JVM_DefineClass__]
[Loaded java.io.UnsupportedEncodingException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$PrivateEntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.TreeMap$EntryIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CountDownLatch from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.CountDownLatch$Sync from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.concurrent.ExecutorCompletionService from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Future from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.RunnableFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.FutureTask from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.FutureTask$WaitNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ExecutorCompletionService$QueueingFuture from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.Executors$RunnableAdapter from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ThreadPoolExecutor$Worker from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.LockSupport from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.Interruptible from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='21251'/>
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$ThreadData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.Random from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded org.github.arnaudroger.SimplifiedBenchmark$Holder from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.UnsafeIntegerFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<task_queued compile_id='75' method='java/lang/String getChars (II[CI)V' bytes='62' count='5000' backedge_count='1' iicount='10000' stamp='0.432' comment='count' hot_count='10000'/>
<task_queued compile_id='76' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='5000' backedge_count='1' iicount='10000' stamp='0.432' comment='count' hot_count='10000'/>
<task_queued compile_id='77' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='5000' backedge_count='1' iicount='10000' stamp='0.432' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010486bc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e42208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x000000010486bd60: mov    0x8(%rsi),%r10d
  0x000000010486bd64: shl    $0x3,%r10
  0x000000010486bd68: cmp    %r10,%rax
  0x000000010486bd6b: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010486bd71: data32 xchg %ax,%ax
  0x000000010486bd74: nopl   0x0(%rax,%rax,1)
  0x000000010486bd7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010486bd80: mov    %eax,-0x14000(%rsp)
  0x000000010486bd87: push   %rbp
  0x000000010486bd88: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)

  0x000000010486bd8c: test   %edx,%edx
  0x000000010486bd8e: jl     0x000000010486be06  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010486bd90: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010486bd93: mov    0xc(%r12,%rdi,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010486be79
  0x000000010486bd98: cmp    %ebp,%ecx
  0x000000010486bd9a: jg     0x000000010486be2d  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010486bda0: cmp    %ecx,%edx
  0x000000010486bda2: jg     0x000000010486be55  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010486bda8: mov    %ecx,%ebx
  0x000000010486bdaa: sub    %edx,%ebx          ;*isub
                                                ; - java.lang.String::getChars@57 (line 826)

  0x000000010486bdac: mov    0xc(%r8),%r11d     ; implicit exception: dispatches to 0x000000010486be89
  0x000000010486bdb0: lea    (%r12,%rdi,8),%rsi  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010486bdb4: test   %r9d,%r9d
  0x000000010486bdb7: jl     0x000000010486bdf6
  0x000000010486bdb9: cmp    %ecx,%ebp
  0x000000010486bdbb: jb     0x000000010486bdf6
  0x000000010486bdbd: mov    %r9d,%r10d
  0x000000010486bdc0: add    %ebx,%r10d
  0x000000010486bdc3: cmp    %r10d,%r11d
  0x000000010486bdc6: jb     0x000000010486bdf6
  0x000000010486bdc8: test   %ebx,%ebx
  0x000000010486bdca: jle    0x000000010486bdf2
  0x000000010486bdcc: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010486bdd1: lea    0x10(%r8,%r9,2),%rsi
  0x000000010486bdd6: movslq %ebx,%rdx
  0x000000010486bdd9: movabs $0x104829580,%r10
  0x000000010486bde3: callq  *%r10
  0x000000010486bde6: add    $0x30,%rsp
  0x000000010486bdea: pop    %rbp
  0x000000010486bdeb: test   %eax,-0x2081df1(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486bdf1: retq   
  0x000000010486bdf2: test   %ebx,%ebx
  0x000000010486bdf4: jge    0x000000010486bde6
  0x000000010486bdf6: mov    %r8,%rcx
  0x000000010486bdf9: mov    %r9d,%r8d
  0x000000010486bdfc: mov    %ebx,%r9d
  0x000000010486bdff: callq  0x0000000104844620  ; OopMap{off=164}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010486be04: jmp    0x000000010486bde6
  0x000000010486be06: mov    %rsi,%rbp
  0x000000010486be09: mov    %ecx,0x4(%rsp)
  0x000000010486be0d: mov    %r8,0x8(%rsp)
  0x000000010486be12: mov    %r9d,0x10(%rsp)
  0x000000010486be17: mov    %edx,0x14(%rsp)
  0x000000010486be1b: mov    $0xffffff65,%esi
  0x000000010486be20: data32 xchg %ax,%ax
  0x000000010486be23: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=200}
                                                ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ;   {runtime_call}
  0x000000010486be28: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ;   {runtime_call}
  0x000000010486be2d: mov    %rsi,(%rsp)
  0x000000010486be31: mov    %edx,0x8(%rsp)
  0x000000010486be35: mov    %r8,0x10(%rsp)
  0x000000010486be3a: mov    %r9d,0x18(%rsp)
  0x000000010486be3f: mov    %ecx,0x1c(%rsp)
  0x000000010486be43: mov    $0xffffff65,%esi
  0x000000010486be48: data32 xchg %ax,%ax
  0x000000010486be4b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [16]=Oop off=240}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ;   {runtime_call}
  0x000000010486be50: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ;   {runtime_call}
  0x000000010486be55: mov    %rsi,%rbp
  0x000000010486be58: mov    %r8,0x8(%rsp)
  0x000000010486be5d: mov    %r9d,0x10(%rsp)
  0x000000010486be62: mov    %edx,0x14(%rsp)
  0x000000010486be66: mov    %ecx,0x18(%rsp)
  0x000000010486be6a: mov    $0xffffff65,%esi
  0x000000010486be6f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=276}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)
                                                ;   {runtime_call}
  0x000000010486be74: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)
                                                ;   {runtime_call}
  0x000000010486be79: mov    $0xfffffff6,%esi
  0x000000010486be7e: nop
  0x000000010486be7f: callq  0x00000001047dc1a0  ; OopMap{off=292}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010486be84: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010486be89: mov    $0xfffffff6,%esi
  0x000000010486be8e: mov    %edx,%ebp
  0x000000010486be90: mov    %r9d,(%rsp)
  0x000000010486be94: mov    %edi,0x4(%rsp)
  0x000000010486be98: mov    %ebx,0x8(%rsp)
  0x000000010486be9c: data32 xchg %ax,%ax
  0x000000010486be9f: callq  0x00000001047dc1a0  ; OopMap{[4]=NarrowOop off=324}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010486bea4: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010486bea9: mov    %rax,%rsi
  0x000000010486beac: add    $0x30,%rsp
  0x000000010486beb0: pop    %rbp
  0x000000010486beb1: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010486beb6: hlt    
  0x000000010486beb7: hlt    
  0x000000010486beb8: hlt    
  0x000000010486beb9: hlt    
  0x000000010486beba: hlt    
  0x000000010486bebb: hlt    
  0x000000010486bebc: hlt    
  0x000000010486bebd: hlt    
  0x000000010486bebe: hlt    
  0x000000010486bebf: hlt    
[Exception Handler]
[Stub Code]
  0x000000010486bec0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010486bec5: callq  0x000000010486beca
  0x000000010486beca: subq   $0x5,(%rsp)
  0x000000010486becf: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486bed4: hlt    
  0x000000010486bed5: hlt    
  0x000000010486bed6: hlt    
  0x000000010486bed7: hlt    
<nmethod compile_id='75' compiler='C2' entry='0x000000010486bd60' size='1280' address='0x000000010486bc10' relocation_offset='296' insts_offset='336' stub_offset='688' scopes_data_offset='720' scopes_pcs_offset='888' dependencies_offset='1224' handler_table_offset='1232' nul_chk_table_offset='1256' method='java/lang/String getChars (II[CI)V' bytes='62' count='8699' backedge_count='1' iicount='13699' stamp='0.434'/>
<writer thread='21251'/>
<task_queued compile_id='78' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='4237' backedge_count='5000' iicount='4237' stamp='0.435' comment='count' hot_count='4237'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010486edd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108eb2ff0} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x60]  (sp of caller)
  0x000000010486ef40: mov    0x8(%rsi),%r10d
  0x000000010486ef44: shl    $0x3,%r10
  0x000000010486ef48: cmp    %r10,%rax
  0x000000010486ef4b: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010486ef51: data32 xchg %ax,%ax
  0x000000010486ef54: nopl   0x0(%rax,%rax,1)
  0x000000010486ef5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010486ef60: mov    %eax,-0x14000(%rsp)
  0x000000010486ef67: push   %rbp
  0x000000010486ef68: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010486ef6c: mov    %rsi,(%rsp)
  0x000000010486ef70: mov    %rdx,0x8(%rsp)
  0x000000010486ef75: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010486f2f9
  0x000000010486ef79: mov    0xc(%r12,%r11,8),%ebx  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010486f2ab
  0x000000010486ef7e: mov    0x10(%rsi),%r10d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486ef82: mov    %r10d,0x14(%rsp)
  0x000000010486ef87: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x000000010486f2bd
  0x000000010486ef8c: mov    %r8d,0x1c(%rsp)
  0x000000010486ef91: mov    0xc(%rsi),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000010486ef95: mov    %ebx,%edx
  0x000000010486ef97: add    %r10d,%edx         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)

  0x000000010486ef9a: mov    %edx,%r8d
  0x000000010486ef9d: sub    0x1c(%rsp),%r8d
  0x000000010486efa2: test   %r8d,%r8d
  0x000000010486efa5: jle    0x000000010486f10e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efab: mov    0x1c(%rsp),%edi
  0x000000010486efaf: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efb1: mov    %edi,%r10d
  0x000000010486efb4: sub    %edx,%r10d
  0x000000010486efb7: add    $0x2,%r10d
  0x000000010486efbb: test   %r10d,%r10d
  0x000000010486efbe: jl     0x000000010486efc5  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efc0: add    $0x2,%edi          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efc3: jmp    0x000000010486efc7
  0x000000010486efc5: mov    %edx,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efc7: test   %edi,%edi
  0x000000010486efc9: jle    0x000000010486efd9  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efcb: mov    $0x7ffffff7,%r10d
  0x000000010486efd1: sub    %edi,%r10d
  0x000000010486efd4: test   %r10d,%r10d
  0x000000010486efd7: jge    0x000000010486efee  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efd9: mov    %ebx,0x18(%rsp)
  0x000000010486efdd: mov    %rsi,%rbp
  0x000000010486efe0: data32 xchg %ax,%ax
  0x000000010486efe3: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop off=168}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x000000010486efe8: mov    %eax,%edi
  0x000000010486efea: mov    0x18(%rsp),%ebx    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486efee: cmp    $0x80000,%edi
  0x000000010486eff4: ja     0x000000010486f265
  0x000000010486effa: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486effd: shl    %rsi
  0x000000010486f000: mov    0x14(%rsp),%r10d
  0x000000010486f005: lea    (%r12,%r10,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f009: add    $0x17,%rsi
  0x000000010486f00d: mov    %rsi,%r8
  0x000000010486f010: and    $0xfffffffffffffff8,%r8
  0x000000010486f014: cmp    $0x80000,%edi
  0x000000010486f01a: ja     0x000000010486f1d2
  0x000000010486f020: mov    0x60(%r15),%rbp
  0x000000010486f024: mov    %rbp,%r10
  0x000000010486f027: add    %r8,%r10
  0x000000010486f02a: cmp    0x70(%r15),%r10
  0x000000010486f02e: jae    0x000000010486f1d2
  0x000000010486f034: mov    %r10,0x60(%r15)
  0x000000010486f038: prefetchnta 0xc0(%r10)
  0x000000010486f040: movq   $0x1,0x0(%rbp)
  0x000000010486f048: prefetchnta 0x100(%r10)
  0x000000010486f050: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010486f057: mov    %edi,0xc(%rbp)
  0x000000010486f05a: prefetchnta 0x140(%r10)
  0x000000010486f062: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f06a: mov    0x1c(%rsp),%r10d
  0x000000010486f06f: cmp    %edi,%r10d
  0x000000010486f072: mov    %edi,%r9d
  0x000000010486f075: cmovl  %r10d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f079: mov    %rbp,%r13
  0x000000010486f07c: add    $0x10,%r13
  0x000000010486f080: shr    $0x3,%rsi
  0x000000010486f084: mov    %rsi,%rcx
  0x000000010486f087: add    $0xfffffffffffffffe,%rcx
  0x000000010486f08b: cmp    %r9d,%r10d
  0x000000010486f08e: jb     0x000000010486f26d
  0x000000010486f094: cmp    %r9d,%edi
  0x000000010486f097: jb     0x000000010486f26d
  0x000000010486f09d: test   %r9d,%r9d
  0x000000010486f0a0: jle    0x000000010486f299
  0x000000010486f0a6: mov    0x14(%rsp),%r10d
  0x000000010486f0ab: lea    0x10(%r12,%r10,8),%r10
  0x000000010486f0b0: cmp    %edi,%r9d
  0x000000010486f0b3: jl     0x000000010486f18c
  0x000000010486f0b9: add    $0xfffffffffffffff0,%r8
  0x000000010486f0bd: shr    $0x3,%r8
  0x000000010486f0c1: mov    %r10,%rdi
  0x000000010486f0c4: mov    %r13,%rsi
  0x000000010486f0c7: mov    %r8,%rdx
  0x000000010486f0ca: movabs $0x104829780,%r10
  0x000000010486f0d4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f0d7: mov    0x8(%rsp),%r10
  0x000000010486f0dc: mov    0xc(%r10),%r11d    ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f0e0: mov    (%rsp),%r10
  0x000000010486f0e4: mov    0xc(%r10),%r10d
  0x000000010486f0e8: mov    %rbp,%r9
  0x000000010486f0eb: shr    $0x3,%r9
  0x000000010486f0ef: mov    %r9d,0x14(%rsp)
  0x000000010486f0f4: mov    (%rsp),%r8
  0x000000010486f0f8: mov    %r9d,0x10(%r8)
  0x000000010486f0fc: shr    $0x9,%r8
  0x000000010486f100: movabs $0x104297000,%r9
  0x000000010486f10a: mov    %r12b,(%r9,%r8,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x000000010486f10e: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; implicit exception: dispatches to 0x000000010486f2cd
  0x000000010486f113: cmp    %ebp,%ebx
  0x000000010486f115: jg     0x000000010486f249  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f11b: mov    0x14(%rsp),%r8d
  0x000000010486f120: mov    0xc(%r12,%r8,8),%r8d  ; implicit exception: dispatches to 0x000000010486f2dd
  0x000000010486f125: lea    (%r12,%r11,8),%r9  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f129: mov    0x14(%rsp),%edi
  0x000000010486f12d: lea    (%r12,%rdi,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010486f131: test   %r10d,%r10d
  0x000000010486f134: jl     0x000000010486f228
  0x000000010486f13a: cmp    %ebx,%ebp
  0x000000010486f13c: jb     0x000000010486f228
  0x000000010486f142: mov    %r10d,%edi
  0x000000010486f145: add    %ebx,%edi
  0x000000010486f147: cmp    %edi,%r8d
  0x000000010486f14a: jb     0x000000010486f228
  0x000000010486f150: test   %ebx,%ebx
  0x000000010486f152: jle    0x000000010486f16e
  0x000000010486f154: lea    0x10(%rcx,%r10,2),%rsi
  0x000000010486f159: lea    0x10(%r12,%r11,8),%rdi
  0x000000010486f15e: movslq %ebx,%rdx
  0x000000010486f161: movabs $0x104829580,%r10
  0x000000010486f16b: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f16e: mov    (%rsp),%r10
  0x000000010486f172: mov    0xc(%r10),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x000000010486f176: add    %ebx,%r11d
  0x000000010486f179: mov    %r11d,0xc(%r10)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010486f17d: mov    %r10,%rax
  0x000000010486f180: add    $0x50,%rsp
  0x000000010486f184: pop    %rbp
  0x000000010486f185: test   %eax,-0x208518b(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486f18b: retq   
  0x000000010486f18c: movslq %r9d,%rdx
  0x000000010486f18f: mov    %rdx,%r11
  0x000000010486f192: shl    %r11
  0x000000010486f195: add    $0x10,%r11
  0x000000010486f199: mov    %r11,%r8
  0x000000010486f19c: and    $0xfffffffffffffff9,%r8
  0x000000010486f1a0: mov    %rbp,%rdi
  0x000000010486f1a3: add    %r8,%rdi
  0x000000010486f1a6: shr    $0x3,%r11
  0x000000010486f1aa: sub    %r11,%rsi
  0x000000010486f1ad: mov    %rsi,%rcx
  0x000000010486f1b0: xor    %rax,%rax
  0x000000010486f1b3: shl    $0x3,%rcx
  0x000000010486f1b7: rep rex.W stos %al,%es:(%rdi)
  0x000000010486f1ba: mov    %r10,%rdi
  0x000000010486f1bd: mov    %r13,%rsi
  0x000000010486f1c0: movabs $0x1048294c0,%r10
  0x000000010486f1ca: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f1cd: jmpq   0x000000010486f0d7
  0x000000010486f1d2: mov    %r8,0x30(%rsp)
  0x000000010486f1d7: mov    %rdx,0x28(%rsp)
  0x000000010486f1dc: mov    %rsi,0x20(%rsp)
  0x000000010486f1e1: mov    %edi,0x18(%rsp)
  0x000000010486f1e5: mov    %ebx,0x10(%rsp)
  0x000000010486f1e9: mov    0x8(%rsp),%rbp
  0x000000010486f1ee: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010486f1f8: mov    %edi,%edx
  0x000000010486f1fa: nop
  0x000000010486f1fb: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [20]=NarrowOop [40]=Oop off=704}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010486f200: mov    %rbp,0x8(%rsp)
  0x000000010486f205: mov    0x10(%rsp),%r9d
  0x000000010486f20a: mov    0x18(%rsp),%edi
  0x000000010486f20e: mov    0x20(%rsp),%rsi
  0x000000010486f213: mov    0x28(%rsp),%rdx
  0x000000010486f218: mov    0x30(%rsp),%r8
  0x000000010486f21d: mov    %rax,%rbp
  0x000000010486f220: mov    %r9d,%ebx
  0x000000010486f223: jmpq   0x000000010486f06a
  0x000000010486f228: mov    %r9,%rsi
  0x000000010486f22b: xor    %edx,%edx
  0x000000010486f22d: mov    %r10d,%r8d
  0x000000010486f230: mov    %ebx,%r9d
  0x000000010486f233: mov    (%rsp),%rbp
  0x000000010486f237: mov    %ebx,0xc(%rsp)
  0x000000010486f23b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop off=768}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f240: mov    0xc(%rsp),%ebx
  0x000000010486f244: jmpq   0x000000010486f16e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f249: mov    $0xffffff65,%esi
  0x000000010486f24e: mov    %ebx,0x18(%rsp)
  0x000000010486f252: mov    %r10d,0x1c(%rsp)
  0x000000010486f257: mov    %ebx,0x20(%rsp)
  0x000000010486f25b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop off=800}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f260: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f265: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f268: jmpq   0x000000010486effd
  0x000000010486f26d: mov    %r13,%rdi
  0x000000010486f270: xor    %rax,%rax
  0x000000010486f273: shl    $0x3,%rcx
  0x000000010486f277: rep rex.W stos %al,%es:(%rdi)
  0x000000010486f27a: mov    %rdx,%rsi
  0x000000010486f27d: xor    %edx,%edx
  0x000000010486f27f: mov    %rbp,%rcx
  0x000000010486f282: xor    %r8d,%r8d
  0x000000010486f285: mov    %ebx,0x14(%rsp)
  0x000000010486f289: xchg   %ax,%ax
  0x000000010486f28b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=848}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010486f290: mov    0x14(%rsp),%ebx
  0x000000010486f294: jmpq   0x000000010486f0d7
  0x000000010486f299: mov    %r13,%rdi
  0x000000010486f29c: xor    %rax,%rax
  0x000000010486f29f: shl    $0x3,%rcx
  0x000000010486f2a3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f2a6: jmpq   0x000000010486f0d7
  0x000000010486f2ab: mov    $0xfffffff6,%esi
  0x000000010486f2b0: data32 xchg %ax,%ax
  0x000000010486f2b3: callq  0x00000001047dc1a0  ; OopMap{off=888}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010486f2b8: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010486f2bd: mov    $0xfffffff6,%esi
  0x000000010486f2c2: nop
  0x000000010486f2c3: callq  0x00000001047dc1a0  ; OopMap{off=904}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010486f2c8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486f2cd: mov    $0xfffffff6,%esi
  0x000000010486f2d2: nop
  0x000000010486f2d3: callq  0x00000001047dc1a0  ; OopMap{off=920}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f2d8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486f2dd: mov    $0xfffffff6,%esi
  0x000000010486f2e2: mov    %r11d,%ebp
  0x000000010486f2e5: mov    %r10d,(%rsp)
  0x000000010486f2e9: mov    %ebx,0x4(%rsp)
  0x000000010486f2ed: xchg   %ax,%ax
  0x000000010486f2ef: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=948}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f2f4: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {runtime_call}
  0x000000010486f2f9: mov    $0xffffff65,%esi
  0x000000010486f2fe: mov    (%rsp),%rbp
  0x000000010486f302: nop
  0x000000010486f303: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop off=968}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ;   {runtime_call}
  0x000000010486f308: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010486f30d: jmp    0x000000010486f316  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x000000010486f30f: mov    %rax,%rsi
  0x000000010486f312: jmp    0x000000010486f319  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f314: jmp    0x000000010486f316  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010486f316: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)

  0x000000010486f319: add    $0x50,%rsp
  0x000000010486f31d: pop    %rbp
  0x000000010486f31e: jmpq   0x00000001048446e0  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010486f323: hlt    
  0x000000010486f324: hlt    
  0x000000010486f325: hlt    
  0x000000010486f326: hlt    
  0x000000010486f327: hlt    
  0x000000010486f328: hlt    
  0x000000010486f329: hlt    
  0x000000010486f32a: hlt    
  0x000000010486f32b: hlt    
  0x000000010486f32c: hlt    
  0x000000010486f32d: hlt    
  0x000000010486f32e: hlt    
  0x000000010486f32f: hlt    
  0x000000010486f330: hlt    
  0x000000010486f331: hlt    
  0x000000010486f332: hlt    
  0x000000010486f333: hlt    
  0x000000010486f334: hlt    
  0x000000010486f335: hlt    
  0x000000010486f336: hlt    
  0x000000010486f337: hlt    
  0x000000010486f338: hlt    
  0x000000010486f339: hlt    
  0x000000010486f33a: hlt    
  0x000000010486f33b: hlt    
  0x000000010486f33c: hlt    
  0x000000010486f33d: hlt    
  0x000000010486f33e: hlt    
  0x000000010486f33f: hlt    
[Stub Code]
  0x000000010486f340: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010486f34a: jmpq   0x000000010486f34a  ;   {runtime_call}
[Exception Handler]
  0x000000010486f34f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010486f354: callq  0x000000010486f359
  0x000000010486f359: subq   $0x5,(%rsp)
  0x000000010486f35e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486f363: hlt    
  0x000000010486f364: hlt    
  0x000000010486f365: hlt    
  0x000000010486f366: hlt    
  0x000000010486f367: hlt    
<nmethod compile_id='76' compiler='C2' entry='0x000000010486ef40' size='3008' address='0x000000010486edd0' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1488' scopes_pcs_offset='1992' dependencies_offset='2856' handler_table_offset='2864' nul_chk_table_offset='2960' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='6385' backedge_count='1' iicount='21383' stamp='0.443'/>
<writer thread='21251'/>
<task_queued compile_id='79' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='5000' backedge_count='1' iicount='10000' stamp='0.445' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x000000010486f9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108eb6400} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/StringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0x70]  (sp of caller)
  0x000000010486fb40: mov    0x8(%rsi),%r10d
  0x000000010486fb44: shl    $0x3,%r10
  0x000000010486fb48: cmp    %r10,%rax
  0x000000010486fb4b: jne    0x000000010481ce20  ;   {runtime_call}
  0x000000010486fb51: data32 xchg %ax,%ax
  0x000000010486fb54: nopl   0x0(%rax,%rax,1)
  0x000000010486fb5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010486fb60: mov    %eax,-0x14000(%rsp)
  0x000000010486fb67: push   %rbp
  0x000000010486fb68: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010486fb6c: mov    %rsi,(%rsp)
  0x000000010486fb70: mov    %rdx,0x10(%rsp)
  0x000000010486fb75: mov    0xc(%rdx),%r8d     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010486ff09
  0x000000010486fb79: mov    0xc(%r12,%r8,8),%ebx  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010486febb
  0x000000010486fb7e: mov    0x10(%rsi),%r10d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fb82: mov    %r10d,0x18(%rsp)
  0x000000010486fb87: mov    0xc(%r12,%r10,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010486fecd
  0x000000010486fb8c: mov    %r11d,0x40(%rsp)
  0x000000010486fb91: mov    0xc(%rsi),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fb95: mov    %ebx,%edx
  0x000000010486fb97: add    %r10d,%edx         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fb9a: mov    %edx,%r9d
  0x000000010486fb9d: sub    %r11d,%r9d
  0x000000010486fba0: test   %r9d,%r9d
  0x000000010486fba3: jle    0x000000010486fd0a  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fba9: mov    %r11d,%edi
  0x000000010486fbac: shl    %edi               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbae: mov    %edi,%r11d
  0x000000010486fbb1: sub    %edx,%r11d
  0x000000010486fbb4: add    $0x2,%r11d
  0x000000010486fbb8: test   %r11d,%r11d
  0x000000010486fbbb: jl     0x000000010486fbc2  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbbd: add    $0x2,%edi          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbc0: jmp    0x000000010486fbc4
  0x000000010486fbc2: mov    %edx,%edi          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbc4: test   %edi,%edi
  0x000000010486fbc6: jle    0x000000010486fbd6  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbc8: mov    $0x7ffffff7,%r8d
  0x000000010486fbce: sub    %edi,%r8d
  0x000000010486fbd1: test   %r8d,%r8d
  0x000000010486fbd4: jge    0x000000010486fbea  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbd6: mov    %ebx,0xc(%rsp)
  0x000000010486fbda: mov    %rsi,%rbp
  0x000000010486fbdd: xchg   %ax,%ax
  0x000000010486fbdf: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=NarrowOop off=164}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010486fbe4: mov    %eax,%edi
  0x000000010486fbe6: mov    0xc(%rsp),%ebx     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbea: cmp    $0x80000,%edi
  0x000000010486fbf0: ja     0x000000010486fe75
  0x000000010486fbf6: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fbf9: shl    %rsi
  0x000000010486fbfc: mov    0x18(%rsp),%r10d
  0x000000010486fc01: lea    (%r12,%r10,8),%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fc05: add    $0x17,%rsi
  0x000000010486fc09: mov    %rsi,%r8
  0x000000010486fc0c: and    $0xfffffffffffffff8,%r8
  0x000000010486fc10: cmp    $0x80000,%edi
  0x000000010486fc16: ja     0x000000010486fdcf
  0x000000010486fc1c: mov    0x60(%r15),%rbp
  0x000000010486fc20: mov    %rbp,%r10
  0x000000010486fc23: add    %r8,%r10
  0x000000010486fc26: cmp    0x70(%r15),%r10
  0x000000010486fc2a: jae    0x000000010486fdcf
  0x000000010486fc30: mov    %r10,0x60(%r15)
  0x000000010486fc34: prefetchnta 0xc0(%r10)
  0x000000010486fc3c: movq   $0x1,0x0(%rbp)
  0x000000010486fc44: prefetchnta 0x100(%r10)
  0x000000010486fc4c: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x000000010486fc53: mov    %edi,0xc(%rbp)
  0x000000010486fc56: prefetchnta 0x140(%r10)
  0x000000010486fc5e: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fc66: mov    0x40(%rsp),%r11d
  0x000000010486fc6b: cmp    %edi,%r11d
  0x000000010486fc6e: mov    %edi,%r9d
  0x000000010486fc71: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fc75: mov    %rbp,%r13
  0x000000010486fc78: add    $0x10,%r13
  0x000000010486fc7c: shr    $0x3,%rsi
  0x000000010486fc80: mov    %rsi,%rcx
  0x000000010486fc83: add    $0xfffffffffffffffe,%rcx
  0x000000010486fc87: cmp    %r9d,%r11d
  0x000000010486fc8a: jb     0x000000010486fe7d
  0x000000010486fc90: cmp    %r9d,%edi
  0x000000010486fc93: jb     0x000000010486fe7d
  0x000000010486fc99: test   %r9d,%r9d
  0x000000010486fc9c: jle    0x000000010486fea9
  0x000000010486fca2: mov    0x18(%rsp),%r10d
  0x000000010486fca7: lea    0x10(%r12,%r10,8),%r10
  0x000000010486fcac: cmp    %edi,%r9d
  0x000000010486fcaf: jl     0x000000010486fd89
  0x000000010486fcb5: add    $0xfffffffffffffff0,%r8
  0x000000010486fcb9: shr    $0x3,%r8
  0x000000010486fcbd: mov    %r10,%rdi
  0x000000010486fcc0: mov    %r13,%rsi
  0x000000010486fcc3: mov    %r8,%rdx
  0x000000010486fcc6: movabs $0x104829780,%r10
  0x000000010486fcd0: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fcd3: mov    0x10(%rsp),%r10
  0x000000010486fcd8: mov    0xc(%r10),%r8d     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fcdc: mov    (%rsp),%r10
  0x000000010486fce0: mov    0xc(%r10),%r10d
  0x000000010486fce4: mov    %rbp,%r9
  0x000000010486fce7: shr    $0x3,%r9
  0x000000010486fceb: mov    %r9d,0x18(%rsp)
  0x000000010486fcf0: mov    (%rsp),%r11
  0x000000010486fcf4: mov    %r9d,0x10(%r11)
  0x000000010486fcf8: shr    $0x9,%r11
  0x000000010486fcfc: movabs $0x104297000,%r9
  0x000000010486fd06: mov    %r12b,(%r9,%r11,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd0a: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; implicit exception: dispatches to 0x000000010486fedd
  0x000000010486fd0f: cmp    %ebp,%ebx
  0x000000010486fd11: jg     0x000000010486fe59  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd17: mov    0x18(%rsp),%r11d
  0x000000010486fd1c: mov    0xc(%r12,%r11,8),%r9d  ; implicit exception: dispatches to 0x000000010486feed
  0x000000010486fd21: lea    (%r12,%r8,8),%rdi  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd25: lea    (%r12,%r11,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd29: test   %r10d,%r10d
  0x000000010486fd2c: jl     0x000000010486fe38
  0x000000010486fd32: cmp    %ebx,%ebp
  0x000000010486fd34: jb     0x000000010486fe38
  0x000000010486fd3a: mov    %r10d,%r11d
  0x000000010486fd3d: add    %ebx,%r11d
  0x000000010486fd40: cmp    %r11d,%r9d
  0x000000010486fd43: jb     0x000000010486fe38
  0x000000010486fd49: test   %ebx,%ebx
  0x000000010486fd4b: jle    0x000000010486fd67
  0x000000010486fd4d: lea    0x10(%rcx,%r10,2),%rsi
  0x000000010486fd52: lea    0x10(%r12,%r8,8),%rdi
  0x000000010486fd57: movslq %ebx,%rdx
  0x000000010486fd5a: movabs $0x104829580,%r10
  0x000000010486fd64: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd67: mov    (%rsp),%r10
  0x000000010486fd6b: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fd6f: add    %ebx,%r10d
  0x000000010486fd72: mov    (%rsp),%r11
  0x000000010486fd76: mov    %r10d,0xc(%r11)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010486fd7a: mov    %r11,%rax
  0x000000010486fd7d: add    $0x60,%rsp
  0x000000010486fd81: pop    %rbp
  0x000000010486fd82: test   %eax,-0x2085d88(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486fd88: retq   
  0x000000010486fd89: movslq %r9d,%rdx
  0x000000010486fd8c: mov    %rdx,%r11
  0x000000010486fd8f: shl    %r11
  0x000000010486fd92: add    $0x10,%r11
  0x000000010486fd96: mov    %r11,%r8
  0x000000010486fd99: and    $0xfffffffffffffff9,%r8
  0x000000010486fd9d: mov    %rbp,%rdi
  0x000000010486fda0: add    %r8,%rdi
  0x000000010486fda3: shr    $0x3,%r11
  0x000000010486fda7: sub    %r11,%rsi
  0x000000010486fdaa: mov    %rsi,%rcx
  0x000000010486fdad: xor    %rax,%rax
  0x000000010486fdb0: shl    $0x3,%rcx
  0x000000010486fdb4: rep rex.W stos %al,%es:(%rdi)
  0x000000010486fdb7: mov    %r10,%rdi
  0x000000010486fdba: mov    %r13,%rsi
  0x000000010486fdbd: movabs $0x1048294c0,%r10
  0x000000010486fdc7: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fdca: jmpq   0x000000010486fcd3
  0x000000010486fdcf: mov    %r8,0x30(%rsp)
  0x000000010486fdd4: mov    %rdx,0x28(%rsp)
  0x000000010486fdd9: mov    %rsi,0x20(%rsp)
  0x000000010486fdde: mov    %edi,0x1c(%rsp)
  0x000000010486fde2: mov    0x18(%rsp),%r10d
  0x000000010486fde7: mov    %r10d,0xc(%rsp)
  0x000000010486fdec: mov    %ebx,0x8(%rsp)
  0x000000010486fdf0: mov    0x10(%rsp),%rbp
  0x000000010486fdf5: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010486fdff: mov    %edi,%edx
  0x000000010486fe01: xchg   %ax,%ax
  0x000000010486fe03: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [12]=NarrowOop [40]=Oop off=712}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fe08: mov    %rbp,0x10(%rsp)
  0x000000010486fe0d: mov    0x8(%rsp),%ecx
  0x000000010486fe11: mov    0xc(%rsp),%r11d
  0x000000010486fe16: mov    %r11d,0x18(%rsp)
  0x000000010486fe1b: mov    0x1c(%rsp),%edi
  0x000000010486fe1f: mov    0x20(%rsp),%rsi
  0x000000010486fe24: mov    0x28(%rsp),%rdx
  0x000000010486fe29: mov    0x30(%rsp),%r8
  0x000000010486fe2e: mov    %rax,%rbp
  0x000000010486fe31: mov    %ecx,%ebx
  0x000000010486fe33: jmpq   0x000000010486fc66
  0x000000010486fe38: mov    %rdi,%rsi
  0x000000010486fe3b: xor    %edx,%edx
  0x000000010486fe3d: mov    %r10d,%r8d
  0x000000010486fe40: mov    %ebx,%r9d
  0x000000010486fe43: mov    (%rsp),%rbp
  0x000000010486fe47: mov    %ebx,0xc(%rsp)
  0x000000010486fe4b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop off=784}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fe50: mov    0xc(%rsp),%ebx
  0x000000010486fe54: jmpq   0x000000010486fd67  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fe59: mov    $0xffffff65,%esi
  0x000000010486fe5e: mov    %ebx,0x20(%rsp)
  0x000000010486fe62: mov    %r10d,0x24(%rsp)
  0x000000010486fe67: mov    %ebx,0x28(%rsp)
  0x000000010486fe6b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [16]=Oop [24]=NarrowOop off=816}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fe70: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fe75: movslq %edi,%rsi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486fe78: jmpq   0x000000010486fbf9
  0x000000010486fe7d: mov    %r13,%rdi
  0x000000010486fe80: xor    %rax,%rax
  0x000000010486fe83: shl    $0x3,%rcx
  0x000000010486fe87: rep rex.W stos %al,%es:(%rdi)
  0x000000010486fe8a: mov    %rdx,%rsi
  0x000000010486fe8d: xor    %edx,%edx
  0x000000010486fe8f: mov    %rbp,%rcx
  0x000000010486fe92: xor    %r8d,%r8d
  0x000000010486fe95: mov    %ebx,0x1c(%rsp)
  0x000000010486fe99: xchg   %ax,%ax
  0x000000010486fe9b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop off=864}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fea0: mov    0x1c(%rsp),%ebx
  0x000000010486fea4: jmpq   0x000000010486fcd3
  0x000000010486fea9: mov    %r13,%rdi
  0x000000010486feac: xor    %rax,%rax
  0x000000010486feaf: shl    $0x3,%rcx
  0x000000010486feb3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486feb6: jmpq   0x000000010486fcd3
  0x000000010486febb: mov    $0xfffffff6,%esi
  0x000000010486fec0: data32 xchg %ax,%ax
  0x000000010486fec3: callq  0x00000001047dc1a0  ; OopMap{off=904}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fec8: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fecd: mov    $0xfffffff6,%esi
  0x000000010486fed2: nop
  0x000000010486fed3: callq  0x00000001047dc1a0  ; OopMap{off=920}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fed8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486fedd: mov    $0xfffffff6,%esi
  0x000000010486fee2: nop
  0x000000010486fee3: callq  0x00000001047dc1a0  ; OopMap{off=936}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486fee8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486feed: mov    $0xfffffff6,%esi
  0x000000010486fef2: mov    %r8d,%ebp
  0x000000010486fef5: mov    %r10d,(%rsp)
  0x000000010486fef9: mov    %ebx,0x4(%rsp)
  0x000000010486fefd: xchg   %ax,%ax
  0x000000010486feff: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=964}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486ff04: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486ff09: mov    $0xffffff65,%esi
  0x000000010486ff0e: mov    (%rsp),%rbp
  0x000000010486ff12: nop
  0x000000010486ff13: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop off=984}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486ff18: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486ff1d: jmp    0x000000010486ff26  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486ff1f: mov    %rax,%rsi
  0x000000010486ff22: jmp    0x000000010486ff29  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486ff24: jmp    0x000000010486ff26  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010486ff26: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)

  0x000000010486ff29: add    $0x60,%rsp
  0x000000010486ff2d: pop    %rbp
  0x000000010486ff2e: jmpq   0x00000001048446e0  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {runtime_call}
  0x000000010486ff33: hlt    
  0x000000010486ff34: hlt    
  0x000000010486ff35: hlt    
  0x000000010486ff36: hlt    
  0x000000010486ff37: hlt    
  0x000000010486ff38: hlt    
  0x000000010486ff39: hlt    
  0x000000010486ff3a: hlt    
  0x000000010486ff3b: hlt    
  0x000000010486ff3c: hlt    
  0x000000010486ff3d: hlt    
  0x000000010486ff3e: hlt    
  0x000000010486ff3f: hlt    
[Stub Code]
  0x000000010486ff40: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010486ff4a: jmpq   0x000000010486ff4a  ;   {runtime_call}
[Exception Handler]
  0x000000010486ff4f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010486ff54: callq  0x000000010486ff59
  0x000000010486ff59: subq   $0x5,(%rsp)
  0x000000010486ff5e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486ff63: hlt    
  0x000000010486ff64: hlt    
  0x000000010486ff65: hlt    
  0x000000010486ff66: hlt    
  0x000000010486ff67: hlt    
<nmethod compile_id='77' compiler='C2' entry='0x000000010486fb40' size='3064' address='0x000000010486f9d0' relocation_offset='296' insts_offset='368' stub_offset='1392' scopes_data_offset='1496' scopes_pcs_offset='2048' dependencies_offset='2912' handler_table_offset='2920' nul_chk_table_offset='3016' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='5112' backedge_count='1' iicount='25109' stamp='0.453'/>
<writer thread='21251'/>
<task_queued compile_id='80' method='java/lang/Math max (II)I' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.453' comment='count' hot_count='10000'/>
<task_queued compile_id='81' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='5000' backedge_count='1' iicount='10000' stamp='0.454' comment='count' hot_count='10000'/>
<task_queued compile_id='82' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='5000' backedge_count='1' iicount='10000' stamp='0.454' comment='count' hot_count='10000'/>
<task_queued compile_id='83' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='5000' backedge_count='1' iicount='10000' stamp='0.454' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x00000001048676d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108ee6620} &apos;formatUnsignedLong&apos; &apos;(JI[CII)I&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;[C&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000104867820: mov    %eax,-0x14000(%rsp)
  0x0000000104867827: push   %rbp
  0x0000000104867828: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::formatUnsignedLong@-1 (line 372)

  0x000000010486782c: mov    %rcx,%r11
  0x000000010486782f: vmovd  %edx,%xmm0
  0x0000000104867833: mov    %r8d,%edx
  0x0000000104867836: add    %r9d,%edx          ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x0000000104867839: mov    %esi,%ebx
  0x000000010486783b: mov    %edx,%edi
  0x000000010486783d: dec    %edi               ;*iadd
                                                ; - java.lang.Long::formatUnsignedLong@23 (line 376)

  0x000000010486783f: mov    %r9d,%eax
  0x0000000104867842: dec    %eax               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x0000000104867844: mov    $0x1,%r10d
  0x000000010486784a: vmovd  %xmm0,%ecx
  0x000000010486784e: shl    %cl,%r10d
  0x0000000104867851: dec    %r10d              ;*isub
                                                ; - java.lang.Long::formatUnsignedLong@12 (line 374)

  0x0000000104867854: and    %r10d,%ebx         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)

  0x0000000104867857: cmp    $0x24,%ebx
  0x000000010486785a: jae    0x0000000104867985
  0x0000000104867860: movabs $0x76ab2e5d8,%r13  ;   {oop([C)}
  0x000000010486786a: movzwl 0x10(%r13,%rbx,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)

  0x0000000104867870: mov    0xc(%r11),%ebx     ; implicit exception: dispatches to 0x00000001048679e5
  0x0000000104867874: cmp    %ebx,%edi
  0x0000000104867876: jae    0x00000001048679b5
  0x000000010486787c: mov    %bp,0xe(%r11,%rdx,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)

  0x0000000104867882: shr    %cl,%rsi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)

  0x0000000104867885: test   %rsi,%rsi
  0x0000000104867888: je     0x00000001048678d3  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)

  0x000000010486788a: test   %eax,%eax
  0x000000010486788c: jle    0x00000001048678f3  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x000000010486788e: add    $0xfffffffffffffffe,%r9d
  0x0000000104867892: jmp    0x000000010486789f
  0x0000000104867894: mov    %r9d,%edi
  0x0000000104867897: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x0000000104867899: mov    %r9d,%eax
  0x000000010486789c: mov    %edi,%r9d          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)

  0x000000010486789f: add    %r8d,%eax          ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)

  0x00000001048678a2: mov    %esi,%ecx
  0x00000001048678a4: and    %r10d,%ecx         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)

  0x00000001048678a7: mov    %eax,%edi
  0x00000001048678a9: dec    %edi               ;*iadd
                                                ; - java.lang.Long::formatUnsignedLong@23 (line 376)

  0x00000001048678ab: cmp    $0x24,%ecx
  0x00000001048678ae: jae    0x000000010486791d
  0x00000001048678b0: movzwl 0x10(%r13,%rcx,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)

  0x00000001048678b6: cmp    %ebx,%edi
  0x00000001048678b8: jae    0x0000000104867951
  0x00000001048678be: mov    %bp,0xe(%r11,%rax,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)

  0x00000001048678c4: vmovd  %xmm0,%ecx
  0x00000001048678c8: shr    %cl,%rsi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)

  0x00000001048678cb: test   %rsi,%rsi
  0x00000001048678ce: jne    0x00000001048678df  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)

  0x00000001048678d0: mov    %r9d,%eax          ;*synchronization entry
                                                ; - java.lang.Long::formatUnsignedLong@-1 (line 372)

  0x00000001048678d3: add    $0x40,%rsp
  0x00000001048678d7: pop    %rbp
  0x00000001048678d8: test   %eax,-0x207d8de(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x00000001048678de: retq                      ; OopMap{r11=Oop r13=Oop off=191}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x00000001048678df: test   %eax,-0x207d8e5(%rip)        # 0x00000001027ea000
                                                ;   {poll}
  0x00000001048678e5: test   %r9d,%r9d
  0x00000001048678e8: jg     0x0000000104867894  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)

  0x00000001048678ea: mov    %r9d,(%rsp)
  0x00000001048678ee: mov    %rsi,%rbp
  0x00000001048678f1: jmp    0x00000001048678f9
  0x00000001048678f3: mov    %eax,(%rsp)
  0x00000001048678f6: mov    %rsi,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)

  0x00000001048678f9: mov    $0xffffff65,%esi
  0x00000001048678fe: mov    %r8d,0x4(%rsp)
  0x0000000104867903: mov    %r10d,0x8(%rsp)
  0x0000000104867908: vmovss %xmm0,0xc(%rsp)
  0x000000010486790e: mov    %r11,0x10(%rsp)
  0x0000000104867913: callq  0x00000001047dc1a0  ; OopMap{[16]=Oop off=248}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ;   {runtime_call}
  0x0000000104867918: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486791d: mov    %rsi,%rbp
  0x0000000104867920: mov    %r8d,(%rsp)
  0x0000000104867924: mov    %r9d,0x4(%rsp)
  0x0000000104867929: mov    %r10d,0x8(%rsp)
  0x000000010486792e: mov    %edi,0xc(%rsp)
  0x0000000104867932: mov    %ecx,0x10(%rsp)
  0x0000000104867936: vmovss %xmm0,0x14(%rsp)
  0x000000010486793c: mov    %r11,0x20(%rsp)
  0x0000000104867941: mov    $0xffffffe4,%esi
  0x0000000104867946: nop
  0x0000000104867947: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop off=300}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x000000010486794c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104867951: mov    %rsi,(%rsp)
  0x0000000104867955: mov    %r8d,0x8(%rsp)
  0x000000010486795a: mov    %r9d,0xc(%rsp)
  0x000000010486795f: mov    %r10d,0x10(%rsp)
  0x0000000104867964: mov    %edi,0x14(%rsp)
  0x0000000104867968: vmovss %xmm0,0x18(%rsp)
  0x000000010486796e: mov    %r11,0x28(%rsp)
  0x0000000104867973: mov    $0xffffffe4,%esi
  0x0000000104867978: data32 xchg %ax,%ax
  0x000000010486797b: callq  0x00000001047dc1a0  ; OopMap{[40]=Oop off=352}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x0000000104867980: callq  0x0000000103c85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x0000000104867985: mov    %rsi,%rbp
  0x0000000104867988: mov    %r8d,(%rsp)
  0x000000010486798c: mov    %eax,0x4(%rsp)
  0x0000000104867990: mov    %r10d,0x8(%rsp)
  0x0000000104867995: mov    %ecx,0xc(%rsp)
  0x0000000104867999: mov    %r11,0x18(%rsp)
  0x000000010486799e: mov    %edi,0x20(%rsp)
  0x00000001048679a2: mov    %ebx,0x24(%rsp)
  0x00000001048679a6: mov    $0xffffffe4,%esi
  0x00000001048679ab: callq  0x00000001047dc1a0  ; OopMap{[24]=Oop off=400}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x00000001048679b0: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ;   {runtime_call}
  0x00000001048679b5: mov    %rsi,(%rsp)
  0x00000001048679b9: mov    %r8d,0x8(%rsp)
  0x00000001048679be: mov    %eax,0xc(%rsp)
  0x00000001048679c2: mov    %r10d,0x10(%rsp)
  0x00000001048679c7: mov    %ecx,0x14(%rsp)
  0x00000001048679cb: mov    %r11,0x20(%rsp)
  0x00000001048679d0: mov    %edi,0x28(%rsp)
  0x00000001048679d4: mov    $0xffffffe4,%esi
  0x00000001048679d9: xchg   %ax,%ax
  0x00000001048679db: callq  0x00000001047dc1a0  ; OopMap{[32]=Oop off=448}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x00000001048679e0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048679e5: mov    $0xfffffff6,%esi
  0x00000001048679ea: mov    %edi,(%rsp)
  0x00000001048679ed: xchg   %ax,%ax
  0x00000001048679ef: callq  0x00000001047dc1a0  ; OopMap{off=468}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x00000001048679f4: callq  0x0000000103c85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ;   {runtime_call}
  0x00000001048679f9: hlt    
  0x00000001048679fa: hlt    
  0x00000001048679fb: hlt    
  0x00000001048679fc: hlt    
  0x00000001048679fd: hlt    
  0x00000001048679fe: hlt    
  0x00000001048679ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104867a00: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104867a05: callq  0x0000000104867a0a
  0x0000000104867a0a: subq   $0x5,(%rsp)
  0x0000000104867a0f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104867a14: hlt    
  0x0000000104867a15: hlt    
  0x0000000104867a16: hlt    
  0x0000000104867a17: hlt    
<nmethod compile_id='78' compiler='C2' entry='0x0000000104867820' size='1760' address='0x00000001048676d0' relocation_offset='296' insts_offset='336' stub_offset='816' scopes_data_offset='856' scopes_pcs_offset='1176' dependencies_offset='1736' nul_chk_table_offset='1744' oops_offset='840' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='5001' backedge_count='5000' iicount='11104' stamp='0.456'/>
<writer thread='19203'/>
Decoding compiled method 0x0000000104876cd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092124d8} &apos;matchFields&apos; &apos;([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;&apos; in &apos;java/io/ObjectStreamClass&apos;
  0x00000001048770c0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048770c5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001048770d0: mov    %eax,-0x14000(%rsp)
  0x00000001048770d7: push   %rbp
  0x00000001048770d8: sub    $0xd0,%rsp         ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x00000001048770df: mov    0x8(%rsi),%r11d
  0x00000001048770e3: mov    %r11d,0x1c(%rsp)
  0x00000001048770e8: mov    0x20(%rsi),%r10d
  0x00000001048770ec: mov    %r10d,0x28(%rsp)
  0x00000001048770f1: mov    0x40(%rsi),%rbx
  0x00000001048770f5: mov    0x38(%rsi),%rbp
  0x00000001048770f9: mov    0x10(%rsi),%r10
  0x00000001048770fd: mov    %r10,(%rsp)
  0x0000000104877101: mov    0x30(%rsi),%r14
  0x0000000104877105: mov    0x28(%rsi),%r10
  0x0000000104877109: mov    %r10,0x8(%rsp)
  0x000000010487710e: mov    0x18(%rsi),%r10    ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104877112: mov    %r10,0x10(%rsp)
  0x0000000104877117: mov    %rsi,%rdi
  0x000000010487711a: movabs $0x103ce473e,%r10
  0x0000000104877124: callq  *%r10              ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104877127: test   %rbx,%rbx
  0x000000010487712a: je     0x00000001048794fb  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877130: mov    0x8(%rbx),%r10d
  0x0000000104877134: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010487713b: jne    0x000000010487a1e3  ;*putfield unshared
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@16 (line 136)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877141: mov    %rbx,%rdx          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104877144: mov    %rbp,%r13
  0x0000000104877147: test   %rbp,%rbp
  0x000000010487714a: je     0x0000000104879502  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877150: mov    0x8(%rbp),%r11d
  0x0000000104877154: cmp    $0xf80125df,%r11d  ;   {metadata(&apos;java/io/ObjectStreamClass&apos;)}
  0x000000010487715b: jne    0x000000010487a229  ;*putfield unshared
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@16 (line 136)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877161: mov    %rbp,%rdi          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104877164: test   %r14,%r14
  0x0000000104877167: je     0x0000000104879509  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487716d: mov    0x8(%r14),%r10d
  0x0000000104877171: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x0000000104877178: jne    0x000000010487a235  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487717e: mov    %r14,%r11          ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104877181: mov    0x8(%rsp),%r9
  0x0000000104877186: test   %r9,%r9
  0x0000000104877189: je     0x0000000104879511  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487718f: mov    0x8(%r9),%r10d
  0x0000000104877193: cmp    $0xf8002678,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x000000010487719a: jne    0x000000010487a241  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048771a0: mov    %r9,%rcx           ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@46 (line 2292)

  0x00000001048771a3: mov    0x10(%rsp),%r10
  0x00000001048771a8: test   %r10,%r10
  0x00000001048771ab: je     0x0000000104879518  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048771b1: mov    0x8(%r10),%r8d
  0x00000001048771b5: cmp    $0xf80025ef,%r8d   ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x00000001048771bc: jne    0x000000010487a1f0  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048771c2: mov    %r10,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x00000001048771c5: mov    (%rsp),%rsi
  0x00000001048771c9: test   %rsi,%rsi
  0x00000001048771cc: je     0x0000000104879520  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048771d2: mov    %r8,%rax
  0x00000001048771d5: mov    %r11,%r8
  0x00000001048771d8: mov    0x8(%rsi),%r11d
  0x00000001048771dc: cmp    $0xf80025ef,%r11d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x00000001048771e3: jne    0x000000010487a1f0  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048771e9: mov    %rsi,%rbx
  0x00000001048771ec: mov    %r8,%r11
  0x00000001048771ef: mov    %rax,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x00000001048771f2: mov    0xc(%r11),%r9d     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a525
  0x00000001048771f6: mov    %r9d,0x10(%rsp)
  0x00000001048771fb: mov    %r8,(%rsp)
  0x00000001048771ff: mov    %rcx,0x40(%rsp)
  0x0000000104877204: mov    %r11,0x38(%rsp)
  0x0000000104877209: mov    %rdi,0x8(%rsp)
  0x000000010487720e: mov    %rdx,0x20(%rsp)
  0x0000000104877213: mov    %rbx,0x30(%rsp)
  0x0000000104877218: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010487721e: movabs $0x0,%r10
  0x0000000104877228: lea    (%r10,%r11,8),%r10
  0x000000010487722c: mov    %r10,0x48(%rsp)
  0x0000000104877231: mov    $0xf8001b4b,%r11d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104877237: movabs $0x0,%r10
  0x0000000104877241: lea    (%r10,%r11,8),%r10
  0x0000000104877245: mov    %r10,0x50(%rsp)
  0x000000010487724a: mov    $0xf80025ef,%r11d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x0000000104877250: movabs $0x0,%r10
  0x000000010487725a: lea    (%r10,%r11,8),%r10
  0x000000010487725e: mov    %r10,0x58(%rsp)
  0x0000000104877263: xor    %r10d,%r10d
  0x0000000104877266: mov    %r10,0xb8(%rsp)
  0x000000010487726e: jmpq   0x0000000104877746
  0x0000000104877273: mov    0x14(%r12,%rbp,8),%ebp
  0x0000000104877278: mov    0x68(%rsp),%r10
  0x000000010487727d: mov    %r10,0x98(%rsp)
  0x0000000104877285: jmp    0x0000000104877293
  0x0000000104877287: mov    0x14(%r9),%ebp     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487728b: mov    %r9,0x98(%rsp)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877293: mov    0x60(%r15),%rax    ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877297: mov    %rax,%r10
  0x000000010487729a: add    $0x18,%r10
  0x000000010487729e: cmp    0x70(%r15),%r10
  0x00000001048772a2: jae    0x0000000104879647  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772a8: mov    %r10,0x60(%r15)
  0x00000001048772ac: prefetchnta 0xc0(%r10)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772b4: mov    0x50(%rsp),%r10
  0x00000001048772b9: mov    0xa8(%r10),%r10    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772c0: mov    %r10,(%rax)        ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772c3: movl   $0xf8001b4b,0x8(%rax)  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000001048772ca: mov    %r12d,0xc(%rax)
  0x00000001048772ce: mov    %r12,0x10(%rax)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048772d2: mov    %rax,0x68(%rsp)
  0x00000001048772d7: mov    0x60(%r15),%rax
  0x00000001048772db: mov    %rax,%r10
  0x00000001048772de: add    $0x30,%r10
  0x00000001048772e2: cmp    0x70(%r15),%r10
  0x00000001048772e6: jae    0x000000010487965d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772ec: mov    %r10,0x60(%r15)
  0x00000001048772f0: prefetchnta 0xc0(%r10)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048772f8: movq   $0x1,(%rax)
  0x00000001048772ff: prefetchnta 0x100(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877307: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010487730e: prefetchnta 0x140(%r10)
  0x0000000104877316: movl   $0x10,0xc(%rax)
  0x000000010487731d: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877325: mov    %r12,0x18(%rax)
  0x0000000104877329: mov    %r12,0x20(%rax)
  0x000000010487732d: mov    %r12,0x28(%rax)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877331: movq   $0x4c,0x10(%rax)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877339: mov    0x68(%rsp),%r10
  0x000000010487733e: movl   $0x1,0xc(%r10)
  0x0000000104877346: mov    %rax,%r11
  0x0000000104877349: shr    $0x3,%r11
  0x000000010487734d: mov    %r11d,0x10(%r10)
  0x0000000104877351: shr    $0x9,%r10
  0x0000000104877355: movabs $0x104297000,%r11
  0x000000010487735f: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877363: test   %ebp,%ebp
  0x0000000104877365: je     0x000000010487920d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487736b: lea    (%r12,%rbp,8),%rsi  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487736f: mov    $0x2e,%edx
  0x0000000104877374: mov    $0x2f,%ecx
  0x0000000104877379: mov    0x30(%rsp),%r10
  0x000000010487737e: mov    %r10,0x18(%rsp)
  0x0000000104877383: mov    0x70(%rsp),%rbp
  0x0000000104877388: data32 xchg %ax,%ax
  0x000000010487738b: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=720}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104877390: mov    0x68(%rsp),%rsi
  0x0000000104877395: mov    %rax,%rdx
  0x0000000104877398: data32 xchg %ax,%ax
  0x000000010487739b: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=736}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x00000001048773a0: mov    0x68(%rsp),%r10
  0x00000001048773a5: mov    0x10(%r10),%r11d   ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048773a9: mov    %r11d,0x14(%rsp)
  0x00000001048773ae: mov    0xc(%r12,%r11,8),%r10d  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a505
  0x00000001048773b3: mov    %r10d,0x18(%rsp)
  0x00000001048773b8: mov    0x68(%rsp),%r10
  0x00000001048773bd: mov    0xc(%r10),%r11d    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048773c1: mov    %r11d,0x60(%rsp)
  0x00000001048773c6: mov    %r11d,%r10d
  0x00000001048773c9: sub    0x18(%rsp),%r10d
  0x00000001048773ce: mov    0x14(%rsp),%r11d
  0x00000001048773d3: mov    %r11,%rbp
  0x00000001048773d6: shl    $0x3,%rbp
  0x00000001048773da: inc    %r10d
  0x00000001048773dd: mov    0x60(%rsp),%edx
  0x00000001048773e1: inc    %edx               ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x00000001048773e3: test   %r10d,%r10d
  0x00000001048773e6: jle    0x000000010487740b  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048773e8: mov    0x18(%rsp),%r8d
  0x00000001048773ed: shl    %r8d               ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048773f0: mov    %r8d,%r11d
  0x00000001048773f3: sub    0x60(%rsp),%r11d
  0x00000001048773f8: inc    %r11d
  0x00000001048773fb: test   %r11d,%r11d
  0x00000001048773fe: jl     0x000000010487741c  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877400: add    $0x2,%r8d
  0x0000000104877404: mov    %r8d,0x1c(%rsp)
  0x0000000104877409: jmp    0x0000000104877420
  0x000000010487740b: mov    %edx,0x78(%rsp)
  0x000000010487740f: mov    %rbp,0x88(%rsp)
  0x0000000104877417: jmpq   0x00000001048775b9
  0x000000010487741c: mov    %edx,0x1c(%rsp)    ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877420: mov    0x1c(%rsp),%r10d
  0x0000000104877425: test   %r10d,%r10d
  0x0000000104877428: jle    0x000000010487743a
  0x000000010487742a: mov    $0x7ffffff7,%r11d
  0x0000000104877430: sub    0x1c(%rsp),%r11d
  0x0000000104877435: test   %r11d,%r11d
  0x0000000104877438: jge    0x0000000104877448  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010487743a: mov    0x68(%rsp),%rsi
  0x000000010487743f: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=900}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104877444: mov    %eax,0x1c(%rsp)    ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877448: mov    0x1c(%rsp),%r11d
  0x000000010487744d: cmp    $0x80000,%r11d
  0x0000000104877454: ja     0x000000010487a0bd  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487745a: movslq 0x1c(%rsp),%rbp    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487745f: shl    %rbp
  0x0000000104877462: mov    0x14(%rsp),%r10d
  0x0000000104877467: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487746b: mov    %r10,0x78(%rsp)
  0x0000000104877470: add    $0x17,%rbp         ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877474: mov    %rbp,%r10
  0x0000000104877477: and    $0xfffffffffffffff8,%r10
  0x000000010487747b: mov    %r10,0x80(%rsp)
  0x0000000104877483: cmp    $0x80000,%r11d
  0x000000010487748a: ja     0x0000000104879789  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877490: mov    0x60(%r15),%r11    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877494: mov    %r11,%r10
  0x0000000104877497: mov    0x80(%rsp),%r8
  0x000000010487749f: add    %r8,%r10
  0x00000001048774a2: cmp    0x70(%r15),%r10
  0x00000001048774a6: jae    0x0000000104879789  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048774ac: mov    %r10,0x60(%r15)
  0x00000001048774b0: prefetchnta 0xc0(%r10)
  0x00000001048774b8: movq   $0x1,(%r11)
  0x00000001048774bf: prefetchnta 0x100(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048774c7: movl   $0xf8000041,0x8(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048774cf: mov    0x1c(%rsp),%r8d
  0x00000001048774d4: mov    %r8d,0xc(%r11)
  0x00000001048774d8: prefetchnta 0x140(%r10)
  0x00000001048774e0: prefetchnta 0x180(%r10)   ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x00000001048774e8: mov    %r11,0x88(%rsp)
  0x00000001048774f0: mov    0x18(%rsp),%r11d
  0x00000001048774f5: cmp    0x1c(%rsp),%r11d
  0x00000001048774fa: mov    0x1c(%rsp),%r9d
  0x00000001048774ff: cmovl  %r11d,%r9d         ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877503: mov    0x88(%rsp),%r10
  0x000000010487750b: add    $0x10,%r10         ;*isub
                                                ; - java.lang.String::&lt;init&gt;@54 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487750f: mov    %rbp,%r8
  0x0000000104877512: shr    $0x3,%r8           ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877516: mov    %r8,%rcx
  0x0000000104877519: add    $0xfffffffffffffffe,%rcx
  0x000000010487751d: cmp    %r9d,%r11d
  0x0000000104877520: jb     0x000000010487a0ca
  0x0000000104877526: mov    0x1c(%rsp),%ebp
  0x000000010487752a: cmp    %r9d,%ebp
  0x000000010487752d: jb     0x000000010487a0ca
  0x0000000104877533: test   %r9d,%r9d
  0x0000000104877536: jle    0x000000010487a0f9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487753c: mov    0x14(%rsp),%r11d
  0x0000000104877541: lea    0x10(%r12,%r11,8),%rbx  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877546: cmp    0x1c(%rsp),%r9d
  0x000000010487754b: jl     0x00000001048793d5
  0x0000000104877551: mov    0x80(%rsp),%rdx
  0x0000000104877559: add    $0xfffffffffffffff0,%rdx
  0x000000010487755d: shr    $0x3,%rdx          ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877561: mov    %rbx,%rdi
  0x0000000104877564: mov    %r10,%rsi
  0x0000000104877567: movabs $0x104829780,%r10
  0x0000000104877571: callq  *%r10              ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877574: mov    0x68(%rsp),%r10
  0x0000000104877579: mov    0xc(%r10),%r11d    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487757d: mov    %r11d,0x60(%rsp)
  0x0000000104877582: mov    0x88(%rsp),%r10
  0x000000010487758a: mov    %r10,%r11
  0x000000010487758d: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877591: mov    0x68(%rsp),%r10
  0x0000000104877596: mov    %r11d,0x10(%r10)   ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487759a: mov    0x60(%rsp),%r11d
  0x000000010487759f: inc    %r11d              ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048775a2: mov    %r11d,0x78(%rsp)
  0x00000001048775a7: shr    $0x9,%r10
  0x00000001048775ab: movabs $0x104297000,%r11
  0x00000001048775b5: mov    %r12b,(%r11,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048775b9: mov    0x68(%rsp),%r10
  0x00000001048775be: mov    0x78(%rsp),%r11d
  0x00000001048775c3: mov    %r11d,0xc(%r10)    ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x00000001048775c7: mov    0x88(%rsp),%r10
  0x00000001048775cf: mov    0xc(%r10),%ebp     ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a515
  0x00000001048775d3: mov    0x60(%rsp),%r11d
  0x00000001048775d8: cmp    %ebp,%r11d
  0x00000001048775db: jae    0x0000000104879c19  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)

  0x00000001048775e1: mov    $0x3b,%r9d
  0x00000001048775e7: mov    %r9w,0x10(%r10,%r11,2)
  0x00000001048775ed: mov    0x60(%r15),%rax
  0x00000001048775f1: mov    %rax,%r10
  0x00000001048775f4: add    $0x18,%r10
  0x00000001048775f8: cmp    0x70(%r15),%r10
  0x00000001048775fc: jae    0x0000000104879679  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877602: mov    %r10,0x60(%r15)
  0x0000000104877606: prefetchnta 0xc0(%r10)
  0x000000010487760e: mov    0x48(%rsp),%r10
  0x0000000104877613: mov    0xa8(%r10),%r10
  0x000000010487761a: mov    %r10,(%rax)
  0x000000010487761d: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104877624: mov    %r12d,0xc(%rax)
  0x0000000104877628: mov    %r12,0x10(%rax)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010487762c: mov    %rax,0x68(%rsp)
  0x0000000104877631: mov    0x78(%rsp),%r10d
  0x0000000104877636: test   %r10d,%r10d
  0x0000000104877639: jg     0x0000000104877681  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487763b: test   %r10d,%r10d
  0x000000010487763e: jl     0x0000000104879f95  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x0000000104877644: movl   $0xed561523,0xc(%rax)  ;   {oop([C)}
  0x000000010487764b: mov    %rax,%r10
  0x000000010487764e: shr    $0x9,%r10
  0x0000000104877652: movabs $0x104297000,%r11
  0x000000010487765c: mov    %r12b,(%r11,%r10,1)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877660: mov    0x70(%rsp),%rsi
  0x0000000104877665: mov    0x68(%rsp),%rdx
  0x000000010487766a: mov    0x30(%rsp),%r10
  0x000000010487766f: mov    %r10,0x18(%rsp)
  0x0000000104877674: mov    %rsi,%rbp
  0x0000000104877677: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=1468}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010487767c: jmpq   0x0000000104877dec
  0x0000000104877681: sub    0x60(%rsp),%ebp
  0x0000000104877685: dec    %ebp
  0x0000000104877687: test   %ebp,%ebp
  0x0000000104877689: jl     0x0000000104879f45  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010487768f: mov    0x88(%rsp),%rsi
  0x0000000104877697: xor    %edx,%edx
  0x0000000104877699: mov    0x78(%rsp),%ecx
  0x000000010487769d: mov    0x30(%rsp),%r10
  0x00000001048776a2: mov    %r10,0x18(%rsp)
  0x00000001048776a7: mov    %rax,%rbp
  0x00000001048776aa: nop
  0x00000001048776ab: callq  0x000000010481d420  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=1520}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {static_call}
  0x00000001048776b0: mov    %rbp,%r10
  0x00000001048776b3: mov    %rax,%r11
  0x00000001048776b6: shr    $0x3,%r11
  0x00000001048776ba: mov    %r11d,0xc(%rbp)
  0x00000001048776be: shr    $0x9,%r10
  0x00000001048776c2: movabs $0x104297000,%r11
  0x00000001048776cc: mov    %r12b,(%r11,%r10,1)  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048776d0: jmp    0x0000000104877660
  0x00000001048776d2: test   %r10d,%r10d
  0x00000001048776d5: jl     0x0000000104879a19
  0x00000001048776db: test   %r8d,%r8d
  0x00000001048776de: je     0x0000000104879a09  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x00000001048776e4: movl   $0xed561523,0xc(%rax)  ;   {oop([C)}
  0x00000001048776eb: mov    %rax,%r10
  0x00000001048776ee: shr    $0x9,%r10
  0x00000001048776f2: movabs $0x104297000,%r11
  0x00000001048776fc: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877700: mov    0x68(%rsp),%rsi
  0x0000000104877705: xchg   %ax,%ax
  0x0000000104877707: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop off=1612}
                                                ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010487770c: mov    0x30(%rsp),%r10
  0x0000000104877711: mov    %rax,%r11
  0x0000000104877714: shr    $0x3,%r11
  0x0000000104877718: mov    0x30(%rsp),%r8
  0x000000010487771d: mov    %r11d,0x18(%r8)    ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x0000000104877721: shr    $0x9,%r10
  0x0000000104877725: movabs $0x104297000,%r11
  0x000000010487772f: mov    %r12b,(%r11,%r10,1)
  0x0000000104877733: mov    0x64(%rsp),%r13d   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104877738: inc    %r13d              ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010487773b: mov    %r13d,0x1c(%rsp)   ; OopMap{[0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop off=1664}
                                                ;*goto
                                                ; - java.io.ObjectStreamClass::matchFields@195 (line 2292)

  0x0000000104877740: test   %eax,-0x208d746(%rip)        # 0x00000001027ea000
                                                ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {poll}
  0x0000000104877746: mov    (%rsp),%r10
  0x000000010487774a: shr    $0x3,%r10          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487774e: mov    %r10d,0x2c(%rsp)
  0x0000000104877753: mov    0x1c(%rsp),%r10d
  0x0000000104877758: cmp    0x10(%rsp),%r10d
  0x000000010487775d: jge    0x0000000104877e95  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877763: mov    0x1c(%rsp),%r13d   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877768: cmp    0x10(%rsp),%r13d
  0x000000010487776d: jae    0x00000001048792ba  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104877773: mov    0x2c(%rsp),%r10d
  0x0000000104877778: mov    0x14(%r12,%r10,8),%r8d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a3bf
  0x000000010487777d: mov    0x38(%rsp),%r10
  0x0000000104877782: mov    0x10(%r10,%r13,4),%r10d  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877787: mov    %r10d,0x60(%rsp)
  0x000000010487778c: mov    0x14(%r12,%r10,8),%r11d  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ; implicit exception: dispatches to 0x000000010487a3d1
  0x0000000104877791: mov    0xc(%r12,%r8,8),%r10d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ; implicit exception: dispatches to 0x000000010487a3e1
  0x0000000104877796: mov    0x2c(%rsp),%ecx
  0x000000010487779a: lea    (%r12,%rcx,8),%r9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487779e: mov    %r9,(%rsp)
  0x00000001048777a2: cmp    %r11d,%r8d
  0x00000001048777a5: je     0x000000010487787f
  0x00000001048777ab: mov    0xc(%r12,%r11,8),%r9d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a3f5
  0x00000001048777b0: mov    0xc(%r12,%r9,8),%r11d
  0x00000001048777b5: mov    0xc(%r12,%r10,8),%ecx  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048777ba: cmp    %r11d,%ecx
  0x00000001048777bd: jne    0x0000000104877738  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048777c3: lea    (%r12,%r9,8),%r11  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048777c7: lea    0x10(%r12,%r9,8),%rsi
  0x00000001048777cc: lea    (%r12,%r10,8),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048777d0: lea    0x10(%r12,%r10,8),%rdi
  0x00000001048777d5: cmp    %rsi,%rdi
  0x00000001048777d8: je     0x0000000104877866
  0x00000001048777de: test   %ecx,%ecx
  0x00000001048777e0: je     0x0000000104877866
  0x00000001048777e6: shl    %ecx
  0x00000001048777e8: mov    %ecx,%eax
  0x00000001048777ea: and    $0x1e,%eax
  0x00000001048777ed: and    $0xffffffffffffffe0,%ecx
  0x00000001048777f0: je     0x0000000104877835
  0x00000001048777f2: lea    (%rdi,%rcx,1),%rdi
  0x00000001048777f6: lea    (%rsi,%rcx,1),%rsi
  0x00000001048777fa: neg    %rcx
  0x00000001048777fd: vmovdqu (%rdi,%rcx,1),%ymm1
  0x0000000104877802: vmovdqu (%rsi,%rcx,1),%ymm0
  0x0000000104877807: (bad)  
  0x000000010487780a: enterq $0xe2c4,$0x7d
  0x000000010487780e: (bad)  
  0x000000010487780f: leaveq 
  0x0000000104877810: jne    0x000000010487786d
  0x0000000104877812: add    $0x20,%rcx
  0x0000000104877816: jne    0x00000001048777fd
  0x0000000104877818: test   %eax,%eax
  0x000000010487781a: je     0x0000000104877866
  0x000000010487781c: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x0000000104877822: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x0000000104877828: (bad)  
  0x000000010487782b: enterq $0xe2c4,$0x7d
  0x000000010487782f: (bad)  
  0x0000000104877830: leaveq 
  0x0000000104877831: jne    0x000000010487786d
  0x0000000104877833: jmp    0x0000000104877866
  0x0000000104877835: mov    %eax,%ecx
  0x0000000104877837: and    $0xfffffffffffffffc,%ecx
  0x000000010487783a: je     0x0000000104877855
  0x000000010487783c: lea    (%rdi,%rcx,1),%rdi
  0x0000000104877840: lea    (%rsi,%rcx,1),%rsi
  0x0000000104877844: neg    %rcx
  0x0000000104877847: mov    (%rdi,%rcx,1),%ebx
  0x000000010487784a: cmp    (%rsi,%rcx,1),%ebx
  0x000000010487784d: jne    0x000000010487786d
  0x000000010487784f: add    $0x4,%rcx
  0x0000000104877853: jne    0x0000000104877847
  0x0000000104877855: test   $0x2,%eax
  0x000000010487785a: je     0x0000000104877866
  0x000000010487785c: movzwl (%rdi),%ebx
  0x000000010487785f: movzwl (%rsi),%ecx
  0x0000000104877862: cmp    %ecx,%ebx
  0x0000000104877864: jne    0x000000010487786d
  0x0000000104877866: mov    $0x1,%eax
  0x000000010487786b: jmp    0x000000010487786f
  0x000000010487786d: xor    %eax,%eax
  0x000000010487786f: (bad)  
  0x0000000104877872: leaveq 
  0x0000000104877873: (bad)  
  0x0000000104877876: rolb   $0xfe,-0x467bf040(%rbp)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487787d: (bad)  
  0x000000010487787e: incl   0x5c(%rbx,%rcx,4)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877882: and    $0x2c,%al
  0x0000000104877884: mov    0x18(%r12,%r11,8),%r8d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877889: mov    0xc(%r12,%r8,8),%r10d  ;*synchronization entry
                                                ; - java.lang.reflect.Field::getType@-1 (line 218)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a465
  0x000000010487788e: mov    0xc(%r12,%r10,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010487a475
  0x0000000104877893: test   %ebp,%ebp
  0x0000000104877895: jle    0x0000000104879a99
  0x000000010487789b: test   %ebp,%ebp
  0x000000010487789d: jbe    0x00000001048798ed  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x00000001048778a3: movzwl 0x10(%r12,%r10,8),%r10d  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048778a9: cmp    $0x4c,%r10d
  0x00000001048778ad: je     0x00000001048798c8  ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048778b3: cmp    $0x5b,%r10d
  0x00000001048778b7: je     0x00000001048798c8  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048778bd: mov    0x60(%rsp),%r8d
  0x00000001048778c2: mov    0x18(%r12,%r8,8),%r9d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048778c7: mov    0xc(%r12,%r9,8),%ecx  ;*ifne
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@35 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a485
  0x00000001048778cc: mov    0xc(%r12,%rcx,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x000000010487a495
  0x00000001048778d1: test   %ebp,%ebp
  0x00000001048778d3: jle    0x0000000104879ad1
  0x00000001048778d9: test   %ebp,%ebp
  0x00000001048778db: jbe    0x0000000104879921  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x00000001048778e1: movzwl 0x10(%r12,%rcx,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048778e7: cmp    %ebp,%r10d
  0x00000001048778ea: jne    0x0000000104879b0d
  0x00000001048778f0: mov    %r8d,%r10d
  0x00000001048778f3: mov    0x20(%r12,%r10,8),%ebp
  0x00000001048778f8: test   %ebp,%ebp
  0x00000001048778fa: je     0x0000000104879b45  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877900: mov    0x60(%r15),%r11    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877904: mov    %r11,%r10
  0x0000000104877907: add    $0x28,%r10
  0x000000010487790b: cmp    0x70(%r15),%r10
  0x000000010487790f: jae    0x0000000104879320  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877915: mov    %r10,0x60(%r15)
  0x0000000104877919: prefetchnta 0xc0(%r10)
  0x0000000104877921: mov    0x58(%rsp),%r10
  0x0000000104877926: mov    0xa8(%r10),%r10
  0x000000010487792d: mov    %r10,(%r11)        ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877930: movl   $0xf80025ef,0x8(%r11)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x0000000104877938: mov    %r12d,0xc(%r11)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487793c: mov    %r12,0x10(%r11)
  0x0000000104877940: mov    %r12,0x18(%r11)
  0x0000000104877944: mov    %r12,0x20(%r11)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877948: mov    %r13d,0x64(%rsp)   ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010487794d: mov    %r11,0x30(%rsp)
  0x0000000104877952: mov    0x60(%rsp),%r10d
  0x0000000104877957: movzbl 0x10(%r12,%r10,8),%r11d
  0x000000010487795d: mov    0x30(%rsp),%r10
  0x0000000104877962: mov    %r11b,0x10(%r10)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104877966: mov    0x60(%rsp),%r11d
  0x000000010487796b: mov    0x20(%r12,%r11,8),%r10d  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877970: mov    0x30(%rsp),%r11
  0x0000000104877975: mov    %r10d,0x20(%r11)
  0x0000000104877979: shr    $0x9,%r11
  0x000000010487797d: movabs $0x104297000,%r8
  0x0000000104877987: mov    %r12b,(%r8,%r11,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010487798b: mov    0x24(%r12,%r10,8),%ebp  ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a4a5
  0x0000000104877990: mov    0x20(%r12,%r10,8),%r10d  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877995: mov    0x30(%rsp),%r11
  0x000000010487799a: mov    %r10d,0x14(%r11)   ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010487799e: mov    %r11,%r10
  0x00000001048779a1: shr    $0x9,%r10
  0x00000001048779a5: movabs $0x104297000,%r11
  0x00000001048779af: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getTypeCode@-1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x00000001048779b3: mov    0x48(%r12,%rbp,8),%r10  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a4b5
  0x00000001048779b8: mov    %r10,0x18(%rsp)
  0x00000001048779bd: mov    0x30(%rsp),%r10
  0x00000001048779c2: lea    (%r12,%rbp,8),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048779c6: mov    %r11,0x68(%rsp)
  0x00000001048779cb: mov    0x18(%rsp),%r11
  0x00000001048779d0: test   %r11,%r11
  0x00000001048779d3: mov    0x68(%rsp),%r11
  0x00000001048779d8: movabs $0x76ab006f8,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x00000001048779e2: cmovne %r8,%r11
  0x00000001048779e6: shr    $0x9,%r10
  0x00000001048779ea: movabs $0x104297000,%r8
  0x00000001048779f4: mov    %r12b,(%r8,%r10,1)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048779f8: mov    0x60(%r15),%rax
  0x00000001048779fc: mov    %rax,%r10
  0x00000001048779ff: add    $0x18,%r10         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a03: shr    $0x3,%r11
  0x0000000104877a07: mov    0x30(%rsp),%r8
  0x0000000104877a0c: mov    %r11d,0x1c(%r8)
  0x0000000104877a10: cmp    0x70(%r15),%r10
  0x0000000104877a14: jae    0x000000010487935c  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a1a: mov    %r10,0x60(%r15)
  0x0000000104877a1e: prefetchnta 0xc0(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a26: mov    0x50(%rsp),%r10
  0x0000000104877a2b: mov    0xa8(%r10),%r10
  0x0000000104877a32: mov    %r10,(%rax)        ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a35: movl   $0xf8001b4b,0x8(%rax)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104877a3c: mov    %r12d,0xc(%rax)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a40: mov    %r12,0x10(%rax)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104877a44: mov    %rax,0x70(%rsp)
  0x0000000104877a49: mov    0x60(%r15),%r11
  0x0000000104877a4d: mov    %r11,%r10
  0x0000000104877a50: add    $0x30,%r10
  0x0000000104877a54: cmp    0x70(%r15),%r10
  0x0000000104877a58: jae    0x0000000104879340  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a5e: mov    %r10,0x60(%r15)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a62: prefetchnta 0xc0(%r10)    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a6a: movq   $0x1,(%r11)        ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a71: prefetchnta 0x100(%r10)   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a79: movl   $0xf8000041,0x8(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104877a81: prefetchnta 0x140(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a89: movl   $0x10,0xc(%r11)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a91: prefetchnta 0x180(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a99: mov    %r12,0x10(%r11)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877a9d: mov    %r12,0x18(%r11)    ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877aa1: mov    %r12,0x20(%r11)
  0x0000000104877aa5: mov    %r12,0x28(%r11)    ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877aa9: mov    %r11,0x78(%rsp)
  0x0000000104877aae: mov    0x70(%rsp),%r10
  0x0000000104877ab3: mov    %r10,%r11
  0x0000000104877ab6: mov    0x78(%rsp),%r10
  0x0000000104877abb: shr    $0x3,%r10
  0x0000000104877abf: mov    0x70(%rsp),%r8
  0x0000000104877ac4: mov    %r10d,0x10(%r8)    ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104877ac8: shr    $0x9,%r11
  0x0000000104877acc: movabs $0x104297000,%r10
  0x0000000104877ad6: mov    %r12b,(%r10,%r11,1)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104877ada: mov    0x18(%rsp),%r10
  0x0000000104877adf: test   %r10,%r10
  0x0000000104877ae2: je     0x0000000104877af1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ae4: mov    0x8(%r10),%r11d
  0x0000000104877ae8: test   %r11d,%r11d
  0x0000000104877aeb: jl     0x0000000104877f7b  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877af1: mov    0x18(%rsp),%r10
  0x0000000104877af6: test   %r10,%r10
  0x0000000104877af9: jne    0x0000000104877273  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877aff: mov    $0x1,%edx
  0x0000000104877b04: xor    %r10d,%r10d
  0x0000000104877b07: jmp    0x0000000104877b2d  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b09: test   %r11,%r11
  0x0000000104877b0c: jne    0x0000000104877287  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b12: mov    %r10d,%edx
  0x0000000104877b15: inc    %edx
  0x0000000104877b17: mov    0x14(%rsp),%r8d
  0x0000000104877b1c: mov    %r8,%r11
  0x0000000104877b1f: shl    $0x3,%r11          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b23: mov    %r11,0x78(%rsp)
  0x0000000104877b28: mov    %r9,0x68(%rsp)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b2d: mov    0x70(%rsp),%r11
  0x0000000104877b32: mov    0xc(%r11),%r9d
  0x0000000104877b36: mov    %r9d,%r8d
  0x0000000104877b39: inc    %r8d               ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b3c: mov    0x68(%rsp),%r11
  0x0000000104877b41: movabs $0x76ab00010,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000000104877b4b: cmp    %rcx,%r11
  0x0000000104877b4e: je     0x00000001048781c6  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b54: movabs $0x76ab00148,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = byte)}
  0x0000000104877b5e: cmp    %rcx,%r11
  0x0000000104877b61: je     0x00000001048783ce  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b67: movabs $0x76ab00280,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000000104877b71: cmp    %rcx,%r11
  0x0000000104877b74: je     0x00000001048785ec
  0x0000000104877b7a: movabs $0x76ab00078,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = float)}
  0x0000000104877b84: cmp    %rcx,%r11
  0x0000000104877b87: je     0x00000001048787f1  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877b8d: movabs $0x76ab000e0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x0000000104877b97: cmp    %rcx,%r11
  0x0000000104877b9a: je     0x00000001048789f1  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ba0: movabs $0x76ab002e8,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = short)}
  0x0000000104877baa: cmp    %rcx,%r11
  0x0000000104877bad: je     0x0000000104878bf5  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877bb3: movabs $0x76ab00218,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = char)}
  0x0000000104877bbd: cmp    %rcx,%r11
  0x0000000104877bc0: je     0x0000000104878df5  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877bc6: movabs $0x76ab001b0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = boolean)}
  0x0000000104877bd0: cmp    %rcx,%r11
  0x0000000104877bd3: je     0x0000000104878ff9  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877bd9: movabs $0x76ab00350,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x0000000104877be3: cmp    %rcx,%r11
  0x0000000104877be6: jne    0x0000000104879be5  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104877bec: mov    0x78(%rsp),%r11
  0x0000000104877bf1: test   %r11,%r11
  0x0000000104877bf4: je     0x0000000104879b79  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877bfa: mov    %r11,0x18(%rsp)
  0x0000000104877bff: mov    0xc(%r11),%ebp     ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c03: mov    %r10d,%r11d
  0x0000000104877c06: sub    %ebp,%r11d
  0x0000000104877c09: inc    %r11d
  0x0000000104877c0c: test   %r11d,%r11d
  0x0000000104877c0f: jle    0x0000000104877c30  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c11: mov    %ebp,%r11d
  0x0000000104877c14: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c17: mov    %r11d,%r8d
  0x0000000104877c1a: sub    %r10d,%r8d
  0x0000000104877c1d: inc    %r8d
  0x0000000104877c20: test   %r8d,%r8d
  0x0000000104877c23: jl     0x0000000104877c3e  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c25: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c29: mov    %r11d,0x14(%rsp)
  0x0000000104877c2e: jmp    0x0000000104877c42
  0x0000000104877c30: mov    0x70(%rsp),%r10
  0x0000000104877c35: mov    %r8d,0xc(%r10)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c39: jmpq   0x0000000104877dce
  0x0000000104877c3e: mov    %edx,0x14(%rsp)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c42: mov    0x14(%rsp),%r11d
  0x0000000104877c47: test   %r11d,%r11d
  0x0000000104877c4a: jle    0x0000000104877c5c  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c4c: mov    $0x7ffffff7,%r11d
  0x0000000104877c52: sub    0x14(%rsp),%r11d
  0x0000000104877c57: test   %r11d,%r11d
  0x0000000104877c5a: jge    0x0000000104877c6c  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104877c5c: mov    0x70(%rsp),%rsi
  0x0000000104877c61: xchg   %ax,%ax
  0x0000000104877c63: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=2984}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104877c68: mov    %eax,0x14(%rsp)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c6c: mov    0x14(%rsp),%r10d
  0x0000000104877c71: cmp    $0x80000,%r10d
  0x0000000104877c78: ja     0x0000000104879ce1  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c7e: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c83: shl    %r10
  0x0000000104877c86: add    $0x17,%r10         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c8a: mov    %r10,0x68(%rsp)
  0x0000000104877c8f: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877c93: mov    %r10,0x80(%rsp)
  0x0000000104877c9b: mov    0x14(%rsp),%r11d
  0x0000000104877ca0: cmp    $0x80000,%r11d
  0x0000000104877ca7: ja     0x00000001048796d5
  0x0000000104877cad: mov    0x60(%r15),%r8
  0x0000000104877cb1: mov    %r8,%r10
  0x0000000104877cb4: mov    0x80(%rsp),%r11
  0x0000000104877cbc: add    %r11,%r10
  0x0000000104877cbf: cmp    0x70(%r15),%r10
  0x0000000104877cc3: jae    0x00000001048796d5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877cc9: mov    %r10,0x60(%r15)
  0x0000000104877ccd: prefetchnta 0xc0(%r10)
  0x0000000104877cd5: movq   $0x1,(%r8)
  0x0000000104877cdc: prefetchnta 0x100(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ce4: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000104877cec: mov    0x14(%rsp),%r11d
  0x0000000104877cf1: mov    %r11d,0xc(%r8)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877cf5: prefetchnta 0x140(%r10)   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877cfd: prefetchnta 0x180(%r10)   ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d05: mov    %r8,0x88(%rsp)
  0x0000000104877d0d: cmp    0x14(%rsp),%ebp
  0x0000000104877d11: mov    0x14(%rsp),%r9d
  0x0000000104877d16: cmovl  %ebp,%r9d          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d1a: mov    %r8,%rsi
  0x0000000104877d1d: add    $0x10,%rsi         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d21: mov    0x68(%rsp),%r10
  0x0000000104877d26: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d2a: mov    %r10,%rcx
  0x0000000104877d2d: add    $0xfffffffffffffffe,%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d31: cmp    %r9d,%ebp
  0x0000000104877d34: jb     0x0000000104879ceb
  0x0000000104877d3a: mov    0x14(%rsp),%ebp
  0x0000000104877d3e: cmp    %r9d,%ebp
  0x0000000104877d41: jb     0x0000000104879ceb  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d47: test   %r9d,%r9d
  0x0000000104877d4a: jle    0x0000000104879d15  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d50: mov    0x18(%rsp),%r8
  0x0000000104877d55: add    $0x10,%r8          ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d59: cmp    0x14(%rsp),%r9d
  0x0000000104877d5e: jl     0x000000010487938d  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d64: mov    0x80(%rsp),%rdx
  0x0000000104877d6c: add    $0xfffffffffffffff0,%rdx
  0x0000000104877d70: shr    $0x3,%rdx          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d74: mov    %r8,%rdi
  0x0000000104877d77: movabs $0x104829780,%r10
  0x0000000104877d81: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d84: mov    0x70(%rsp),%r10
  0x0000000104877d89: mov    0xc(%r10),%r9d     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d8d: mov    0x88(%rsp),%r10
  0x0000000104877d95: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877d99: mov    0x70(%rsp),%r11
  0x0000000104877d9e: mov    %r10d,0x10(%r11)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877da2: mov    %r9d,%r10d
  0x0000000104877da5: inc    %r10d
  0x0000000104877da8: mov    %r10d,0xc(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877dac: mov    %r11,%r10
  0x0000000104877daf: shr    $0x9,%r10
  0x0000000104877db3: movabs $0x104297000,%r11
  0x0000000104877dbd: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877dc1: mov    0x88(%rsp),%r10
  0x0000000104877dc9: mov    %r10,0x78(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877dce: mov    0x78(%rsp),%r10
  0x0000000104877dd3: mov    0xc(%r10),%r11d
  0x0000000104877dd7: cmp    %r11d,%r9d
  0x0000000104877dda: jae    0x0000000104879b89  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877de0: mov    $0x56,%r11d
  0x0000000104877de6: mov    %r11w,0x10(%r10,%r9,2)
  0x0000000104877dec: mov    0x60(%r15),%rax
  0x0000000104877df0: mov    %rax,%r10
  0x0000000104877df3: add    $0x18,%r10
  0x0000000104877df7: cmp    0x70(%r15),%r10
  0x0000000104877dfb: jae    0x0000000104879371  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877e01: mov    %r10,0x60(%r15)
  0x0000000104877e05: prefetchnta 0xc0(%r10)
  0x0000000104877e0d: mov    0x48(%rsp),%r10
  0x0000000104877e12: mov    0xa8(%r10),%r10
  0x0000000104877e19: mov    %r10,(%rax)
  0x0000000104877e1c: movl   $0xf80002da,0x8(%rax)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104877e23: mov    %r12d,0xc(%rax)
  0x0000000104877e27: mov    %r12,0x10(%rax)
  0x0000000104877e2b: mov    %rax,0x68(%rsp)
  0x0000000104877e30: mov    0x70(%rsp),%r10
  0x0000000104877e35: mov    0xc(%r10),%r10d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104877e39: mov    0x70(%rsp),%r11
  0x0000000104877e3e: mov    0x10(%r11),%r8d    ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877e42: test   %r10d,%r10d
  0x0000000104877e45: jle    0x00000001048776d2  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877e4b: mov    0xc(%r12,%r8,8),%r9d  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a4f5
  0x0000000104877e50: sub    %r10d,%r9d
  0x0000000104877e53: test   %r9d,%r9d
  0x0000000104877e56: jl     0x0000000104879a59  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104877e5c: lea    (%r12,%r8,8),%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877e60: xor    %edx,%edx
  0x0000000104877e62: mov    %r10d,%ecx
  0x0000000104877e65: mov    %rax,%rbp
  0x0000000104877e68: data32 xchg %ax,%ax
  0x0000000104877e6b: callq  0x000000010481d420  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [104]=Oop off=3504}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {static_call}
  0x0000000104877e70: mov    %rbp,%r10
  0x0000000104877e73: mov    %rax,%r8
  0x0000000104877e76: shr    $0x3,%r8
  0x0000000104877e7a: mov    %r8d,0xc(%rbp)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877e7e: shr    $0x9,%r10
  0x0000000104877e82: movabs $0x104297000,%r11
  0x0000000104877e8c: mov    %r12b,(%r11,%r10,1)
  0x0000000104877e90: jmpq   0x0000000104877700
  0x0000000104877e95: mov    0x30(%rsp),%r10
  0x0000000104877e9a: test   %r10,%r10
  0x0000000104877e9d: je     0x00000001048799cd  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ea3: mov    (%rsp),%r10
  0x0000000104877ea7: mov    0xc(%r10),%r11d    ; implicit exception: dispatches to 0x000000010487a4c5
  0x0000000104877eab: mov    0x30(%rsp),%r10
  0x0000000104877eb0: mov    %r11d,0xc(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877eb4: mov    0x40(%rsp),%r10
  0x0000000104877eb9: mov    0xc(%r10),%r10d    ; implicit exception: dispatches to 0x000000010487a4d5
  0x0000000104877ebd: mov    0x28(%rsp),%r8d
  0x0000000104877ec2: cmp    %r10d,%r8d
  0x0000000104877ec5: jae    0x000000010487997c  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ecb: mov    0x40(%rsp),%r10
  0x0000000104877ed0: lea    0x10(%r10,%r8,4),%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ed5: mov    0x30(%rsp),%r11
  0x0000000104877eda: mov    %r11,%r8
  0x0000000104877edd: shr    $0x3,%r8
  0x0000000104877ee1: mov    %r8d,(%r10)        ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ee4: shr    $0x9,%r10
  0x0000000104877ee8: movabs $0x104297000,%r11
  0x0000000104877ef2: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877ef6: mov    0x20(%rsp),%r10
  0x0000000104877efb: mov    0xc(%r10),%r11d    ; implicit exception: dispatches to 0x000000010487a4e5
  0x0000000104877eff: mov    0x28(%rsp),%r10d
  0x0000000104877f04: inc    %r10d              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f07: cmp    %r11d,%r10d
  0x0000000104877f0a: jge    0x00000001048791f9  ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f10: cmp    %r11d,%r10d
  0x0000000104877f13: jae    0x00000001048799a9  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f19: movslq 0x28(%rsp),%r11
  0x0000000104877f1e: mov    0x20(%rsp),%r8
  0x0000000104877f23: mov    0x14(%r8,%r11,4),%r8d  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f28: mov    %r8d,0x2c(%rsp)
  0x0000000104877f2d: mov    0x10(%rsp),%r11d
  0x0000000104877f32: test   %r11d,%r11d
  0x0000000104877f35: jle    0x00000001048799da  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f3b: mov    %r10d,0x28(%rsp)
  0x0000000104877f40: xor    %r13d,%r13d
  0x0000000104877f43: xor    %r10d,%r10d
  0x0000000104877f46: mov    %r10,0x30(%rsp)
  0x0000000104877f4b: jmpq   0x0000000104877768
  0x0000000104877f50: xor    %r9d,%r9d          ; OopMap{r9=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=3731}
                                                ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f53: test   %eax,-0x208df59(%rip)        # 0x00000001027ea000
                                                ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {poll}
  0x0000000104877f59: mov    0x48(%r9),%r11     ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a455
  0x0000000104877f5d: test   %r11,%r11
  0x0000000104877f60: je     0x0000000104877b09
  0x0000000104877f66: mov    %r11,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f69: mov    0x8(%r8),%r8d
  0x0000000104877f6d: test   %r8d,%r8d
  0x0000000104877f70: jge    0x0000000104877b09  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f76: mov    %r9,0x68(%rsp)     ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104877f7b: mov    0x70(%rsp),%r10
  0x0000000104877f80: mov    0x10(%r10),%r10d   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f84: mov    %r10d,0x14(%rsp)
  0x0000000104877f89: mov    0xc(%r12,%r10,8),%r11d  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x000000010487a435
  0x0000000104877f8e: mov    %r11d,0x18(%rsp)
  0x0000000104877f93: mov    0x70(%rsp),%r10
  0x0000000104877f98: mov    0xc(%r10),%ebp     ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877f9c: mov    %ebp,%r8d
  0x0000000104877f9f: sub    %r11d,%r8d
  0x0000000104877fa2: mov    0x14(%rsp),%r10d
  0x0000000104877fa7: shl    $0x3,%r10
  0x0000000104877fab: mov    %r10,0x78(%rsp)
  0x0000000104877fb0: inc    %r8d
  0x0000000104877fb3: mov    %ebp,%r10d
  0x0000000104877fb6: inc    %r10d
  0x0000000104877fb9: test   %r8d,%r8d
  0x0000000104877fbc: jle    0x0000000104878174  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877fc2: mov    %r11d,%r9d
  0x0000000104877fc5: shl    %r9d               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877fc8: mov    %r9d,%r8d
  0x0000000104877fcb: sub    %ebp,%r8d
  0x0000000104877fce: inc    %r8d
  0x0000000104877fd1: test   %r8d,%r8d
  0x0000000104877fd4: jl     0x0000000104877fdf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877fd6: add    $0x2,%r9d
  0x0000000104877fda: mov    %r9d,%ebp
  0x0000000104877fdd: jmp    0x0000000104877fe2
  0x0000000104877fdf: mov    %r10d,%ebp         ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877fe2: test   %ebp,%ebp
  0x0000000104877fe4: jle    0x0000000104877ff4  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104877fe6: mov    $0x7ffffff7,%r8d
  0x0000000104877fec: sub    %ebp,%r8d
  0x0000000104877fef: test   %r8d,%r8d
  0x0000000104877ff2: jge    0x0000000104878006  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104877ff4: mov    0x70(%rsp),%rsi
  0x0000000104877ff9: mov    %r10d,%edx
  0x0000000104877ffc: mov    %rsi,%rbp
  0x0000000104877fff: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=3908}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878004: mov    %eax,%ebp          ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878006: cmp    $0x80000,%ebp
  0x000000010487800c: ja     0x0000000104879850  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878012: movslq %ebp,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878015: mov    0x18(%rsp),%r11d
  0x000000010487801a: cmp    %ebp,%r11d
  0x000000010487801d: mov    %ebp,%r8d
  0x0000000104878020: cmovl  %r11d,%r8d         ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878024: mov    %r8d,0x1c(%rsp)
  0x0000000104878029: shl    %r10
  0x000000010487802c: mov    0x14(%rsp),%r11d
  0x0000000104878031: shl    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878035: mov    %r11,0x80(%rsp)
  0x000000010487803d: add    $0x17,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878041: mov    %r10,%r11
  0x0000000104878044: shr    $0x3,%r11          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878048: mov    %r11,0x88(%rsp)
  0x0000000104878050: and    $0xfffffffffffffff8,%r10  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878054: mov    %r10,0x90(%rsp)
  0x000000010487805c: mov    %r11,%r10
  0x000000010487805f: add    $0xfffffffffffffffe,%r10  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878063: mov    %r10,0x98(%rsp)
  0x000000010487806b: cmp    $0x80000,%ebp
  0x0000000104878071: ja     0x0000000104879305
  0x0000000104878077: mov    0x60(%r15),%r11
  0x000000010487807b: mov    %r11,%r10
  0x000000010487807e: mov    0x90(%rsp),%r8
  0x0000000104878086: add    %r8,%r10
  0x0000000104878089: cmp    0x70(%r15),%r10
  0x000000010487808d: jae    0x0000000104879305  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878093: mov    %r10,0x60(%r15)    ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878097: prefetchnta 0xc0(%r10)
  0x000000010487809f: movq   $0x1,(%r11)
  0x00000001048780a6: prefetchnta 0x100(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780ae: movl   $0xf8000041,0x8(%r11)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048780b6: mov    %ebp,0xc(%r11)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780ba: prefetchnta 0x140(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780c2: prefetchnta 0x180(%r10)   ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780ca: mov    %r11,0x78(%rsp)
  0x00000001048780cf: mov    %r11,%r10
  0x00000001048780d2: add    $0x10,%r10         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780d6: mov    0x18(%rsp),%r8d
  0x00000001048780db: cmp    0x1c(%rsp),%r8d
  0x00000001048780e0: jb     0x0000000104879858
  0x00000001048780e6: cmp    0x1c(%rsp),%ebp
  0x00000001048780ea: jb     0x0000000104879858
  0x00000001048780f0: mov    0x1c(%rsp),%r11d
  0x00000001048780f5: test   %r11d,%r11d
  0x00000001048780f8: jle    0x0000000104879891  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048780fe: mov    0x14(%rsp),%r8d
  0x0000000104878103: lea    0x10(%r12,%r8,8),%r9  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878108: cmp    %ebp,%r11d
  0x000000010487810b: jl     0x000000010487926a  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878111: mov    0x90(%rsp),%rdx
  0x0000000104878119: add    $0xfffffffffffffff0,%rdx
  0x000000010487811d: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878121: mov    %r9,%rdi
  0x0000000104878124: mov    %r10,%rsi
  0x0000000104878127: movabs $0x104829780,%r10
  0x0000000104878131: callq  *%r10              ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878134: mov    0x70(%rsp),%r10
  0x0000000104878139: mov    0xc(%r10),%ebp     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487813d: mov    0x78(%rsp),%r10
  0x0000000104878142: mov    %r10,%r11
  0x0000000104878145: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878149: mov    %r11d,0x14(%rsp)
  0x000000010487814e: mov    0x70(%rsp),%r10
  0x0000000104878153: mov    %r11d,0x10(%r10)   ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878157: mov    %ebp,%r10d
  0x000000010487815a: inc    %r10d              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487815d: mov    0x70(%rsp),%r11
  0x0000000104878162: shr    $0x9,%r11
  0x0000000104878166: movabs $0x104297000,%r8
  0x0000000104878170: mov    %r12b,(%r8,%r11,1)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878174: mov    0x70(%rsp),%r11
  0x0000000104878179: mov    %r10d,0xc(%r11)
  0x000000010487817d: mov    0x78(%rsp),%r11
  0x0000000104878182: mov    0xc(%r11),%r8d     ; implicit exception: dispatches to 0x000000010487a445
  0x0000000104878186: cmp    %r8d,%ebp
  0x0000000104878189: jae    0x00000001048796f0
  0x000000010487818f: mov    $0x5b,%r8d
  0x0000000104878195: mov    %r8w,0x10(%r11,%rbp,2)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010487819b: mov    0x68(%rsp),%r11
  0x00000001048781a0: mov    0x48(%r11),%r11    ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781a4: test   %r11,%r11
  0x00000001048781a7: je     0x0000000104879741
  0x00000001048781ad: mov    0x8(%r11),%r8d
  0x00000001048781b1: test   %r8d,%r8d
  0x00000001048781b4: jge    0x0000000104877f50  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781ba: mov    0xe0(%r11),%r9     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781c1: jmpq   0x0000000104877f53
  0x00000001048781c6: mov    0x78(%rsp),%r11
  0x00000001048781cb: test   %r11,%r11
  0x00000001048781ce: je     0x0000000104879c75  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x00000001048781d4: mov    %r11,0x18(%rsp)
  0x00000001048781d9: mov    0xc(%r11),%ebp     ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781dd: mov    %r10d,%ecx
  0x00000001048781e0: sub    %ebp,%ecx
  0x00000001048781e2: inc    %ecx
  0x00000001048781e4: test   %ecx,%ecx
  0x00000001048781e6: jle    0x0000000104878207  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781e8: mov    %ebp,%r8d
  0x00000001048781eb: shl    %r8d               ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781ee: mov    %r8d,%r11d
  0x00000001048781f1: sub    %r10d,%r11d
  0x00000001048781f4: inc    %r11d
  0x00000001048781f7: test   %r11d,%r11d
  0x00000001048781fa: jl     0x0000000104878215  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048781fc: add    $0x2,%r8d          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878200: mov    %r8d,0x14(%rsp)
  0x0000000104878205: jmp    0x0000000104878219
  0x0000000104878207: mov    0x70(%rsp),%r10
  0x000000010487820c: mov    %r8d,0xc(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878210: jmpq   0x00000001048783a6
  0x0000000104878215: mov    %edx,0x14(%rsp)    ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878219: mov    0x14(%rsp),%r11d
  0x000000010487821e: test   %r11d,%r11d
  0x0000000104878221: jle    0x0000000104878233
  0x0000000104878223: mov    $0x7ffffff7,%r10d
  0x0000000104878229: sub    0x14(%rsp),%r10d
  0x000000010487822e: test   %r10d,%r10d
  0x0000000104878231: jge    0x0000000104878244  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104878233: mov    0x70(%rsp),%rsi
  0x0000000104878238: data32 xchg %ax,%ax
  0x000000010487823b: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=4480}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878240: mov    %eax,0x14(%rsp)    ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x0000000104878244: mov    0x14(%rsp),%r10d
  0x0000000104878249: cmp    $0x80000,%r10d
  0x0000000104878250: ja     0x000000010487a10b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878256: movslq 0x14(%rsp),%r10    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487825b: shl    %r10
  0x000000010487825e: add    $0x17,%r10         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878262: mov    %r10,0x68(%rsp)
  0x0000000104878267: and    $0xfffffffffffffff8,%r10  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010487826b: mov    %r10,0x80(%rsp)
  0x0000000104878273: mov    0x14(%rsp),%r11d
  0x0000000104878278: cmp    $0x80000,%r11d
  0x000000010487827f: ja     0x00000001048797a4
  0x0000000104878285: mov    0x60(%r15),%r8
  0x0000000104878289: mov    %r8,%r10
  0x000000010487828c: mov    0x80(%rsp),%r11
  0x0000000104878294: add    %r11,%r10
  0x0000000104878297: cmp    0x70(%r15),%r10
  0x000000010487829b: jae    0x00000001048797a4  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048782a1: mov    %r10,0x60(%r15)
  0x00000001048782a5: prefetchnta 0xc0(%r10)
  0x00000001048782ad: movq   $0x1,(%r8)
  0x00000001048782b4: prefetchnta 0x100(%r10)
  0x00000001048782bc: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000001048782c4: mov    0x14(%rsp),%r11d
  0x00000001048782c9: mov    %r11d,0xc(%r8)
  0x00000001048782cd: prefetchnta 0x140(%r10)
  0x00000001048782d5: prefetchnta 0x180(%r10)
  0x00000001048782dd: mov    %r8,0x88(%rsp)
  0x00000001048782e5: cmp    0x14(%rsp),%ebp
  0x00000001048782e9: mov    0x14(%rsp),%r9d
  0x00000001048782ee: cmovl  %ebp,%r9d          ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x00000001048782f2: mov    %r8,%rsi
  0x00000001048782f5: add    $0x10,%rsi         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048782f9: mov    0x68(%rsp),%r10
  0x00000001048782fe: shr    $0x3,%r10          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878302: mov    %r10,%rcx
  0x0000000104878305: add    $0xfffffffffffffffe,%rcx
  0x0000000104878309: cmp    %r9d,%ebp
  0x000000010487830c: jb     0x000000010487a115
  0x0000000104878312: mov    0x14(%rsp),%ebp
  0x0000000104878316: cmp    %r9d,%ebp
  0x0000000104878319: jb     0x000000010487a115
  0x000000010487831f: test   %r9d,%r9d
  0x0000000104878322: jle    0x000000010487a141  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878328: mov    0x18(%rsp),%r8
  0x000000010487832d: add    $0x10,%r8
  0x0000000104878331: cmp    0x14(%rsp),%r9d
  0x0000000104878336: jl     0x0000000104879420
  0x000000010487833c: mov    0x80(%rsp),%rdx
  0x0000000104878344: add    $0xfffffffffffffff0,%rdx
  0x0000000104878348: shr    $0x3,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487834c: mov    %r8,%rdi
  0x000000010487834f: movabs $0x104829780,%r10
  0x0000000104878359: callq  *%r10              ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487835c: mov    0x70(%rsp),%r10
  0x0000000104878361: mov    0xc(%r10),%r9d     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878365: mov    0x88(%rsp),%r10
  0x000000010487836d: mov    %r10,%r11
  0x0000000104878370: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878374: mov    0x70(%rsp),%r10
  0x0000000104878379: mov    %r11d,0x10(%r10)   ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487837d: mov    %r9d,%r11d
  0x0000000104878380: inc    %r11d
  0x0000000104878383: mov    %r11d,0xc(%r10)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878387: shr    $0x9,%r10
  0x000000010487838b: movabs $0x104297000,%r11
  0x0000000104878395: mov    %r12b,(%r11,%r10,1)  ;*new
                                                ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878399: mov    0x88(%rsp),%r10
  0x00000001048783a1: mov    %r10,0x78(%rsp)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048783a6: mov    0x78(%rsp),%r10
  0x00000001048783ab: mov    0xc(%r10),%r10d
  0x00000001048783af: cmp    %r10d,%r9d
  0x00000001048783b2: jae    0x0000000104879c85  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048783b8: mov    0x78(%rsp),%r10
  0x00000001048783bd: mov    $0x49,%r11d
  0x00000001048783c3: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048783c9: jmpq   0x0000000104877dec
  0x00000001048783ce: mov    0x78(%rsp),%r11
  0x00000001048783d3: test   %r11,%r11
  0x00000001048783d6: je     0x0000000104879d27  ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x00000001048783dc: mov    %r11,0x18(%rsp)
  0x00000001048783e1: mov    0xc(%r11),%ecx     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048783e5: mov    %ecx,0xa8(%rsp)
  0x00000001048783ec: mov    %r10d,%ecx
  0x00000001048783ef: sub    0xa8(%rsp),%ecx
  0x00000001048783f6: inc    %ecx
  0x00000001048783f8: test   %ecx,%ecx
  0x00000001048783fa: jle    0x0000000104878420  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048783fc: mov    0xa8(%rsp),%r9d
  0x0000000104878404: shl    %r9d               ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878407: mov    %r9d,%r11d
  0x000000010487840a: sub    %r10d,%r11d
  0x000000010487840d: inc    %r11d
  0x0000000104878410: test   %r11d,%r11d
  0x0000000104878413: jl     0x000000010487842e  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878415: add    $0x2,%r9d          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878419: mov    %r9d,0x14(%rsp)
  0x000000010487841e: jmp    0x0000000104878432
  0x0000000104878420: mov    0x70(%rsp),%r10
  0x0000000104878425: mov    %r8d,0xc(%r10)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878429: jmpq   0x00000001048785c9
  0x000000010487842e: mov    %edx,0x14(%rsp)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878432: mov    0x14(%rsp),%r10d
  0x0000000104878437: test   %r10d,%r10d
  0x000000010487843a: jle    0x000000010487844c
  0x000000010487843c: mov    $0x7ffffff7,%r10d
  0x0000000104878442: sub    0x14(%rsp),%r10d
  0x0000000104878447: test   %r10d,%r10d
  0x000000010487844a: jge    0x0000000104878460  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010487844c: mov    0x70(%rsp),%rsi
  0x0000000104878451: mov    %rsi,%rbp
  0x0000000104878454: data32 xchg %ax,%ax
  0x0000000104878457: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=5020}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010487845c: mov    %eax,0x14(%rsp)    ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x0000000104878460: mov    0x14(%rsp),%r11d
  0x0000000104878465: cmp    $0x80000,%r11d
  0x000000010487846c: ja     0x000000010487a153  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878472: movslq 0x14(%rsp),%r10    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878477: shl    %r10
  0x000000010487847a: add    $0x17,%r10         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487847e: mov    %r10,0x68(%rsp)
  0x0000000104878483: and    $0xfffffffffffffff8,%r10  ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)

  0x0000000104878487: mov    %r10,0x80(%rsp)
  0x000000010487848f: cmp    $0x80000,%r11d
  0x0000000104878496: ja     0x00000001048797c0
  0x000000010487849c: mov    0x60(%r15),%r11
  0x00000001048784a0: mov    %r11,%r10
  0x00000001048784a3: mov    0x80(%rsp),%r8
  0x00000001048784ab: add    %r8,%r10
  0x00000001048784ae: cmp    0x70(%r15),%r10
  0x00000001048784b2: jae    0x00000001048797c0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048784b8: mov    %r10,0x60(%r15)
  0x00000001048784bc: prefetchnta 0xc0(%r10)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048784c4: movq   $0x1,(%r11)
  0x00000001048784cb: prefetchnta 0x100(%r10)
  0x00000001048784d3: movl   $0xf8000041,0x8(%r11)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048784db: mov    0x14(%rsp),%ebp
  0x00000001048784df: mov    %ebp,0xc(%r11)
  0x00000001048784e3: prefetchnta 0x140(%r10)
  0x00000001048784eb: prefetchnta 0x180(%r10)   ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048784f3: mov    %r11,0x88(%rsp)
  0x00000001048784fb: mov    0xa8(%rsp),%r10d
  0x0000000104878503: cmp    0x14(%rsp),%r10d
  0x0000000104878508: mov    0x14(%rsp),%r9d
  0x000000010487850d: cmovl  %r10d,%r9d
  0x0000000104878511: mov    %r11,%rbx
  0x0000000104878514: add    $0x10,%rbx         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878518: mov    %r11,%rbp
  0x000000010487851b: shr    $0x3,%rbp          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487851f: mov    0x68(%rsp),%r8
  0x0000000104878524: shr    $0x3,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878528: mov    %r8,%rcx
  0x000000010487852b: add    $0xfffffffffffffffe,%rcx
  0x000000010487852f: mov    0xa8(%rsp),%r11d
  0x0000000104878537: cmp    %r9d,%r11d
  0x000000010487853a: jb     0x000000010487a15d
  0x0000000104878540: mov    0x14(%rsp),%r10d
  0x0000000104878545: cmp    %r9d,%r10d
  0x0000000104878548: jb     0x000000010487a15d
  0x000000010487854e: test   %r9d,%r9d
  0x0000000104878551: jle    0x000000010487a189  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878557: mov    0x18(%rsp),%r11
  0x000000010487855c: add    $0x10,%r11         ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878560: cmp    0x14(%rsp),%r9d
  0x0000000104878565: jl     0x0000000104879468
  0x000000010487856b: mov    0x80(%rsp),%rdx
  0x0000000104878573: add    $0xfffffffffffffff0,%rdx
  0x0000000104878577: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487857b: mov    %r11,%rdi
  0x000000010487857e: mov    %rbx,%rsi
  0x0000000104878581: movabs $0x104829780,%r10
  0x000000010487858b: callq  *%r10              ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487858e: mov    0x70(%rsp),%r10
  0x0000000104878593: mov    %ebp,0x10(%r10)    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878597: mov    0xc(%r10),%r9d
  0x000000010487859b: mov    %r9d,%r11d
  0x000000010487859e: inc    %r11d
  0x00000001048785a1: mov    0x70(%rsp),%r8
  0x00000001048785a6: mov    %r11d,0xc(%r8)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048785aa: shr    $0x9,%r10
  0x00000001048785ae: movabs $0x104297000,%r11
  0x00000001048785b8: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048785bc: mov    0x88(%rsp),%r10
  0x00000001048785c4: mov    %r10,0x78(%rsp)    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048785c9: mov    0x78(%rsp),%r10
  0x00000001048785ce: mov    0xc(%r10),%r11d
  0x00000001048785d2: cmp    %r11d,%r9d
  0x00000001048785d5: jae    0x0000000104879d39  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)

  0x00000001048785db: mov    $0x42,%r8d
  0x00000001048785e1: mov    %r8w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048785e7: jmpq   0x0000000104877dec
  0x00000001048785ec: mov    0x78(%rsp),%r11
  0x00000001048785f1: test   %r11,%r11
  0x00000001048785f4: je     0x0000000104879d95  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048785fa: mov    %r11,0x18(%rsp)
  0x00000001048785ff: mov    0xc(%r11),%ebp     ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878603: mov    %r10d,%r11d
  0x0000000104878606: sub    %ebp,%r11d
  0x0000000104878609: inc    %r11d
  0x000000010487860c: test   %r11d,%r11d
  0x000000010487860f: jle    0x0000000104878630  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878611: mov    %ebp,%r11d
  0x0000000104878614: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878617: mov    %r11d,%r8d
  0x000000010487861a: sub    %r10d,%r8d
  0x000000010487861d: inc    %r8d
  0x0000000104878620: test   %r8d,%r8d
  0x0000000104878623: jl     0x000000010487863e  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878625: add    $0x2,%r11d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878629: mov    %r11d,0x14(%rsp)
  0x000000010487862e: jmp    0x0000000104878642
  0x0000000104878630: mov    0x70(%rsp),%r10
  0x0000000104878635: mov    %r8d,0xc(%r10)     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878639: jmpq   0x00000001048787ce
  0x000000010487863e: mov    %edx,0x14(%rsp)    ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878642: mov    0x14(%rsp),%r11d
  0x0000000104878647: test   %r11d,%r11d
  0x000000010487864a: jle    0x000000010487865c
  0x000000010487864c: mov    $0x7ffffff7,%r11d
  0x0000000104878652: sub    0x14(%rsp),%r11d
  0x0000000104878657: test   %r11d,%r11d
  0x000000010487865a: jge    0x000000010487866c  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010487865c: mov    0x70(%rsp),%rsi
  0x0000000104878661: xchg   %ax,%ax
  0x0000000104878663: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=5544}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878668: mov    %eax,0x14(%rsp)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487866c: mov    0x14(%rsp),%r10d
  0x0000000104878671: cmp    $0x80000,%r10d
  0x0000000104878678: ja     0x000000010487a19b  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487867e: movslq 0x14(%rsp),%r10    ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878683: shl    %r10
  0x0000000104878686: add    $0x17,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487868a: mov    %r10,0x68(%rsp)
  0x000000010487868f: and    $0xfffffffffffffff8,%r10  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878693: mov    %r10,0x80(%rsp)
  0x000000010487869b: mov    0x14(%rsp),%r11d
  0x00000001048786a0: cmp    $0x80000,%r11d
  0x00000001048786a7: ja     0x00000001048797e0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786ad: mov    0x60(%r15),%r8     ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786b1: mov    %r8,%r10
  0x00000001048786b4: mov    0x80(%rsp),%r11
  0x00000001048786bc: add    %r11,%r10
  0x00000001048786bf: cmp    0x70(%r15),%r10
  0x00000001048786c3: jae    0x00000001048797e0  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786c9: mov    %r10,0x60(%r15)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786cd: prefetchnta 0xc0(%r10)
  0x00000001048786d5: movq   $0x1,(%r8)
  0x00000001048786dc: prefetchnta 0x100(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786e4: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000001048786ec: mov    0x14(%rsp),%r11d
  0x00000001048786f1: mov    %r11d,0xc(%r8)     ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786f5: prefetchnta 0x140(%r10)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048786fd: prefetchnta 0x180(%r10)
  0x0000000104878705: mov    %r8,0x88(%rsp)
  0x000000010487870d: cmp    0x14(%rsp),%ebp
  0x0000000104878711: mov    0x14(%rsp),%r9d
  0x0000000104878716: cmovl  %ebp,%r9d          ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487871a: mov    %r8,%rsi
  0x000000010487871d: add    $0x10,%rsi         ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878721: mov    0x68(%rsp),%r10
  0x0000000104878726: shr    $0x3,%r10          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487872a: mov    %r10,%rcx
  0x000000010487872d: add    $0xfffffffffffffffe,%rcx
  0x0000000104878731: cmp    %r9d,%ebp
  0x0000000104878734: jb     0x000000010487a1a5
  0x000000010487873a: mov    0x14(%rsp),%ebp
  0x000000010487873e: cmp    %r9d,%ebp
  0x0000000104878741: jb     0x000000010487a1a5
  0x0000000104878747: test   %r9d,%r9d
  0x000000010487874a: jle    0x000000010487a1d1  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878750: mov    0x18(%rsp),%r8
  0x0000000104878755: add    $0x10,%r8          ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878759: cmp    0x14(%rsp),%r9d
  0x000000010487875e: jl     0x00000001048794b3  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878764: mov    0x80(%rsp),%rdx
  0x000000010487876c: add    $0xfffffffffffffff0,%rdx
  0x0000000104878770: shr    $0x3,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878774: mov    %r8,%rdi
  0x0000000104878777: movabs $0x104829780,%r10
  0x0000000104878781: callq  *%r10              ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878784: mov    0x70(%rsp),%r10
  0x0000000104878789: mov    0xc(%r10),%r9d     ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487878d: mov    0x88(%rsp),%r10
  0x0000000104878795: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878799: mov    0x70(%rsp),%r11
  0x000000010487879e: mov    %r10d,0x10(%r11)   ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787a2: mov    %r9d,%r10d
  0x00000001048787a5: inc    %r10d
  0x00000001048787a8: mov    %r10d,0xc(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787ac: mov    %r11,%r10
  0x00000001048787af: shr    $0x9,%r10
  0x00000001048787b3: movabs $0x104297000,%r11
  0x00000001048787bd: mov    %r12b,(%r11,%r10,1)  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@41 (line 300)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787c1: mov    0x88(%rsp),%r10
  0x00000001048787c9: mov    %r10,0x78(%rsp)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787ce: mov    0x78(%rsp),%r10
  0x00000001048787d3: mov    0xc(%r10),%r11d
  0x00000001048787d7: cmp    %r11d,%r9d
  0x00000001048787da: jae    0x0000000104879da5  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x00000001048787e0: mov    $0x4a,%r11d
  0x00000001048787e6: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787ec: jmpq   0x0000000104877dec
  0x00000001048787f1: mov    0x78(%rsp),%r11
  0x00000001048787f6: test   %r11,%r11
  0x00000001048787f9: je     0x0000000104879e01  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048787ff: mov    %r11,0x18(%rsp)
  0x0000000104878804: mov    0xc(%r11),%ebp
  0x0000000104878808: mov    %r10d,%ecx
  0x000000010487880b: sub    %ebp,%ecx
  0x000000010487880d: inc    %ecx
  0x000000010487880f: test   %ecx,%ecx
  0x0000000104878811: jle    0x0000000104878832  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878813: mov    %ebp,%r9d
  0x0000000104878816: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878819: mov    %r9d,%r11d
  0x000000010487881c: sub    %r10d,%r11d
  0x000000010487881f: inc    %r11d
  0x0000000104878822: test   %r11d,%r11d
  0x0000000104878825: jl     0x0000000104878840  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878827: add    $0x2,%r9d          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487882b: mov    %r9d,0x14(%rsp)
  0x0000000104878830: jmp    0x0000000104878844
  0x0000000104878832: mov    0x70(%rsp),%r10
  0x0000000104878837: mov    %r8d,0xc(%r10)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487883b: jmpq   0x00000001048789c9
  0x0000000104878840: mov    %edx,0x14(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878844: mov    0x14(%rsp),%r10d
  0x0000000104878849: test   %r10d,%r10d
  0x000000010487884c: jle    0x000000010487885e
  0x000000010487884e: mov    $0x7ffffff7,%r10d
  0x0000000104878854: sub    0x14(%rsp),%r10d
  0x0000000104878859: test   %r10d,%r10d
  0x000000010487885c: jge    0x000000010487886c  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010487885e: mov    0x70(%rsp),%rsi
  0x0000000104878863: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=6056}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878868: mov    %eax,0x14(%rsp)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487886c: mov    0x14(%rsp),%r11d
  0x0000000104878871: cmp    $0x80000,%r11d
  0x0000000104878878: ja     0x000000010487a248  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487887e: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878883: shl    %r10
  0x0000000104878886: add    $0x17,%r10         ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487888a: mov    %r10,0x68(%rsp)
  0x000000010487888f: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878893: mov    %r10,0x80(%rsp)
  0x000000010487889b: cmp    $0x80000,%r11d
  0x00000001048788a2: ja     0x00000001048797fc  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788a8: mov    0x60(%r15),%r8     ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788ac: mov    %r8,%r10
  0x00000001048788af: mov    0x80(%rsp),%r11
  0x00000001048788b7: add    %r11,%r10
  0x00000001048788ba: cmp    0x70(%r15),%r10
  0x00000001048788be: jae    0x00000001048797fc  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788c4: mov    %r10,0x60(%r15)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788c8: prefetchnta 0xc0(%r10)    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788d0: movq   $0x1,(%r8)
  0x00000001048788d7: prefetchnta 0x100(%r10)   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788df: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000001048788e7: mov    0x14(%rsp),%r11d
  0x00000001048788ec: mov    %r11d,0xc(%r8)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788f0: prefetchnta 0x140(%r10)   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048788f8: prefetchnta 0x180(%r10)
  0x0000000104878900: mov    %r8,0x88(%rsp)
  0x0000000104878908: cmp    0x14(%rsp),%ebp
  0x000000010487890c: mov    0x14(%rsp),%r9d
  0x0000000104878911: cmovl  %ebp,%r9d          ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878915: mov    %r8,%rsi
  0x0000000104878918: add    $0x10,%rsi         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487891c: mov    0x68(%rsp),%r10
  0x0000000104878921: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878925: mov    %r10,%rcx
  0x0000000104878928: add    $0xfffffffffffffffe,%rcx
  0x000000010487892c: cmp    %r9d,%ebp
  0x000000010487892f: jb     0x000000010487a252  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878935: mov    0x14(%rsp),%ebp
  0x0000000104878939: cmp    %r9d,%ebp
  0x000000010487893c: jb     0x000000010487a252  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878942: test   %r9d,%r9d
  0x0000000104878945: jle    0x000000010487a27d  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487894b: mov    0x18(%rsp),%r8
  0x0000000104878950: add    $0x10,%r8          ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878954: cmp    0x14(%rsp),%r9d
  0x0000000104878959: jl     0x0000000104879527  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487895f: mov    0x80(%rsp),%rdx
  0x0000000104878967: add    $0xfffffffffffffff0,%rdx
  0x000000010487896b: shr    $0x3,%rdx          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487896f: mov    %r8,%rdi
  0x0000000104878972: movabs $0x104829780,%r10
  0x000000010487897c: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487897f: mov    0x70(%rsp),%r10
  0x0000000104878984: mov    0xc(%r10),%r9d     ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878988: mov    0x88(%rsp),%r10
  0x0000000104878990: mov    %r10,%r11
  0x0000000104878993: shr    $0x3,%r11          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878997: mov    0x70(%rsp),%r10
  0x000000010487899c: mov    %r11d,0x10(%r10)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789a0: mov    %r9d,%r11d
  0x00000001048789a3: inc    %r11d
  0x00000001048789a6: mov    %r11d,0xc(%r10)    ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789aa: shr    $0x9,%r10
  0x00000001048789ae: movabs $0x104297000,%r11
  0x00000001048789b8: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789bc: mov    0x88(%rsp),%r10
  0x00000001048789c4: mov    %r10,0x78(%rsp)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789c9: mov    0x78(%rsp),%r10
  0x00000001048789ce: mov    0xc(%r10),%r10d
  0x00000001048789d2: cmp    %r10d,%r9d
  0x00000001048789d5: jae    0x0000000104879e11
  0x00000001048789db: mov    0x78(%rsp),%r10
  0x00000001048789e0: mov    $0x46,%r8d
  0x00000001048789e6: mov    %r8w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789ec: jmpq   0x0000000104877dec
  0x00000001048789f1: mov    0x78(%rsp),%r11
  0x00000001048789f6: test   %r11,%r11
  0x00000001048789f9: je     0x0000000104879e6d  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048789ff: mov    %r11,0x18(%rsp)
  0x0000000104878a04: mov    0xc(%r11),%ebp     ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a08: mov    %r10d,%r11d
  0x0000000104878a0b: sub    %ebp,%r11d
  0x0000000104878a0e: inc    %r11d
  0x0000000104878a11: test   %r11d,%r11d
  0x0000000104878a14: jle    0x0000000104878a35  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a16: mov    %ebp,%r11d
  0x0000000104878a19: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a1c: mov    %r11d,%r8d
  0x0000000104878a1f: sub    %r10d,%r8d
  0x0000000104878a22: inc    %r8d
  0x0000000104878a25: test   %r8d,%r8d
  0x0000000104878a28: jl     0x0000000104878a43  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a2a: add    $0x2,%r11d         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a2e: mov    %r11d,0x14(%rsp)
  0x0000000104878a33: jmp    0x0000000104878a47
  0x0000000104878a35: mov    0x70(%rsp),%r10
  0x0000000104878a3a: mov    %r8d,0xc(%r10)     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a3e: jmpq   0x0000000104878bd2
  0x0000000104878a43: mov    %edx,0x14(%rsp)    ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a47: mov    0x14(%rsp),%r11d
  0x0000000104878a4c: test   %r11d,%r11d
  0x0000000104878a4f: jle    0x0000000104878a61
  0x0000000104878a51: mov    $0x7ffffff7,%r11d
  0x0000000104878a57: sub    0x14(%rsp),%r11d
  0x0000000104878a5c: test   %r11d,%r11d
  0x0000000104878a5f: jge    0x0000000104878a70  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104878a61: mov    0x70(%rsp),%rsi
  0x0000000104878a66: nop
  0x0000000104878a67: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=6572}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878a6c: mov    %eax,0x14(%rsp)    ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a70: mov    0x14(%rsp),%r10d
  0x0000000104878a75: cmp    $0x80000,%r10d
  0x0000000104878a7c: ja     0x000000010487a28f  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a82: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a87: shl    %r10
  0x0000000104878a8a: add    $0x17,%r10         ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a8e: mov    %r10,0x68(%rsp)
  0x0000000104878a93: and    $0xfffffffffffffff8,%r10  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878a97: mov    %r10,0x80(%rsp)
  0x0000000104878a9f: mov    0x14(%rsp),%r11d
  0x0000000104878aa4: cmp    $0x80000,%r11d
  0x0000000104878aab: ja     0x0000000104879818
  0x0000000104878ab1: mov    0x60(%r15),%r8
  0x0000000104878ab5: mov    %r8,%r10
  0x0000000104878ab8: mov    0x80(%rsp),%r11
  0x0000000104878ac0: add    %r11,%r10
  0x0000000104878ac3: cmp    0x70(%r15),%r10
  0x0000000104878ac7: jae    0x0000000104879818  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878acd: mov    %r10,0x60(%r15)    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ad1: prefetchnta 0xc0(%r10)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ad9: movq   $0x1,(%r8)
  0x0000000104878ae0: prefetchnta 0x100(%r10)   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ae8: movl   $0xf8000041,0x8(%r8)  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104878af0: mov    0x14(%rsp),%r11d
  0x0000000104878af5: mov    %r11d,0xc(%r8)     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878af9: prefetchnta 0x140(%r10)   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b01: prefetchnta 0x180(%r10)
  0x0000000104878b09: mov    %r8,0x88(%rsp)
  0x0000000104878b11: cmp    0x14(%rsp),%ebp
  0x0000000104878b15: mov    0x14(%rsp),%r9d
  0x0000000104878b1a: cmovl  %ebp,%r9d          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b1e: mov    %r8,%rsi
  0x0000000104878b21: add    $0x10,%rsi
  0x0000000104878b25: mov    0x68(%rsp),%r10
  0x0000000104878b2a: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b2e: mov    %r10,%rcx
  0x0000000104878b31: add    $0xfffffffffffffffe,%rcx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b35: cmp    %r9d,%ebp
  0x0000000104878b38: jb     0x000000010487a299  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b3e: mov    0x14(%rsp),%ebp
  0x0000000104878b42: cmp    %r9d,%ebp
  0x0000000104878b45: jb     0x000000010487a299  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b4b: test   %r9d,%r9d
  0x0000000104878b4e: jle    0x000000010487a2c5  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b54: mov    0x18(%rsp),%r8
  0x0000000104878b59: add    $0x10,%r8          ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b5d: cmp    0x14(%rsp),%r9d
  0x0000000104878b62: jl     0x000000010487956f
  0x0000000104878b68: mov    0x80(%rsp),%rdx
  0x0000000104878b70: add    $0xfffffffffffffff0,%rdx
  0x0000000104878b74: shr    $0x3,%rdx          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b78: mov    %r8,%rdi
  0x0000000104878b7b: movabs $0x104829780,%r10
  0x0000000104878b85: callq  *%r10              ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@75 (line 304)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b88: mov    0x70(%rsp),%r10
  0x0000000104878b8d: mov    0xc(%r10),%r9d     ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b91: mov    0x88(%rsp),%r10
  0x0000000104878b99: shr    $0x3,%r10          ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878b9d: mov    0x70(%rsp),%r11
  0x0000000104878ba2: mov    %r10d,0x10(%r11)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ba6: mov    %r9d,%r10d
  0x0000000104878ba9: inc    %r10d
  0x0000000104878bac: mov    %r10d,0xc(%r11)    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878bb0: mov    %r11,%r10
  0x0000000104878bb3: shr    $0x9,%r10
  0x0000000104878bb7: movabs $0x104297000,%r11
  0x0000000104878bc1: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878bc5: mov    0x88(%rsp),%r10
  0x0000000104878bcd: mov    %r10,0x78(%rsp)    ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878bd2: mov    0x78(%rsp),%r10
  0x0000000104878bd7: mov    0xc(%r10),%r11d
  0x0000000104878bdb: cmp    %r11d,%r9d
  0x0000000104878bde: jae    0x0000000104879e7d  ;*putfield offset
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@6 (line 57)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878be4: mov    $0x44,%r11d
  0x0000000104878bea: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878bf0: jmpq   0x0000000104877dec
  0x0000000104878bf5: mov    0x78(%rsp),%r11
  0x0000000104878bfa: test   %r11,%r11
  0x0000000104878bfd: je     0x0000000104879ed9  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c03: mov    %r11,0x18(%rsp)
  0x0000000104878c08: mov    0xc(%r11),%ebp     ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c0c: mov    %r10d,%ecx
  0x0000000104878c0f: sub    %ebp,%ecx
  0x0000000104878c11: inc    %ecx
  0x0000000104878c13: test   %ecx,%ecx
  0x0000000104878c15: jle    0x0000000104878c36  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c17: mov    %ebp,%r9d
  0x0000000104878c1a: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c1d: mov    %r9d,%r11d
  0x0000000104878c20: sub    %r10d,%r11d
  0x0000000104878c23: inc    %r11d
  0x0000000104878c26: test   %r11d,%r11d
  0x0000000104878c29: jl     0x0000000104878c44  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c2b: add    $0x2,%r9d          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c2f: mov    %r9d,0x14(%rsp)
  0x0000000104878c34: jmp    0x0000000104878c48
  0x0000000104878c36: mov    0x70(%rsp),%r10
  0x0000000104878c3b: mov    %r8d,0xc(%r10)     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c3f: jmpq   0x0000000104878dcd
  0x0000000104878c44: mov    %edx,0x14(%rsp)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c48: mov    0x14(%rsp),%r10d
  0x0000000104878c4d: test   %r10d,%r10d
  0x0000000104878c50: jle    0x0000000104878c62
  0x0000000104878c52: mov    $0x7ffffff7,%r10d
  0x0000000104878c58: sub    0x14(%rsp),%r10d
  0x0000000104878c5d: test   %r10d,%r10d
  0x0000000104878c60: jge    0x0000000104878c70  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104878c62: mov    0x70(%rsp),%rsi
  0x0000000104878c67: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=7084}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878c6c: mov    %eax,0x14(%rsp)    ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c70: mov    0x14(%rsp),%r11d
  0x0000000104878c75: cmp    $0x80000,%r11d
  0x0000000104878c7c: ja     0x000000010487a2d7  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c82: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c87: shl    %r10
  0x0000000104878c8a: add    $0x17,%r10         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c8e: mov    %r10,0x68(%rsp)
  0x0000000104878c93: and    $0xfffffffffffffff8,%r10  ;*new
                                                ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878c97: mov    %r10,0x80(%rsp)
  0x0000000104878c9f: cmp    $0x80000,%r11d
  0x0000000104878ca6: ja     0x0000000104879834  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878cac: mov    0x60(%r15),%r8     ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878cb0: mov    %r8,%r10
  0x0000000104878cb3: mov    0x80(%rsp),%r11
  0x0000000104878cbb: add    %r11,%r10
  0x0000000104878cbe: cmp    0x70(%r15),%r10
  0x0000000104878cc2: jae    0x0000000104879834  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878cc8: mov    %r10,0x60(%r15)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ccc: prefetchnta 0xc0(%r10)
  0x0000000104878cd4: movq   $0x1,(%r8)
  0x0000000104878cdb: prefetchnta 0x100(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ce3: movl   $0xf8000041,0x8(%r8)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104878ceb: mov    0x14(%rsp),%r11d
  0x0000000104878cf0: mov    %r11d,0xc(%r8)
  0x0000000104878cf4: prefetchnta 0x140(%r10)
  0x0000000104878cfc: prefetchnta 0x180(%r10)
  0x0000000104878d04: mov    %r8,0x88(%rsp)
  0x0000000104878d0c: cmp    0x14(%rsp),%ebp
  0x0000000104878d10: mov    0x14(%rsp),%r9d
  0x0000000104878d15: cmovl  %ebp,%r9d          ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d19: mov    %r8,%rsi
  0x0000000104878d1c: add    $0x10,%rsi         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d20: mov    0x68(%rsp),%r10
  0x0000000104878d25: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d29: mov    %r10,%rcx
  0x0000000104878d2c: add    $0xfffffffffffffffe,%rcx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d30: cmp    %r9d,%ebp
  0x0000000104878d33: jb     0x000000010487a2e1  ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d39: mov    0x14(%rsp),%ebp
  0x0000000104878d3d: cmp    %r9d,%ebp
  0x0000000104878d40: jb     0x000000010487a2e1  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d46: test   %r9d,%r9d
  0x0000000104878d49: jle    0x000000010487a30d  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d4f: mov    0x18(%rsp),%r8
  0x0000000104878d54: add    $0x10,%r8          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d58: cmp    0x14(%rsp),%r9d
  0x0000000104878d5d: jl     0x00000001048795b7  ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d63: mov    0x80(%rsp),%rdx
  0x0000000104878d6b: add    $0xfffffffffffffff0,%rdx
  0x0000000104878d6f: shr    $0x3,%rdx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d73: mov    %r8,%rdi
  0x0000000104878d76: movabs $0x104829780,%r10
  0x0000000104878d80: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d83: mov    0x70(%rsp),%r10
  0x0000000104878d88: mov    0xc(%r10),%r9d     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d8c: mov    0x88(%rsp),%r10
  0x0000000104878d94: mov    %r10,%r11
  0x0000000104878d97: shr    $0x3,%r11          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878d9b: mov    0x70(%rsp),%r10
  0x0000000104878da0: mov    %r11d,0x10(%r10)   ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@68 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878da4: mov    %r9d,%r11d
  0x0000000104878da7: inc    %r11d
  0x0000000104878daa: mov    %r11d,0xc(%r10)    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878dae: shr    $0x9,%r10
  0x0000000104878db2: movabs $0x104297000,%r11
  0x0000000104878dbc: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878dc0: mov    0x88(%rsp),%r10
  0x0000000104878dc8: mov    %r10,0x78(%rsp)    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878dcd: mov    0x78(%rsp),%r10
  0x0000000104878dd2: mov    0xc(%r10),%r10d
  0x0000000104878dd6: cmp    %r10d,%r9d
  0x0000000104878dd9: jae    0x0000000104879ee9  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@1 (line 134)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ddf: mov    0x78(%rsp),%r10
  0x0000000104878de4: mov    $0x53,%r8d
  0x0000000104878dea: mov    %r8w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878df0: jmpq   0x0000000104877dec
  0x0000000104878df5: mov    0x78(%rsp),%r11
  0x0000000104878dfa: test   %r11,%r11
  0x0000000104878dfd: je     0x0000000104879fe5  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e03: mov    %r11,0x18(%rsp)
  0x0000000104878e08: mov    0xc(%r11),%ebp     ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e0c: mov    %r10d,%r11d
  0x0000000104878e0f: sub    %ebp,%r11d
  0x0000000104878e12: inc    %r11d
  0x0000000104878e15: test   %r11d,%r11d
  0x0000000104878e18: jle    0x0000000104878e39  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e1a: mov    %ebp,%r11d
  0x0000000104878e1d: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e20: mov    %r11d,%r8d
  0x0000000104878e23: sub    %r10d,%r8d
  0x0000000104878e26: inc    %r8d
  0x0000000104878e29: test   %r8d,%r8d
  0x0000000104878e2c: jl     0x0000000104878e47  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e2e: add    $0x2,%r11d         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e32: mov    %r11d,0x14(%rsp)
  0x0000000104878e37: jmp    0x0000000104878e4b
  0x0000000104878e39: mov    0x70(%rsp),%r10
  0x0000000104878e3e: mov    %r8d,0xc(%r10)     ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e42: jmpq   0x0000000104878fd6
  0x0000000104878e47: mov    %edx,0x14(%rsp)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e4b: mov    0x14(%rsp),%r11d
  0x0000000104878e50: test   %r11d,%r11d
  0x0000000104878e53: jle    0x0000000104878e65  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e55: mov    $0x7ffffff7,%r11d
  0x0000000104878e5b: sub    0x14(%rsp),%r11d
  0x0000000104878e60: test   %r11d,%r11d
  0x0000000104878e63: jge    0x0000000104878e74  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104878e65: mov    0x70(%rsp),%rsi
  0x0000000104878e6a: nop
  0x0000000104878e6b: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=7600}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104878e70: mov    %eax,0x14(%rsp)    ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e74: mov    0x14(%rsp),%r10d
  0x0000000104878e79: cmp    $0x80000,%r10d
  0x0000000104878e80: ja     0x000000010487a31f  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e86: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e8b: shl    %r10
  0x0000000104878e8e: add    $0x17,%r10         ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e92: mov    %r10,0x68(%rsp)
  0x0000000104878e97: and    $0xfffffffffffffff8,%r10  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878e9b: mov    %r10,0x80(%rsp)
  0x0000000104878ea3: mov    0x14(%rsp),%r11d
  0x0000000104878ea8: cmp    $0x80000,%r11d
  0x0000000104878eaf: ja     0x00000001048798ab
  0x0000000104878eb5: mov    0x60(%r15),%r8
  0x0000000104878eb9: mov    %r8,%r10
  0x0000000104878ebc: mov    0x80(%rsp),%r11
  0x0000000104878ec4: add    %r11,%r10
  0x0000000104878ec7: cmp    0x70(%r15),%r10
  0x0000000104878ecb: jae    0x00000001048798ab  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ed1: mov    %r10,0x60(%r15)    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ed5: prefetchnta 0xc0(%r10)    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878edd: movq   $0x1,(%r8)
  0x0000000104878ee4: prefetchnta 0x100(%r10)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878eec: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000104878ef4: mov    0x14(%rsp),%r11d
  0x0000000104878ef9: mov    %r11d,0xc(%r8)     ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878efd: prefetchnta 0x140(%r10)
  0x0000000104878f05: prefetchnta 0x180(%r10)
  0x0000000104878f0d: mov    %r8,0x88(%rsp)
  0x0000000104878f15: cmp    0x14(%rsp),%ebp
  0x0000000104878f19: mov    0x14(%rsp),%r9d
  0x0000000104878f1e: cmovl  %ebp,%r9d          ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f22: mov    %r8,%rsi
  0x0000000104878f25: add    $0x10,%rsi         ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f29: mov    0x68(%rsp),%r10
  0x0000000104878f2e: shr    $0x3,%r10          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f32: mov    %r10,%rcx
  0x0000000104878f35: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f39: cmp    %r9d,%ebp
  0x0000000104878f3c: jb     0x000000010487a329
  0x0000000104878f42: mov    0x14(%rsp),%ebp
  0x0000000104878f46: cmp    %r9d,%ebp
  0x0000000104878f49: jb     0x000000010487a329  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f4f: test   %r9d,%r9d
  0x0000000104878f52: jle    0x000000010487a355  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f58: mov    0x18(%rsp),%r8
  0x0000000104878f5d: add    $0x10,%r8          ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f61: cmp    0x14(%rsp),%r9d
  0x0000000104878f66: jl     0x00000001048795ff
  0x0000000104878f6c: mov    0x80(%rsp),%rdx
  0x0000000104878f74: add    $0xfffffffffffffff0,%rdx
  0x0000000104878f78: shr    $0x3,%rdx          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f7c: mov    %r8,%rdi
  0x0000000104878f7f: movabs $0x104829780,%r10
  0x0000000104878f89: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f8c: mov    0x70(%rsp),%r10
  0x0000000104878f91: mov    0xc(%r10),%r9d     ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878f95: mov    0x88(%rsp),%r10
  0x0000000104878f9d: shr    $0x3,%r10          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878fa1: mov    0x70(%rsp),%r11
  0x0000000104878fa6: mov    %r10d,0x10(%r11)   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878faa: mov    %r9d,%r10d
  0x0000000104878fad: inc    %r10d
  0x0000000104878fb0: mov    %r10d,0xc(%r11)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878fb4: mov    %r11,%r10
  0x0000000104878fb7: shr    $0x9,%r10
  0x0000000104878fbb: movabs $0x104297000,%r11
  0x0000000104878fc5: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878fc9: mov    0x88(%rsp),%r10
  0x0000000104878fd1: mov    %r10,0x78(%rsp)    ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878fd6: mov    0x78(%rsp),%r10
  0x0000000104878fdb: mov    0xc(%r10),%r11d
  0x0000000104878fdf: cmp    %r11d,%r9d
  0x0000000104878fe2: jae    0x0000000104879ff5
  0x0000000104878fe8: mov    $0x43,%r11d
  0x0000000104878fee: mov    %r11w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104878ff4: jmpq   0x0000000104877dec
  0x0000000104878ff9: mov    0x78(%rsp),%r11
  0x0000000104878ffe: test   %r11,%r11
  0x0000000104879001: je     0x000000010487a051  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879007: mov    %r11,0x18(%rsp)
  0x000000010487900c: mov    0xc(%r11),%ebp     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879010: mov    %r10d,%ecx
  0x0000000104879013: sub    %ebp,%ecx
  0x0000000104879015: inc    %ecx
  0x0000000104879017: test   %ecx,%ecx
  0x0000000104879019: jle    0x000000010487903a  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487901b: mov    %ebp,%r9d
  0x000000010487901e: shl    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879021: mov    %r9d,%r11d
  0x0000000104879024: sub    %r10d,%r11d
  0x0000000104879027: inc    %r11d
  0x000000010487902a: test   %r11d,%r11d
  0x000000010487902d: jl     0x0000000104879048  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487902f: add    $0x2,%r9d          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879033: mov    %r9d,0x14(%rsp)
  0x0000000104879038: jmp    0x000000010487904c
  0x000000010487903a: mov    0x70(%rsp),%r10
  0x000000010487903f: mov    %r8d,0xc(%r10)     ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879043: jmpq   0x00000001048791d1
  0x0000000104879048: mov    %edx,0x14(%rsp)    ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487904c: mov    0x14(%rsp),%r10d
  0x0000000104879051: test   %r10d,%r10d
  0x0000000104879054: jle    0x0000000104879066
  0x0000000104879056: mov    $0x7ffffff7,%r10d
  0x000000010487905c: sub    0x14(%rsp),%r10d
  0x0000000104879061: test   %r10d,%r10d
  0x0000000104879064: jge    0x0000000104879074  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104879066: mov    0x70(%rsp),%rsi
  0x000000010487906b: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=8112}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104879070: mov    %eax,0x14(%rsp)    ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879074: mov    0x14(%rsp),%r11d
  0x0000000104879079: cmp    $0x80000,%r11d
  0x0000000104879080: ja     0x000000010487a379  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879086: movslq 0x14(%rsp),%r10    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487908b: shl    %r10
  0x000000010487908e: add    $0x17,%r10         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879092: mov    %r10,0x68(%rsp)
  0x0000000104879097: and    $0xfffffffffffffff8,%r10
  0x000000010487909b: mov    %r10,0x80(%rsp)
  0x00000001048790a3: cmp    $0x80000,%r11d
  0x00000001048790aa: ja     0x0000000104879961
  0x00000001048790b0: mov    0x60(%r15),%r8
  0x00000001048790b4: mov    %r8,%r10
  0x00000001048790b7: mov    0x80(%rsp),%r11
  0x00000001048790bf: add    %r11,%r10
  0x00000001048790c2: cmp    0x70(%r15),%r10
  0x00000001048790c6: jae    0x0000000104879961  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048790cc: mov    %r10,0x60(%r15)    ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048790d0: prefetchnta 0xc0(%r10)
  0x00000001048790d8: movq   $0x1,(%r8)
  0x00000001048790df: prefetchnta 0x100(%r10)   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048790e7: movl   $0xf8000041,0x8(%r8)  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048790ef: mov    0x14(%rsp),%r11d
  0x00000001048790f4: mov    %r11d,0xc(%r8)     ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048790f8: prefetchnta 0x140(%r10)   ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879100: prefetchnta 0x180(%r10)
  0x0000000104879108: mov    %r8,0x88(%rsp)
  0x0000000104879110: cmp    0x14(%rsp),%ebp
  0x0000000104879114: mov    0x14(%rsp),%r9d
  0x0000000104879119: cmovl  %ebp,%r9d          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487911d: mov    %r8,%rsi
  0x0000000104879120: add    $0x10,%rsi         ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879124: mov    0x68(%rsp),%r10
  0x0000000104879129: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487912d: mov    %r10,%rcx
  0x0000000104879130: add    $0xfffffffffffffffe,%rcx
  0x0000000104879134: cmp    %r9d,%ebp
  0x0000000104879137: jb     0x000000010487a383
  0x000000010487913d: mov    0x14(%rsp),%ebp
  0x0000000104879141: cmp    %r9d,%ebp
  0x0000000104879144: jb     0x000000010487a383
  0x000000010487914a: test   %r9d,%r9d
  0x000000010487914d: jle    0x000000010487a3ad  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879153: mov    0x18(%rsp),%r8
  0x0000000104879158: add    $0x10,%r8          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487915c: cmp    0x14(%rsp),%r9d
  0x0000000104879161: jl     0x000000010487968d
  0x0000000104879167: mov    0x80(%rsp),%rdx
  0x000000010487916f: add    $0xfffffffffffffff0,%rdx
  0x0000000104879173: shr    $0x3,%rdx          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879177: mov    %r8,%rdi
  0x000000010487917a: movabs $0x104829780,%r10
  0x0000000104879184: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879187: mov    0x70(%rsp),%r10
  0x000000010487918c: mov    0xc(%r10),%r9d     ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879190: mov    0x88(%rsp),%r10
  0x0000000104879198: mov    %r10,%r11
  0x000000010487919b: shr    $0x3,%r11          ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487919f: mov    0x70(%rsp),%r10
  0x00000001048791a4: mov    %r11d,0x10(%r10)   ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@58 (line 302)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048791a8: mov    %r9d,%r11d
  0x00000001048791ab: inc    %r11d
  0x00000001048791ae: mov    %r11d,0xc(%r10)    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048791b2: shr    $0x9,%r10
  0x00000001048791b6: movabs $0x104297000,%r11
  0x00000001048791c0: mov    %r12b,(%r11,%r10,1)
  0x00000001048791c4: mov    0x88(%rsp),%r10
  0x00000001048791cc: mov    %r10,0x78(%rsp)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048791d1: mov    0x78(%rsp),%r10
  0x00000001048791d6: mov    0xc(%r10),%r10d
  0x00000001048791da: cmp    %r10d,%r9d
  0x00000001048791dd: jae    0x000000010487a061  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048791e3: mov    0x78(%rsp),%r10
  0x00000001048791e8: mov    $0x5a,%r8d
  0x00000001048791ee: mov    %r8w,0x10(%r10,%r9,2)  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048791f4: jmpq   0x0000000104877dec  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x00000001048791f9: mov    0x40(%rsp),%rax
  0x00000001048791fe: add    $0xd0,%rsp
  0x0000000104879205: pop    %rbp
  0x0000000104879206: test   %eax,-0x208f20c(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010487920c: retq   
  0x000000010487920d: mov    0x98(%rsp),%rsi
  0x0000000104879215: mov    0x30(%rsp),%r10
  0x000000010487921a: mov    %r10,0x18(%rsp)
  0x000000010487921f: mov    0x70(%rsp),%rbp
  0x0000000104879224: data32 xchg %ax,%ax
  0x0000000104879227: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=8556}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010487922c: mov    0x98(%rsp),%r10
  0x0000000104879234: mov    %rax,%r11
  0x0000000104879237: shr    $0x3,%r11
  0x000000010487923b: mov    0x98(%rsp),%r8
  0x0000000104879243: mov    %r11d,0x14(%r8)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879247: shr    $0x9,%r10
  0x000000010487924b: movabs $0x104297000,%r11
  0x0000000104879255: mov    %r12b,(%r11,%r10,1)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879259: test   %rax,%rax
  0x000000010487925c: je     0x000000010487a367  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879262: mov    %rax,%rsi
  0x0000000104879265: jmpq   0x000000010487736f
  0x000000010487926a: movslq %r11d,%rdx         ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487926d: mov    %rdx,%r11
  0x0000000104879270: shl    %r11
  0x0000000104879273: add    $0x10,%r11         ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879277: mov    %r11,%r8
  0x000000010487927a: and    $0xfffffffffffffff9,%r8
  0x000000010487927e: mov    0x78(%rsp),%rdi
  0x0000000104879283: add    %r8,%rdi
  0x0000000104879286: shr    $0x3,%r11
  0x000000010487928a: mov    0x88(%rsp),%r8
  0x0000000104879292: sub    %r11,%r8
  0x0000000104879295: mov    %r8,%rcx
  0x0000000104879298: xor    %rax,%rax
  0x000000010487929b: shl    $0x3,%rcx
  0x000000010487929f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048792a2: mov    %r9,%rdi
  0x00000001048792a5: mov    %r10,%rsi
  0x00000001048792a8: movabs $0x1048294c0,%r10
  0x00000001048792b2: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048792b5: jmpq   0x0000000104878134  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x00000001048792ba: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048792bf: mov    0x20(%rsp),%rbp
  0x00000001048792c4: mov    0x8(%rsp),%r10
  0x00000001048792c9: mov    %r10,(%rsp)
  0x00000001048792cd: mov    0x38(%rsp),%r10
  0x00000001048792d2: mov    %r10,0x8(%rsp)
  0x00000001048792d7: mov    0x28(%rsp),%r11d
  0x00000001048792dc: mov    %r11d,0x18(%rsp)
  0x00000001048792e1: mov    0x2c(%rsp),%r10d
  0x00000001048792e6: mov    %r10d,0x1c(%rsp)
  0x00000001048792eb: mov    0x30(%rsp),%r10
  0x00000001048792f0: mov    %r10,0x20(%rsp)
  0x00000001048792f5: mov    %r13d,0x2c(%rsp)
  0x00000001048792fa: nop
  0x00000001048792fb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [32]=Oop [64]=Oop off=8768}
                                                ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@53 (line 2293)
                                                ;   {runtime_call}
  0x0000000104879300: callq  0x0000000103c85e14  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879305: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010487930f: mov    %ebp,%edx
  0x0000000104879311: xchg   %ax,%ax
  0x0000000104879313: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [128]=Oop off=8792}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879318: mov    %rax,%r11
  0x000000010487931b: jmpq   0x00000001048780ca
  0x0000000104879320: mov    %r13d,0x64(%rsp)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104879325: lea    (%r12,%r8,8),%rbp
  0x0000000104879329: movabs $0x7c0012f78,%rsi  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x0000000104879333: callq  0x0000000104846960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=8824}
                                                ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ;   {runtime_call}
  0x0000000104879338: mov    %rax,%r11
  0x000000010487933b: jmpq   0x000000010487794d  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879340: movabs $0x7c0000208,%rsi  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010487934a: mov    $0x10,%edx
  0x000000010487934f: callq  0x0000000104846a60  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop off=8852}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879354: mov    %rax,%r11
  0x0000000104879357: jmpq   0x0000000104877aa9
  0x000000010487935c: movabs $0x7c000da58,%rsi  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104879366: nop
  0x0000000104879367: callq  0x0000000104846960  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop off=8876}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487936c: jmpq   0x0000000104877a44
  0x0000000104879371: movabs $0x7c00016d0,%rsi  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010487937b: mov    0x20(%rsp),%rbp
  0x0000000104879380: data32 xchg %ax,%ax
  0x0000000104879383: callq  0x0000000104846960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop off=8904}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879388: jmpq   0x0000000104877e2b
  0x000000010487938d: movslq %r9d,%rdx          ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879390: mov    %rdx,%r11
  0x0000000104879393: shl    %r11
  0x0000000104879396: add    $0x10,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487939a: mov    %r11,%r9
  0x000000010487939d: and    $0xfffffffffffffff9,%r9
  0x00000001048793a1: mov    0x88(%rsp),%rdi
  0x00000001048793a9: add    %r9,%rdi
  0x00000001048793ac: shr    $0x3,%r11
  0x00000001048793b0: sub    %r11,%r10
  0x00000001048793b3: mov    %r10,%rcx
  0x00000001048793b6: xor    %rax,%rax
  0x00000001048793b9: shl    $0x3,%rcx
  0x00000001048793bd: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048793c0: mov    %r8,%rdi
  0x00000001048793c3: movabs $0x1048294c0,%r10
  0x00000001048793cd: callq  *%r10              ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048793d0: jmpq   0x0000000104877d84
  0x00000001048793d5: movslq %r9d,%rdx          ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048793d8: mov    %rdx,%r11
  0x00000001048793db: shl    %r11
  0x00000001048793de: add    $0x10,%r11         ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048793e2: mov    %r11,%r9
  0x00000001048793e5: and    $0xfffffffffffffff9,%r9
  0x00000001048793e9: mov    0x88(%rsp),%rdi
  0x00000001048793f1: add    %r9,%rdi
  0x00000001048793f4: shr    $0x3,%r11
  0x00000001048793f8: sub    %r11,%r8
  0x00000001048793fb: mov    %r8,%rcx
  0x00000001048793fe: xor    %rax,%rax
  0x0000000104879401: shl    $0x3,%rcx
  0x0000000104879405: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879408: mov    %rbx,%rdi
  0x000000010487940b: mov    %r10,%rsi
  0x000000010487940e: movabs $0x1048294c0,%r10
  0x0000000104879418: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487941b: jmpq   0x0000000104877574
  0x0000000104879420: movslq %r9d,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879423: mov    %rdx,%r11
  0x0000000104879426: shl    %r11
  0x0000000104879429: add    $0x10,%r11         ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487942d: mov    %r11,%r9
  0x0000000104879430: and    $0xfffffffffffffff9,%r9
  0x0000000104879434: mov    0x88(%rsp),%rdi
  0x000000010487943c: add    %r9,%rdi
  0x000000010487943f: shr    $0x3,%r11
  0x0000000104879443: sub    %r11,%r10
  0x0000000104879446: mov    %r10,%rcx
  0x0000000104879449: xor    %rax,%rax
  0x000000010487944c: shl    $0x3,%rcx
  0x0000000104879450: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879453: mov    %r8,%rdi
  0x0000000104879456: movabs $0x1048294c0,%r10
  0x0000000104879460: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879463: jmpq   0x000000010487835c
  0x0000000104879468: movslq %r9d,%rdx          ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487946b: mov    %rdx,%r10
  0x000000010487946e: shl    %r10
  0x0000000104879471: add    $0x10,%r10         ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879475: mov    %r10,%r9
  0x0000000104879478: and    $0xfffffffffffffff9,%r9
  0x000000010487947c: mov    0x88(%rsp),%rdi
  0x0000000104879484: add    %r9,%rdi
  0x0000000104879487: shr    $0x3,%r10
  0x000000010487948b: sub    %r10,%r8
  0x000000010487948e: mov    %r8,%rcx
  0x0000000104879491: xor    %rax,%rax
  0x0000000104879494: shl    $0x3,%rcx
  0x0000000104879498: rep rex.W stos %al,%es:(%rdi)  ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487949b: mov    %r11,%rdi
  0x000000010487949e: mov    %rbx,%rsi
  0x00000001048794a1: movabs $0x1048294c0,%r10
  0x00000001048794ab: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048794ae: jmpq   0x000000010487858e
  0x00000001048794b3: movslq %r9d,%rdx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048794b6: mov    %rdx,%r11
  0x00000001048794b9: shl    %r11
  0x00000001048794bc: add    $0x10,%r11         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048794c0: mov    %r11,%r9
  0x00000001048794c3: and    $0xfffffffffffffff9,%r9
  0x00000001048794c7: mov    0x88(%rsp),%rdi
  0x00000001048794cf: add    %r9,%rdi
  0x00000001048794d2: shr    $0x3,%r11
  0x00000001048794d6: sub    %r11,%r10
  0x00000001048794d9: mov    %r10,%rcx
  0x00000001048794dc: xor    %rax,%rax
  0x00000001048794df: shl    $0x3,%rcx
  0x00000001048794e3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048794e6: mov    %r8,%rdi
  0x00000001048794e9: movabs $0x1048294c0,%r10
  0x00000001048794f3: callq  *%r10              ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048794f6: jmpq   0x0000000104878784
  0x00000001048794fb: xor    %edx,%edx
  0x00000001048794fd: jmpq   0x0000000104877144
  0x0000000104879502: xor    %edi,%edi
  0x0000000104879504: jmpq   0x0000000104877164
  0x0000000104879509: xor    %r11d,%r11d
  0x000000010487950c: jmpq   0x0000000104877181
  0x0000000104879511: xor    %ecx,%ecx
  0x0000000104879513: jmpq   0x00000001048771a3
  0x0000000104879518: xor    %r8d,%r8d
  0x000000010487951b: jmpq   0x00000001048771c5
  0x0000000104879520: xor    %ebx,%ebx
  0x0000000104879522: jmpq   0x00000001048771f2
  0x0000000104879527: movslq %r9d,%rdx          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487952a: mov    %rdx,%r11
  0x000000010487952d: shl    %r11
  0x0000000104879530: add    $0x10,%r11         ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879534: mov    %r11,%r9
  0x0000000104879537: and    $0xfffffffffffffff9,%r9
  0x000000010487953b: mov    0x88(%rsp),%rdi
  0x0000000104879543: add    %r9,%rdi
  0x0000000104879546: shr    $0x3,%r11
  0x000000010487954a: sub    %r11,%r10
  0x000000010487954d: mov    %r10,%rcx
  0x0000000104879550: xor    %rax,%rax
  0x0000000104879553: shl    $0x3,%rcx
  0x0000000104879557: rep rex.W stos %al,%es:(%rdi)  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487955a: mov    %r8,%rdi
  0x000000010487955d: movabs $0x1048294c0,%r10
  0x0000000104879567: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487956a: jmpq   0x000000010487897f
  0x000000010487956f: movslq %r9d,%rdx          ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879572: mov    %rdx,%r11
  0x0000000104879575: shl    %r11
  0x0000000104879578: add    $0x10,%r11         ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487957c: mov    %r11,%r9
  0x000000010487957f: and    $0xfffffffffffffff9,%r9
  0x0000000104879583: mov    0x88(%rsp),%rdi
  0x000000010487958b: add    %r9,%rdi
  0x000000010487958e: shr    $0x3,%r11
  0x0000000104879592: sub    %r11,%r10
  0x0000000104879595: mov    %r10,%rcx
  0x0000000104879598: xor    %rax,%rax
  0x000000010487959b: shl    $0x3,%rcx
  0x000000010487959f: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795a2: mov    %r8,%rdi
  0x00000001048795a5: movabs $0x1048294c0,%r10
  0x00000001048795af: callq  *%r10              ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795b2: jmpq   0x0000000104878b88
  0x00000001048795b7: movslq %r9d,%rdx          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795ba: mov    %rdx,%r11
  0x00000001048795bd: shl    %r11
  0x00000001048795c0: add    $0x10,%r11         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795c4: mov    %r11,%r9
  0x00000001048795c7: and    $0xfffffffffffffff9,%r9
  0x00000001048795cb: mov    0x88(%rsp),%rdi
  0x00000001048795d3: add    %r9,%rdi
  0x00000001048795d6: shr    $0x3,%r11
  0x00000001048795da: sub    %r11,%r10
  0x00000001048795dd: mov    %r10,%rcx
  0x00000001048795e0: xor    %rax,%rax
  0x00000001048795e3: shl    $0x3,%rcx
  0x00000001048795e7: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795ea: mov    %r8,%rdi
  0x00000001048795ed: movabs $0x1048294c0,%r10
  0x00000001048795f7: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048795fa: jmpq   0x0000000104878d83
  0x00000001048795ff: movslq %r9d,%rdx          ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879602: mov    %rdx,%r11
  0x0000000104879605: shl    %r11
  0x0000000104879608: add    $0x10,%r11         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487960c: mov    %r11,%r9
  0x000000010487960f: and    $0xfffffffffffffff9,%r9
  0x0000000104879613: mov    0x88(%rsp),%rdi
  0x000000010487961b: add    %r9,%rdi
  0x000000010487961e: shr    $0x3,%r11
  0x0000000104879622: sub    %r11,%r10
  0x0000000104879625: mov    %r10,%rcx
  0x0000000104879628: xor    %rax,%rax
  0x000000010487962b: shl    $0x3,%rcx
  0x000000010487962f: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879632: mov    %r8,%rdi
  0x0000000104879635: movabs $0x1048294c0,%r10
  0x000000010487963f: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879642: jmpq   0x0000000104878f8c
  0x0000000104879647: movabs $0x7c000da58,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104879651: xchg   %ax,%ax
  0x0000000104879653: callq  0x0000000104846960  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [152]=Oop off=9624}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879658: jmpq   0x00000001048772d2  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487965d: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104879667: mov    $0x10,%edx
  0x000000010487966c: data32 xchg %ax,%ax
  0x000000010487966f: callq  0x0000000104846a60  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [152]=Oop off=9652}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879674: jmpq   0x0000000104877331
  0x0000000104879679: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104879683: callq  0x0000000104846960  ; OopMap{[0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [136]=Oop off=9672}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879688: jmpq   0x000000010487762c
  0x000000010487968d: movslq %r9d,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879690: mov    %rdx,%r11
  0x0000000104879693: shl    %r11
  0x0000000104879696: add    $0x10,%r11         ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487969a: mov    %r11,%r9
  0x000000010487969d: and    $0xfffffffffffffff9,%r9
  0x00000001048796a1: mov    0x88(%rsp),%rdi
  0x00000001048796a9: add    %r9,%rdi
  0x00000001048796ac: shr    $0x3,%r11
  0x00000001048796b0: sub    %r11,%r10
  0x00000001048796b3: mov    %r10,%rcx
  0x00000001048796b6: xor    %rax,%rax
  0x00000001048796b9: shl    $0x3,%rcx
  0x00000001048796bd: rep rex.W stos %al,%es:(%rdi)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048796c0: mov    %r8,%rdi
  0x00000001048796c3: movabs $0x1048294c0,%r10
  0x00000001048796cd: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048796d0: jmpq   0x0000000104879187  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048796d5: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048796df: mov    0x14(%rsp),%edx
  0x00000001048796e3: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=9768}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048796e8: mov    %rax,%r8
  0x00000001048796eb: jmpq   0x0000000104877d05  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048796f0: mov    $0xffffffe4,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048796f5: mov    0x20(%rsp),%r10
  0x00000001048796fa: mov    %r10,(%rsp)
  0x00000001048796fe: mov    0x38(%rsp),%r10
  0x0000000104879703: mov    %r10,0x10(%rsp)
  0x0000000104879708: mov    0x40(%rsp),%r10
  0x000000010487970d: mov    %r10,0x18(%rsp)
  0x0000000104879712: mov    0x28(%rsp),%r10d
  0x0000000104879717: mov    %r10d,0x20(%rsp)
  0x000000010487971c: mov    0x64(%rsp),%r10d
  0x0000000104879721: mov    %r10d,0x28(%rsp)
  0x0000000104879726: mov    0x70(%rsp),%r10
  0x000000010487972b: mov    %r10,0x50(%rsp)
  0x0000000104879730: mov    %r10,0x58(%rsp)
  0x0000000104879735: xchg   %ax,%ax
  0x0000000104879737: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [44]=NarrowOop [48]=Oop [80]=Oop [88]=Oop [104]=Oop [120]=Oop off=9852}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487973c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104879741: mov    $0xfffffff4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x0000000104879746: mov    0x20(%rsp),%rbp
  0x000000010487974b: mov    0x8(%rsp),%r10
  0x0000000104879750: mov    %r10,(%rsp)
  0x0000000104879754: mov    0x38(%rsp),%r10
  0x0000000104879759: mov    %r10,0x8(%rsp)
  0x000000010487975e: mov    0x40(%rsp),%r10
  0x0000000104879763: mov    %r10,0x10(%rsp)
  0x0000000104879768: mov    0x28(%rsp),%r11d
  0x000000010487976d: mov    %r11d,0x18(%rsp)
  0x0000000104879772: mov    0x2c(%rsp),%r10d
  0x0000000104879777: mov    %r10d,0x1c(%rsp)
  0x000000010487977c: data32 xchg %ax,%ax
  0x000000010487977f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [104]=Oop [112]=Oop off=9924}
                                                ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879784: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879789: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104879793: mov    0x1c(%rsp),%edx
  0x0000000104879797: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [20]=NarrowOop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=9948}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487979c: mov    %rax,%r11
  0x000000010487979f: jmpq   0x00000001048774e8  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048797a4: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048797ae: mov    0x14(%rsp),%edx
  0x00000001048797b2: nop
  0x00000001048797b3: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=9976}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048797b8: mov    %rax,%r8
  0x00000001048797bb: jmpq   0x00000001048782dd  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048797c0: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048797ca: mov    0x14(%rsp),%edx
  0x00000001048797ce: mov    0x20(%rsp),%rbp
  0x00000001048797d3: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10008}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048797d8: mov    %rax,%r11
  0x00000001048797db: jmpq   0x00000001048784f3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048797e0: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048797ea: mov    0x14(%rsp),%edx
  0x00000001048797ee: nop
  0x00000001048797ef: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10036}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048797f4: mov    %rax,%r8
  0x00000001048797f7: jmpq   0x0000000104878705  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048797fc: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104879806: mov    0x14(%rsp),%edx
  0x000000010487980a: nop
  0x000000010487980b: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10064}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879810: mov    %rax,%r8
  0x0000000104879813: jmpq   0x0000000104878900  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879818: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104879822: mov    0x14(%rsp),%edx
  0x0000000104879826: nop
  0x0000000104879827: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10092}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487982c: mov    %rax,%r8
  0x000000010487982f: jmpq   0x0000000104878b09  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879834: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010487983e: mov    0x14(%rsp),%edx
  0x0000000104879842: nop
  0x0000000104879843: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10120}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879848: mov    %rax,%r8
  0x000000010487984b: jmpq   0x0000000104878d04
  0x0000000104879850: movslq %ebp,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879853: jmpq   0x0000000104878015
  0x0000000104879858: mov    0x98(%rsp),%rcx
  0x0000000104879860: mov    %r10,%rdi
  0x0000000104879863: xor    %rax,%rax
  0x0000000104879866: shl    $0x3,%rcx
  0x000000010487986a: rep rex.W stos %al,%es:(%rdi)  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487986d: mov    0x80(%rsp),%rsi
  0x0000000104879875: xor    %edx,%edx
  0x0000000104879877: mov    %r11,%rcx
  0x000000010487987a: xor    %r8d,%r8d
  0x000000010487987d: mov    0x1c(%rsp),%r9d
  0x0000000104879882: mov    0x20(%rsp),%rbp
  0x0000000104879887: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [120]=Oop off=10188}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487988c: jmpq   0x0000000104878134
  0x0000000104879891: mov    0x98(%rsp),%rcx
  0x0000000104879899: mov    %r10,%rdi
  0x000000010487989c: xor    %rax,%rax
  0x000000010487989f: shl    $0x3,%rcx
  0x00000001048798a3: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048798a6: jmpq   0x0000000104878134  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048798ab: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x00000001048798b5: mov    0x14(%rsp),%edx
  0x00000001048798b9: xchg   %ax,%ax
  0x00000001048798bb: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10240}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048798c0: mov    %rax,%r8
  0x00000001048798c3: jmpq   0x0000000104878f0d  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048798c8: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048798cd: mov    0x20(%rsp),%rbp
  0x00000001048798d2: mov    0x8(%rsp),%r10
  0x00000001048798d7: mov    %r10,(%rsp)
  0x00000001048798db: mov    %r13d,0x20(%rsp)
  0x00000001048798e0: data32 xchg %ax,%ax
  0x00000001048798e3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10280}
                                                ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x00000001048798e8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x00000001048798ed: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048798f2: mov    0x20(%rsp),%rbp
  0x00000001048798f7: mov    0x8(%rsp),%r11
  0x00000001048798fc: mov    %r11,(%rsp)
  0x0000000104879900: mov    0x28(%rsp),%r8d
  0x0000000104879905: mov    %r8d,0x18(%rsp)
  0x000000010487990a: mov    %r13d,0x20(%rsp)
  0x000000010487990f: mov    %r10d,0x28(%rsp)
  0x0000000104879914: data32 xchg %ax,%ax
  0x0000000104879917: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [40]=NarrowOop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10332}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487991c: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104879921: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879926: mov    0x20(%rsp),%rbp
  0x000000010487992b: mov    0x8(%rsp),%r11
  0x0000000104879930: mov    %r11,(%rsp)
  0x0000000104879934: mov    0x28(%rsp),%r11d
  0x0000000104879939: mov    %r11d,0x18(%rsp)
  0x000000010487993e: mov    0x2c(%rsp),%r11d
  0x0000000104879943: mov    %r11d,0x1c(%rsp)
  0x0000000104879948: mov    %r13d,0x20(%rsp)
  0x000000010487994d: mov    %r10d,0x28(%rsp)
  0x0000000104879952: mov    %ecx,0x2c(%rsp)
  0x0000000104879956: nop
  0x0000000104879957: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [44]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10396}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010487995c: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879961: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010487996b: mov    0x14(%rsp),%edx
  0x000000010487996f: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [24]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [120]=Oop off=10420}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879974: mov    %rax,%r8
  0x0000000104879977: jmpq   0x0000000104879108  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010487997c: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879981: mov    0x20(%rsp),%rbp
  0x0000000104879986: mov    0x8(%rsp),%r10
  0x000000010487998b: mov    %r10,(%rsp)
  0x000000010487998f: mov    0x40(%rsp),%r10
  0x0000000104879994: mov    %r10,0x10(%rsp)
  0x0000000104879999: mov    %r8d,0x1c(%rsp)
  0x000000010487999e: nop
  0x000000010487999f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [48]=Oop [56]=Oop off=10468}
                                                ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)
                                                ;   {runtime_call}
  0x00000001048799a4: callq  0x0000000103c85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048799a9: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048799ae: mov    0x20(%rsp),%rbp
  0x00000001048799b3: mov    0x8(%rsp),%r11
  0x00000001048799b8: mov    %r11,(%rsp)
  0x00000001048799bc: mov    %r10d,0x1c(%rsp)
  0x00000001048799c1: xchg   %ax,%ax
  0x00000001048799c3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [56]=Oop [64]=Oop off=10504}
                                                ;*aaload
                                                ; - java.io.ObjectStreamClass::matchFields@34 (line 2291)
                                                ;   {runtime_call}
  0x00000001048799c8: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x00000001048799cd: mov    %r10,0xb8(%rsp)
  0x00000001048799d5: mov    0x28(%rsp),%r10d   ;*iinc
                                                ; - java.io.ObjectStreamClass::matchFields@192 (line 2292)

  0x00000001048799da: mov    $0xffffff65,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x00000001048799df: mov    0x20(%rsp),%rbp
  0x00000001048799e4: mov    0x8(%rsp),%r11
  0x00000001048799e9: mov    %r11,(%rsp)
  0x00000001048799ed: mov    %r10d,0x18(%rsp)
  0x00000001048799f2: mov    0x2c(%rsp),%r11d
  0x00000001048799f7: mov    %r11d,0x1c(%rsp)
  0x00000001048799fc: data32 xchg %ax,%ax
  0x00000001048799ff: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [56]=Oop [64]=Oop [184]=Oop off=10564}
                                                ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)
                                                ;   {runtime_call}
  0x0000000104879a04: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879a09: mov    $0xfffffff6,%esi   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879a0e: nop
  0x0000000104879a0f: callq  0x00000001047dc1a0  ; OopMap{off=10580}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879a14: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879a19: mov    $0x6,%esi          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879a1e: mov    0x20(%rsp),%rbp
  0x0000000104879a23: mov    0x8(%rsp),%r11
  0x0000000104879a28: mov    %r11,(%rsp)
  0x0000000104879a2c: mov    0x38(%rsp),%r11
  0x0000000104879a31: mov    %r11,0x8(%rsp)
  0x0000000104879a36: mov    0x28(%rsp),%r11d
  0x0000000104879a3b: mov    %r11d,0x18(%rsp)
  0x0000000104879a40: mov    0x2c(%rsp),%r11d
  0x0000000104879a45: mov    %r11d,0x1c(%rsp)
  0x0000000104879a4a: mov    %r10d,0x24(%rsp)
  0x0000000104879a4f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop off=10644}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879a54: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879a59: mov    $0x6,%esi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879a5e: mov    0x20(%rsp),%rbp
  0x0000000104879a63: mov    0x8(%rsp),%r11
  0x0000000104879a68: mov    %r11,(%rsp)
  0x0000000104879a6c: mov    0x38(%rsp),%r11
  0x0000000104879a71: mov    %r11,0x8(%rsp)
  0x0000000104879a76: mov    0x28(%rsp),%r8d
  0x0000000104879a7b: mov    %r8d,0x18(%rsp)
  0x0000000104879a80: mov    0x2c(%rsp),%r11d
  0x0000000104879a85: mov    %r11d,0x1c(%rsp)
  0x0000000104879a8a: mov    %r10d,0x24(%rsp)
  0x0000000104879a8f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop off=10708}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879a94: callq  0x0000000103c85e14  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104879a99: mov    $0xffffff65,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879a9e: mov    0x20(%rsp),%r10
  0x0000000104879aa3: mov    %r10,(%rsp)
  0x0000000104879aa7: mov    0x28(%rsp),%r11d
  0x0000000104879aac: mov    %r11d,0x20(%rsp)
  0x0000000104879ab1: mov    0x2c(%rsp),%r11d
  0x0000000104879ab6: mov    %r11d,0x24(%rsp)
  0x0000000104879abb: mov    %r13d,0x28(%rsp)
  0x0000000104879ac0: mov    %r8d,0x30(%rsp)
  0x0000000104879ac5: xchg   %ax,%ax
  0x0000000104879ac7: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [48]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10764}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879acc: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104879ad1: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879ad6: mov    0x20(%rsp),%r11
  0x0000000104879adb: mov    %r11,(%rsp)
  0x0000000104879adf: mov    0x28(%rsp),%r11d
  0x0000000104879ae4: mov    %r11d,0x20(%rsp)
  0x0000000104879ae9: mov    0x2c(%rsp),%r11d
  0x0000000104879aee: mov    %r11d,0x24(%rsp)
  0x0000000104879af3: mov    %r13d,0x28(%rsp)
  0x0000000104879af8: mov    %r10d,0x30(%rsp)
  0x0000000104879afd: mov    %r9d,0x34(%rsp)
  0x0000000104879b02: nop
  0x0000000104879b03: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [52]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10824}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x0000000104879b08: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879b0d: mov    $0xffffff65,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879b12: mov    0x20(%rsp),%r11
  0x0000000104879b17: mov    %r11,(%rsp)
  0x0000000104879b1b: mov    0x28(%rsp),%r8d
  0x0000000104879b20: mov    %r8d,0x20(%rsp)
  0x0000000104879b25: mov    0x2c(%rsp),%r11d
  0x0000000104879b2a: mov    %r11d,0x24(%rsp)
  0x0000000104879b2f: mov    %r13d,0x28(%rsp)
  0x0000000104879b34: mov    %r10d,0x30(%rsp)
  0x0000000104879b39: xchg   %ax,%ax
  0x0000000104879b3b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [36]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10880}
                                                ;*if_icmpeq
                                                ; - java.io.ObjectStreamClass::matchFields@98 (line 2296)
                                                ;   {runtime_call}
  0x0000000104879b40: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104879b45: mov    $0xffffff65,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879b4a: mov    0x20(%rsp),%r10
  0x0000000104879b4f: mov    %r10,(%rsp)
  0x0000000104879b53: mov    0x28(%rsp),%r11d
  0x0000000104879b58: mov    %r11d,0x20(%rsp)
  0x0000000104879b5d: mov    0x2c(%rsp),%r10d
  0x0000000104879b62: mov    %r10d,0x24(%rsp)
  0x0000000104879b67: mov    %r13d,0x28(%rsp)
  0x0000000104879b6c: data32 xchg %ax,%ax
  0x0000000104879b6f: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [36]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=10932}
                                                ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ;   {runtime_call}
  0x0000000104879b74: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879b79: mov    $0xfffffff6,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879b7e: nop
  0x0000000104879b7f: callq  0x00000001047dc1a0  ; OopMap{off=10948}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879b84: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879b89: mov    $0xffffffe4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x0000000104879b8e: mov    0x20(%rsp),%rbp
  0x0000000104879b93: mov    0x8(%rsp),%r10
  0x0000000104879b98: mov    %r10,(%rsp)
  0x0000000104879b9c: mov    0x38(%rsp),%r10
  0x0000000104879ba1: mov    %r10,0x8(%rsp)
  0x0000000104879ba6: mov    0x40(%rsp),%r10
  0x0000000104879bab: mov    %r10,0x10(%rsp)
  0x0000000104879bb0: mov    0x28(%rsp),%r11d
  0x0000000104879bb5: mov    %r11d,0x18(%rsp)
  0x0000000104879bba: mov    0x2c(%rsp),%r10d
  0x0000000104879bbf: mov    %r10d,0x1c(%rsp)
  0x0000000104879bc4: mov    0x70(%rsp),%r10
  0x0000000104879bc9: mov    %r10,0x40(%rsp)
  0x0000000104879bce: mov    %r10,0x48(%rsp)
  0x0000000104879bd3: mov    %r9d,0x24(%rsp)
  0x0000000104879bd8: data32 xchg %ax,%ax
  0x0000000104879bdb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11040}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879be0: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879be5: mov    $0x2d,%esi         ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104879bea: mov    0x20(%rsp),%rbp
  0x0000000104879bef: mov    0x8(%rsp),%r10
  0x0000000104879bf4: mov    %r10,(%rsp)
  0x0000000104879bf8: mov    0x28(%rsp),%r11d
  0x0000000104879bfd: mov    %r11d,0x18(%rsp)
  0x0000000104879c02: mov    0x2c(%rsp),%r10d
  0x0000000104879c07: mov    %r10d,0x1c(%rsp)
  0x0000000104879c0c: data32 xchg %ax,%ax
  0x0000000104879c0f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [48]=Oop [56]=Oop [64]=Oop off=11092}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@190 (line 319)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879c14: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879c19: mov    $0xffffffe4,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879c1e: mov    0x20(%rsp),%rbp
  0x0000000104879c23: mov    0x8(%rsp),%r10
  0x0000000104879c28: mov    %r10,(%rsp)
  0x0000000104879c2c: mov    0x38(%rsp),%r10
  0x0000000104879c31: mov    %r10,0x8(%rsp)
  0x0000000104879c36: mov    0x40(%rsp),%r10
  0x0000000104879c3b: mov    %r10,0x10(%rsp)
  0x0000000104879c40: mov    0x28(%rsp),%r11d
  0x0000000104879c45: mov    %r11d,0x18(%rsp)
  0x0000000104879c4a: mov    0x2c(%rsp),%r10d
  0x0000000104879c4f: mov    %r10d,0x1c(%rsp)
  0x0000000104879c54: mov    0x70(%rsp),%r10
  0x0000000104879c59: mov    %r10,0x40(%rsp)
  0x0000000104879c5e: mov    0x68(%rsp),%r10
  0x0000000104879c63: mov    %r10,0x50(%rsp)
  0x0000000104879c68: data32 xchg %ax,%ax
  0x0000000104879c6b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [104]=Oop [112]=Oop [136]=Oop off=11184}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879c70: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879c75: mov    $0xfffffff6,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879c7a: nop
  0x0000000104879c7b: callq  0x00000001047dc1a0  ; OopMap{off=11200}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879c80: callq  0x0000000103c85e14  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)
                                                ;   {runtime_call}
  0x0000000104879c85: mov    $0xffffffe4,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879c8a: mov    0x20(%rsp),%rbp
  0x0000000104879c8f: mov    0x8(%rsp),%r10
  0x0000000104879c94: mov    %r10,(%rsp)
  0x0000000104879c98: mov    0x38(%rsp),%r10
  0x0000000104879c9d: mov    %r10,0x8(%rsp)
  0x0000000104879ca2: mov    0x40(%rsp),%r10
  0x0000000104879ca7: mov    %r10,0x10(%rsp)
  0x0000000104879cac: mov    0x28(%rsp),%r11d
  0x0000000104879cb1: mov    %r11d,0x18(%rsp)
  0x0000000104879cb6: mov    0x2c(%rsp),%r10d
  0x0000000104879cbb: mov    %r10d,0x1c(%rsp)
  0x0000000104879cc0: mov    0x70(%rsp),%r10
  0x0000000104879cc5: mov    %r10,0x40(%rsp)
  0x0000000104879cca: mov    %r10,0x48(%rsp)
  0x0000000104879ccf: mov    %r9d,0x24(%rsp)
  0x0000000104879cd4: data32 xchg %ax,%ax
  0x0000000104879cd7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11292}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879cdc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104879ce1: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879ce6: jmpq   0x0000000104877c83  ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879ceb: mov    %rsi,%rdi
  0x0000000104879cee: xor    %rax,%rax
  0x0000000104879cf1: shl    $0x3,%rcx
  0x0000000104879cf5: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879cf8: mov    0x78(%rsp),%rsi    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879cfd: xor    %edx,%edx
  0x0000000104879cff: mov    %r8,%rcx
  0x0000000104879d02: xor    %r8d,%r8d
  0x0000000104879d05: mov    0x20(%rsp),%rbp
  0x0000000104879d0a: nop
  0x0000000104879d0b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=11344}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879d10: jmpq   0x0000000104877d84
  0x0000000104879d15: mov    %rsi,%rdi
  0x0000000104879d18: xor    %rax,%rax
  0x0000000104879d1b: shl    $0x3,%rcx
  0x0000000104879d1f: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879d22: jmpq   0x0000000104877d84
  0x0000000104879d27: mov    $0xfffffff6,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879d2c: data32 xchg %ax,%ax
  0x0000000104879d2f: callq  0x00000001047dc1a0  ; OopMap{off=11380}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879d34: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879d39: mov    $0xffffffe4,%esi   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879d3e: mov    0x20(%rsp),%rbp
  0x0000000104879d43: mov    0x8(%rsp),%r10
  0x0000000104879d48: mov    %r10,(%rsp)
  0x0000000104879d4c: mov    0x38(%rsp),%r10
  0x0000000104879d51: mov    %r10,0x8(%rsp)
  0x0000000104879d56: mov    0x40(%rsp),%r10
  0x0000000104879d5b: mov    %r10,0x10(%rsp)
  0x0000000104879d60: mov    0x28(%rsp),%r10d
  0x0000000104879d65: mov    %r10d,0x18(%rsp)
  0x0000000104879d6a: mov    0x2c(%rsp),%r11d
  0x0000000104879d6f: mov    %r11d,0x1c(%rsp)
  0x0000000104879d74: mov    0x70(%rsp),%r10
  0x0000000104879d79: mov    %r10,0x40(%rsp)
  0x0000000104879d7e: mov    %r10,0x48(%rsp)
  0x0000000104879d83: mov    %r9d,0x24(%rsp)
  0x0000000104879d88: data32 xchg %ax,%ax
  0x0000000104879d8b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11472}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879d90: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104879d95: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879d9a: nop
  0x0000000104879d9b: callq  0x00000001047dc1a0  ; OopMap{off=11488}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879da0: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879da5: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879daa: mov    0x20(%rsp),%rbp
  0x0000000104879daf: mov    0x8(%rsp),%r10
  0x0000000104879db4: mov    %r10,(%rsp)
  0x0000000104879db8: mov    0x38(%rsp),%r10
  0x0000000104879dbd: mov    %r10,0x8(%rsp)
  0x0000000104879dc2: mov    0x40(%rsp),%r10
  0x0000000104879dc7: mov    %r10,0x10(%rsp)
  0x0000000104879dcc: mov    0x28(%rsp),%r11d
  0x0000000104879dd1: mov    %r11d,0x18(%rsp)
  0x0000000104879dd6: mov    0x2c(%rsp),%r10d
  0x0000000104879ddb: mov    %r10d,0x1c(%rsp)
  0x0000000104879de0: mov    0x70(%rsp),%r10
  0x0000000104879de5: mov    %r10,0x40(%rsp)
  0x0000000104879dea: mov    %r10,0x48(%rsp)
  0x0000000104879def: mov    %r9d,0x24(%rsp)
  0x0000000104879df4: data32 xchg %ax,%ax
  0x0000000104879df7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11580}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879dfc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104879e01: mov    $0xfffffff6,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104879e06: nop
  0x0000000104879e07: callq  0x00000001047dc1a0  ; OopMap{off=11596}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879e0c: callq  0x0000000103c85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::getTypeCode@1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {runtime_call}
  0x0000000104879e11: mov    $0xffffffe4,%esi   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879e16: mov    0x20(%rsp),%rbp
  0x0000000104879e1b: mov    0x8(%rsp),%r10
  0x0000000104879e20: mov    %r10,(%rsp)
  0x0000000104879e24: mov    0x38(%rsp),%r10
  0x0000000104879e29: mov    %r10,0x8(%rsp)
  0x0000000104879e2e: mov    0x40(%rsp),%r10
  0x0000000104879e33: mov    %r10,0x10(%rsp)
  0x0000000104879e38: mov    0x28(%rsp),%r10d
  0x0000000104879e3d: mov    %r10d,0x18(%rsp)
  0x0000000104879e42: mov    0x2c(%rsp),%r11d
  0x0000000104879e47: mov    %r11d,0x1c(%rsp)
  0x0000000104879e4c: mov    0x70(%rsp),%r10
  0x0000000104879e51: mov    %r10,0x40(%rsp)
  0x0000000104879e56: mov    %r10,0x48(%rsp)
  0x0000000104879e5b: mov    %r9d,0x24(%rsp)
  0x0000000104879e60: data32 xchg %ax,%ax
  0x0000000104879e63: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11688}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879e68: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879e6d: mov    $0xfffffff6,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879e72: nop
  0x0000000104879e73: callq  0x00000001047dc1a0  ; OopMap{off=11704}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879e78: callq  0x0000000103c85e14  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {runtime_call}
  0x0000000104879e7d: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879e82: mov    0x20(%rsp),%rbp
  0x0000000104879e87: mov    0x8(%rsp),%r10
  0x0000000104879e8c: mov    %r10,(%rsp)
  0x0000000104879e90: mov    0x38(%rsp),%r10
  0x0000000104879e95: mov    %r10,0x8(%rsp)
  0x0000000104879e9a: mov    0x40(%rsp),%r10
  0x0000000104879e9f: mov    %r10,0x10(%rsp)
  0x0000000104879ea4: mov    0x28(%rsp),%r11d
  0x0000000104879ea9: mov    %r11d,0x18(%rsp)
  0x0000000104879eae: mov    0x2c(%rsp),%r10d
  0x0000000104879eb3: mov    %r10d,0x1c(%rsp)
  0x0000000104879eb8: mov    0x70(%rsp),%r10
  0x0000000104879ebd: mov    %r10,0x40(%rsp)
  0x0000000104879ec2: mov    %r10,0x48(%rsp)
  0x0000000104879ec7: mov    %r9d,0x24(%rsp)
  0x0000000104879ecc: data32 xchg %ax,%ax
  0x0000000104879ecf: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11796}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879ed4: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x0000000104879ed9: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879ede: nop
  0x0000000104879edf: callq  0x00000001047dc1a0  ; OopMap{off=11812}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879ee4: callq  0x0000000103c85e14  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879ee9: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879eee: mov    0x20(%rsp),%rbp
  0x0000000104879ef3: mov    0x8(%rsp),%r10
  0x0000000104879ef8: mov    %r10,(%rsp)
  0x0000000104879efc: mov    0x38(%rsp),%r10
  0x0000000104879f01: mov    %r10,0x8(%rsp)
  0x0000000104879f06: mov    0x40(%rsp),%r10
  0x0000000104879f0b: mov    %r10,0x10(%rsp)
  0x0000000104879f10: mov    0x28(%rsp),%r10d
  0x0000000104879f15: mov    %r10d,0x18(%rsp)
  0x0000000104879f1a: mov    0x2c(%rsp),%r11d
  0x0000000104879f1f: mov    %r11d,0x1c(%rsp)
  0x0000000104879f24: mov    0x70(%rsp),%r10
  0x0000000104879f29: mov    %r10,0x40(%rsp)
  0x0000000104879f2e: mov    %r10,0x48(%rsp)
  0x0000000104879f33: mov    %r9d,0x24(%rsp)
  0x0000000104879f38: data32 xchg %ax,%ax
  0x0000000104879f3b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=11904}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879f40: callq  0x0000000103c85e14  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879f45: mov    $0x6,%esi          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104879f4a: mov    0x20(%rsp),%rbp
  0x0000000104879f4f: mov    0x8(%rsp),%r10
  0x0000000104879f54: mov    %r10,(%rsp)
  0x0000000104879f58: mov    0x38(%rsp),%r10
  0x0000000104879f5d: mov    %r10,0x8(%rsp)
  0x0000000104879f62: mov    0x40(%rsp),%r10
  0x0000000104879f67: mov    %r10,0x10(%rsp)
  0x0000000104879f6c: mov    0x28(%rsp),%r10d
  0x0000000104879f71: mov    %r10d,0x18(%rsp)
  0x0000000104879f76: mov    0x2c(%rsp),%r10d
  0x0000000104879f7b: mov    %r10d,0x1c(%rsp)
  0x0000000104879f80: mov    0x70(%rsp),%r10
  0x0000000104879f85: mov    %r10,0x40(%rsp)
  0x0000000104879f8a: nop
  0x0000000104879f8b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop [112]=Oop off=11984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879f90: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879f95: mov    $0x6,%esi          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879f9a: mov    0x20(%rsp),%rbp
  0x0000000104879f9f: mov    0x8(%rsp),%r10
  0x0000000104879fa4: mov    %r10,(%rsp)
  0x0000000104879fa8: mov    0x38(%rsp),%r10
  0x0000000104879fad: mov    %r10,0x8(%rsp)
  0x0000000104879fb2: mov    0x40(%rsp),%r10
  0x0000000104879fb7: mov    %r10,0x10(%rsp)
  0x0000000104879fbc: mov    0x28(%rsp),%r10d
  0x0000000104879fc1: mov    %r10d,0x18(%rsp)
  0x0000000104879fc6: mov    0x2c(%rsp),%r10d
  0x0000000104879fcb: mov    %r10d,0x1c(%rsp)
  0x0000000104879fd0: mov    0x70(%rsp),%r10
  0x0000000104879fd5: mov    %r10,0x40(%rsp)
  0x0000000104879fda: nop
  0x0000000104879fdb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [104]=Oop [112]=Oop off=12064}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879fe0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104879fe5: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879fea: nop
  0x0000000104879feb: callq  0x00000001047dc1a0  ; OopMap{off=12080}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104879ff0: callq  0x0000000103c85e14  ;*ireturn
                                                ; - java.io.ObjectStreamField::isPrimitive@26 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104879ff5: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104879ffa: mov    0x20(%rsp),%rbp
  0x0000000104879fff: mov    0x8(%rsp),%r10
  0x000000010487a004: mov    %r10,(%rsp)
  0x000000010487a008: mov    0x38(%rsp),%r10
  0x000000010487a00d: mov    %r10,0x8(%rsp)
  0x000000010487a012: mov    0x40(%rsp),%r10
  0x000000010487a017: mov    %r10,0x10(%rsp)
  0x000000010487a01c: mov    0x28(%rsp),%r11d
  0x000000010487a021: mov    %r11d,0x18(%rsp)
  0x000000010487a026: mov    0x2c(%rsp),%r10d
  0x000000010487a02b: mov    %r10d,0x1c(%rsp)
  0x000000010487a030: mov    0x70(%rsp),%r10
  0x000000010487a035: mov    %r10,0x40(%rsp)
  0x000000010487a03a: mov    %r10,0x48(%rsp)
  0x000000010487a03f: mov    %r9d,0x24(%rsp)
  0x000000010487a044: data32 xchg %ax,%ax
  0x000000010487a047: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=12172}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a04c: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a051: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a056: nop
  0x000000010487a057: callq  0x00000001047dc1a0  ; OopMap{off=12188}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a05c: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a061: mov    $0xffffffe4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a066: mov    0x20(%rsp),%rbp
  0x000000010487a06b: mov    0x8(%rsp),%r10
  0x000000010487a070: mov    %r10,(%rsp)
  0x000000010487a074: mov    0x38(%rsp),%r10
  0x000000010487a079: mov    %r10,0x8(%rsp)
  0x000000010487a07e: mov    0x40(%rsp),%r10
  0x000000010487a083: mov    %r10,0x10(%rsp)
  0x000000010487a088: mov    0x28(%rsp),%r10d
  0x000000010487a08d: mov    %r10d,0x18(%rsp)
  0x000000010487a092: mov    0x2c(%rsp),%r11d
  0x000000010487a097: mov    %r11d,0x1c(%rsp)
  0x000000010487a09c: mov    0x70(%rsp),%r10
  0x000000010487a0a1: mov    %r10,0x40(%rsp)
  0x000000010487a0a6: mov    %r10,0x48(%rsp)
  0x000000010487a0ab: mov    %r9d,0x24(%rsp)
  0x000000010487a0b0: data32 xchg %ax,%ax
  0x000000010487a0b3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [72]=Oop [120]=Oop off=12280}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a0b8: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a0bd: movslq 0x1c(%rsp),%r10    ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a0c2: mov    %r10,%rbp
  0x000000010487a0c5: jmpq   0x000000010487745f
  0x000000010487a0ca: mov    %r10,%rdi
  0x000000010487a0cd: xor    %rax,%rax
  0x000000010487a0d0: shl    $0x3,%rcx
  0x000000010487a0d4: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a0d7: mov    0x78(%rsp),%rsi
  0x000000010487a0dc: xor    %edx,%edx
  0x000000010487a0de: mov    0x88(%rsp),%rcx
  0x000000010487a0e6: xor    %r8d,%r8d
  0x000000010487a0e9: mov    0x20(%rsp),%rbp
  0x000000010487a0ee: nop
  0x000000010487a0ef: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [104]=Oop [112]=Oop [136]=Oop off=12340}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a0f4: jmpq   0x0000000104877574
  0x000000010487a0f9: mov    %r10,%rdi
  0x000000010487a0fc: xor    %rax,%rax
  0x000000010487a0ff: shl    $0x3,%rcx
  0x000000010487a103: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a106: jmpq   0x0000000104877574
  0x000000010487a10b: movslq 0x14(%rsp),%r10    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a110: jmpq   0x000000010487825b  ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)

  0x000000010487a115: mov    %rsi,%rdi
  0x000000010487a118: xor    %rax,%rax
  0x000000010487a11b: shl    $0x3,%rcx
  0x000000010487a11f: rep rex.W stos %al,%es:(%rdi)  ;*aload
                                                ; - java.io.ObjectStreamClass::matchFields@223 (line 2314)

  0x000000010487a122: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a127: xor    %edx,%edx
  0x000000010487a129: mov    %r8,%rcx
  0x000000010487a12c: xor    %r8d,%r8d
  0x000000010487a12f: mov    0x20(%rsp),%rbp
  0x000000010487a134: data32 xchg %ax,%ax
  0x000000010487a137: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12412}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a13c: jmpq   0x000000010487835c
  0x000000010487a141: mov    %rsi,%rdi
  0x000000010487a144: xor    %rax,%rax
  0x000000010487a147: shl    $0x3,%rcx
  0x000000010487a14b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a14e: jmpq   0x000000010487835c
  0x000000010487a153: movslq 0x14(%rsp),%r10    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a158: jmpq   0x0000000104878477  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)

  0x000000010487a15d: mov    %rbx,%rdi
  0x000000010487a160: xor    %rax,%rax
  0x000000010487a163: shl    $0x3,%rcx
  0x000000010487a167: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a16a: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a16f: xor    %edx,%edx
  0x000000010487a171: mov    0x88(%rsp),%rcx
  0x000000010487a179: xor    %r8d,%r8d
  0x000000010487a17c: data32 xchg %ax,%ax
  0x000000010487a17f: callq  0x0000000104844620  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12484}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a184: jmpq   0x000000010487858e
  0x000000010487a189: mov    %rbx,%rdi
  0x000000010487a18c: xor    %rax,%rax
  0x000000010487a18f: shl    $0x3,%rcx
  0x000000010487a193: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a196: jmpq   0x000000010487858e
  0x000000010487a19b: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a1a0: jmpq   0x0000000104878683
  0x000000010487a1a5: mov    %rsi,%rdi
  0x000000010487a1a8: xor    %rax,%rax
  0x000000010487a1ab: shl    $0x3,%rcx
  0x000000010487a1af: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a1b2: mov    0x78(%rsp),%rsi
  0x000000010487a1b7: xor    %edx,%edx
  0x000000010487a1b9: mov    %r8,%rcx
  0x000000010487a1bc: xor    %r8d,%r8d
  0x000000010487a1bf: mov    0x20(%rsp),%rbp
  0x000000010487a1c4: data32 xchg %ax,%ax
  0x000000010487a1c7: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12556}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a1cc: jmpq   0x0000000104878784
  0x000000010487a1d1: mov    %rsi,%rdi
  0x000000010487a1d4: xor    %rax,%rax
  0x000000010487a1d7: shl    $0x3,%rcx
  0x000000010487a1db: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a1de: jmpq   0x0000000104878784
  0x000000010487a1e3: mov    %rbp,%r13
  0x000000010487a1e6: mov    0x8(%rsp),%r9
  0x000000010487a1eb: mov    0x10(%rsp),%r10
  0x000000010487a1f0: mov    $0xffffff9d,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010487a1f5: mov    0x28(%rsp),%ebp
  0x000000010487a1f9: mov    0x1c(%rsp),%r11d
  0x000000010487a1fe: mov    %r11d,0x8(%rsp)
  0x000000010487a203: mov    %rbx,0x10(%rsp)
  0x000000010487a208: mov    %r13,0x18(%rsp)
  0x000000010487a20d: mov    %r14,0x20(%rsp)
  0x000000010487a212: mov    %r9,0x28(%rsp)
  0x000000010487a217: mov    %r10,0x30(%rsp)
  0x000000010487a21c: data32 xchg %ax,%ax
  0x000000010487a21f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [16]=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop off=12644}
                                                ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a224: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010487a229: mov    0x8(%rsp),%r9
  0x000000010487a22e: mov    0x10(%rsp),%r10
  0x000000010487a233: jmp    0x000000010487a1f0
  0x000000010487a235: mov    0x8(%rsp),%r9
  0x000000010487a23a: mov    0x10(%rsp),%r10
  0x000000010487a23f: jmp    0x000000010487a1f0
  0x000000010487a241: mov    0x10(%rsp),%r10
  0x000000010487a246: jmp    0x000000010487a1f0
  0x000000010487a248: movslq 0x14(%rsp),%r10    ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a24d: jmpq   0x0000000104878883  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a252: mov    %rsi,%rdi
  0x000000010487a255: xor    %rax,%rax
  0x000000010487a258: shl    $0x3,%rcx
  0x000000010487a25c: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a25f: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a264: xor    %edx,%edx
  0x000000010487a266: mov    %r8,%rcx
  0x000000010487a269: xor    %r8d,%r8d
  0x000000010487a26c: mov    0x20(%rsp),%rbp
  0x000000010487a271: xchg   %ax,%ax
  0x000000010487a273: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12728}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a278: jmpq   0x000000010487897f
  0x000000010487a27d: mov    %rsi,%rdi
  0x000000010487a280: xor    %rax,%rax
  0x000000010487a283: shl    $0x3,%rcx
  0x000000010487a287: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a28a: jmpq   0x000000010487897f
  0x000000010487a28f: movslq 0x14(%rsp),%r10
  0x000000010487a294: jmpq   0x0000000104878a87  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a299: mov    %rsi,%rdi
  0x000000010487a29c: xor    %rax,%rax
  0x000000010487a29f: shl    $0x3,%rcx
  0x000000010487a2a3: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2a6: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2ab: xor    %edx,%edx
  0x000000010487a2ad: mov    %r8,%rcx
  0x000000010487a2b0: xor    %r8d,%r8d
  0x000000010487a2b3: mov    0x20(%rsp),%rbp
  0x000000010487a2b8: data32 xchg %ax,%ax
  0x000000010487a2bb: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12800}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a2c0: jmpq   0x0000000104878b88
  0x000000010487a2c5: mov    %rsi,%rdi
  0x000000010487a2c8: xor    %rax,%rax
  0x000000010487a2cb: shl    $0x3,%rcx
  0x000000010487a2cf: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2d2: jmpq   0x0000000104878b88
  0x000000010487a2d7: movslq 0x14(%rsp),%r10    ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2dc: jmpq   0x0000000104878c87  ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2e1: mov    %rsi,%rdi
  0x000000010487a2e4: xor    %rax,%rax
  0x000000010487a2e7: shl    $0x3,%rcx
  0x000000010487a2eb: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2ee: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a2f3: xor    %edx,%edx
  0x000000010487a2f5: mov    %r8,%rcx
  0x000000010487a2f8: xor    %r8d,%r8d
  0x000000010487a2fb: mov    0x20(%rsp),%rbp
  0x000000010487a300: data32 xchg %ax,%ax
  0x000000010487a303: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12872}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a308: jmpq   0x0000000104878d83
  0x000000010487a30d: mov    %rsi,%rdi
  0x000000010487a310: xor    %rax,%rax
  0x000000010487a313: shl    $0x3,%rcx
  0x000000010487a317: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a31a: jmpq   0x0000000104878d83
  0x000000010487a31f: movslq 0x14(%rsp),%r10
  0x000000010487a324: jmpq   0x0000000104878e8b
  0x000000010487a329: mov    %rsi,%rdi
  0x000000010487a32c: xor    %rax,%rax
  0x000000010487a32f: shl    $0x3,%rcx
  0x000000010487a333: rep rex.W stos %al,%es:(%rdi)  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a336: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a33b: xor    %edx,%edx
  0x000000010487a33d: mov    %r8,%rcx
  0x000000010487a340: xor    %r8d,%r8d
  0x000000010487a343: mov    0x20(%rsp),%rbp
  0x000000010487a348: data32 xchg %ax,%ax
  0x000000010487a34b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=12944}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a350: jmpq   0x0000000104878f8c
  0x000000010487a355: mov    %rsi,%rdi
  0x000000010487a358: xor    %rax,%rax
  0x000000010487a35b: shl    $0x3,%rcx
  0x000000010487a35f: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a362: jmpq   0x0000000104878f8c  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x000000010487a367: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a36c: data32 xchg %ax,%ax
  0x000000010487a36f: callq  0x00000001047dc1a0  ; OopMap{off=12980}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a374: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a379: movslq 0x14(%rsp),%r10    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a37e: jmpq   0x000000010487908b  ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a383: mov    %rsi,%rdi
  0x000000010487a386: xor    %rax,%rax
  0x000000010487a389: shl    $0x3,%rcx
  0x000000010487a38d: rep rex.W stos %al,%es:(%rdi)  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a390: mov    0x78(%rsp),%rsi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a395: xor    %edx,%edx
  0x000000010487a397: mov    %r8,%rcx
  0x000000010487a39a: xor    %r8d,%r8d
  0x000000010487a39d: mov    0x20(%rsp),%rbp
  0x000000010487a3a2: nop
  0x000000010487a3a3: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [44]=NarrowOop [48]=Oop [56]=Oop [64]=Oop [112]=Oop [136]=Oop off=13032}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a3a8: jmpq   0x0000000104879187
  0x000000010487a3ad: mov    %rsi,%rdi
  0x000000010487a3b0: xor    %rax,%rax
  0x000000010487a3b3: shl    $0x3,%rcx
  0x000000010487a3b7: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a3ba: jmpq   0x0000000104879187  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010487a3bf: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a3c4: data32 xchg %ax,%ax
  0x000000010487a3c7: callq  0x00000001047dc1a0  ; OopMap{off=13068}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a3cc: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a3d1: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a3d6: nop
  0x000000010487a3d7: callq  0x00000001047dc1a0  ; OopMap{off=13084}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a3dc: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a3e1: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a3e6: mov    %r11d,%ebp
  0x000000010487a3e9: xchg   %ax,%ax
  0x000000010487a3eb: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=13104}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a3f0: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a3f5: mov    $0xfffffff4,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a3fa: mov    0x20(%rsp),%rbp
  0x000000010487a3ff: mov    0x8(%rsp),%r10
  0x000000010487a404: mov    %r10,(%rsp)
  0x000000010487a408: mov    0x28(%rsp),%r10d
  0x000000010487a40d: mov    %r10d,0x18(%rsp)
  0x000000010487a412: mov    %ecx,0x1c(%rsp)
  0x000000010487a416: mov    0x30(%rsp),%r10
  0x000000010487a41b: mov    %r10,0x20(%rsp)
  0x000000010487a420: mov    %r13d,0x28(%rsp)
  0x000000010487a425: mov    %r8d,0x30(%rsp)
  0x000000010487a42a: nop
  0x000000010487a42b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [28]=NarrowOop [32]=Oop [48]=NarrowOop [56]=Oop [64]=Oop [96]=NarrowOop off=13168}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a430: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a435: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a43a: nop
  0x000000010487a43b: callq  0x00000001047dc1a0  ; OopMap{off=13184}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a440: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a445: mov    $0xfffffff6,%esi   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a44a: nop
  0x000000010487a44b: callq  0x00000001047dc1a0  ; OopMap{off=13200}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a450: callq  0x0000000103c85e14  ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a455: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a45a: nop
  0x000000010487a45b: callq  0x00000001047dc1a0  ; OopMap{off=13216}
                                                ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a460: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a465: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a46a: nop
  0x000000010487a46b: callq  0x00000001047dc1a0  ; OopMap{off=13232}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a470: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a475: mov    $0xfffffff6,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a47a: nop
  0x000000010487a47b: callq  0x00000001047dc1a0  ; OopMap{off=13248}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a480: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a485: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a48a: nop
  0x000000010487a48b: callq  0x00000001047dc1a0  ; OopMap{off=13264}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010487a490: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a495: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a49a: nop
  0x000000010487a49b: callq  0x00000001047dc1a0  ; OopMap{off=13280}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x000000010487a4a0: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a4a5: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4aa: nop
  0x000000010487a4ab: callq  0x00000001047dc1a0  ; OopMap{off=13296}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a4b0: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010487a4b5: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4ba: nop
  0x000000010487a4bb: callq  0x00000001047dc1a0  ; OopMap{off=13312}
                                                ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a4c0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010487a4c5: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4ca: nop
  0x000000010487a4cb: callq  0x00000001047dc1a0  ; OopMap{off=13328}
                                                ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)
                                                ;   {runtime_call}
  0x000000010487a4d0: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a4d5: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4da: nop
  0x000000010487a4db: callq  0x00000001047dc1a0  ; OopMap{[48]=Oop off=13344}
                                                ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)
                                                ;   {runtime_call}
  0x000000010487a4e0: callq  0x0000000103c85e14  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::isPrimitive@-1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a4e5: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4ea: nop
  0x000000010487a4eb: callq  0x00000001047dc1a0  ; OopMap{off=13360}
                                                ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@27 (line 2290)
                                                ;   {runtime_call}
  0x000000010487a4f0: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a4f5: mov    $0xfffffff6,%esi   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a4fa: nop
  0x000000010487a4fb: callq  0x00000001047dc1a0  ; OopMap{off=13376}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a500: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010487a505: mov    $0xfffffff6,%esi   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a50a: nop
  0x000000010487a50b: callq  0x00000001047dc1a0  ; OopMap{off=13392}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a510: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a515: mov    $0xfffffff6,%esi   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a51a: nop
  0x000000010487a51b: callq  0x00000001047dc1a0  ; OopMap{off=13408}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a520: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010487a525: mov    $0xffffff86,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x000000010487a52a: mov    %rdx,%rbp
  0x000000010487a52d: mov    %rdi,(%rsp)
  0x000000010487a531: mov    %r11,0x8(%rsp)
  0x000000010487a536: mov    %rcx,0x10(%rsp)
  0x000000010487a53b: mov    0x28(%rsp),%r10d
  0x000000010487a540: mov    %r10d,0x18(%rsp)
  0x000000010487a545: mov    %r8,0x20(%rsp)
  0x000000010487a54a: mov    %rbx,0x28(%rsp)
  0x000000010487a54f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop off=13460}
                                                ;*iload
                                                ; - java.io.ObjectStreamClass::matchFields@43 (line 2292)
                                                ;   {runtime_call}
  0x000000010487a554: callq  0x0000000103c85e14  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010487a559: jmp    0x000000010487a5b6
  0x000000010487a55b: jmp    0x000000010487a5b6
  0x000000010487a55d: jmp    0x000000010487a5b6  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a55f: jmp    0x000000010487a5b6  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a561: jmp    0x000000010487a5b6
  0x000000010487a563: jmp    0x000000010487a5b6  ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a565: jmp    0x000000010487a5b6  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a567: jmp    0x000000010487a5b6  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a569: jmp    0x000000010487a5b6  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a56b: jmp    0x000000010487a5b6
  0x000000010487a56d: jmp    0x000000010487a5b6  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a56f: jmp    0x000000010487a5b6  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a571: jmp    0x000000010487a5b6  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a573: jmp    0x000000010487a5b6
  0x000000010487a575: jmp    0x000000010487a5b6
  0x000000010487a577: jmp    0x000000010487a5b6  ;*aload_1
                                                ; - java.lang.Class::getName@19 (line 643)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a579: jmp    0x000000010487a5b6
  0x000000010487a57b: jmp    0x000000010487a5b6  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a57d: jmp    0x000000010487a5b6
  0x000000010487a57f: jmp    0x000000010487a5b6  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a581: jmp    0x000000010487a5b6  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a583: jmp    0x000000010487a5b6
  0x000000010487a585: jmp    0x000000010487a5b6  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a587: jmp    0x000000010487a5b6  ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a589: jmp    0x000000010487a5b6  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x000000010487a58b: jmp    0x000000010487a5b6  ;*aload_1
                                                ; - java.io.ObjectStreamField::getClassSignature@15 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a58d: jmp    0x000000010487a5b6  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@46 (line 2292)

  0x000000010487a58f: mov    %rax,%rsi
  0x000000010487a592: jmp    0x000000010487a5be  ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a594: jmp    0x000000010487a5b6
  0x000000010487a596: jmp    0x000000010487a5b6
  0x000000010487a598: jmp    0x000000010487a5b6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a59a: jmp    0x000000010487a5b6  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010487a59c: jmp    0x000000010487a5b6
  0x000000010487a59e: jmp    0x000000010487a5b6
  0x000000010487a5a0: jmp    0x000000010487a5b6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5a2: jmp    0x000000010487a5b6  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5a4: jmp    0x000000010487a5b6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5a6: jmp    0x000000010487a5b6
  0x000000010487a5a8: jmp    0x000000010487a5b6  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5aa: jmp    0x000000010487a5b6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5ac: jmp    0x000000010487a5b6  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x000000010487a5ae: jmp    0x000000010487a5b6
  0x000000010487a5b0: jmp    0x000000010487a5b6  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010487a5b2: jmp    0x000000010487a5b6  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010487a5b4: jmp    0x000000010487a5b6
  0x000000010487a5b6: mov    %rax,%rsi
  0x000000010487a5b9: jmp    0x000000010487a5be  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010487a5bb: mov    %rax,%rsi
  0x000000010487a5be: add    $0xd0,%rsp
  0x000000010487a5c5: pop    %rbp
  0x000000010487a5c6: jmpq   0x00000001048446e0  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x000000010487a5cb: hlt    
  0x000000010487a5cc: hlt    
  0x000000010487a5cd: hlt    
  0x000000010487a5ce: hlt    
  0x000000010487a5cf: hlt    
  0x000000010487a5d0: hlt    
  0x000000010487a5d1: hlt    
  0x000000010487a5d2: hlt    
  0x000000010487a5d3: hlt    
  0x000000010487a5d4: hlt    
  0x000000010487a5d5: hlt    
  0x000000010487a5d6: hlt    
  0x000000010487a5d7: hlt    
  0x000000010487a5d8: hlt    
  0x000000010487a5d9: hlt    
  0x000000010487a5da: hlt    
  0x000000010487a5db: hlt    
  0x000000010487a5dc: hlt    
  0x000000010487a5dd: hlt    
  0x000000010487a5de: hlt    
  0x000000010487a5df: hlt    
[Stub Code]
  0x000000010487a5e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x000000010487a5ea: jmpq   0x000000010487a5ea  ;   {runtime_call}
  0x000000010487a5ef: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a5f9: jmpq   0x000000010487a5f9  ;   {runtime_call}
  0x000000010487a5fe: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a608: jmpq   0x000000010487a608  ;   {runtime_call}
  0x000000010487a60d: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a617: jmpq   0x000000010487a617  ;   {runtime_call}
  0x000000010487a61c: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a626: jmpq   0x000000010487a626  ;   {runtime_call}
  0x000000010487a62b: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a635: jmpq   0x000000010487a635  ;   {runtime_call}
  0x000000010487a63a: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a644: jmpq   0x000000010487a644  ;   {runtime_call}
  0x000000010487a649: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a653: jmpq   0x000000010487a653  ;   {runtime_call}
  0x000000010487a658: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a662: jmpq   0x000000010487a662  ;   {runtime_call}
  0x000000010487a667: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a671: jmpq   0x000000010487a671  ;   {runtime_call}
  0x000000010487a676: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a680: jmpq   0x000000010487a680  ;   {runtime_call}
  0x000000010487a685: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a68f: jmpq   0x000000010487a68f  ;   {runtime_call}
  0x000000010487a694: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a69e: jmpq   0x000000010487a69e  ;   {runtime_call}
  0x000000010487a6a3: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a6ad: jmpq   0x000000010487a6ad  ;   {runtime_call}
  0x000000010487a6b2: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a6bc: jmpq   0x000000010487a6bc  ;   {runtime_call}
  0x000000010487a6c1: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a6cb: jmpq   0x000000010487a6cb  ;   {runtime_call}
  0x000000010487a6d0: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a6da: jmpq   0x000000010487a6da  ;   {runtime_call}
  0x000000010487a6df: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010487a6e9: jmpq   0x000000010487a6e9  ;   {runtime_call}
[Exception Handler]
  0x000000010487a6ee: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x000000010487a6f3: callq  0x000000010487a6f8
  0x000000010487a6f8: subq   $0x5,(%rsp)
  0x000000010487a6fd: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010487a702: hlt    
  0x000000010487a703: hlt    
  0x000000010487a704: hlt    
  0x000000010487a705: hlt    
  0x000000010487a706: hlt    
  0x000000010487a707: hlt    
<nmethod compile_id='66' compile_kind='osr' compiler='C2' entry='0x00000001048770c0' size='37928' address='0x0000000104876cd0' relocation_offset='296' insts_offset='1008' stub_offset='14608' scopes_data_offset='15152' scopes_pcs_offset='21696' dependencies_offset='36608' handler_table_offset='36632' nul_chk_table_offset='37760' oops_offset='14904' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5006' iicount='24' stamp='0.617'/>
<writer thread='21251'/>
<task_queued compile_id='84' compile_kind='osr' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='1' backedge_count='15690' iicount='1' osr_bci='20' stamp='0.617' comment='backedge_count' hot_count='15690'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104876a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000108e41bc8} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = boolean
  #           [sp+0x20]  (sp of caller)
  0x0000000104876be0: mov    0x8(%rsi),%r10d
  0x0000000104876be4: shl    $0x3,%r10
  0x0000000104876be8: cmp    %r10,%rax
  0x0000000104876beb: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104876bf1: data32 xchg %ax,%ax
  0x0000000104876bf4: nopl   0x0(%rax,%rax,1)
  0x0000000104876bfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104876c00: sub    $0x18,%rsp
  0x0000000104876c07: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)

  0x0000000104876c0c: mov    %rsi,%r10
  0x0000000104876c0f: mov    %rdx,%r8
  0x0000000104876c12: shr    $0x3,%r8
  0x0000000104876c16: mov    %r8d,0xc(%rsi)
  0x0000000104876c1a: shr    $0x9,%r10
  0x0000000104876c1e: movabs $0x104297000,%r11
  0x0000000104876c28: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x0000000104876c2c: add    $0x10,%rsp
  0x0000000104876c30: pop    %rbp
  0x0000000104876c31: test   %eax,-0x208cc37(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104876c37: retq   
  0x0000000104876c38: hlt    
  0x0000000104876c39: hlt    
  0x0000000104876c3a: hlt    
  0x0000000104876c3b: hlt    
  0x0000000104876c3c: hlt    
  0x0000000104876c3d: hlt    
  0x0000000104876c3e: hlt    
  0x0000000104876c3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104876c40: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104876c45: callq  0x0000000104876c4a
  0x0000000104876c4a: subq   $0x5,(%rsp)
  0x0000000104876c4f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104876c54: hlt    
  0x0000000104876c55: hlt    
  0x0000000104876c56: hlt    
  0x0000000104876c57: hlt    
<nmethod compile_id='79' compiler='C2' entry='0x0000000104876be0' size='552' address='0x0000000104876a90' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='480' dependencies_offset='544' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='7222' backedge_count='1' iicount='17223' stamp='0.618'/>
<writer thread='19203'/>
Decoding compiled method 0x0000000104869110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108f31ce0} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000104869260: mov    %eax,-0x14000(%rsp)
  0x0000000104869267: push   %rbp
  0x0000000104869268: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)

  0x000000010486926c: mov    %esi,%eax
  0x000000010486926e: cmp    %edx,%esi
  0x0000000104869270: jl     0x000000010486927e  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)

  0x0000000104869272: add    $0x20,%rsp
  0x0000000104869276: pop    %rbp
  0x0000000104869277: test   %eax,-0x207f27d(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486927d: retq   
  0x000000010486927e: mov    $0xffffff65,%esi
  0x0000000104869283: mov    %eax,0x4(%rsp)
  0x0000000104869287: mov    %edx,0x8(%rsp)
  0x000000010486928b: callq  0x00000001047dc1a0  ; OopMap{off=48}
                                                ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ;   {runtime_call}
  0x0000000104869290: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ;   {runtime_call}
  0x0000000104869295: hlt    
  0x0000000104869296: hlt    
  0x0000000104869297: hlt    
  0x0000000104869298: hlt    
  0x0000000104869299: hlt    
  0x000000010486929a: hlt    
  0x000000010486929b: hlt    
  0x000000010486929c: hlt    
  0x000000010486929d: hlt    
  0x000000010486929e: hlt    
  0x000000010486929f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001048692a0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001048692a5: callq  0x00000001048692aa
  0x00000001048692aa: subq   $0x5,(%rsp)
  0x00000001048692af: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048692b4: hlt    
  0x00000001048692b5: hlt    
  0x00000001048692b6: hlt    
  0x00000001048692b7: hlt    
<nmethod compile_id='80' compiler='C2' entry='0x0000000104869260' size='560' address='0x0000000104869110' relocation_offset='296' insts_offset='336' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='456' dependencies_offset='552' method='java/lang/Math max (II)I' bytes='11' count='6495' backedge_count='1' iicount='16495' stamp='0.619'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104868750:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108ee6360} &apos;toHexString&apos; &apos;(J)Ljava/lang/String;&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  #           [sp+0x50]  (sp of caller)
  0x00000001048688c0: mov    %eax,-0x14000(%rsp)
  0x00000001048688c7: push   %rbp
  0x00000001048688c8: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)

  0x00000001048688cc: mov    %rsi,(%rsp)
  0x00000001048688d0: lzcnt  %rsi,%r11
  0x00000001048688d5: mov    $0x1,%r8d
  0x00000001048688db: mov    $0x43,%r10d
  0x00000001048688e1: sub    %r11d,%r10d        ;*iadd
                                                ; - java.lang.Long::toUnsignedString0@12 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048688e4: mov    %r10d,%ebp
  0x00000001048688e7: sar    $0x1f,%ebp
  0x00000001048688ea: shr    $0x1e,%ebp
  0x00000001048688ed: add    %r10d,%ebp
  0x00000001048688f0: sar    $0x2,%ebp          ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048688f3: cmp    $0x1,%ebp
  0x00000001048688f6: cmovl  %r8d,%ebp          ;*invokestatic max
                                                ; - java.lang.Long::toUnsignedString0@16 (line 355)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048688fa: movslq %ebp,%r11          ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048688fd: cmp    $0x80000,%ebp
  0x0000000104868903: ja     0x0000000104868ba9
  0x0000000104868909: mov    %r11,%rcx
  0x000000010486890c: cmp    $0x80000,%ebp
  0x0000000104868912: ja     0x0000000104868b49
  0x0000000104868918: mov    0x60(%r15),%r9
  0x000000010486891c: shl    %rcx
  0x000000010486891f: add    $0x17,%rcx
  0x0000000104868923: mov    %rcx,%r10
  0x0000000104868926: and    $0xfffffffffffffff8,%r10
  0x000000010486892a: mov    %r9,%r8
  0x000000010486892d: add    %r10,%r8
  0x0000000104868930: cmp    0x70(%r15),%r8
  0x0000000104868934: jae    0x0000000104868b49
  0x000000010486893a: mov    %r8,0x60(%r15)
  0x000000010486893e: prefetchnta 0xc0(%r8)
  0x0000000104868946: movq   $0x1,(%r9)
  0x000000010486894d: prefetchnta 0x100(%r8)
  0x0000000104868955: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x000000010486895d: mov    %ebp,0xc(%r9)
  0x0000000104868961: prefetchnta 0x140(%r8)
  0x0000000104868969: mov    %r9,%rdi
  0x000000010486896c: add    $0x10,%rdi
  0x0000000104868970: prefetchnta 0x180(%r8)
  0x0000000104868978: shr    $0x3,%rcx
  0x000000010486897c: add    $0xfffffffffffffffe,%rcx
  0x0000000104868980: xor    %rax,%rax
  0x0000000104868983: shl    $0x3,%rcx
  0x0000000104868987: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x000000010486898a: mov    %r9,0x8(%rsp)
  0x000000010486898f: mov    %ebp,%r10d
  0x0000000104868992: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868995: mov    (%rsp),%r8
  0x0000000104868999: mov    %r8d,%r8d
  0x000000010486899c: and    $0xf,%r8d
  0x00000001048689a0: movabs $0x76ab2e5d8,%rcx  ;   {oop([C)}
  0x00000001048689aa: movzwl 0x10(%rcx,%r8,2),%r8d  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048689b0: cmp    %ebp,%r10d
  0x00000001048689b3: jae    0x0000000104868b89
  0x00000001048689b9: mov    %r8w,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048689bf: mov    (%rsp),%r11
  0x00000001048689c3: shr    $0x4,%r11          ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048689c7: mov    %r11,%r9
  0x00000001048689ca: test   %r11,%r11
  0x00000001048689cd: jne    0x0000000104868a41  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x00000001048689cf: mov    0x60(%r15),%rax
  0x00000001048689d3: mov    %rax,%r10
  0x00000001048689d6: add    $0x18,%r10
  0x00000001048689da: cmp    0x70(%r15),%r10
  0x00000001048689de: jae    0x0000000104868b6d
  0x00000001048689e4: mov    %r10,0x60(%r15)
  0x00000001048689e8: prefetchnta 0xc0(%r10)
  0x00000001048689f0: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001048689f6: shl    $0x3,%r10
  0x00000001048689fa: mov    0xa8(%r10),%r10
  0x0000000104868a01: mov    %r10,(%rax)
  0x0000000104868a04: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104868a0b: mov    %r12d,0xc(%rax)
  0x0000000104868a0f: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a13: mov    0x8(%rsp),%r10
  0x0000000104868a18: shr    $0x3,%r10
  0x0000000104868a1c: mov    %r10d,0xc(%rax)
  0x0000000104868a20: mov    %rax,%r10
  0x0000000104868a23: shr    $0x9,%r10
  0x0000000104868a27: movabs $0x104297000,%r11
  0x0000000104868a31: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a35: add    $0x40,%rsp
  0x0000000104868a39: pop    %rbp
  0x0000000104868a3a: test   %eax,-0x207ea40(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104868a40: retq   
  0x0000000104868a41: test   %r10d,%r10d
  0x0000000104868a44: jle    0x0000000104868bd9  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a4a: mov    %r11d,%r11d
  0x0000000104868a4d: and    $0xf,%r11d
  0x0000000104868a51: movzwl 0x10(%rcx,%r11,2),%r8d  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a57: mov    %r10d,%edi
  0x0000000104868a5a: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a5c: cmp    %ebp,%edi
  0x0000000104868a5e: jae    0x0000000104868bb1
  0x0000000104868a64: mov    0x8(%rsp),%r11
  0x0000000104868a69: mov    %r8w,0xe(%r11,%r10,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a6f: shr    $0x4,%r9           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a73: test   %r9,%r9
  0x0000000104868a76: je     0x00000001048689cf  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a7c: mov    %ebp,%r8d
  0x0000000104868a7f: add    $0xfffffffffffffffe,%r8d
  0x0000000104868a83: mov    %r9d,%r11d
  0x0000000104868a86: and    $0xf,%r11d         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a8a: lea    0x10(%rcx,%r11,2),%r10  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a8f: xor    %r11d,%r11d
  0x0000000104868a92: cmp    %r11d,%r8d
  0x0000000104868a95: cmovl  %r11d,%r8d
  0x0000000104868a99: cmp    %r8d,%edi
  0x0000000104868a9c: jle    0x0000000104868aa7  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868a9e: movzwl (%r10),%r8d
  0x0000000104868aa2: mov    %edi,%r10d
  0x0000000104868aa5: jmp    0x0000000104868a57
  0x0000000104868aa7: test   %edi,%edi
  0x0000000104868aa9: jle    0x0000000104868afe
  0x0000000104868aab: movzwl (%r10),%r11d
  0x0000000104868aaf: jmp    0x0000000104868ad4
  0x0000000104868ab1: data32 xchg %ax,%ax
  0x0000000104868ab4: mov    %r11d,%r11d
  0x0000000104868ab7: and    $0xf,%r11d
  0x0000000104868abb: movzwl 0x10(%rcx,%r11,2),%r8d
  0x0000000104868ac1: mov    %r10d,%edi
  0x0000000104868ac4: jmp    0x0000000104868b06
  0x0000000104868ac6: data32 nopw 0x0(%rax,%rax,1)
  0x0000000104868ad0: movzwl (%r10),%r11d
  0x0000000104868ad4: mov    0x8(%rsp),%r10
  0x0000000104868ad9: mov    %r11w,0xe(%r10,%rdi,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868adf: shr    $0x4,%r9           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868ae3: test   %r9,%r9
  0x0000000104868ae6: je     0x00000001048689cf  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868aec: mov    %r9d,%r10d
  0x0000000104868aef: and    $0xf,%r10d
  0x0000000104868af3: lea    0x10(%rcx,%r10,2),%r10  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868af8: dec    %edi               ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868afa: test   %edi,%edi
  0x0000000104868afc: jg     0x0000000104868ad0  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868afe: test   %edi,%edi
  0x0000000104868b00: jle    0x0000000104868b3e
  0x0000000104868b02: movzwl (%r10),%r8d        ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b06: mov    %edi,%r10d
  0x0000000104868b09: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b0c: cmp    %ebp,%r10d
  0x0000000104868b0f: jae    0x0000000104868bf1
  0x0000000104868b15: mov    0x8(%rsp),%r11
  0x0000000104868b1a: mov    %r8w,0xe(%r11,%rdi,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b20: mov    %r9,%r11
  0x0000000104868b23: shr    $0x4,%r11          ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b27: mov    %r11,%r9
  0x0000000104868b2a: test   %r11,%r11
  0x0000000104868b2d: je     0x00000001048689cf  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b33: test   %r10d,%r10d
  0x0000000104868b36: jg     0x0000000104868ab4  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b3c: jmp    0x0000000104868b41
  0x0000000104868b3e: mov    %edi,%r10d
  0x0000000104868b41: mov    %r9,%rbp
  0x0000000104868b44: jmpq   0x0000000104868bdc
  0x0000000104868b49: mov    %r11,0x8(%rsp)
  0x0000000104868b4e: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104868b58: mov    %ebp,%edx
  0x0000000104868b5a: nop
  0x0000000104868b5b: callq  0x0000000104846a60  ; OopMap{off=672}
                                                ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868b60: mov    0x8(%rsp),%r11
  0x0000000104868b65: mov    %rax,%r9
  0x0000000104868b68: jmpq   0x000000010486898a  ;*invokestatic formatUnsignedLong
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868b6d: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104868b77: mov    0x8(%rsp),%rbp
  0x0000000104868b7c: data32 xchg %ax,%ax
  0x0000000104868b7f: callq  0x0000000104846960  ; OopMap{rbp=Oop [8]=Oop off=708}
                                                ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868b84: jmpq   0x0000000104868a13
  0x0000000104868b89: mov    $0xffffffe4,%esi
  0x0000000104868b8e: mov    %r9,0x18(%rsp)
  0x0000000104868b93: mov    %r10d,0x14(%rsp)
  0x0000000104868b98: mov    %r8d,0x20(%rsp)
  0x0000000104868b9d: xchg   %ax,%ax
  0x0000000104868b9f: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [24]=Oop off=740}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868ba4: callq  0x0000000103c85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868ba9: movslq %ebp,%rcx          ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868bac: jmpq   0x000000010486890c
  0x0000000104868bb1: mov    %edi,%r10d
  0x0000000104868bb4: mov    %r9,%rbp
  0x0000000104868bb7: mov    $0xffffffe4,%esi
  0x0000000104868bbc: rex.W pushq 0x8(%rsp)
  0x0000000104868bc1: rex.W popq (%rsp)
  0x0000000104868bc5: mov    %r10d,0x14(%rsp)
  0x0000000104868bca: mov    %r8d,0x20(%rsp)
  0x0000000104868bcf: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=788}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868bd4: callq  0x0000000103c85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868bd9: mov    %r11,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868bdc: mov    $0xffffff65,%esi
  0x0000000104868be1: mov    %r10d,0x14(%rsp)
  0x0000000104868be6: nop
  0x0000000104868be7: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=812}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868bec: callq  0x0000000103c85e14  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ;   {runtime_call}
  0x0000000104868bf1: mov    %r9,%rbp
  0x0000000104868bf4: jmp    0x0000000104868bb7  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ; - java.lang.Long::toHexString@2 (line 272)

  0x0000000104868bf6: mov    %rax,%rsi
  0x0000000104868bf9: jmp    0x0000000104868bfe
  0x0000000104868bfb: mov    %rax,%rsi          ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)

  0x0000000104868bfe: add    $0x40,%rsp
  0x0000000104868c02: pop    %rbp
  0x0000000104868c03: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104868c08: hlt    
  0x0000000104868c09: hlt    
  0x0000000104868c0a: hlt    
  0x0000000104868c0b: hlt    
  0x0000000104868c0c: hlt    
  0x0000000104868c0d: hlt    
  0x0000000104868c0e: hlt    
  0x0000000104868c0f: hlt    
  0x0000000104868c10: hlt    
  0x0000000104868c11: hlt    
  0x0000000104868c12: hlt    
  0x0000000104868c13: hlt    
  0x0000000104868c14: hlt    
  0x0000000104868c15: hlt    
  0x0000000104868c16: hlt    
  0x0000000104868c17: hlt    
  0x0000000104868c18: hlt    
  0x0000000104868c19: hlt    
  0x0000000104868c1a: hlt    
  0x0000000104868c1b: hlt    
  0x0000000104868c1c: hlt    
  0x0000000104868c1d: hlt    
  0x0000000104868c1e: hlt    
  0x0000000104868c1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104868c20: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104868c25: callq  0x0000000104868c2a
  0x0000000104868c2a: subq   $0x5,(%rsp)
  0x0000000104868c2f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104868c34: hlt    
  0x0000000104868c35: hlt    
  0x0000000104868c36: hlt    
  0x0000000104868c37: hlt    
<nmethod compile_id='81' compiler='C2' entry='0x00000001048688c0' size='2456' address='0x0000000104868750' relocation_offset='296' insts_offset='368' stub_offset='1232' scopes_data_offset='1296' scopes_pcs_offset='1616' dependencies_offset='2400' handler_table_offset='2408' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='6101' backedge_count='1' iicount='156074' stamp='0.697'/>
<writer thread='19203'/>
Decoding compiled method 0x000000010486e290:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108ee6558} &apos;toUnsignedString0&apos; &apos;(JI)Ljava/lang/String;&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  # parm1:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010486e400: mov    %eax,-0x14000(%rsp)
  0x000000010486e407: push   %rbp
  0x000000010486e408: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)

  0x000000010486e40c: mov    %edx,0x10(%rsp)
  0x000000010486e410: mov    %rsi,0x8(%rsp)
  0x000000010486e415: lzcnt  %rsi,%r10
  0x000000010486e41a: mov    $0x40,%eax
  0x000000010486e41f: sub    %r10d,%eax
  0x000000010486e422: add    %edx,%eax
  0x000000010486e424: dec    %eax               ;*iadd
                                                ; - java.lang.Long::toUnsignedString0@12 (line 355)

  0x000000010486e426: test   %edx,%edx
  0x000000010486e428: je     0x000000010486e6a9
  0x000000010486e42e: mov    %edx,%r10d
  0x000000010486e431: cmp    $0x80000000,%eax
  0x000000010486e436: jne    0x000000010486e440
  0x000000010486e438: xor    %edx,%edx
  0x000000010486e43a: cmp    $0xffffffffffffffff,%r10d
  0x000000010486e43e: je     0x000000010486e444
  0x000000010486e440: cltd   
  0x000000010486e441: idiv   %r10d              ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)

  0x000000010486e444: cmp    $0x1,%eax
  0x000000010486e447: mov    $0x1,%r10d
  0x000000010486e44d: cmovl  %r10d,%eax         ;*invokestatic max
                                                ; - java.lang.Long::toUnsignedString0@16 (line 355)

  0x000000010486e451: mov    %eax,(%rsp)
  0x000000010486e454: movslq %eax,%rbp          ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e457: cmp    $0x80000,%eax
  0x000000010486e45d: ja     0x000000010486e6ed
  0x000000010486e463: mov    %rbp,%rcx
  0x000000010486e466: cmp    $0x80000,%eax
  0x000000010486e46c: ja     0x000000010486e674
  0x000000010486e472: mov    0x60(%r15),%r9
  0x000000010486e476: shl    %rcx
  0x000000010486e479: add    $0x17,%rcx
  0x000000010486e47d: mov    %rcx,%r10
  0x000000010486e480: and    $0xfffffffffffffff8,%r10
  0x000000010486e484: mov    %r9,%r11
  0x000000010486e487: add    %r10,%r11
  0x000000010486e48a: cmp    0x70(%r15),%r11
  0x000000010486e48e: jae    0x000000010486e674
  0x000000010486e494: mov    %r11,0x60(%r15)
  0x000000010486e498: prefetchnta 0xc0(%r11)
  0x000000010486e4a0: movq   $0x1,(%r9)
  0x000000010486e4a7: prefetchnta 0x100(%r11)
  0x000000010486e4af: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x000000010486e4b7: mov    %eax,0xc(%r9)
  0x000000010486e4bb: prefetchnta 0x140(%r11)
  0x000000010486e4c3: mov    %r9,%rdi
  0x000000010486e4c6: add    $0x10,%rdi
  0x000000010486e4ca: prefetchnta 0x180(%r11)
  0x000000010486e4d2: shr    $0x3,%rcx
  0x000000010486e4d6: add    $0xfffffffffffffffe,%rcx
  0x000000010486e4da: xor    %rax,%rax
  0x000000010486e4dd: shl    $0x3,%rcx
  0x000000010486e4e1: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010486e4e4: mov    %r9,0x28(%rsp)
  0x000000010486e4e9: mov    $0x1,%r8d
  0x000000010486e4ef: mov    0x10(%rsp),%ecx
  0x000000010486e4f3: shl    %cl,%r8d
  0x000000010486e4f6: mov    0x8(%rsp),%r10
  0x000000010486e4fb: mov    %r10d,%r10d
  0x000000010486e4fe: dec    %r8d               ;*isub
                                                ; - java.lang.Long::formatUnsignedLong@12 (line 374)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e501: and    %r8d,%r10d         ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e504: mov    (%rsp),%r11d
  0x000000010486e508: dec    %r11d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e50b: cmp    $0x24,%r10d
  0x000000010486e50f: jae    0x000000010486e6bd
  0x000000010486e515: movabs $0x76ab2e5d8,%rbx  ;   {oop([C)}
  0x000000010486e51f: movzwl 0x10(%rbx,%r10,2),%r10d  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e525: cmp    (%rsp),%r11d
  0x000000010486e529: jae    0x000000010486e6f5
  0x000000010486e52f: mov    %r10w,0xe(%r9,%rbp,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e535: mov    0x8(%rsp),%rdi
  0x000000010486e53a: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e53d: test   %rdi,%rdi
  0x000000010486e540: jne    0x000000010486e5b4  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e542: mov    0x60(%r15),%rax
  0x000000010486e546: mov    %rax,%r10
  0x000000010486e549: add    $0x18,%r10
  0x000000010486e54d: cmp    0x70(%r15),%r10
  0x000000010486e551: jae    0x000000010486e690
  0x000000010486e557: mov    %r10,0x60(%r15)
  0x000000010486e55b: prefetchnta 0xc0(%r10)
  0x000000010486e563: mov    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010486e569: shl    $0x3,%r10
  0x000000010486e56d: mov    0xa8(%r10),%r10
  0x000000010486e574: mov    %r10,(%rax)
  0x000000010486e577: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010486e57e: mov    %r12d,0xc(%rax)
  0x000000010486e582: mov    %r12,0x10(%rax)    ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)

  0x000000010486e586: mov    0x28(%rsp),%r10
  0x000000010486e58b: shr    $0x3,%r10
  0x000000010486e58f: mov    %r10d,0xc(%rax)
  0x000000010486e593: mov    %rax,%r10
  0x000000010486e596: shr    $0x9,%r10
  0x000000010486e59a: movabs $0x104297000,%r11
  0x000000010486e5a4: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.Long::toUnsignedString0@-1 (line 354)

  0x000000010486e5a8: add    $0x40,%rsp
  0x000000010486e5ac: pop    %rbp
  0x000000010486e5ad: test   %eax,-0x20845b3(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x000000010486e5b3: retq   
  0x000000010486e5b4: test   %r11d,%r11d
  0x000000010486e5b7: jle    0x000000010486e7e5  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5bd: mov    %edi,%r9d
  0x000000010486e5c0: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5c3: mov    %r11d,%r10d
  0x000000010486e5c6: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5c9: cmp    $0x24,%r9d
  0x000000010486e5cd: jae    0x000000010486e725
  0x000000010486e5d3: movzwl 0x10(%rbx,%r9,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5d9: cmp    (%rsp),%r10d
  0x000000010486e5dd: jae    0x000000010486e75d
  0x000000010486e5e3: mov    0x28(%rsp),%r9
  0x000000010486e5e8: mov    %bp,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5ee: mov    0x10(%rsp),%ecx
  0x000000010486e5f2: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5f5: test   %rdi,%rdi
  0x000000010486e5f8: je     0x000000010486e542  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e5fe: mov    (%rsp),%r11d
  0x000000010486e602: add    $0xfffffffffffffffe,%r11d
  0x000000010486e606: xor    %r9d,%r9d
  0x000000010486e609: cmp    %r9d,%r11d
  0x000000010486e60c: cmovl  %r9d,%r11d
  0x000000010486e610: cmp    %r11d,%r10d
  0x000000010486e613: jle    0x000000010486e61a  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e615: mov    %r10d,%r11d
  0x000000010486e618: jmp    0x000000010486e5bd
  0x000000010486e61a: test   %r10d,%r10d
  0x000000010486e61d: jle    0x000000010486e78d
  0x000000010486e623: jmp    0x000000010486e633
  0x000000010486e625: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010486e630: mov    %r11d,%r10d        ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e633: mov    %edi,%r9d
  0x000000010486e636: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e639: mov    %r10d,%r11d
  0x000000010486e63c: dec    %r11d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e63f: cmp    $0x24,%r9d
  0x000000010486e643: jae    0x000000010486e728  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e649: movzwl 0x10(%rbx,%r9,2),%r9d
  0x000000010486e64f: mov    0x28(%rsp),%rcx
  0x000000010486e654: mov    %r9w,0xe(%rcx,%r10,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e65a: mov    0x10(%rsp),%ecx
  0x000000010486e65e: shr    %cl,%rdi           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e661: test   %rdi,%rdi
  0x000000010486e664: je     0x000000010486e542  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e66a: test   %r11d,%r11d
  0x000000010486e66d: jg     0x000000010486e630  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e66f: jmpq   0x000000010486e790
  0x000000010486e674: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010486e67e: mov    %eax,%edx
  0x000000010486e680: data32 xchg %ax,%ax
  0x000000010486e683: callq  0x0000000104846a60  ; OopMap{off=648}
                                                ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)
                                                ;   {runtime_call}
  0x000000010486e688: mov    %rax,%r9
  0x000000010486e68b: jmpq   0x000000010486e4e4  ;*invokestatic formatUnsignedLong
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e690: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000010486e69a: mov    0x28(%rsp),%rbp
  0x000000010486e69f: callq  0x0000000104846960  ; OopMap{rbp=Oop [40]=Oop off=676}
                                                ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)
                                                ;   {runtime_call}
  0x000000010486e6a4: jmpq   0x000000010486e586
  0x000000010486e6a9: mov    $0xffffff96,%esi
  0x000000010486e6ae: mov    %eax,%ebp
  0x000000010486e6b0: data32 xchg %ax,%ax
  0x000000010486e6b3: callq  0x00000001047dc1a0  ; OopMap{off=696}
                                                ;*idiv
                                                ; - java.lang.Long::toUnsignedString0@14 (line 355)
                                                ;   {runtime_call}
  0x000000010486e6b8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486e6bd: mov    $0xffffffe4,%esi
  0x000000010486e6c2: mov    %r9,%rbp
  0x000000010486e6c5: mov    0x8(%rsp),%r9
  0x000000010486e6ca: mov    %r9,(%rsp)
  0x000000010486e6ce: mov    %ecx,0x8(%rsp)
  0x000000010486e6d2: mov    %r8d,0x18(%rsp)
  0x000000010486e6d7: mov    %r11d,0x1c(%rsp)
  0x000000010486e6dc: mov    %r10d,0x28(%rsp)
  0x000000010486e6e1: xchg   %ax,%ax
  0x000000010486e6e3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=744}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e6e8: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e6ed: movslq %eax,%rcx          ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010486e6f0: jmpq   0x000000010486e466
  0x000000010486e6f5: mov    $0xffffffe4,%esi
  0x000000010486e6fa: mov    %r9,%rbp
  0x000000010486e6fd: mov    0x8(%rsp),%r9
  0x000000010486e702: mov    %r9,(%rsp)
  0x000000010486e706: mov    %ecx,0x8(%rsp)
  0x000000010486e70a: mov    %r8d,0x18(%rsp)
  0x000000010486e70f: mov    %r11d,0x1c(%rsp)
  0x000000010486e714: mov    %r10d,0x28(%rsp)
  0x000000010486e719: xchg   %ax,%ax
  0x000000010486e71b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=800}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e720: callq  0x0000000103c85e14  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e725: mov    %r10d,%r11d
  0x000000010486e728: mov    %r11d,%r10d
  0x000000010486e72b: mov    %rdi,%rbp
  0x000000010486e72e: mov    $0xffffffe4,%esi
  0x000000010486e733: rex.W pushq 0x28(%rsp)
  0x000000010486e738: rex.W popq (%rsp)
  0x000000010486e73c: mov    0x10(%rsp),%ecx
  0x000000010486e740: mov    %ecx,0x8(%rsp)
  0x000000010486e744: mov    %r8d,0x18(%rsp)
  0x000000010486e749: mov    %r10d,0x1c(%rsp)
  0x000000010486e74e: mov    %r9d,0x28(%rsp)
  0x000000010486e753: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=856}
                                                ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e758: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e75d: mov    %rdi,(%rsp)
  0x000000010486e761: mov    $0xffffffe4,%esi
  0x000000010486e766: rex.W pushq 0x28(%rsp)
  0x000000010486e76b: rex.W popq 0x8(%rsp)
  0x000000010486e770: mov    %r8d,0x20(%rsp)
  0x000000010486e775: mov    %r10d,0x24(%rsp)
  0x000000010486e77a: nop
  0x000000010486e77b: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop off=896}
                                                ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e780: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010486e785: data32 xchg %ax,%ax
  0x000000010486e788: mov    %r10d,%r11d
  0x000000010486e78b: jmp    0x000000010486e795
  0x000000010486e78d: mov    %r10d,%r11d
  0x000000010486e790: test   %r11d,%r11d
  0x000000010486e793: jle    0x000000010486e7dd  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e795: mov    %edi,%r9d
  0x000000010486e798: and    %r8d,%r9d          ;*iand
                                                ; - java.lang.Long::formatUnsignedLong@31 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e79b: mov    %r11d,%r10d
  0x000000010486e79e: dec    %r10d              ;*iinc
                                                ; - java.lang.Long::formatUnsignedLong@18 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7a1: cmp    $0x24,%r9d
  0x000000010486e7a5: jae    0x000000010486e819
  0x000000010486e7a7: movzwl 0x10(%rbx,%r9,2),%ebp  ;*caload
                                                ; - java.lang.Long::formatUnsignedLong@32 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7ad: mov    (%rsp),%ecx
  0x000000010486e7b0: cmp    %ecx,%r10d
  0x000000010486e7b3: jae    0x000000010486e821
  0x000000010486e7b5: mov    0x28(%rsp),%r9
  0x000000010486e7ba: mov    %bp,0xe(%r9,%r11,2)  ;*castore
                                                ; - java.lang.Long::formatUnsignedLong@33 (line 376)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7c0: mov    0x10(%rsp),%ecx
  0x000000010486e7c4: mov    %rdi,%r11
  0x000000010486e7c7: shr    %cl,%r11           ;*lushr
                                                ; - java.lang.Long::formatUnsignedLong@36 (line 377)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7ca: mov    %r11,%rdi
  0x000000010486e7cd: test   %r11,%r11
  0x000000010486e7d0: je     0x000000010486e542  ;*ifeq
                                                ; - java.lang.Long::formatUnsignedLong@41 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7d6: test   %r10d,%r10d
  0x000000010486e7d9: jg     0x000000010486e788  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7db: jmp    0x000000010486e7e0
  0x000000010486e7dd: mov    %r11d,%r10d
  0x000000010486e7e0: mov    %rdi,%rbp
  0x000000010486e7e3: jmp    0x000000010486e7eb
  0x000000010486e7e5: mov    %r11d,%r10d
  0x000000010486e7e8: mov    %rdi,%rbp          ;*iload
                                                ; - java.lang.Long::formatUnsignedLong@44 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)

  0x000000010486e7eb: mov    $0xffffff65,%esi
  0x000000010486e7f0: rex.W pushq 0x28(%rsp)
  0x000000010486e7f5: rex.W popq (%rsp)
  0x000000010486e7f9: mov    0x10(%rsp),%r11d
  0x000000010486e7fe: mov    %r11d,0x8(%rsp)
  0x000000010486e803: mov    %r8d,0x18(%rsp)
  0x000000010486e808: mov    %r10d,0x1c(%rsp)
  0x000000010486e80d: xchg   %ax,%ax
  0x000000010486e80f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=1044}
                                                ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e814: callq  0x0000000103c85e14  ;*ifgt
                                                ; - java.lang.Long::formatUnsignedLong@46 (line 378)
                                                ; - java.lang.Long::toUnsignedString0@34 (line 358)
                                                ;   {runtime_call}
  0x000000010486e819: mov    %rdi,%rbp
  0x000000010486e81c: jmpq   0x000000010486e72e
  0x000000010486e821: mov    %rdi,(%rsp)
  0x000000010486e825: jmpq   0x000000010486e761  ;*newarray
                                                ; - java.lang.Long::toUnsignedString0@23 (line 356)

  0x000000010486e82a: mov    %rax,%rsi
  0x000000010486e82d: jmp    0x000000010486e832
  0x000000010486e82f: mov    %rax,%rsi          ;*new  ; - java.lang.Long::toUnsignedString0@38 (line 359)

  0x000000010486e832: add    $0x40,%rsp
  0x000000010486e836: pop    %rbp
  0x000000010486e837: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x000000010486e83c: hlt    
  0x000000010486e83d: hlt    
  0x000000010486e83e: hlt    
  0x000000010486e83f: hlt    
[Exception Handler]
[Stub Code]
  0x000000010486e840: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010486e845: callq  0x000000010486e84a
  0x000000010486e84a: subq   $0x5,(%rsp)
  0x000000010486e84f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x000000010486e854: hlt    
  0x000000010486e855: hlt    
  0x000000010486e856: hlt    
  0x000000010486e857: hlt    
<nmethod compile_id='82' compiler='C2' entry='0x000000010486e400' size='2864' address='0x000000010486e290' relocation_offset='296' insts_offset='368' stub_offset='1456' scopes_data_offset='1520' scopes_pcs_offset='1880' dependencies_offset='2808' handler_table_offset='2816' oops_offset='1480' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='6117' backedge_count='1' iicount='156088' stamp='0.702'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104868250:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108ee80f0} &apos;numberOfLeadingZeros&apos; &apos;(J)I&apos; in &apos;java/lang/Long&apos;
  # parm0:    rsi:rsi   = long
  #           [sp+0x30]  (sp of caller)
  0x00000001048683a0: mov    %eax,-0x14000(%rsp)
  0x00000001048683a7: push   %rbp
  0x00000001048683a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Long::numberOfLeadingZeros@-1 (line 1418)

  0x00000001048683ac: test   %rsi,%rsi
  0x00000001048683af: je     0x000000010486844d  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)

  0x00000001048683b5: mov    %rsi,%r10
  0x00000001048683b8: shr    $0x20,%r10
  0x00000001048683bc: mov    %r10d,%ebp         ;*l2i  ; - java.lang.Long::numberOfLeadingZeros@15 (line 1421)

  0x00000001048683bf: test   %ebp,%ebp
  0x00000001048683c1: jne    0x0000000104868424  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)

  0x00000001048683c3: mov    %esi,%r8d          ;*l2i  ; - java.lang.Long::numberOfLeadingZeros@25 (line 1422)

  0x00000001048683c6: mov    %r8d,%ebp
  0x00000001048683c9: shr    $0x10,%ebp         ;*iushr
                                                ; - java.lang.Long::numberOfLeadingZeros@30 (line 1423)

  0x00000001048683cc: test   %ebp,%ebp
  0x00000001048683ce: jne    0x0000000104868439  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)

  0x00000001048683d0: shl    $0x10,%r8d         ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@40 (line 1423)

  0x00000001048683d4: mov    %r8d,%ebp
  0x00000001048683d7: shr    $0x18,%ebp         ;*iushr
                                                ; - java.lang.Long::numberOfLeadingZeros@45 (line 1424)

  0x00000001048683da: test   %ebp,%ebp
  0x00000001048683dc: je     0x0000000104868475  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)

  0x00000001048683e2: mov    %r8d,%r10d
  0x00000001048683e5: shr    $0x1c,%r10d
  0x00000001048683e9: test   %r10d,%r10d
  0x00000001048683ec: jne    0x00000001048683f9  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@61 (line 1425)

  0x00000001048683ee: shl    $0x4,%r8d          ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@69 (line 1425)

  0x00000001048683f2: mov    $0x35,%eax
  0x00000001048683f7: jmp    0x00000001048683fe
  0x00000001048683f9: mov    $0x31,%eax         ;*iload_3
                                                ; - java.lang.Long::numberOfLeadingZeros@71 (line 1426)

  0x00000001048683fe: mov    %r8d,%r11d
  0x0000000104868401: shr    $0x1e,%r11d
  0x0000000104868405: test   %r11d,%r11d
  0x0000000104868408: jne    0x0000000104868411  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@75 (line 1426)

  0x000000010486840a: shl    $0x2,%r8d          ;*ishl
                                                ; - java.lang.Long::numberOfLeadingZeros@83 (line 1426)

  0x000000010486840e: add    $0x2,%eax          ;*iload_2
                                                ; - java.lang.Long::numberOfLeadingZeros@85 (line 1427)

  0x0000000104868411: shr    $0x1f,%r8d
  0x0000000104868415: sub    %r8d,%eax          ;*isub
                                                ; - java.lang.Long::numberOfLeadingZeros@90 (line 1427)

  0x0000000104868418: add    $0x20,%rsp
  0x000000010486841c: pop    %rbp
  0x000000010486841d: test   %eax,-0x207e423(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104868423: retq   
  0x0000000104868424: mov    %rsi,(%rsp)
  0x0000000104868428: mov    $0xffffff65,%esi
  0x000000010486842d: xchg   %ax,%ax
  0x000000010486842f: callq  0x00000001047dc1a0  ; OopMap{off=148}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)
                                                ;   {runtime_call}
  0x0000000104868434: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@18 (line 1422)
                                                ;   {runtime_call}
  0x0000000104868439: mov    $0xffffff65,%esi
  0x000000010486843e: mov    %r8d,(%rsp)
  0x0000000104868442: nop
  0x0000000104868443: callq  0x00000001047dc1a0  ; OopMap{off=168}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)
                                                ;   {runtime_call}
  0x0000000104868448: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@31 (line 1423)
                                                ;   {runtime_call}
  0x000000010486844d: xor    %r10d,%r10d
  0x0000000104868450: cmp    %r10,%rsi
  0x0000000104868453: mov    $0xffffffff,%ebp
  0x0000000104868458: jl     0x0000000104868462
  0x000000010486845a: setne  %bpl
  0x000000010486845e: movzbl %bpl,%ebp          ;*lcmp
                                                ; - java.lang.Long::numberOfLeadingZeros@2 (line 1418)

  0x0000000104868462: mov    %rsi,(%rsp)
  0x0000000104868466: mov    $0xffffff65,%esi
  0x000000010486846b: callq  0x00000001047dc1a0  ; OopMap{off=208}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)
                                                ;   {runtime_call}
  0x0000000104868470: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@3 (line 1418)
                                                ;   {runtime_call}
  0x0000000104868475: mov    $0xffffff65,%esi
  0x000000010486847a: mov    %r8d,(%rsp)
  0x000000010486847e: nop
  0x000000010486847f: callq  0x00000001047dc1a0  ; OopMap{off=228}
                                                ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)
                                                ;   {runtime_call}
  0x0000000104868484: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.lang.Long::numberOfLeadingZeros@46 (line 1424)
                                                ;   {runtime_call}
  0x0000000104868489: hlt    
  0x000000010486848a: hlt    
  0x000000010486848b: hlt    
  0x000000010486848c: hlt    
  0x000000010486848d: hlt    
  0x000000010486848e: hlt    
  0x000000010486848f: hlt    
  0x0000000104868490: hlt    
  0x0000000104868491: hlt    
  0x0000000104868492: hlt    
  0x0000000104868493: hlt    
  0x0000000104868494: hlt    
  0x0000000104868495: hlt    
  0x0000000104868496: hlt    
  0x0000000104868497: hlt    
  0x0000000104868498: hlt    
  0x0000000104868499: hlt    
  0x000000010486849a: hlt    
  0x000000010486849b: hlt    
  0x000000010486849c: hlt    
  0x000000010486849d: hlt    
  0x000000010486849e: hlt    
  0x000000010486849f: hlt    
[Exception Handler]
[Stub Code]
  0x00000001048684a0: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001048684a5: callq  0x00000001048684aa
  0x00000001048684aa: subq   $0x5,(%rsp)
  0x00000001048684af: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x00000001048684b4: hlt    
  0x00000001048684b5: hlt    
  0x00000001048684b6: hlt    
  0x00000001048684b7: hlt    
<nmethod compile_id='83' compiler='C2' entry='0x00000001048683a0' size='1256' address='0x0000000104868250' relocation_offset='296' insts_offset='336' stub_offset='592' scopes_data_offset='624' scopes_pcs_offset='800' dependencies_offset='1248' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='6117' backedge_count='1' iicount='156088' stamp='0.703'/>
<writer thread='19203'/>
Decoding compiled method 0x0000000104871090:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092ce9c0} &apos;setUp&apos; &apos;()V&apos; in &apos;org/github/arnaudroger/CsvContent&apos;
  0x00000001048712a0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048712a5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001048712b0: mov    %eax,-0x14000(%rsp)
  0x00000001048712b7: push   %rbp
  0x00000001048712b8: sub    $0x90,%rsp
  0x00000001048712bf: mov    (%rsi),%ebp
  0x00000001048712c1: mov    0x18(%rsi),%rbx
  0x00000001048712c5: mov    0x10(%rsi),%r14
  0x00000001048712c9: mov    0x8(%rsi),%r13d
  0x00000001048712cd: mov    %rsi,%rdi
  0x00000001048712d0: movabs $0x103ce473e,%r10
  0x00000001048712da: callq  *%r10
  0x00000001048712dd: test   %rbx,%rbx
  0x00000001048712e0: je     0x0000000104871e47
  0x00000001048712e6: mov    0x8(%rbx),%r10d
  0x00000001048712ea: shl    $0x3,%r10
  0x00000001048712ee: mov    0x30(%r10),%r10
  0x00000001048712f2: movabs $0x7c00a6180,%r11  ;   {metadata(&apos;org/github/arnaudroger/CsvContent&apos;)}
  0x00000001048712fc: cmp    %r11,%r10
  0x00000001048712ff: jne    0x0000000104871e4f
  0x0000000104871305: mov    %rbx,%r8
  0x0000000104871308: mov    0x8(%r14),%r11d    ; implicit exception: dispatches to 0x0000000104871f11
  0x000000010487130c: cmp    $0xf8001b4b,%r11d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104871313: jne    0x0000000104871e4f
  0x0000000104871319: mov    %r14,%r9           ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x000000010487131c: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871326: movabs $0x76ab576e8,%rcx  ;   {oop([C)}
  0x0000000104871330: add    $0x10,%rcx         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871334: movabs $0x76b18c758,%r10  ;   {oop([C)}
  0x000000010487133e: movabs $0x76b18c758,%rbx  ;   {oop([C)}
  0x0000000104871348: add    $0x10,%rbx         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010487134c: jmpq   0x0000000104871944
  0x0000000104871351: mov    %r11d,0x60(%rsp)
  0x0000000104871356: mov    %edi,0x34(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487135a: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104871364: mov    0x30(%rsp),%edx
  0x0000000104871368: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871372: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x000000010487137c: mov    %r10,0x68(%rsp)
  0x0000000104871381: xchg   %ax,%ax
  0x0000000104871383: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[104] [32]=Derived_oop_rbp [52]=NarrowOop [56]=Oop [104]=Oop off=232}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871388: mov    %rax,%r9
  0x000000010487138b: mov    0x34(%rsp),%edi
  0x000000010487138f: mov    0x60(%rsp),%r11d
  0x0000000104871394: jmpq   0x000000010487158c
  0x0000000104871399: movslq %r9d,%rdx
  0x000000010487139c: mov    %rdx,%r8
  0x000000010487139f: shl    %r8
  0x00000001048713a2: add    $0x10,%r8
  0x00000001048713a6: mov    %r8,%r9
  0x00000001048713a9: and    $0xfffffffffffffff9,%r9
  0x00000001048713ad: mov    0x40(%rsp),%rdi
  0x00000001048713b2: add    %r9,%rdi
  0x00000001048713b5: shr    $0x3,%r8
  0x00000001048713b9: sub    %r8,%r10
  0x00000001048713bc: mov    %r10,%rcx
  0x00000001048713bf: xor    %rax,%rax
  0x00000001048713c2: shl    $0x3,%rcx
  0x00000001048713c6: rep rex.W stos %al,%es:(%rdi)
  0x00000001048713c9: mov    %r11,%rdi
  0x00000001048713cc: movabs $0x1048294c0,%r10
  0x00000001048713d6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048713d9: jmpq   0x0000000104871b3c
  0x00000001048713de: mov    %r11d,0x70(%rsp)
  0x00000001048713e3: mov    %ebx,0x3c(%rsp)
  0x00000001048713e7: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x00000001048713f1: mov    0x30(%rsp),%edx
  0x00000001048713f5: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x00000001048713ff: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871409: mov    %r10,0x78(%rsp)
  0x000000010487140e: nop
  0x000000010487140f: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[120] [32]=Derived_oop_rbp [40]=Oop [60]=NarrowOop [64]=Oop [120]=Oop off=372}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871414: mov    %rax,%r8
  0x0000000104871417: mov    0x3c(%rsp),%ebx
  0x000000010487141b: mov    0x70(%rsp),%r11d
  0x0000000104871420: jmpq   0x00000001048717f1
  0x0000000104871425: movslq %r9d,%rdx
  0x0000000104871428: mov    %rdx,%r11
  0x000000010487142b: shl    %r11
  0x000000010487142e: add    $0x10,%r11
  0x0000000104871432: mov    %r11,%r8
  0x0000000104871435: and    $0xfffffffffffffff9,%r8
  0x0000000104871439: mov    0x28(%rsp),%rdi
  0x000000010487143e: add    %r8,%rdi
  0x0000000104871441: shr    $0x3,%r11
  0x0000000104871445: sub    %r11,%rbp
  0x0000000104871448: mov    %rbp,%rcx
  0x000000010487144b: xor    %rax,%rax
  0x000000010487144e: shl    $0x3,%rcx
  0x0000000104871452: rep rex.W stos %al,%es:(%rdi)
  0x0000000104871455: mov    %r10,%rdi
  0x0000000104871458: mov    %rbx,%rsi
  0x000000010487145b: movabs $0x1048294c0,%r10
  0x0000000104871465: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871468: jmpq   0x000000010487161b
  0x000000010487146d: movslq %r9d,%rdx
  0x0000000104871470: mov    %rdx,%r11
  0x0000000104871473: shl    %r11
  0x0000000104871476: add    $0x10,%r11
  0x000000010487147a: mov    %r11,%r8
  0x000000010487147d: and    $0xfffffffffffffff9,%r8
  0x0000000104871481: mov    0x58(%rsp),%rdi
  0x0000000104871486: add    %r8,%rdi
  0x0000000104871489: shr    $0x3,%r11
  0x000000010487148d: sub    %r11,%rbp
  0x0000000104871490: mov    %rbp,%rcx
  0x0000000104871493: xor    %rax,%rax
  0x0000000104871496: shl    $0x3,%rcx
  0x000000010487149a: rep rex.W stos %al,%es:(%rdi)
  0x000000010487149d: mov    %r10,%rdi
  0x00000001048714a0: movabs $0x1048294c0,%r10
  0x00000001048714aa: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048714ad: jmpq   0x0000000104871868
  0x00000001048714b2: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048714b4: test   %eax,%eax
  0x00000001048714b6: jle    0x00000001048714c6  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048714b8: mov    $0x7ffffff7,%r8d
  0x00000001048714be: sub    %eax,%r8d
  0x00000001048714c1: test   %r8d,%r8d
  0x00000001048714c4: jge    0x00000001048714f9  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048714c6: mov    %r11d,0x34(%rsp)
  0x00000001048714cb: mov    %edi,0x30(%rsp)    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048714cf: mov    %r9,%rsi
  0x00000001048714d2: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x00000001048714dc: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x00000001048714e6: mov    %r10,0x38(%rsp)
  0x00000001048714eb: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [40]=Oop [48]=NarrowOop [56]=Oop off=592}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {optimized virtual_call}
  0x00000001048714f0: mov    0x30(%rsp),%edi
  0x00000001048714f4: mov    0x34(%rsp),%r11d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048714f9: cmp    $0x80000,%eax
  0x00000001048714ff: ja     0x0000000104871d2b
  0x0000000104871505: mov    %eax,0x30(%rsp)
  0x0000000104871509: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487150c: shl    %r10
  0x000000010487150f: lea    (%r12,%rdi,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871513: mov    %r8,0x38(%rsp)
  0x0000000104871518: add    $0x17,%r10
  0x000000010487151c: mov    %r10,0x40(%rsp)
  0x0000000104871521: and    $0xfffffffffffffff8,%r10
  0x0000000104871525: mov    %r10,0x48(%rsp)
  0x000000010487152a: mov    0x30(%rsp),%r8d
  0x000000010487152f: cmp    $0x80000,%r8d
  0x0000000104871536: ja     0x0000000104871351
  0x000000010487153c: mov    0x60(%r15),%r9
  0x0000000104871540: mov    %r9,%r8
  0x0000000104871543: add    %r10,%r8
  0x0000000104871546: cmp    0x70(%r15),%r8
  0x000000010487154a: jae    0x0000000104871351
  0x0000000104871550: mov    %r8,0x60(%r15)
  0x0000000104871554: prefetchnta 0xc0(%r8)
  0x000000010487155c: movq   $0x1,(%r9)
  0x0000000104871563: prefetchnta 0x100(%r8)
  0x000000010487156b: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x0000000104871573: mov    0x30(%rsp),%r10d
  0x0000000104871578: mov    %r10d,0xc(%r9)
  0x000000010487157c: prefetchnta 0x140(%r8)
  0x0000000104871584: prefetchnta 0x180(%r8)    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487158c: mov    %r9,0x28(%rsp)
  0x0000000104871591: cmp    0x30(%rsp),%r11d
  0x0000000104871596: mov    0x30(%rsp),%r9d
  0x000000010487159b: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487159f: mov    0x28(%rsp),%r10
  0x00000001048715a4: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048715a8: mov    %r10,%rbx
  0x00000001048715ab: mov    0x28(%rsp),%r10
  0x00000001048715b0: mov    %r10,%rbp
  0x00000001048715b3: shr    $0x3,%rbp          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048715b7: mov    %ebp,0x50(%rsp)
  0x00000001048715bb: mov    0x40(%rsp),%rbp
  0x00000001048715c0: shr    $0x3,%rbp
  0x00000001048715c4: mov    %rbp,%rcx
  0x00000001048715c7: add    $0xfffffffffffffffe,%rcx
  0x00000001048715cb: cmp    %r9d,%r11d
  0x00000001048715ce: jb     0x0000000104871d37
  0x00000001048715d4: mov    0x30(%rsp),%r10d
  0x00000001048715d9: cmp    %r9d,%r10d
  0x00000001048715dc: jb     0x0000000104871d37
  0x00000001048715e2: test   %r9d,%r9d
  0x00000001048715e5: jle    0x0000000104871d79
  0x00000001048715eb: lea    0x10(%r12,%rdi,8),%r10
  0x00000001048715f0: cmp    0x30(%rsp),%r9d
  0x00000001048715f5: jl     0x0000000104871425
  0x00000001048715fb: mov    0x48(%rsp),%rdx
  0x0000000104871600: add    $0xfffffffffffffff0,%rdx
  0x0000000104871604: shr    $0x3,%rdx
  0x0000000104871608: mov    %r10,%rdi
  0x000000010487160b: mov    %rbx,%rsi
  0x000000010487160e: movabs $0x104829780,%r10
  0x0000000104871618: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487161b: mov    0x10(%rsp),%r9
  0x0000000104871620: mov    0x50(%rsp),%r11d
  0x0000000104871625: mov    %r11d,0x10(%r9)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871629: mov    0xc(%r9),%r8d      ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x000000010487162d: mov    %r9,%r10
  0x0000000104871630: shr    $0x9,%r10
  0x0000000104871634: movabs $0x104297000,%r11
  0x000000010487163e: mov    %r12b,(%r11,%r10,1)  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871642: mov    0x28(%rsp),%rcx
  0x0000000104871647: mov    0xc(%rcx),%r10d    ; implicit exception: dispatches to 0x0000000104871ed5
  0x000000010487164b: test   %r8d,%r8d
  0x000000010487164e: jl     0x0000000104871c65
  0x0000000104871654: mov    %r9,0x10(%rsp)
  0x0000000104871659: mov    %r8d,%r11d
  0x000000010487165c: inc    %r11d
  0x000000010487165f: cmp    %r11d,%r10d
  0x0000000104871662: jb     0x0000000104871c6a
  0x0000000104871668: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010487166d: mov    0x18(%rsp),%rdi
  0x0000000104871672: mov    $0x1,%edx
  0x0000000104871677: movabs $0x104829580,%r10
  0x0000000104871681: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871684: mov    0x10(%rsp),%r10
  0x0000000104871689: incl   0xc(%r10)          ;*synchronization entry
                                                ; - java.lang.Long::toHexString@-1 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)

  0x000000010487168d: mov    0x8(%rsp),%r10d
  0x0000000104871692: or     0xc(%rsp),%r10d
  0x0000000104871697: movslq %r10d,%rsi         ;*i2l  ; - org.github.arnaudroger.CsvContent::setUp@43 (line 29)

  0x000000010487169a: mov    $0x4,%edx
  0x000000010487169f: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x00000001048716a9: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x00000001048716b3: mov    %r10,0x28(%rsp)
  0x00000001048716b8: data32 xchg %ax,%ax
  0x00000001048716bb: callq  0x000000010481d420  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[40] [32]=Derived_oop_rbp [40]=Oop off=1056}
                                                ;*invokestatic toUnsignedString0
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)
                                                ;   {static_call}
  0x00000001048716c0: mov    0xc(%rax),%edi     ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x0000000104871ee9
  0x00000001048716c3: mov    0xc(%r12,%rdi,8),%ebp  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x0000000104871e7d
  0x00000001048716c8: mov    %ebp,0x38(%rsp)
  0x00000001048716cc: mov    %rax,0x28(%rsp)
  0x00000001048716d1: mov    0x10(%rsp),%r10
  0x00000001048716d6: mov    0x10(%r10),%ebx    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048716da: mov    0xc(%r12,%rbx,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x0000000104871e8d
  0x00000001048716df: mov    0xc(%r10),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048716e3: mov    %ebp,%edx
  0x00000001048716e5: add    %r8d,%edx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048716e8: mov    %edx,%r10d
  0x00000001048716eb: sub    %r11d,%r10d
  0x00000001048716ee: test   %r10d,%r10d
  0x00000001048716f1: jle    0x00000001048718a1  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048716f7: mov    %r11d,%eax
  0x00000001048716fa: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048716fc: mov    %eax,%r10d
  0x00000001048716ff: sub    %edx,%r10d
  0x0000000104871702: add    $0x2,%r10d
  0x0000000104871706: test   %r10d,%r10d
  0x0000000104871709: jl     0x0000000104871710  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010487170b: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010487170e: jmp    0x0000000104871712
  0x0000000104871710: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871712: test   %eax,%eax
  0x0000000104871714: jle    0x0000000104871724  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871716: mov    $0x7ffffff7,%r8d
  0x000000010487171c: sub    %eax,%r8d
  0x000000010487171f: test   %r8d,%r8d
  0x0000000104871722: jge    0x0000000104871759  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871724: mov    %r11d,0x34(%rsp)
  0x0000000104871729: mov    %ebx,0x30(%rsp)
  0x000000010487172d: mov    0x10(%rsp),%rsi
  0x0000000104871732: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x000000010487173c: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871746: mov    %r10,0x40(%rsp)
  0x000000010487174b: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[64] [32]=Derived_oop_rbp [40]=Oop [48]=NarrowOop [64]=Oop off=1200}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {optimized virtual_call}
  0x0000000104871750: mov    0x30(%rsp),%ebx
  0x0000000104871754: mov    0x34(%rsp),%r11d   ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871759: cmp    $0x80000,%eax
  0x000000010487175f: ja     0x0000000104871ccd
  0x0000000104871765: mov    %eax,0x30(%rsp)
  0x0000000104871769: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010487176c: shl    %r10
  0x000000010487176f: lea    (%r12,%rbx,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871773: mov    %r8,0x40(%rsp)
  0x0000000104871778: add    $0x17,%r10
  0x000000010487177c: mov    %r10,0x48(%rsp)
  0x0000000104871781: mov    %r10,%rbp
  0x0000000104871784: and    $0xfffffffffffffff8,%rbp
  0x0000000104871788: mov    %rbp,0x50(%rsp)
  0x000000010487178d: mov    0x30(%rsp),%ebp
  0x0000000104871791: cmp    $0x80000,%ebp
  0x0000000104871797: ja     0x00000001048713de
  0x000000010487179d: mov    0x60(%r15),%r8
  0x00000001048717a1: mov    %r8,%r10
  0x00000001048717a4: mov    0x50(%rsp),%rbp
  0x00000001048717a9: add    %rbp,%r10
  0x00000001048717ac: cmp    0x70(%r15),%r10
  0x00000001048717b0: jae    0x00000001048713de
  0x00000001048717b6: mov    %r10,0x60(%r15)
  0x00000001048717ba: prefetchnta 0xc0(%r10)
  0x00000001048717c2: movq   $0x1,(%r8)
  0x00000001048717c9: prefetchnta 0x100(%r10)
  0x00000001048717d1: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000001048717d9: mov    0x30(%rsp),%ebp
  0x00000001048717dd: mov    %ebp,0xc(%r8)
  0x00000001048717e1: prefetchnta 0x140(%r10)
  0x00000001048717e9: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048717f1: mov    %r8,0x58(%rsp)
  0x00000001048717f6: cmp    0x30(%rsp),%r11d
  0x00000001048717fb: mov    0x30(%rsp),%r9d
  0x0000000104871800: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871804: mov    %r8,%rsi
  0x0000000104871807: add    $0x10,%rsi
  0x000000010487180b: mov    0x48(%rsp),%rbp
  0x0000000104871810: shr    $0x3,%rbp
  0x0000000104871814: mov    %rbp,%rcx
  0x0000000104871817: add    $0xfffffffffffffffe,%rcx
  0x000000010487181b: cmp    %r9d,%r11d
  0x000000010487181e: jb     0x0000000104871cd9
  0x0000000104871824: mov    0x30(%rsp),%r10d
  0x0000000104871829: cmp    %r9d,%r10d
  0x000000010487182c: jb     0x0000000104871cd9
  0x0000000104871832: test   %r9d,%r9d
  0x0000000104871835: jle    0x0000000104871d19
  0x000000010487183b: lea    0x10(%r12,%rbx,8),%r10
  0x0000000104871840: cmp    0x30(%rsp),%r9d
  0x0000000104871845: jl     0x000000010487146d
  0x000000010487184b: mov    0x50(%rsp),%rdx
  0x0000000104871850: add    $0xfffffffffffffff0,%rdx
  0x0000000104871854: shr    $0x3,%rdx
  0x0000000104871858: mov    %r10,%rdi
  0x000000010487185b: movabs $0x104829780,%r10
  0x0000000104871865: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871868: mov    0x10(%rsp),%r10
  0x000000010487186d: mov    0xc(%r10),%r8d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871871: mov    0x28(%rsp),%r10
  0x0000000104871876: mov    0xc(%r10),%edi     ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x000000010487187a: mov    0x58(%rsp),%r10
  0x000000010487187f: mov    %r10,%rbx
  0x0000000104871882: shr    $0x3,%rbx
  0x0000000104871886: mov    0x10(%rsp),%r10
  0x000000010487188b: mov    %ebx,0x10(%r10)
  0x000000010487188f: shr    $0x9,%r10
  0x0000000104871893: movabs $0x104297000,%r11
  0x000000010487189d: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048718a1: mov    0xc(%r12,%rdi,8),%r10d  ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ; implicit exception: dispatches to 0x0000000104871e9d
  0x00000001048718a6: mov    0x38(%rsp),%ebp
  0x00000001048718aa: cmp    %r10d,%ebp
  0x00000001048718ad: jg     0x0000000104871ca1  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048718b3: mov    0xc(%r12,%rbx,8),%edx  ; implicit exception: dispatches to 0x0000000104871ead
  0x00000001048718b8: lea    (%r12,%rdi,8),%r9  ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048718bc: lea    (%r12,%rbx,8),%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048718c0: test   %r8d,%r8d
  0x00000001048718c3: jl     0x0000000104871c38
  0x00000001048718c9: cmp    %ebp,%r10d
  0x00000001048718cc: jb     0x0000000104871c38
  0x00000001048718d2: mov    %r8d,%r11d
  0x00000001048718d5: add    %ebp,%r11d
  0x00000001048718d8: cmp    %r11d,%edx
  0x00000001048718db: jb     0x0000000104871c38
  0x00000001048718e1: test   %ebp,%ebp
  0x00000001048718e3: jle    0x00000001048718ff
  0x00000001048718e5: lea    0x10(%rcx,%r8,2),%rsi
  0x00000001048718ea: lea    0x10(%r12,%rdi,8),%rdi
  0x00000001048718ef: movslq %ebp,%rdx
  0x00000001048718f2: movabs $0x104829580,%r10
  0x00000001048718fc: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x00000001048718ff: mov    0x10(%rsp),%r9
  0x0000000104871904: mov    0xc(%r9),%r11d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871908: add    0x38(%rsp),%r11d
  0x000000010487190d: mov    %r11d,0xc(%r9)     ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)

  0x0000000104871911: mov    0xc(%rsp),%ebp
  0x0000000104871915: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.CsvContent::setUp@51 (line 27)

  0x0000000104871917: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871921: movabs $0x76b18c758,%r11  ; OopMap{r10=Oop r11=Oop r9=Oop [0]=Oop [16]=Oop [24]=Derived_oop_r10 [32]=Derived_oop_r11 off=1675}
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)
                                                ;   {oop([C)}
  0x000000010487192b: test   %eax,-0x2087931(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@54 (line 27)
                                                ;   {poll}
  0x0000000104871931: mov    0x8(%rsp),%r13d
  0x0000000104871936: mov    (%rsp),%r8
  0x000000010487193a: mov    0x18(%rsp),%rcx
  0x000000010487193f: mov    0x20(%rsp),%rbx    ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x0000000104871944: mov    0x10(%r8),%r11d    ; implicit exception: dispatches to 0x0000000104871e6d
  0x0000000104871948: mov    %rbx,0x20(%rsp)
  0x000000010487194d: mov    %rcx,0x18(%rsp)
  0x0000000104871952: mov    %r8,(%rsp)
  0x0000000104871956: mov    %r13d,0x8(%rsp)
  0x000000010487195b: mov    %ebp,0xc(%rsp)
  0x000000010487195f: mov    0xc(%r9),%r8d      ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871963: mov    %r9,0x10(%rsp)
  0x0000000104871968: mov    0x10(%r9),%edi     ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x000000010487196c: mov    %r8d,%edx
  0x000000010487196f: inc    %edx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@20 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871971: mov    %rdi,%r10
  0x0000000104871974: shl    $0x3,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871978: mov    %r10,0x28(%rsp)
  0x000000010487197d: cmp    %r11d,%ebp
  0x0000000104871980: jge    0x00000001048719c0  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@25 (line 27)

  0x0000000104871982: test   %ebp,%ebp
  0x0000000104871984: jle    0x000000010487168d  ;*ifle
                                                ; - org.github.arnaudroger.CsvContent::setUp@29 (line 28)

  0x000000010487198a: mov    0xc(%r12,%rdi,8),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ; implicit exception: dispatches to 0x0000000104871ec5
  0x000000010487198f: mov    %r8d,%r10d
  0x0000000104871992: sub    %r11d,%r10d
  0x0000000104871995: inc    %r10d
  0x0000000104871998: test   %r10d,%r10d
  0x000000010487199b: jle    0x0000000104871642  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048719a1: mov    %r11d,%eax
  0x00000001048719a4: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048719a6: mov    %eax,%r10d
  0x00000001048719a9: sub    %r8d,%r10d
  0x00000001048719ac: inc    %r10d
  0x00000001048719af: test   %r10d,%r10d
  0x00000001048719b2: jl     0x00000001048714b2  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048719b8: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x00000001048719bb: jmpq   0x00000001048714b4
  0x00000001048719c0: mov    0xc(%r12,%rdi,8),%ebx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ; implicit exception: dispatches to 0x0000000104871f01
  0x00000001048719c5: mov    %r8d,%r10d
  0x00000001048719c8: sub    %ebx,%r10d
  0x00000001048719cb: inc    %r10d
  0x00000001048719ce: test   %r10d,%r10d
  0x00000001048719d1: jle    0x00000001048719ea  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719d3: mov    %ebx,%eax
  0x00000001048719d5: shl    %eax               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719d7: mov    %eax,%r10d
  0x00000001048719da: sub    %r8d,%r10d
  0x00000001048719dd: inc    %r10d
  0x00000001048719e0: test   %r10d,%r10d
  0x00000001048719e3: jl     0x00000001048719f4  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719e5: add    $0x2,%eax          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719e8: jmp    0x00000001048719f6
  0x00000001048719ea: mov    0x28(%rsp),%rcx
  0x00000001048719ef: jmpq   0x0000000104871b6a
  0x00000001048719f4: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719f6: test   %eax,%eax
  0x00000001048719f8: jle    0x0000000104871a08  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x00000001048719fa: mov    $0x7ffffff7,%r11d
  0x0000000104871a00: sub    %eax,%r11d
  0x0000000104871a03: test   %r11d,%r11d
  0x0000000104871a06: jge    0x0000000104871a3c  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@29 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871a08: mov    %ebx,0x30(%rsp)
  0x0000000104871a0c: mov    %edi,0xc(%rsp)     ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871a10: mov    %r9,%rsi
  0x0000000104871a13: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871a1d: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871a27: mov    %r10,0x38(%rsp)
  0x0000000104871a2c: data32 xchg %ax,%ax
  0x0000000104871a2f: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [12]=NarrowOop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [40]=Oop [56]=Oop off=1940}
                                                ;*invokespecial hugeCapacity
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {optimized virtual_call}
  0x0000000104871a34: mov    0xc(%rsp),%edi
  0x0000000104871a38: mov    0x30(%rsp),%ebx    ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871a3c: cmp    $0x80000,%eax
  0x0000000104871a42: ja     0x0000000104871ded
  0x0000000104871a48: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871a4b: mov    %eax,0xc(%rsp)
  0x0000000104871a4f: shl    %r10
  0x0000000104871a52: lea    (%r12,%rdi,8),%r11  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871a56: mov    %r11,0x30(%rsp)
  0x0000000104871a5b: add    $0x17,%r10
  0x0000000104871a5f: mov    %r10,0x28(%rsp)
  0x0000000104871a64: and    $0xfffffffffffffff8,%r10
  0x0000000104871a68: mov    %r10,0x38(%rsp)
  0x0000000104871a6d: cmp    $0x80000,%eax
  0x0000000104871a73: ja     0x0000000104871bf4
  0x0000000104871a79: mov    0x60(%r15),%r11
  0x0000000104871a7d: mov    %r11,%r10
  0x0000000104871a80: mov    0x38(%rsp),%r8
  0x0000000104871a85: add    %r8,%r10
  0x0000000104871a88: cmp    0x70(%r15),%r10
  0x0000000104871a8c: jae    0x0000000104871bf4
  0x0000000104871a92: mov    %r10,0x60(%r15)
  0x0000000104871a96: prefetchnta 0xc0(%r10)
  0x0000000104871a9e: movq   $0x1,(%r11)
  0x0000000104871aa5: prefetchnta 0x100(%r10)
  0x0000000104871aad: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x0000000104871ab5: mov    %eax,0xc(%r11)
  0x0000000104871ab9: prefetchnta 0x140(%r10)
  0x0000000104871ac1: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871ac9: mov    %r11,0x40(%rsp)
  0x0000000104871ace: cmp    0xc(%rsp),%ebx
  0x0000000104871ad2: mov    0xc(%rsp),%r9d
  0x0000000104871ad7: cmovl  %ebx,%r9d          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871adb: mov    %r11,%rsi
  0x0000000104871ade: add    $0x10,%rsi
  0x0000000104871ae2: mov    0x28(%rsp),%r10
  0x0000000104871ae7: shr    $0x3,%r10
  0x0000000104871aeb: mov    %r10,%rcx
  0x0000000104871aee: add    $0xfffffffffffffffe,%rcx
  0x0000000104871af2: cmp    %r9d,%ebx
  0x0000000104871af5: jb     0x0000000104871df5
  0x0000000104871afb: mov    0xc(%rsp),%ebp
  0x0000000104871aff: cmp    %r9d,%ebp
  0x0000000104871b02: jb     0x0000000104871df5
  0x0000000104871b08: test   %r9d,%r9d
  0x0000000104871b0b: jle    0x0000000104871e35
  0x0000000104871b11: lea    0x10(%r12,%rdi,8),%r11
  0x0000000104871b16: cmp    %ebp,%r9d
  0x0000000104871b19: jl     0x0000000104871399
  0x0000000104871b1f: mov    0x38(%rsp),%rdx
  0x0000000104871b24: add    $0xfffffffffffffff0,%rdx
  0x0000000104871b28: shr    $0x3,%rdx
  0x0000000104871b2c: mov    %r11,%rdi
  0x0000000104871b2f: movabs $0x104829780,%r10
  0x0000000104871b39: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871b3c: mov    0x10(%rsp),%r9
  0x0000000104871b41: mov    0xc(%r9),%r8d
  0x0000000104871b45: mov    0x40(%rsp),%rcx
  0x0000000104871b4a: mov    %rcx,%r10
  0x0000000104871b4d: shr    $0x3,%r10
  0x0000000104871b51: mov    %r10d,0x10(%r9)
  0x0000000104871b55: mov    %r9,%r10
  0x0000000104871b58: shr    $0x9,%r10
  0x0000000104871b5c: movabs $0x104297000,%r11
  0x0000000104871b66: mov    %r12b,(%r11,%r10,1)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871b6a: test   %r8d,%r8d
  0x0000000104871b6d: jl     0x0000000104871d8b
  0x0000000104871b73: mov    0xc(%rcx),%r10d
  0x0000000104871b77: mov    %r8d,%r11d
  0x0000000104871b7a: inc    %r11d
  0x0000000104871b7d: cmp    %r11d,%r10d
  0x0000000104871b80: jb     0x0000000104871d8b
  0x0000000104871b86: mov    %r9,0x10(%rsp)
  0x0000000104871b8b: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000104871b90: mov    0x20(%rsp),%rdi
  0x0000000104871b95: mov    $0x1,%edx
  0x0000000104871b9a: movabs $0x104829580,%r10
  0x0000000104871ba4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871ba7: mov    (%rsp),%r8
  0x0000000104871bab: mov    0xc(%r8),%r10d     ;*getfield nbRows
                                                ; - org.github.arnaudroger.CsvContent::setUp@12 (line 26)

  0x0000000104871baf: mov    0x10(%rsp),%r9
  0x0000000104871bb4: incl   0xc(%r9)           ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)

  0x0000000104871bb8: mov    0x8(%rsp),%r13d
  0x0000000104871bbd: inc    %r13d              ;*iinc
                                                ; - org.github.arnaudroger.CsvContent::setUp@64 (line 26)

  0x0000000104871bc0: movabs $0x76ab576e8,%r11  ;   {oop([C)}
  0x0000000104871bca: movabs $0x76b18c758,%rcx  ; OopMap{r11=Oop r8=Oop r9=Oop rcx=Oop [16]=Oop [24]=Derived_oop_r11 [32]=Derived_oop_rcx off=2356}
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)
                                                ;   {oop([C)}
  0x0000000104871bd4: test   %eax,-0x2087bda(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - org.github.arnaudroger.CsvContent::setUp@67 (line 26)
                                                ;   {poll}
  0x0000000104871bda: cmp    %r10d,%r13d
  0x0000000104871bdd: jge    0x0000000104871dc5  ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)

  0x0000000104871be3: xor    %ebp,%ebp
  0x0000000104871be5: mov    0x18(%rsp),%rcx
  0x0000000104871bea: mov    0x20(%rsp),%rbx
  0x0000000104871bef: jmpq   0x0000000104871944
  0x0000000104871bf4: mov    %ebx,0x5c(%rsp)
  0x0000000104871bf8: mov    %edi,0x58(%rsp)    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871bfc: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104871c06: mov    %eax,%edx
  0x0000000104871c08: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871c12: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871c1c: mov    %r10,0x60(%rsp)
  0x0000000104871c21: xchg   %ax,%ax
  0x0000000104871c23: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[96] [32]=Derived_oop_rbp [48]=Oop [88]=NarrowOop [96]=Oop off=2440}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871c28: mov    %rax,%r11
  0x0000000104871c2b: mov    0x58(%rsp),%edi
  0x0000000104871c2f: mov    0x5c(%rsp),%ebx
  0x0000000104871c33: jmpq   0x0000000104871ac9
  0x0000000104871c38: mov    %r9,%rsi
  0x0000000104871c3b: xor    %edx,%edx
  0x0000000104871c3d: mov    %ebp,%r9d
  0x0000000104871c40: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871c4a: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871c54: mov    %r10,0x40(%rsp)
  0x0000000104871c59: xchg   %ax,%ax
  0x0000000104871c5b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[64] [32]=Derived_oop_rbp [64]=Oop off=2496}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871c60: jmpq   0x00000001048718ff
  0x0000000104871c65: mov    %r9,0x10(%rsp)
  0x0000000104871c6a: movabs $0x76ab576e8,%rsi  ;   {oop([C)}
  0x0000000104871c74: xor    %edx,%edx
  0x0000000104871c76: mov    $0x1,%r9d
  0x0000000104871c7c: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871c86: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871c90: mov    %r10,0x38(%rsp)
  0x0000000104871c95: xchg   %ax,%ax
  0x0000000104871c97: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [56]=Oop off=2556}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871c9c: jmpq   0x0000000104871684  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871ca1: mov    $0xffffff65,%esi
  0x0000000104871ca6: mov    (%rsp),%rbp
  0x0000000104871caa: mov    0x38(%rsp),%r9d
  0x0000000104871caf: mov    %r9d,0x24(%rsp)
  0x0000000104871cb4: mov    %ebx,0x30(%rsp)
  0x0000000104871cb8: mov    %r8d,0x34(%rsp)
  0x0000000104871cbd: mov    %r10d,0x3c(%rsp)
  0x0000000104871cc2: nop
  0x0000000104871cc3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop [40]=Oop [48]=NarrowOop off=2600}
                                                ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871cc8: callq  0x0000000103c85e14  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871ccd: mov    %eax,0x30(%rsp)
  0x0000000104871cd1: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871cd4: jmpq   0x000000010487176c
  0x0000000104871cd9: mov    %rsi,%rdi
  0x0000000104871cdc: xor    %rax,%rax
  0x0000000104871cdf: shl    $0x3,%rcx
  0x0000000104871ce3: rep rex.W stos %al,%es:(%rdi)
  0x0000000104871ce6: mov    0x40(%rsp),%rsi
  0x0000000104871ceb: xor    %edx,%edx
  0x0000000104871ced: mov    %r8,%rcx
  0x0000000104871cf0: xor    %r8d,%r8d
  0x0000000104871cf3: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871cfd: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871d07: mov    %r10,0x60(%rsp)
  0x0000000104871d0c: data32 xchg %ax,%ax
  0x0000000104871d0f: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[96] [32]=Derived_oop_rbp [40]=Oop [88]=Oop [96]=Oop off=2676}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871d14: jmpq   0x0000000104871868
  0x0000000104871d19: mov    %rsi,%rdi
  0x0000000104871d1c: xor    %rax,%rax
  0x0000000104871d1f: shl    $0x3,%rcx
  0x0000000104871d23: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871d26: jmpq   0x0000000104871868
  0x0000000104871d2b: mov    %eax,0x30(%rsp)
  0x0000000104871d2f: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871d32: jmpq   0x000000010487150c
  0x0000000104871d37: mov    %rbx,%rdi
  0x0000000104871d3a: xor    %rax,%rax
  0x0000000104871d3d: shl    $0x3,%rcx
  0x0000000104871d41: rep rex.W stos %al,%es:(%rdi)
  0x0000000104871d44: mov    0x38(%rsp),%rsi
  0x0000000104871d49: xor    %edx,%edx
  0x0000000104871d4b: mov    0x28(%rsp),%rcx
  0x0000000104871d50: xor    %r8d,%r8d
  0x0000000104871d53: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871d5d: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871d67: mov    %r10,0x48(%rsp)
  0x0000000104871d6c: data32 xchg %ax,%ax
  0x0000000104871d6f: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[72] [32]=Derived_oop_rbp [40]=Oop [72]=Oop [80]=NarrowOop off=2772}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871d74: jmpq   0x000000010487161b
  0x0000000104871d79: mov    %rbx,%rdi
  0x0000000104871d7c: xor    %rax,%rax
  0x0000000104871d7f: shl    $0x3,%rcx
  0x0000000104871d83: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871d86: jmpq   0x000000010487161b
  0x0000000104871d8b: mov    %r9,0x10(%rsp)
  0x0000000104871d90: movabs $0x76b18c758,%rsi  ;   {oop([C)}
  0x0000000104871d9a: xor    %edx,%edx
  0x0000000104871d9c: mov    $0x1,%r9d
  0x0000000104871da2: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871dac: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871db6: mov    %r10,0x38(%rsp)
  0x0000000104871dbb: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[56] [32]=Derived_oop_rbp [56]=Oop off=2848}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871dc0: jmpq   0x0000000104871ba7  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)

  0x0000000104871dc5: mov    $0xffffff65,%esi
  0x0000000104871dca: mov    %r8,%rbp
  0x0000000104871dcd: rex.W pushq 0x10(%rsp)
  0x0000000104871dd2: rex.W popq (%rsp)
  0x0000000104871dd6: mov    %r13d,0xc(%rsp)
  0x0000000104871ddb: mov    %r10d,0x10(%rsp)
  0x0000000104871de0: data32 xchg %ax,%ax
  0x0000000104871de3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop off=2888}
                                                ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)
                                                ;   {runtime_call}
  0x0000000104871de8: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.CsvContent::setUp@15 (line 26)
                                                ;   {runtime_call}
  0x0000000104871ded: movslq %eax,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871df0: jmpq   0x0000000104871a4b
  0x0000000104871df5: mov    %rsi,%rdi
  0x0000000104871df8: xor    %rax,%rax
  0x0000000104871dfb: shl    $0x3,%rcx
  0x0000000104871dff: rep rex.W stos %al,%es:(%rdi)
  0x0000000104871e02: mov    0x30(%rsp),%rsi
  0x0000000104871e07: xor    %edx,%edx
  0x0000000104871e09: mov    %r11,%rcx
  0x0000000104871e0c: xor    %r8d,%r8d
  0x0000000104871e0f: movabs $0x76b18c758,%rbp  ;   {oop([C)}
  0x0000000104871e19: movabs $0x76ab576e8,%r10  ;   {oop([C)}
  0x0000000104871e23: mov    %r10,0x48(%rsp)
  0x0000000104871e28: data32 xchg %ax,%ax
  0x0000000104871e2b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [16]=Oop [24]=Derived_oop_[72] [32]=Derived_oop_rbp [64]=Oop [72]=Oop off=2960}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871e30: jmpq   0x0000000104871b3c
  0x0000000104871e35: mov    %rsi,%rdi
  0x0000000104871e38: xor    %rax,%rax
  0x0000000104871e3b: shl    $0x3,%rcx
  0x0000000104871e3f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871e42: jmpq   0x0000000104871b3c
  0x0000000104871e47: xor    %r8d,%r8d
  0x0000000104871e4a: jmpq   0x0000000104871308
  0x0000000104871e4f: mov    $0xffffff9d,%esi
  0x0000000104871e54: mov    %r13d,(%rsp)
  0x0000000104871e58: mov    %rbx,0x8(%rsp)
  0x0000000104871e5d: mov    %r14,0x10(%rsp)
  0x0000000104871e62: nop
  0x0000000104871e63: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop off=3016}
                                                ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)
                                                ;   {runtime_call}
  0x0000000104871e68: callq  0x0000000103c85e14  ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x0000000104871e6d: mov    $0xfffffff6,%esi
  0x0000000104871e72: nop
  0x0000000104871e73: callq  0x00000001047dc1a0  ; OopMap{off=3032}
                                                ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x0000000104871e78: callq  0x0000000103c85e14  ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.CsvContent::setUp@22 (line 27)
                                                ;   {runtime_call}
  0x0000000104871e7d: mov    $0xfffffff6,%esi
  0x0000000104871e82: nop
  0x0000000104871e83: callq  0x00000001047dc1a0  ; OopMap{off=3048}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871e88: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871e8d: mov    $0xfffffff6,%esi
  0x0000000104871e92: nop
  0x0000000104871e93: callq  0x00000001047dc1a0  ; OopMap{off=3064}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871e98: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871e9d: mov    $0xfffffff6,%esi
  0x0000000104871ea2: nop
  0x0000000104871ea3: callq  0x00000001047dc1a0  ; OopMap{off=3080}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871ea8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871ead: mov    $0xfffffff6,%esi
  0x0000000104871eb2: mov    %edi,%ebp
  0x0000000104871eb4: mov    %r8d,(%rsp)
  0x0000000104871eb8: data32 xchg %ax,%ax
  0x0000000104871ebb: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=3104}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871ec0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871ec5: mov    $0xfffffff6,%esi
  0x0000000104871eca: nop
  0x0000000104871ecb: callq  0x00000001047dc1a0  ; OopMap{off=3120}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871ed0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871ed5: mov    $0xfffffff6,%esi
  0x0000000104871eda: mov    %r8d,%ebp
  0x0000000104871edd: xchg   %ax,%ax
  0x0000000104871edf: callq  0x00000001047dc1a0  ; OopMap{off=3140}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871ee4: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)
                                                ;   {runtime_call}
  0x0000000104871ee9: mov    $0xffffff65,%esi
  0x0000000104871eee: mov    (%rsp),%rbp
  0x0000000104871ef2: mov    %rax,0x28(%rsp)
  0x0000000104871ef7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop [40]=Oop off=3164}
                                                ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)
                                                ;   {runtime_call}
  0x0000000104871efc: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871f01: mov    $0xfffffff6,%esi
  0x0000000104871f06: nop
  0x0000000104871f07: callq  0x00000001047dc1a0  ; OopMap{off=3180}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871f0c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104871f11: mov    $0xffffff86,%esi
  0x0000000104871f16: mov    %r8,(%rsp)
  0x0000000104871f1a: mov    %r13d,0x8(%rsp)
  0x0000000104871f1f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=3204}
                                                ;*iload_3
                                                ; - org.github.arnaudroger.CsvContent::setUp@20 (line 27)
                                                ;   {runtime_call}
  0x0000000104871f24: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871f29: jmp    0x0000000104871f3b  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871f2b: jmp    0x0000000104871f3b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871f2d: jmp    0x0000000104871f40  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871f2f: jmp    0x0000000104871f45  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871f31: jmp    0x0000000104871f40  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871f33: jmp    0x0000000104871f3b  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871f35: jmp    0x0000000104871f45  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871f37: jmp    0x0000000104871f40  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871f39: jmp    0x0000000104871f45  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)

  0x0000000104871f3b: mov    %rax,%rsi
  0x0000000104871f3e: jmp    0x0000000104871f4d  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@35 (line 28)

  0x0000000104871f40: mov    %rax,%rsi
  0x0000000104871f43: jmp    0x0000000104871f4d  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@47 (line 29)

  0x0000000104871f45: mov    %rax,%rsi
  0x0000000104871f48: jmp    0x0000000104871f4d  ;*invokestatic toUnsignedString0
                                                ; - java.lang.Long::toHexString@2 (line 272)
                                                ; - org.github.arnaudroger.CsvContent::setUp@44 (line 29)

  0x0000000104871f4a: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.CsvContent::setUp@-1 (line 24)

  0x0000000104871f4d: add    $0x90,%rsp
  0x0000000104871f54: pop    %rbp
  0x0000000104871f55: jmpq   0x00000001048446e0  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - org.github.arnaudroger.CsvContent::setUp@60 (line 31)
                                                ;   {runtime_call}
  0x0000000104871f5a: hlt    
  0x0000000104871f5b: hlt    
  0x0000000104871f5c: hlt    
  0x0000000104871f5d: hlt    
  0x0000000104871f5e: hlt    
  0x0000000104871f5f: hlt    
[Stub Code]
  0x0000000104871f60: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104871f6a: jmpq   0x0000000104871f6a  ;   {runtime_call}
  0x0000000104871f6f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104871f79: jmpq   0x0000000104871f79  ;   {runtime_call}
  0x0000000104871f7e: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104871f88: jmpq   0x0000000104871f88  ;   {runtime_call}
  0x0000000104871f8d: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104871f97: jmpq   0x0000000104871f97  ;   {runtime_call}
[Exception Handler]
  0x0000000104871f9c: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104871fa1: callq  0x0000000104871fa6
  0x0000000104871fa6: subq   $0x5,(%rsp)
  0x0000000104871fab: jmpq   0x000000010481e3c0  ;   {runtime_call}
<nmethod compile_id='84' compile_kind='osr' compiler='C2' entry='0x00000001048712a0' size='8344' address='0x0000000104871090' relocation_offset='296' insts_offset='528' stub_offset='3792' scopes_data_offset='3992' scopes_pcs_offset='5536' dependencies_offset='7936' handler_table_offset='7944' nul_chk_table_offset='8256' oops_offset='3872' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='5137' iicount='1' stamp='0.738'/>
<writer thread='21251'/>
<uncommon_trap thread='21251' reason='unstable_if' action='reinterpret' compile_id='84' compile_kind='osr' compiler='C2' stamp='1.081'>
<jvms bci='15' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='6126' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='21251' compile_id='84' compile_kind='osr' compiler='C2' stamp='1.081'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.BenchmarkHandler$2 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='21251'/>
<task_queued compile_id='85' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5000' backedge_count='1' iicount='10000' stamp='1.197' comment='count' hot_count='10000'/>
<task_queued compile_id='86' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='1' backedge_count='14563' iicount='1' osr_bci='23' stamp='1.197' comment='backedge_count' hot_count='14563'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104870ad0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000108f56ea8} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000104870c20: mov    %eax,-0x14000(%rsp)
  0x0000000104870c27: push   %rbp
  0x0000000104870c28: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)

  0x0000000104870c2c: mov    %rsi,(%rsp)
  0x0000000104870c30: mov    %edx,0x8(%rsp)
  0x0000000104870c34: mov    %ecx,%ebp
  0x0000000104870c36: sub    %edx,%ebp          ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)

  0x0000000104870c38: test   %ebp,%ebp
  0x0000000104870c3a: jl     0x0000000104870dd8  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000104870c40: cmp    $0x80000,%ebp
  0x0000000104870c46: ja     0x0000000104870d90
  0x0000000104870c4c: movslq %ebp,%r10
  0x0000000104870c4f: shl    %r10
  0x0000000104870c52: add    $0x17,%r10
  0x0000000104870c56: mov    %r10,0x18(%rsp)
  0x0000000104870c5b: cmp    $0x80000,%ebp
  0x0000000104870c61: ja     0x0000000104870d74
  0x0000000104870c67: and    $0xfffffffffffffff8,%r10
  0x0000000104870c6b: mov    0x60(%r15),%r8
  0x0000000104870c6f: mov    %r8,%r11
  0x0000000104870c72: add    %r10,%r11
  0x0000000104870c75: cmp    0x70(%r15),%r11
  0x0000000104870c79: jae    0x0000000104870d74
  0x0000000104870c7f: mov    %r11,0x60(%r15)
  0x0000000104870c83: prefetchnta 0xc0(%r11)
  0x0000000104870c8b: movq   $0x1,(%r8)
  0x0000000104870c92: prefetchnta 0x100(%r11)
  0x0000000104870c9a: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000104870ca2: mov    %ebp,0xc(%r8)
  0x0000000104870ca6: prefetchnta 0x140(%r11)
  0x0000000104870cae: prefetchnta 0x180(%r11)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000104870cb6: mov    %r8,0x10(%rsp)
  0x0000000104870cbb: mov    (%rsp),%rbx
  0x0000000104870cbf: mov    0xc(%rbx),%edi     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000104870ded
  0x0000000104870cc2: mov    %edi,%r11d
  0x0000000104870cc5: sub    0x8(%rsp),%r11d    ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)

  0x0000000104870cca: mov    %r8,%rsi
  0x0000000104870ccd: add    $0x10,%rsi         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000104870cd1: cmp    %ebp,%r11d
  0x0000000104870cd4: mov    %ebp,%r9d
  0x0000000104870cd7: cmovl  %r11d,%r9d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000104870cdb: mov    0x18(%rsp),%r8
  0x0000000104870ce0: shr    $0x3,%r8
  0x0000000104870ce4: mov    %r8,%rcx
  0x0000000104870ce7: add    $0xfffffffffffffffe,%rcx
  0x0000000104870ceb: mov    0x8(%rsp),%r10d
  0x0000000104870cf0: test   %r10d,%r10d
  0x0000000104870cf3: jl     0x0000000104870d98
  0x0000000104870cf9: mov    %r10d,%r11d
  0x0000000104870cfc: add    %r9d,%r11d
  0x0000000104870cff: cmp    %r11d,%edi
  0x0000000104870d02: jb     0x0000000104870d98
  0x0000000104870d08: cmp    %r9d,%ebp
  0x0000000104870d0b: jb     0x0000000104870d98
  0x0000000104870d11: test   %r9d,%r9d
  0x0000000104870d14: jle    0x0000000104870dc1
  0x0000000104870d1a: movslq %r9d,%rdx
  0x0000000104870d1d: cmp    %ebp,%r9d
  0x0000000104870d20: jl     0x0000000104870d45
  0x0000000104870d22: lea    0x10(%rbx,%r10,2),%rdi
  0x0000000104870d27: movabs $0x104829580,%r10
  0x0000000104870d31: callq  *%r10
  0x0000000104870d34: mov    0x10(%rsp),%rax
  0x0000000104870d39: add    $0x30,%rsp
  0x0000000104870d3d: pop    %rbp
  0x0000000104870d3e: test   %eax,-0x2086d44(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104870d44: retq   
  0x0000000104870d45: mov    %rdx,%r11
  0x0000000104870d48: shl    %r11
  0x0000000104870d4b: add    $0x10,%r11
  0x0000000104870d4f: mov    %r11,%r9
  0x0000000104870d52: and    $0xfffffffffffffff9,%r9
  0x0000000104870d56: mov    0x10(%rsp),%rdi
  0x0000000104870d5b: add    %r9,%rdi
  0x0000000104870d5e: shr    $0x3,%r11
  0x0000000104870d62: sub    %r11,%r8
  0x0000000104870d65: mov    %r8,%rcx
  0x0000000104870d68: xor    %rax,%rax
  0x0000000104870d6b: shl    $0x3,%rcx
  0x0000000104870d6f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000104870d72: jmp    0x0000000104870d22
  0x0000000104870d74: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104870d7e: mov    %ebp,%edx
  0x0000000104870d80: data32 xchg %ax,%ax
  0x0000000104870d83: callq  0x0000000104846b60  ; OopMap{[0]=Oop off=360}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000104870d88: mov    %rax,%r8
  0x0000000104870d8b: jmpq   0x0000000104870cb6
  0x0000000104870d90: movslq %ebp,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000104870d93: jmpq   0x0000000104870c4f
  0x0000000104870d98: mov    %rsi,%rdi
  0x0000000104870d9b: xor    %rax,%rax
  0x0000000104870d9e: shl    $0x3,%rcx
  0x0000000104870da2: rep rex.W stos %al,%es:(%rdi)
  0x0000000104870da5: xor    %r8d,%r8d
  0x0000000104870da8: mov    %rbx,%rsi
  0x0000000104870dab: mov    %r10d,%edx
  0x0000000104870dae: mov    0x10(%rsp),%rcx
  0x0000000104870db3: mov    %rcx,%rbp
  0x0000000104870db6: nop
  0x0000000104870db7: callq  0x0000000104844620  ; OopMap{rbp=Oop [16]=Oop off=412}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000104870dbc: jmpq   0x0000000104870d34
  0x0000000104870dc1: test   %r9d,%r9d
  0x0000000104870dc4: jl     0x0000000104870d98
  0x0000000104870dc6: mov    %rsi,%rdi
  0x0000000104870dc9: xor    %rax,%rax
  0x0000000104870dcc: shl    $0x3,%rcx
  0x0000000104870dd0: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000104870dd3: jmpq   0x0000000104870d34
  0x0000000104870dd8: mov    $0xffffff65,%esi
  0x0000000104870ddd: mov    %ecx,0xc(%rsp)
  0x0000000104870de1: xchg   %ax,%ax
  0x0000000104870de3: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop off=456}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ;   {runtime_call}
  0x0000000104870de8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104870ded: mov    $0xfffffff6,%esi
  0x0000000104870df2: nop
  0x0000000104870df3: callq  0x00000001047dc1a0  ; OopMap{off=472}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000104870df8: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000104870dfd: mov    %rax,%rsi
  0x0000000104870e00: jmp    0x0000000104870e05  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000104870e02: mov    %rax,%rsi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000104870e05: add    $0x30,%rsp
  0x0000000104870e09: pop    %rbp
  0x0000000104870e0a: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104870e0f: hlt    
  0x0000000104870e10: hlt    
  0x0000000104870e11: hlt    
  0x0000000104870e12: hlt    
  0x0000000104870e13: hlt    
  0x0000000104870e14: hlt    
  0x0000000104870e15: hlt    
  0x0000000104870e16: hlt    
  0x0000000104870e17: hlt    
  0x0000000104870e18: hlt    
  0x0000000104870e19: hlt    
  0x0000000104870e1a: hlt    
  0x0000000104870e1b: hlt    
  0x0000000104870e1c: hlt    
  0x0000000104870e1d: hlt    
  0x0000000104870e1e: hlt    
  0x0000000104870e1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104870e20: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104870e25: callq  0x0000000104870e2a
  0x0000000104870e2a: subq   $0x5,(%rsp)
  0x0000000104870e2f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104870e34: hlt    
  0x0000000104870e35: hlt    
  0x0000000104870e36: hlt    
  0x0000000104870e37: hlt    
<nmethod compile_id='85' compiler='C2' entry='0x0000000104870c20' size='1416' address='0x0000000104870ad0' relocation_offset='296' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1024' dependencies_offset='1344' handler_table_offset='1352' nul_chk_table_offset='1400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='6557' backedge_count='1' iicount='21557' stamp='1.201'/>
<writer thread='19203'/>
Decoding compiled method 0x0000000104880110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092e7a08} &apos;benchmarkDirect&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  0x00000001048802a0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048802a5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001048802b0: mov    %eax,-0x14000(%rsp)
  0x00000001048802b7: push   %rbp
  0x00000001048802b8: sub    $0xa0,%rsp
  0x00000001048802bf: mov    0x8(%rsi),%r10d
  0x00000001048802c3: mov    %r10d,0x18(%rsp)
  0x00000001048802c8: mov    0x10(%rsi),%r11d
  0x00000001048802cc: mov    %r11d,0x28(%rsp)
  0x00000001048802d1: mov    0x30(%rsi),%rbx
  0x00000001048802d5: mov    0x28(%rsi),%rbp
  0x00000001048802d9: mov    0x18(%rsi),%r10d
  0x00000001048802dd: mov    %r10d,0x30(%rsp)
  0x00000001048802e2: mov    0x20(%rsi),%r13
  0x00000001048802e6: mov    %rsi,%rdi
  0x00000001048802e9: movabs $0x103ce473e,%r10
  0x00000001048802f3: callq  *%r10
  0x00000001048802f6: test   %rbx,%rbx
  0x00000001048802f9: je     0x0000000104880989
  0x00000001048802ff: mov    0x8(%rbx),%r11d
  0x0000000104880303: cmp    $0xf801540f,%r11d  ;   {metadata(&apos;org/openjdk/jmh/infra/Blackhole&apos;)}
  0x000000010488030a: jne    0x00000001048809a4
  0x0000000104880310: mov    %rbx,%rdi
  0x0000000104880313: mov    %rbp,%r10
  0x0000000104880316: test   %rbp,%rbp
  0x0000000104880319: je     0x0000000104880990
  0x000000010488031f: mov    0x8(%rbp),%r11d
  0x0000000104880323: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000010488032a: jne    0x00000001048809a7
  0x0000000104880330: mov    %rbp,%r8
  0x0000000104880333: mov    %r8,%rcx
  0x0000000104880336: mov    %r8,%rdx
  0x0000000104880339: test   %r13,%r13
  0x000000010488033c: je     0x000000010488099c
  0x0000000104880342: mov    0x8(%r13),%r9d
  0x0000000104880346: cmp    $0xf801826f,%r9d   ;   {metadata({type array char}[])}
  0x000000010488034d: jne    0x00000001048809a7
  0x0000000104880353: mov    %r13,%r9           ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)

  0x0000000104880356: mov    0xc(%r8),%r11d     ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@26 (line 39)
                                                ; implicit exception: dispatches to 0x00000001048809f5
  0x000000010488035a: jmpq   0x000000010488042b
  0x000000010488035f: mov    %r9,0x80(%rsp)
  0x0000000104880367: mov    %r8,0x78(%rsp)
  0x000000010488036c: mov    %r11d,0x54(%rsp)   ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104880371: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x000000010488037b: mov    0x50(%rsp),%edx
  0x000000010488037f: mov    (%rsp),%rbp
  0x0000000104880383: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [72]=Derived_oop_[56] off=232}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104880388: mov    %rax,%rbp
  0x000000010488038b: mov    0x54(%rsp),%r11d
  0x0000000104880390: mov    0x78(%rsp),%r8
  0x0000000104880395: mov    0x80(%rsp),%r9
  0x000000010488039d: jmpq   0x00000001048806d6
  0x00000001048803a2: mov    %r9,0x80(%rsp)
  0x00000001048803aa: mov    %r8,0x78(%rsp)
  0x00000001048803af: mov    %r11d,0x54(%rsp)   ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048803b4: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x00000001048803be: mov    0x50(%rsp),%edx
  0x00000001048803c2: nop
  0x00000001048803c3: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [72]=Derived_oop_[56] off=296}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x00000001048803c8: mov    0x54(%rsp),%r11d
  0x00000001048803cd: mov    0x78(%rsp),%r8
  0x00000001048803d2: mov    0x80(%rsp),%r9
  0x00000001048803da: jmpq   0x0000000104880580
  0x00000001048803df: mov    0x68(%rsp),%rdi
  0x00000001048803e4: add    %r9,%rdi
  0x00000001048803e7: sub    %r8,%rbp
  0x00000001048803ea: mov    %rbp,%rcx
  0x00000001048803ed: xor    %rax,%rax
  0x00000001048803f0: shl    $0x3,%rcx
  0x00000001048803f4: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048803f7: jmpq   0x0000000104880738
  0x00000001048803fc: nopl   0x0(%rax)
  0x0000000104880400: mov    0x28(%rsp),%ebp    ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop off=356}
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@109 (line 39)

  0x0000000104880404: test   %eax,-0x209640a(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@109 (line 39)
                                                ;   {poll}
  0x000000010488040a: mov    %ebp,0x28(%rsp)
  0x000000010488040e: mov    (%rsp),%rdi
  0x0000000104880412: mov    0x38(%rsp),%r8
  0x0000000104880417: mov    0x8(%rsp),%rdx
  0x000000010488041c: mov    0x10(%rsp),%rcx
  0x0000000104880421: mov    0x20(%rsp),%r9
  0x0000000104880426: mov    0x1c(%rsp),%r11d   ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)

  0x000000010488042b: mov    0x18(%rsp),%r10d
  0x0000000104880430: cmp    %r11d,%r10d
  0x0000000104880433: jge    0x00000001048807f1  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)

  0x0000000104880439: cmp    %r11d,%r10d
  0x000000010488043c: jae    0x00000001048807d4
  0x0000000104880442: mov    %rcx,0x10(%rsp)
  0x0000000104880447: mov    %rdx,0x8(%rsp)
  0x000000010488044c: mov    %rdi,(%rsp)
  0x0000000104880450: mov    %rax,-0x8(%rsp)
  0x0000000104880455: mov    0x18(%rsp),%eax
  0x0000000104880459: mov    %eax,0x34(%rsp)
  0x000000010488045d: mov    -0x8(%rsp),%rax
  0x0000000104880462: movzwl 0x10(%r8,%r10,2),%ecx  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)

  0x0000000104880468: mov    0x28(%rsp),%ebx
  0x000000010488046c: lea    0x10(%r9,%rbx,4),%rbx  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x0000000104880471: mov    %rbx,0x40(%rsp)
  0x0000000104880476: mov    %r9,0x20(%rsp)
  0x000000010488047b: mov    0x30(%rsp),%ebx
  0x000000010488047f: lea    0x10(%r8,%rbx,2),%r9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880484: mov    %r9,0x48(%rsp)
  0x0000000104880489: mov    %r8,0x38(%rsp)
  0x000000010488048e: mov    %r11d,0x1c(%rsp)
  0x0000000104880493: sub    0x30(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880498: sub    0x30(%rsp),%r10d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488049d: mov    %r10d,0x50(%rsp)
  0x00000001048804a2: cmp    %r10d,%r11d
  0x00000001048804a5: mov    %r10d,%r8d
  0x00000001048804a8: cmovl  %r11d,%r8d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048804ac: mov    %r8d,0x2c(%rsp)
  0x00000001048804b1: mov    0x30(%rsp),%r11d
  0x00000001048804b6: add    %r8d,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048804b9: mov    0x18(%rsp),%r10d
  0x00000001048804be: inc    %r10d              ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@62 (line 44)

  0x00000001048804c1: mov    %r10d,0x18(%rsp)
  0x00000001048804c6: movslq %r8d,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048804c9: mov    %r10,0x58(%rsp)
  0x00000001048804ce: movslq 0x50(%rsp),%rdi    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048804d3: mov    %r10,%r8
  0x00000001048804d6: shl    %r8
  0x00000001048804d9: movslq 0x50(%rsp),%rbx    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048804de: add    $0x10,%r8
  0x00000001048804e2: mov    %r8,%r9
  0x00000001048804e5: and    $0xfffffffffffffff9,%r9
  0x00000001048804e9: shr    $0x3,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048804ed: cmp    $0x2c,%ecx
  0x00000001048804f0: jne    0x0000000104880643  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@40 (line 42)

  0x00000001048804f6: mov    0x28(%rsp),%ebp
  0x00000001048804fa: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@47 (line 43)

  0x00000001048804fc: mov    0x50(%rsp),%r10d
  0x0000000104880501: test   %r10d,%r10d
  0x0000000104880504: jl     0x0000000104880880  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488050a: cmp    $0x80000,%r10d
  0x0000000104880511: ja     0x0000000104880811
  0x0000000104880517: shl    %rdi
  0x000000010488051a: add    $0x17,%rdi
  0x000000010488051e: mov    %rdi,0x60(%rsp)
  0x0000000104880523: cmp    $0x80000,%r10d
  0x000000010488052a: ja     0x00000001048803a2
  0x0000000104880530: mov    0x60(%r15),%rax
  0x0000000104880534: mov    %rdi,%r10
  0x0000000104880537: and    $0xfffffffffffffff8,%r10
  0x000000010488053b: mov    %rax,%rcx
  0x000000010488053e: add    %r10,%rcx
  0x0000000104880541: cmp    0x70(%r15),%rcx
  0x0000000104880545: jae    0x00000001048803a2
  0x000000010488054b: mov    %rcx,0x60(%r15)
  0x000000010488054f: prefetchnta 0xc0(%rcx)
  0x0000000104880556: movq   $0x1,(%rax)
  0x000000010488055d: prefetchnta 0x100(%rcx)
  0x0000000104880564: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x000000010488056b: mov    0x50(%rsp),%ebx
  0x000000010488056f: mov    %ebx,0xc(%rax)
  0x0000000104880572: prefetchnta 0x140(%rcx)
  0x0000000104880579: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880580: mov    %rax,0x68(%rsp)
  0x0000000104880585: mov    %rax,%rdx
  0x0000000104880588: add    $0x10,%rdx
  0x000000010488058c: mov    0x60(%rsp),%rbx
  0x0000000104880591: shr    $0x3,%rbx
  0x0000000104880595: mov    %rbx,%rcx
  0x0000000104880598: add    $0xfffffffffffffffe,%rcx
  0x000000010488059c: mov    0x30(%rsp),%edi
  0x00000001048805a0: test   %edi,%edi
  0x00000001048805a2: jl     0x0000000104880839
  0x00000001048805a8: mov    0x1c(%rsp),%r10d
  0x00000001048805ad: cmp    %r11d,%r10d
  0x00000001048805b0: jb     0x0000000104880839
  0x00000001048805b6: mov    0x50(%rsp),%r11d
  0x00000001048805bb: cmp    0x2c(%rsp),%r11d
  0x00000001048805c0: jb     0x0000000104880839
  0x00000001048805c6: mov    0x2c(%rsp),%r10d
  0x00000001048805cb: test   %r10d,%r10d
  0x00000001048805ce: jle    0x0000000104880869
  0x00000001048805d4: cmp    %r11d,%r10d
  0x00000001048805d7: jl     0x00000001048807b9
  0x00000001048805dd: mov    0x48(%rsp),%rdi
  0x00000001048805e2: mov    %rdx,%rsi
  0x00000001048805e5: mov    0x58(%rsp),%rdx
  0x00000001048805ea: movabs $0x104829580,%r10
  0x00000001048805f4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048805f7: mov    0x20(%rsp),%r10
  0x00000001048805fc: mov    0xc(%r10),%r10d    ; implicit exception: dispatches to 0x00000001048809d5
  0x0000000104880600: mov    0x28(%rsp),%r8d
  0x0000000104880605: cmp    %r10d,%r8d
  0x0000000104880608: jae    0x0000000104880819
  0x000000010488060e: mov    0x68(%rsp),%r10
  0x0000000104880613: shr    $0x3,%r10
  0x0000000104880617: mov    0x40(%rsp),%r11
  0x000000010488061c: mov    %r10d,(%r11)
  0x000000010488061f: mov    %r11,%r10
  0x0000000104880622: shr    $0x9,%r10
  0x0000000104880626: movabs $0x104297000,%r11
  0x0000000104880630: mov    %r12b,(%r11,%r10,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)

  0x0000000104880634: mov    0x18(%rsp),%r10d
  0x0000000104880639: mov    %r10d,0x30(%rsp)
  0x000000010488063e: jmpq   0x0000000104880404
  0x0000000104880643: cmp    $0xa,%ecx
  0x0000000104880646: jne    0x0000000104880400  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@72 (line 45)

  0x000000010488064c: mov    0x50(%rsp),%ecx
  0x0000000104880650: test   %ecx,%ecx
  0x0000000104880652: jl     0x000000010488093c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104880658: mov    %ecx,%r10d
  0x000000010488065b: cmp    $0x80000,%r10d
  0x0000000104880662: ja     0x00000001048808bd
  0x0000000104880668: shl    %rdi
  0x000000010488066b: add    $0x17,%rdi
  0x000000010488066f: mov    %rdi,0x60(%rsp)
  0x0000000104880674: cmp    $0x80000,%r10d
  0x000000010488067b: ja     0x000000010488035f
  0x0000000104880681: mov    0x60(%r15),%rbp
  0x0000000104880685: mov    %rdi,%rcx
  0x0000000104880688: and    $0xfffffffffffffff8,%rcx
  0x000000010488068c: mov    %rbp,%r10
  0x000000010488068f: add    %rcx,%r10
  0x0000000104880692: cmp    0x70(%r15),%r10
  0x0000000104880696: jae    0x000000010488035f
  0x000000010488069c: mov    %r10,0x60(%r15)
  0x00000001048806a0: prefetchnta 0xc0(%r10)
  0x00000001048806a8: movq   $0x1,0x0(%rbp)
  0x00000001048806b0: prefetchnta 0x100(%r10)
  0x00000001048806b8: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x00000001048806bf: mov    0x50(%rsp),%ecx
  0x00000001048806c3: mov    %ecx,0xc(%rbp)
  0x00000001048806c6: prefetchnta 0x140(%r10)
  0x00000001048806ce: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048806d6: mov    %rbp,0x68(%rsp)
  0x00000001048806db: mov    %rbp,%r10
  0x00000001048806de: add    $0x10,%r10
  0x00000001048806e2: mov    %r10,%rdx
  0x00000001048806e5: mov    0x60(%rsp),%rbp
  0x00000001048806ea: shr    $0x3,%rbp
  0x00000001048806ee: mov    %rbp,%rcx
  0x00000001048806f1: add    $0xfffffffffffffffe,%rcx
  0x00000001048806f5: mov    0x30(%rsp),%ebx
  0x00000001048806f9: test   %ebx,%ebx
  0x00000001048806fb: jl     0x00000001048808f1
  0x0000000104880701: mov    0x1c(%rsp),%r10d
  0x0000000104880706: cmp    %r11d,%r10d
  0x0000000104880709: jb     0x00000001048808f1
  0x000000010488070f: mov    0x50(%rsp),%r11d
  0x0000000104880714: cmp    0x2c(%rsp),%r11d
  0x0000000104880719: jb     0x00000001048808f1
  0x000000010488071f: mov    0x2c(%rsp),%r10d
  0x0000000104880724: test   %r10d,%r10d
  0x0000000104880727: jle    0x0000000104880925
  0x000000010488072d: cmp    0x50(%rsp),%r10d
  0x0000000104880732: jl     0x00000001048803df
  0x0000000104880738: mov    0x48(%rsp),%rdi
  0x000000010488073d: mov    %rdx,%rsi
  0x0000000104880740: mov    0x58(%rsp),%rdx
  0x0000000104880745: movabs $0x104829580,%r10
  0x000000010488074f: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104880752: mov    0x20(%rsp),%r11
  0x0000000104880757: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x00000001048809e5
  0x000000010488075b: mov    0x28(%rsp),%r10d
  0x0000000104880760: cmp    %r9d,%r10d
  0x0000000104880763: jae    0x00000001048808c5
  0x0000000104880769: mov    0x40(%rsp),%r10
  0x000000010488076e: mov    %r10,%r9
  0x0000000104880771: mov    0x68(%rsp),%r8
  0x0000000104880776: shr    $0x3,%r8
  0x000000010488077a: mov    %r8d,(%r10)
  0x000000010488077d: shr    $0x9,%r9
  0x0000000104880781: movabs $0x104297000,%r10
  0x000000010488078b: mov    %r12b,(%r10,%r9,1)
  0x000000010488078f: mov    (%rsp),%r10
  0x0000000104880793: test   %r10,%r10
  0x0000000104880796: je     0x00000001048808dd  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x000000010488079c: mov    %r10,%rsi
  0x000000010488079f: mov    %r11,%rdx
  0x00000001048807a2: nop
  0x00000001048807a3: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop off=1288}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {optimized virtual_call}
  0x00000001048807a8: mov    0x18(%rsp),%r11d
  0x00000001048807ad: mov    %r11d,0x30(%rsp)
  0x00000001048807b2: xor    %ebp,%ebp
  0x00000001048807b4: jmpq   0x0000000104880404
  0x00000001048807b9: mov    %rax,%rdi
  0x00000001048807bc: add    %r9,%rdi
  0x00000001048807bf: sub    %r8,%rbx
  0x00000001048807c2: mov    %rbx,%rcx
  0x00000001048807c5: xor    %rax,%rax
  0x00000001048807c8: shl    $0x3,%rcx
  0x00000001048807cc: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048807cf: jmpq   0x00000001048805dd
  0x00000001048807d4: mov    $0xffffffe4,%esi
  0x00000001048807d9: mov    %rdi,%rbp
  0x00000001048807dc: mov    %r9,0x8(%rsp)
  0x00000001048807e1: mov    %r8,0x20(%rsp)
  0x00000001048807e6: nop
  0x00000001048807e7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop [32]=Oop off=1356}
                                                ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)
                                                ;   {runtime_call}
  0x00000001048807ec: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)
                                                ;   {runtime_call}
  0x00000001048807f1: mov    $0xffffff65,%esi
  0x00000001048807f6: mov    %rdi,%rbp
  0x00000001048807f9: mov    %r8,(%rsp)
  0x00000001048807fd: mov    %r9,0x8(%rsp)
  0x0000000104880802: mov    %r11d,0x20(%rsp)
  0x0000000104880807: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1388}
                                                ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)
                                                ;   {runtime_call}
  0x000000010488080c: callq  0x0000000103c85e14  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)
                                                ;   {runtime_call}
  0x0000000104880811: mov    %rbx,%rdi
  0x0000000104880814: jmpq   0x0000000104880517
  0x0000000104880819: mov    $0xffffffe4,%esi
  0x000000010488081e: mov    0x34(%rsp),%r11d
  0x0000000104880823: mov    %r11d,0x18(%rsp)
  0x0000000104880828: mov    %r8d,0x1c(%rsp)
  0x000000010488082d: xchg   %ax,%ax
  0x000000010488082f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [32]=Oop [56]=Oop [104]=Oop off=1428}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x0000000104880834: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104880839: mov    %rdx,%rdi
  0x000000010488083c: xor    %rax,%rax
  0x000000010488083f: shl    $0x3,%rcx
  0x0000000104880843: rep rex.W stos %al,%es:(%rdi)
  0x0000000104880846: mov    0x8(%rsp),%rsi
  0x000000010488084b: mov    0x30(%rsp),%edx
  0x000000010488084f: mov    0x68(%rsp),%rcx
  0x0000000104880854: xor    %r8d,%r8d
  0x0000000104880857: mov    0x2c(%rsp),%r9d
  0x000000010488085c: data32 xchg %ax,%ax
  0x000000010488085f: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [104]=Oop off=1476}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104880864: jmpq   0x00000001048805f7
  0x0000000104880869: test   %r10d,%r10d
  0x000000010488086c: jl     0x0000000104880839
  0x000000010488086e: mov    %rdx,%rdi
  0x0000000104880871: xor    %rax,%rax
  0x0000000104880874: shl    $0x3,%rcx
  0x0000000104880878: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488087b: jmpq   0x00000001048805f7  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880880: mov    $0xffffff65,%esi
  0x0000000104880885: mov    0x38(%rsp),%r10
  0x000000010488088a: mov    %r10,0x8(%rsp)
  0x000000010488088f: mov    0x34(%rsp),%r11d
  0x0000000104880894: mov    %r11d,0x18(%rsp)
  0x0000000104880899: mov    0x28(%rsp),%r10d
  0x000000010488089e: mov    %r10d,0x1c(%rsp)
  0x00000001048808a3: mov    0x50(%rsp),%r11d
  0x00000001048808a8: mov    %r11d,%r10d
  0x00000001048808ab: mov    %r10d,0x3c(%rsp)
  0x00000001048808b0: data32 xchg %ax,%ax
  0x00000001048808b3: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [32]=Oop off=1560}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x00000001048808b8: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x00000001048808bd: mov    %rbx,%rdi
  0x00000001048808c0: jmpq   0x0000000104880668
  0x00000001048808c5: mov    $0xffffffe4,%esi
  0x00000001048808ca: mov    (%rsp),%rbp
  0x00000001048808ce: mov    %r11,0x18(%rsp)
  0x00000001048808d3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=Oop [56]=Oop [104]=Oop off=1592}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x00000001048808d8: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048808dd: mov    $0xfffffff6,%esi
  0x00000001048808e2: mov    %r11,%rbp
  0x00000001048808e5: xchg   %ax,%ax
  0x00000001048808e7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1612}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {runtime_call}
  0x00000001048808ec: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048808f1: mov    %rdx,%rdi
  0x00000001048808f4: xor    %rax,%rax
  0x00000001048808f7: shl    $0x3,%rcx
  0x00000001048808fb: rep rex.W stos %al,%es:(%rdi)
  0x00000001048808fe: mov    0x10(%rsp),%rsi
  0x0000000104880903: mov    0x30(%rsp),%edx
  0x0000000104880907: mov    0x68(%rsp),%rcx
  0x000000010488090c: xor    %r8d,%r8d
  0x000000010488090f: mov    0x2c(%rsp),%r9d
  0x0000000104880914: mov    (%rsp),%rbp
  0x0000000104880918: data32 xchg %ax,%ax
  0x000000010488091b: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [104]=Oop off=1664}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104880920: jmpq   0x0000000104880752
  0x0000000104880925: test   %r10d,%r10d
  0x0000000104880928: jl     0x00000001048808f1
  0x000000010488092a: mov    %rdx,%rdi
  0x000000010488092d: xor    %rax,%rax
  0x0000000104880930: shl    $0x3,%rcx
  0x0000000104880934: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104880937: jmpq   0x0000000104880752  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x000000010488093c: mov    $0xffffff65,%esi
  0x0000000104880941: mov    (%rsp),%rbp
  0x0000000104880945: mov    0x38(%rsp),%r10
  0x000000010488094a: mov    %r10,(%rsp)
  0x000000010488094e: mov    0x20(%rsp),%r10
  0x0000000104880953: mov    %r10,0x8(%rsp)
  0x0000000104880958: mov    0x34(%rsp),%r10d
  0x000000010488095d: mov    %r10d,0x10(%rsp)
  0x0000000104880962: mov    0x28(%rsp),%r10d
  0x0000000104880967: mov    %r10d,0x14(%rsp)
  0x000000010488096c: mov    0x30(%rsp),%r11d
  0x0000000104880971: mov    %r11d,0x28(%rsp)
  0x0000000104880976: mov    %ecx,%r10d
  0x0000000104880979: mov    %r10d,0x34(%rsp)
  0x000000010488097e: nop
  0x000000010488097f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1764}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104880984: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104880989: xor    %edi,%edi
  0x000000010488098b: jmpq   0x0000000104880313
  0x0000000104880990: xor    %r8d,%r8d
  0x0000000104880993: xor    %edx,%edx
  0x0000000104880995: xor    %ecx,%ecx
  0x0000000104880997: jmpq   0x0000000104880339
  0x000000010488099c: xor    %r9d,%r9d
  0x000000010488099f: jmpq   0x0000000104880356
  0x00000001048809a4: mov    %rbp,%r10
  0x00000001048809a7: mov    $0xffffff9d,%esi
  0x00000001048809ac: mov    0x30(%rsp),%ebp
  0x00000001048809b0: mov    0x18(%rsp),%r11d
  0x00000001048809b5: mov    %r11d,0x4(%rsp)
  0x00000001048809ba: mov    %rbx,0x8(%rsp)
  0x00000001048809bf: mov    %r10,0x10(%rsp)
  0x00000001048809c4: mov    %r13,0x18(%rsp)
  0x00000001048809c9: xchg   %ax,%ax
  0x00000001048809cb: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=1840}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x00000001048809d0: callq  0x0000000103c85e14  ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x00000001048809d5: mov    $0xfffffff6,%esi
  0x00000001048809da: nop
  0x00000001048809db: callq  0x00000001047dc1a0  ; OopMap{[104]=Oop off=1856}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x00000001048809e0: callq  0x0000000103c85e14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x00000001048809e5: mov    $0xfffffff6,%esi
  0x00000001048809ea: nop
  0x00000001048809eb: callq  0x00000001047dc1a0  ; OopMap{[104]=Oop off=1872}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x00000001048809f0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048809f5: mov    $0xffffff86,%esi
  0x00000001048809fa: mov    %rdi,%rbp
  0x00000001048809fd: mov    %r8,(%rsp)
  0x0000000104880a01: mov    %r9,0x8(%rsp)
  0x0000000104880a06: nop
  0x0000000104880a07: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1900}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x0000000104880a0c: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104880a11: jmp    0x0000000104880a15  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880a13: jmp    0x0000000104880a1a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104880a15: mov    %rax,%rsi
  0x0000000104880a18: jmp    0x0000000104880a22  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104880a1a: mov    %rax,%rsi
  0x0000000104880a1d: jmp    0x0000000104880a22  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)

  0x0000000104880a1f: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@-1 (line 32)

  0x0000000104880a22: add    $0xa0,%rsp
  0x0000000104880a29: pop    %rbp
  0x0000000104880a2a: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104880a2f: hlt    
  0x0000000104880a30: hlt    
  0x0000000104880a31: hlt    
  0x0000000104880a32: hlt    
  0x0000000104880a33: hlt    
  0x0000000104880a34: hlt    
  0x0000000104880a35: hlt    
  0x0000000104880a36: hlt    
  0x0000000104880a37: hlt    
  0x0000000104880a38: hlt    
  0x0000000104880a39: hlt    
  0x0000000104880a3a: hlt    
  0x0000000104880a3b: hlt    
  0x0000000104880a3c: hlt    
  0x0000000104880a3d: hlt    
  0x0000000104880a3e: hlt    
  0x0000000104880a3f: hlt    
[Stub Code]
  0x0000000104880a40: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104880a4a: jmpq   0x0000000104880a4a  ;   {runtime_call}
[Exception Handler]
  0x0000000104880a4f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104880a54: callq  0x0000000104880a59
  0x0000000104880a59: subq   $0x5,(%rsp)
  0x0000000104880a5e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104880a63: hlt    
  0x0000000104880a64: hlt    
  0x0000000104880a65: hlt    
  0x0000000104880a66: hlt    
  0x0000000104880a67: hlt    
<nmethod compile_id='86' compile_kind='osr' compiler='C2' entry='0x00000001048802a0' size='4416' address='0x0000000104880110' relocation_offset='296' insts_offset='400' stub_offset='2352' scopes_data_offset='2440' scopes_pcs_offset='3184' dependencies_offset='4256' handler_table_offset='4264' nul_chk_table_offset='4384' oops_offset='2392' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='5060' iicount='1' stamp='1.211'/>
<writer thread='21251'/>
<task_queued compile_id='87' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='5000' backedge_count='1' iicount='10000' stamp='1.212' comment='count' hot_count='10000'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104867f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001092defd0} &apos;consume&apos; &apos;([Ljava/lang/Object;)V&apos; in &apos;org/openjdk/jmh/infra/Blackhole&apos;
  # this:     rsi:rsi   = &apos;org/openjdk/jmh/infra/Blackhole&apos;
  # parm0:    rdx:rdx   = &apos;[Ljava/lang/Object;&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000001048680a0: mov    0x8(%rsi),%r10d
  0x00000001048680a4: shl    $0x3,%r10
  0x00000001048680a8: cmp    %r10,%rax
  0x00000001048680ab: jne    0x000000010481ce20  ;   {runtime_call}
  0x00000001048680b1: data32 xchg %ax,%ax
  0x00000001048680b4: nopl   0x0(%rax,%rax,1)
  0x00000001048680bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001048680c0: sub    $0x18,%rsp
  0x00000001048680c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@-1 (line 304)

  0x00000001048680cc: mov    0xc4(%rsi),%r11d   ;*getfield tlrMask
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@1 (line 304)

  0x00000001048680d3: imul   $0x19660d,0xc0(%rsi),%r10d
  0x00000001048680de: add    $0x3c6ef35f,%r10d  ;*iadd
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@15 (line 305)

  0x00000001048680e5: mov    %r10d,0xc0(%rsi)   ;*putfield tlr
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@17 (line 305)

  0x00000001048680ec: and    %r11d,%r10d
  0x00000001048680ef: test   %r10d,%r10d
  0x00000001048680f2: je     0x0000000104868100  ;*return
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@41 (line 311)

  0x00000001048680f4: add    $0x10,%rsp
  0x00000001048680f8: pop    %rbp
  0x00000001048680f9: test   %eax,-0x207e0ff(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x00000001048680ff: retq   
  0x0000000104868100: shl    %r11d
  0x0000000104868103: mov    %rsi,%r10
  0x0000000104868106: inc    %r11d
  0x0000000104868109: shr    $0x9,%r10
  0x000000010486810d: mov    %rdx,%r8
  0x0000000104868110: shr    $0x3,%r8
  0x0000000104868114: mov    %r8d,0xd8(%rsi)
  0x000000010486811b: movabs $0x104297000,%r8
  0x0000000104868125: mov    %r12b,(%r8,%r10,1)
  0x0000000104868129: mov    %r11d,0xc4(%rsi)
  0x0000000104868130: lock addl $0x0,(%rsp)     ;*putfield tlrMask
                                                ; - org.openjdk.jmh.infra.Blackhole::consume@38 (line 309)

  0x0000000104868135: jmp    0x00000001048680f4
  0x0000000104868137: hlt    
  0x0000000104868138: hlt    
  0x0000000104868139: hlt    
  0x000000010486813a: hlt    
  0x000000010486813b: hlt    
  0x000000010486813c: hlt    
  0x000000010486813d: hlt    
  0x000000010486813e: hlt    
  0x000000010486813f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000104868140: jmpq   0x0000000104843760  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000104868145: callq  0x000000010486814a
  0x000000010486814a: subq   $0x5,(%rsp)
  0x000000010486814f: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104868154: hlt    
  0x0000000104868155: hlt    
  0x0000000104868156: hlt    
  0x0000000104868157: hlt    
<nmethod compile_id='87' compiler='C2' entry='0x00000001048680a0' size='712' address='0x0000000104867f50' relocation_offset='296' insts_offset='336' stub_offset='496' scopes_data_offset='536' scopes_pcs_offset='576' dependencies_offset='704' oops_offset='520' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='8531' backedge_count='1' iicount='13534' stamp='1.214'/>
<writer thread='21251'/>
<uncommon_trap thread='21251' reason='unstable_if' action='reinterpret' compile_id='86' compile_kind='osr' compiler='C2' stamp='1.495'>
<jvms bci='27' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='6024' iicount='1'/>
</uncommon_trap>
<make_not_entrant thread='21251' compile_id='86' compile_kind='osr' compiler='C2' stamp='1.495'/>
<task_queued compile_id='88' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='5000' backedge_count='1' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.495' comment='count' hot_count='10001'/>
<writer thread='19203'/>
Decoding compiled method 0x0000000104881290:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001092e7a08} &apos;benchmarkDirect&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  # this:     rsi:rsi   = &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  # parm0:    rdx:rdx   = &apos;org/github/arnaudroger/CsvContent&apos;
  # parm1:    rcx:rcx   = &apos;org/openjdk/jmh/infra/Blackhole&apos;
  #           [sp+0xc0]  (sp of caller)
  0x0000000104881420: mov    0x8(%rsi),%r10d
  0x0000000104881424: shl    $0x3,%r10
  0x0000000104881428: cmp    %r10,%rax
  0x000000010488142b: jne    0x000000010481ce20  ;   {runtime_call}
  0x0000000104881431: data32 xchg %ax,%ax
  0x0000000104881434: nopl   0x0(%rax,%rax,1)
  0x000000010488143c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000104881440: mov    %eax,-0x14000(%rsp)
  0x0000000104881447: push   %rbp
  0x0000000104881448: sub    $0xb0,%rsp         ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@-1 (line 32)

  0x000000010488144f: mov    %rcx,(%rsp)
  0x0000000104881453: mov    %rdx,%r8
  0x0000000104881456: mov    0x10(%rdx),%edx    ;*getfield nbCellsPerRow
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@6 (line 35)
                                                ; implicit exception: dispatches to 0x0000000104881b61
  0x0000000104881459: cmp    $0x40000,%edx
  0x000000010488145f: ja     0x0000000104881b3b
  0x0000000104881465: movslq %edx,%rcx          ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@9 (line 35)

  0x0000000104881468: mov    0x14(%r8),%r11d    ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@1 (line 32)

  0x000000010488146c: cmp    $0x40000,%edx
  0x0000000104881472: ja     0x0000000104881b15
  0x0000000104881478: mov    0x60(%r15),%r13
  0x000000010488147c: shl    $0x2,%rcx
  0x0000000104881480: add    $0x17,%rcx
  0x0000000104881484: mov    %rcx,%r10
  0x0000000104881487: and    $0xfffffffffffffff8,%r10
  0x000000010488148b: mov    %r13,%r8
  0x000000010488148e: add    %r10,%r8
  0x0000000104881491: cmp    0x70(%r15),%r8
  0x0000000104881495: jae    0x0000000104881b15
  0x000000010488149b: mov    %r8,0x60(%r15)
  0x000000010488149f: prefetchnta 0xc0(%r8)
  0x00000001048814a7: movq   $0x1,0x0(%r13)
  0x00000001048814af: prefetchnta 0x100(%r8)
  0x00000001048814b7: movl   $0xf801826f,0x8(%r13)  ;   {metadata({type array char}[])}
  0x00000001048814bf: mov    %edx,0xc(%r13)
  0x00000001048814c3: prefetchnta 0x140(%r8)
  0x00000001048814cb: mov    %r13,%rdi
  0x00000001048814ce: add    $0x10,%rdi
  0x00000001048814d2: prefetchnta 0x180(%r8)
  0x00000001048814da: shr    $0x3,%rcx
  0x00000001048814de: add    $0xfffffffffffffffe,%rcx
  0x00000001048814e2: xor    %rax,%rax
  0x00000001048814e5: shl    $0x3,%rcx
  0x00000001048814e9: rep rex.W stos %al,%es:(%rdi)  ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@9 (line 35)

  0x00000001048814ec: mov    0xc(%r12,%r11,8),%r10d  ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@26 (line 39)
                                                ; implicit exception: dispatches to 0x0000000104881b71
  0x00000001048814f1: test   %r10d,%r10d
  0x00000001048814f4: jle    0x0000000104881945  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)

  0x00000001048814fa: test   %r10d,%r10d
  0x00000001048814fd: jbe    0x0000000104881b43
  0x0000000104881503: mov    %r10d,%r8d
  0x0000000104881506: dec    %r8d
  0x0000000104881509: cmp    %r10d,%r8d
  0x000000010488150c: jae    0x0000000104881b43  ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@30 (line 40)

  0x0000000104881512: lea    (%r12,%r11,8),%rcx  ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@1 (line 32)

  0x0000000104881516: xor    %r9d,%r9d
  0x0000000104881519: xor    %r8d,%r8d
  0x000000010488151c: xor    %ebx,%ebx
  0x000000010488151e: mov    %edx,0x6c(%rsp)
  0x0000000104881522: mov    %r11d,0x70(%rsp)
  0x0000000104881527: mov    %r13,0x78(%rsp)
  0x000000010488152c: mov    %r10d,0x74(%rsp)
  0x0000000104881531: mov    %r8d,0x68(%rsp)
  0x0000000104881536: mov    %ebx,0x80(%rsp)
  0x000000010488153d: jmpq   0x00000001048815f3
  0x0000000104881542: mov    %r9,0x90(%rsp)
  0x000000010488154a: mov    %r8,0x88(%rsp)
  0x0000000104881552: mov    %r11d,0x60(%rsp)   ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881557: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104881561: mov    0x28(%rsp),%edx
  0x0000000104881565: mov    0x78(%rsp),%r10
  0x000000010488156a: mov    %r10,0x48(%rsp)
  0x000000010488156f: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Derived_oop_[72] [24]=Derived_oop_[8] [72]=Oop [112]=NarrowOop [120]=Oop off=340}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104881574: mov    0x60(%rsp),%r11d
  0x0000000104881579: mov    0x88(%rsp),%r8
  0x0000000104881581: mov    0x90(%rsp),%r9
  0x0000000104881589: jmpq   0x0000000104881718
  0x000000010488158e: mov    %rbp,%rdi
  0x0000000104881591: add    %r9,%rdi
  0x0000000104881594: mov    0x38(%rsp),%rcx
  0x0000000104881599: sub    %r8,%rcx
  0x000000010488159c: xor    %rax,%rax
  0x000000010488159f: shl    $0x3,%rcx
  0x00000001048815a3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048815a6: jmpq   0x00000001048818c7
  0x00000001048815ab: mov    %rax,%rdi
  0x00000001048815ae: add    %r9,%rdi
  0x00000001048815b1: sub    %r8,%rbx
  0x00000001048815b4: mov    %rbx,%rcx
  0x00000001048815b7: xor    %rax,%rax
  0x00000001048815ba: shl    $0x3,%rcx
  0x00000001048815be: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048815c1: jmpq   0x0000000104881778
  0x00000001048815c6: data32 nopw 0x0(%rax,%rax,1)
  0x00000001048815d0: mov    0x80(%rsp),%ebp    ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@72 (line 45)

  0x00000001048815d7: mov    0x2c(%rsp),%r9d
  0x00000001048815dc: cmp    0x74(%rsp),%r9d
  0x00000001048815e1: jge    0x0000000104881945  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)

  0x00000001048815e7: mov    0x8(%rsp),%rcx
  0x00000001048815ec: mov    %ebp,0x80(%rsp)    ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@30 (line 40)

  0x00000001048815f3: movzwl 0x10(%rcx,%r9,2),%r10d  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)

  0x00000001048815f9: mov    0x78(%rsp),%r11
  0x00000001048815fe: mov    0x80(%rsp),%r8d
  0x0000000104881606: lea    0x10(%r11,%r8,4),%r11  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x000000010488160b: mov    %r11,0x10(%rsp)
  0x0000000104881610: mov    0x68(%rsp),%r8d
  0x0000000104881615: lea    0x10(%rcx,%r8,2),%r11  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488161a: mov    %r11,0x18(%rsp)
  0x000000010488161f: mov    %rcx,0x8(%rsp)
  0x0000000104881624: mov    0x74(%rsp),%r11d
  0x0000000104881629: sub    0x68(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488162e: mov    %r9d,%ecx
  0x0000000104881631: sub    0x68(%rsp),%ecx    ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881635: cmp    %ecx,%r11d
  0x0000000104881638: mov    %ecx,0x28(%rsp)
  0x000000010488163c: cmovl  %r11d,%ecx         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881640: mov    %ecx,0x20(%rsp)
  0x0000000104881644: mov    0x68(%rsp),%r11d
  0x0000000104881649: add    %ecx,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488164c: mov    %r9d,0x24(%rsp)
  0x0000000104881651: inc    %r9d               ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@62 (line 44)

  0x0000000104881654: mov    %r9d,0x2c(%rsp)
  0x0000000104881659: movslq %ecx,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488165c: mov    %r8,0x30(%rsp)
  0x0000000104881661: movslq 0x28(%rsp),%rdi    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881666: shl    %r8
  0x0000000104881669: movslq 0x28(%rsp),%rcx    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488166e: add    $0x10,%r8
  0x0000000104881672: mov    %r8,%r9
  0x0000000104881675: and    $0xfffffffffffffff9,%r9
  0x0000000104881679: shr    $0x3,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488167d: cmp    $0x2c,%r10d
  0x0000000104881681: jne    0x00000001048817da  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@40 (line 42)

  0x0000000104881687: mov    0x80(%rsp),%ebp
  0x000000010488168e: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@47 (line 43)

  0x0000000104881690: mov    0x28(%rsp),%r10d
  0x0000000104881695: test   %r10d,%r10d
  0x0000000104881698: jl     0x0000000104881a24  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488169e: cmp    $0x80000,%r10d
  0x00000001048816a5: ja     0x00000001048819a8
  0x00000001048816ab: shl    %rdi
  0x00000001048816ae: add    $0x17,%rdi
  0x00000001048816b2: mov    %rdi,0x38(%rsp)
  0x00000001048816b7: mov    %r10d,%ecx
  0x00000001048816ba: cmp    $0x80000,%ecx
  0x00000001048816c0: ja     0x0000000104881542
  0x00000001048816c6: mov    0x60(%r15),%rax
  0x00000001048816ca: mov    %rdi,%r10
  0x00000001048816cd: and    $0xfffffffffffffff8,%r10
  0x00000001048816d1: mov    %rax,%rcx
  0x00000001048816d4: add    %r10,%rcx
  0x00000001048816d7: cmp    0x70(%r15),%rcx
  0x00000001048816db: jae    0x0000000104881542
  0x00000001048816e1: mov    %rcx,0x60(%r15)
  0x00000001048816e5: prefetchnta 0xc0(%rcx)
  0x00000001048816ec: movq   $0x1,(%rax)
  0x00000001048816f3: prefetchnta 0x100(%rcx)
  0x00000001048816fa: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x0000000104881701: mov    0x28(%rsp),%r10d
  0x0000000104881706: mov    %r10d,0xc(%rax)
  0x000000010488170a: prefetchnta 0x140(%rcx)
  0x0000000104881711: prefetchnta 0x180(%rcx)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881718: mov    %rax,0x40(%rsp)
  0x000000010488171d: mov    %rax,%rdx
  0x0000000104881720: add    $0x10,%rdx
  0x0000000104881724: mov    0x38(%rsp),%rbx
  0x0000000104881729: shr    $0x3,%rbx
  0x000000010488172d: mov    %rbx,%rcx
  0x0000000104881730: add    $0xfffffffffffffffe,%rcx
  0x0000000104881734: mov    0x68(%rsp),%r10d
  0x0000000104881739: test   %r10d,%r10d
  0x000000010488173c: jl     0x00000001048819d5
  0x0000000104881742: mov    0x74(%rsp),%edi
  0x0000000104881746: cmp    %r11d,%edi
  0x0000000104881749: jb     0x00000001048819d5
  0x000000010488174f: mov    0x28(%rsp),%r11d
  0x0000000104881754: cmp    0x20(%rsp),%r11d
  0x0000000104881759: jb     0x00000001048819d5
  0x000000010488175f: mov    0x20(%rsp),%r10d
  0x0000000104881764: test   %r10d,%r10d
  0x0000000104881767: jle    0x0000000104881a0d
  0x000000010488176d: cmp    0x28(%rsp),%r10d
  0x0000000104881772: jl     0x00000001048815ab
  0x0000000104881778: mov    0x18(%rsp),%rdi
  0x000000010488177d: mov    %rdx,%rsi
  0x0000000104881780: mov    0x30(%rsp),%rdx
  0x0000000104881785: movabs $0x104829580,%r10
  0x000000010488178f: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881792: mov    0x80(%rsp),%r10d
  0x000000010488179a: cmp    0x6c(%rsp),%r10d
  0x000000010488179f: jae    0x00000001048819b0
  0x00000001048817a5: mov    0x40(%rsp),%r10
  0x00000001048817aa: shr    $0x3,%r10
  0x00000001048817ae: mov    0x10(%rsp),%r11
  0x00000001048817b3: mov    %r10d,(%r11)
  0x00000001048817b6: mov    %r11,%r10
  0x00000001048817b9: shr    $0x9,%r10
  0x00000001048817bd: movabs $0x104297000,%r11
  0x00000001048817c7: mov    %r12b,(%r11,%r10,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)

  0x00000001048817cb: mov    0x2c(%rsp),%r10d
  0x00000001048817d0: mov    %r10d,0x68(%rsp)
  0x00000001048817d5: jmpq   0x00000001048815d7
  0x00000001048817da: cmp    $0xa,%r10d
  0x00000001048817de: jne    0x00000001048815d0  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@72 (line 45)

  0x00000001048817e4: mov    0x28(%rsp),%ebx
  0x00000001048817e8: test   %ebx,%ebx
  0x00000001048817ea: jl     0x0000000104881add  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048817f0: cmp    $0x80000,%ebx
  0x00000001048817f6: ja     0x0000000104881a69
  0x00000001048817fc: shl    %rdi
  0x00000001048817ff: add    $0x17,%rdi         ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881803: mov    %rdi,%r10
  0x0000000104881806: shr    $0x3,%r10
  0x000000010488180a: mov    %r10,0x38(%rsp)
  0x000000010488180f: mov    %r10,%rbp
  0x0000000104881812: add    $0xfffffffffffffffe,%rbp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881816: mov    %rbp,0x40(%rsp)
  0x000000010488181b: mov    %ebx,%ecx
  0x000000010488181d: cmp    $0x80000,%ecx
  0x0000000104881823: ja     0x0000000104881954
  0x0000000104881829: mov    0x60(%r15),%rbp
  0x000000010488182d: and    $0xfffffffffffffff8,%rdi
  0x0000000104881831: mov    %rbp,%r10
  0x0000000104881834: add    %rdi,%r10
  0x0000000104881837: cmp    0x70(%r15),%r10
  0x000000010488183b: jae    0x0000000104881954
  0x0000000104881841: mov    %r10,0x60(%r15)
  0x0000000104881845: prefetchnta 0xc0(%r10)
  0x000000010488184d: movq   $0x1,0x0(%rbp)
  0x0000000104881855: prefetchnta 0x100(%r10)
  0x000000010488185d: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000104881864: mov    %ecx,0xc(%rbp)
  0x0000000104881867: prefetchnta 0x140(%r10)
  0x000000010488186f: prefetchnta 0x180(%r10)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881877: mov    %rbp,0x48(%rsp)
  0x000000010488187c: mov    %rbp,%rsi
  0x000000010488187f: add    $0x10,%rsi
  0x0000000104881883: mov    0x68(%rsp),%r10d
  0x0000000104881888: test   %r10d,%r10d
  0x000000010488188b: jl     0x0000000104881a85
  0x0000000104881891: mov    0x74(%rsp),%ecx
  0x0000000104881895: cmp    %r11d,%ecx
  0x0000000104881898: jb     0x0000000104881a85
  0x000000010488189e: mov    0x28(%rsp),%r11d
  0x00000001048818a3: cmp    0x20(%rsp),%r11d
  0x00000001048818a8: jb     0x0000000104881a85
  0x00000001048818ae: mov    0x20(%rsp),%r10d
  0x00000001048818b3: test   %r10d,%r10d
  0x00000001048818b6: jle    0x0000000104881ac1
  0x00000001048818bc: cmp    0x28(%rsp),%r10d
  0x00000001048818c1: jl     0x000000010488158e
  0x00000001048818c7: mov    0x18(%rsp),%rdi
  0x00000001048818cc: mov    0x30(%rsp),%rdx
  0x00000001048818d1: movabs $0x104829580,%r10
  0x00000001048818db: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048818de: mov    0x80(%rsp),%r10d
  0x00000001048818e6: cmp    0x6c(%rsp),%r10d
  0x00000001048818eb: jae    0x0000000104881a49
  0x00000001048818f1: mov    0x10(%rsp),%r11
  0x00000001048818f6: mov    %r11,%r8
  0x00000001048818f9: mov    0x48(%rsp),%r10
  0x00000001048818fe: shr    $0x3,%r10
  0x0000000104881902: mov    %r10d,(%r11)
  0x0000000104881905: shr    $0x9,%r8
  0x0000000104881909: movabs $0x104297000,%r10
  0x0000000104881913: mov    %r12b,(%r10,%r8,1)
  0x0000000104881917: mov    (%rsp),%r10
  0x000000010488191b: test   %r10,%r10
  0x000000010488191e: je     0x0000000104881a71  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x0000000104881924: mov    (%rsp),%rsi
  0x0000000104881928: mov    0x78(%rsp),%rdx
  0x000000010488192d: xchg   %ax,%ax
  0x000000010488192f: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [112]=NarrowOop [120]=Oop off=1300}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {optimized virtual_call}
  0x0000000104881934: mov    0x2c(%rsp),%r10d
  0x0000000104881939: mov    %r10d,0x68(%rsp)
  0x000000010488193e: xor    %ebp,%ebp
  0x0000000104881940: jmpq   0x00000001048815d7  ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@26 (line 39)

  0x0000000104881945: add    $0xb0,%rsp
  0x000000010488194c: pop    %rbp
  0x000000010488194d: test   %eax,-0x2097953(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104881953: retq   
  0x0000000104881954: mov    %r9,0x90(%rsp)
  0x000000010488195c: mov    %r8,0x88(%rsp)
  0x0000000104881964: mov    %r11d,0x84(%rsp)   ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x000000010488196c: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104881976: mov    %ecx,%edx
  0x0000000104881978: mov    0x78(%rsp),%r10
  0x000000010488197d: mov    %r10,0x50(%rsp)
  0x0000000104881982: nop
  0x0000000104881983: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Derived_oop_[80] [24]=Derived_oop_[8] [80]=Oop [112]=NarrowOop [120]=Oop off=1384}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104881988: mov    %rax,%rbp
  0x000000010488198b: mov    0x84(%rsp),%r11d
  0x0000000104881993: mov    0x88(%rsp),%r8
  0x000000010488199b: mov    0x90(%rsp),%r9
  0x00000001048819a3: jmpq   0x0000000104881877
  0x00000001048819a8: mov    %rcx,%rdi
  0x00000001048819ab: jmpq   0x00000001048816ab
  0x00000001048819b0: mov    $0xffffffe4,%esi
  0x00000001048819b5: mov    0x78(%rsp),%r11
  0x00000001048819ba: mov    0x24(%rsp),%r8d
  0x00000001048819bf: mov    %r8d,0x10(%rsp)
  0x00000001048819c4: mov    %r11,0x18(%rsp)
  0x00000001048819c9: xchg   %ax,%ax
  0x00000001048819cb: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop [64]=Oop [112]=NarrowOop [120]=Oop off=1456}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x00000001048819d0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048819d5: mov    %rdx,%rdi
  0x00000001048819d8: xor    %rax,%rax
  0x00000001048819db: shl    $0x3,%rcx
  0x00000001048819df: rep rex.W stos %al,%es:(%rdi)
  0x00000001048819e2: mov    0x8(%rsp),%rsi
  0x00000001048819e7: mov    0x68(%rsp),%edx
  0x00000001048819eb: mov    0x40(%rsp),%rcx
  0x00000001048819f0: xor    %r8d,%r8d
  0x00000001048819f3: mov    0x20(%rsp),%r9d
  0x00000001048819f8: mov    0x78(%rsp),%r10
  0x00000001048819fd: mov    %r10,0x30(%rsp)
  0x0000000104881a02: nop
  0x0000000104881a03: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Derived_oop_[48] [48]=Oop [64]=Oop [112]=NarrowOop [120]=Oop off=1512}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104881a08: jmpq   0x0000000104881792
  0x0000000104881a0d: test   %r10d,%r10d
  0x0000000104881a10: jl     0x00000001048819d5
  0x0000000104881a12: mov    %rdx,%rdi
  0x0000000104881a15: xor    %rax,%rax
  0x0000000104881a18: shl    $0x3,%rcx
  0x0000000104881a1c: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881a1f: jmpq   0x0000000104881792  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881a24: mov    $0xffffff65,%esi
  0x0000000104881a29: mov    0x78(%rsp),%r10
  0x0000000104881a2e: mov    %r10,0x18(%rsp)
  0x0000000104881a33: mov    0x70(%rsp),%r11d
  0x0000000104881a38: mov    %r11d,0x34(%rsp)
  0x0000000104881a3d: xchg   %ax,%ax
  0x0000000104881a3f: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [24]=Oop [52]=NarrowOop [112]=NarrowOop [120]=Oop off=1572}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104881a44: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104881a49: mov    $0xffffffe4,%esi
  0x0000000104881a4e: mov    (%rsp),%rbp
  0x0000000104881a52: mov    0x78(%rsp),%r11
  0x0000000104881a57: mov    %r11,0x10(%rsp)
  0x0000000104881a5c: data32 xchg %ax,%ax
  0x0000000104881a5f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop [72]=Oop [112]=NarrowOop [120]=Oop off=1604}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x0000000104881a64: callq  0x0000000103c85e14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x0000000104881a69: mov    %rcx,%rdi
  0x0000000104881a6c: jmpq   0x00000001048817fc
  0x0000000104881a71: mov    $0xfffffff6,%esi
  0x0000000104881a76: mov    0x78(%rsp),%rbp
  0x0000000104881a7b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1632}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {runtime_call}
  0x0000000104881a80: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104881a85: mov    0x40(%rsp),%rcx
  0x0000000104881a8a: mov    %rsi,%rdi
  0x0000000104881a8d: xor    %rax,%rax
  0x0000000104881a90: shl    $0x3,%rcx
  0x0000000104881a94: rep rex.W stos %al,%es:(%rdi)
  0x0000000104881a97: mov    0x8(%rsp),%rsi
  0x0000000104881a9c: mov    0x68(%rsp),%edx
  0x0000000104881aa0: mov    %rbp,%rcx
  0x0000000104881aa3: xor    %r8d,%r8d
  0x0000000104881aa6: mov    0x20(%rsp),%r9d
  0x0000000104881aab: mov    0x78(%rsp),%r10
  0x0000000104881ab0: mov    %r10,0x30(%rsp)
  0x0000000104881ab5: xchg   %ax,%ax
  0x0000000104881ab7: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Derived_oop_[48] [48]=Oop [72]=Oop [112]=NarrowOop [120]=Oop off=1692}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104881abc: jmpq   0x00000001048818de
  0x0000000104881ac1: test   %r10d,%r10d
  0x0000000104881ac4: jl     0x0000000104881a85
  0x0000000104881ac6: mov    0x40(%rsp),%rcx
  0x0000000104881acb: mov    %rsi,%rdi
  0x0000000104881ace: xor    %rax,%rax
  0x0000000104881ad1: shl    $0x3,%rcx
  0x0000000104881ad5: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881ad8: jmpq   0x00000001048818de  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881add: mov    $0xffffff65,%esi
  0x0000000104881ae2: mov    (%rsp),%rbp
  0x0000000104881ae6: mov    0x78(%rsp),%r10
  0x0000000104881aeb: mov    0x24(%rsp),%r11d
  0x0000000104881af0: mov    %r11d,0x8(%rsp)
  0x0000000104881af5: mov    %r10,0x10(%rsp)
  0x0000000104881afa: mov    %ebx,0x24(%rsp)
  0x0000000104881afe: mov    0x70(%rsp),%r10d
  0x0000000104881b03: mov    %r10d,%r11d
  0x0000000104881b06: mov    %r11d,0x2c(%rsp)
  0x0000000104881b0b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [16]=Oop [44]=NarrowOop [112]=NarrowOop [120]=Oop off=1776}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104881b10: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104881b15: mov    %r11d,0x8(%rsp)
  0x0000000104881b1a: mov    %edx,%ebp
  0x0000000104881b1c: movabs $0x7c00c1378,%rsi  ;   {metadata({type array char}[])}
  0x0000000104881b26: nop
  0x0000000104881b27: callq  0x0000000104846a60  ; OopMap{[0]=Oop [8]=NarrowOop off=1804}
                                                ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@9 (line 35)
                                                ;   {runtime_call}
  0x0000000104881b2c: mov    %ebp,%edx
  0x0000000104881b2e: mov    0x8(%rsp),%r11d
  0x0000000104881b33: mov    %rax,%r13
  0x0000000104881b36: jmpq   0x00000001048814ec
  0x0000000104881b3b: movslq %edx,%rcx          ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@9 (line 35)

  0x0000000104881b3e: jmpq   0x0000000104881468
  0x0000000104881b43: mov    $0xffffff86,%esi
  0x0000000104881b48: mov    (%rsp),%rbp
  0x0000000104881b4c: mov    %r13,(%rsp)
  0x0000000104881b50: mov    %r11d,0x8(%rsp)
  0x0000000104881b55: xchg   %ax,%ax
  0x0000000104881b57: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=NarrowOop off=1852}
                                                ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@30 (line 40)
                                                ;   {runtime_call}
  0x0000000104881b5c: callq  0x0000000103c85e14  ;*aload_3
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@30 (line 40)
                                                ;   {runtime_call}
  0x0000000104881b61: mov    $0xfffffff6,%esi
  0x0000000104881b66: nop
  0x0000000104881b67: callq  0x00000001047dc1a0  ; OopMap{off=1868}
                                                ;*getfield content
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@1 (line 32)
                                                ;   {runtime_call}
  0x0000000104881b6c: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104881b71: mov    $0xfffffff6,%esi
  0x0000000104881b76: nop
  0x0000000104881b77: callq  0x00000001047dc1a0  ; OopMap{off=1884}
                                                ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@26 (line 39)
                                                ;   {runtime_call}
  0x0000000104881b7c: callq  0x0000000103c85e14  ;*anewarray
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@9 (line 35)
                                                ;   {runtime_call}
  0x0000000104881b81: mov    %rax,%rsi
  0x0000000104881b84: jmp    0x0000000104881b97  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881b86: jmp    0x0000000104881b8a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881b88: jmp    0x0000000104881b8f  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104881b8a: mov    %rax,%rsi
  0x0000000104881b8d: jmp    0x0000000104881b97  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104881b8f: mov    %rax,%rsi
  0x0000000104881b92: jmp    0x0000000104881b97  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)

  0x0000000104881b94: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@-1 (line 32)

  0x0000000104881b97: add    $0xb0,%rsp
  0x0000000104881b9e: pop    %rbp
  0x0000000104881b9f: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104881ba4: hlt    
  0x0000000104881ba5: hlt    
  0x0000000104881ba6: hlt    
  0x0000000104881ba7: hlt    
  0x0000000104881ba8: hlt    
  0x0000000104881ba9: hlt    
  0x0000000104881baa: hlt    
  0x0000000104881bab: hlt    
  0x0000000104881bac: hlt    
  0x0000000104881bad: hlt    
  0x0000000104881bae: hlt    
  0x0000000104881baf: hlt    
  0x0000000104881bb0: hlt    
  0x0000000104881bb1: hlt    
  0x0000000104881bb2: hlt    
  0x0000000104881bb3: hlt    
  0x0000000104881bb4: hlt    
  0x0000000104881bb5: hlt    
  0x0000000104881bb6: hlt    
  0x0000000104881bb7: hlt    
  0x0000000104881bb8: hlt    
  0x0000000104881bb9: hlt    
  0x0000000104881bba: hlt    
  0x0000000104881bbb: hlt    
  0x0000000104881bbc: hlt    
  0x0000000104881bbd: hlt    
  0x0000000104881bbe: hlt    
  0x0000000104881bbf: hlt    
[Stub Code]
  0x0000000104881bc0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104881bca: jmpq   0x0000000104881bca  ;   {runtime_call}
[Exception Handler]
  0x0000000104881bcf: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104881bd4: callq  0x0000000104881bd9
  0x0000000104881bd9: subq   $0x5,(%rsp)
  0x0000000104881bde: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104881be3: hlt    
  0x0000000104881be4: hlt    
  0x0000000104881be5: hlt    
  0x0000000104881be6: hlt    
  0x0000000104881be7: hlt    
<nmethod compile_id='88' compiler='C2' entry='0x0000000104881420' size='4488' address='0x0000000104881290' relocation_offset='296' insts_offset='400' stub_offset='2352' scopes_data_offset='2432' scopes_pcs_offset='3128' dependencies_offset='4312' handler_table_offset='4320' nul_chk_table_offset='4464' oops_offset='2392' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='5089' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.510'/>
<writer thread='21251'/>
<task_queued compile_id='89' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='6024' iicount='2' decompiles='1' unstable_if_traps='1' osr_bci='23' stamp='1.510' comment='backedge_count' hot_count='6024'/>
<writer thread='19203'/>
<sweeper state='finished' traversals='1'  total_blobs='342' nmethods='88' adapters='205' free_code_cache='49650176' stamp='1.510'/>
<writer thread='19715'/>
Decoding compiled method 0x0000000104882450:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092e7a08} &apos;benchmarkDirect&apos; &apos;(Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V&apos; in &apos;org/github/arnaudroger/SimplifiedBenchmark&apos;
  0x00000001048825e0: callq  0x0000000103c85e14  ;   {runtime_call}
  0x00000001048825e5: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001048825f0: mov    %eax,-0x14000(%rsp)
  0x00000001048825f7: push   %rbp
  0x00000001048825f8: sub    $0xa0,%rsp
  0x00000001048825ff: mov    0x8(%rsi),%r10d
  0x0000000104882603: mov    %r10d,0x18(%rsp)
  0x0000000104882608: mov    0x10(%rsi),%r11d
  0x000000010488260c: mov    %r11d,0x28(%rsp)
  0x0000000104882611: mov    0x30(%rsi),%rbx
  0x0000000104882615: mov    0x28(%rsi),%rbp
  0x0000000104882619: mov    0x18(%rsi),%r10d
  0x000000010488261d: mov    %r10d,0x30(%rsp)
  0x0000000104882622: mov    0x20(%rsi),%r13
  0x0000000104882626: mov    %rsi,%rdi
  0x0000000104882629: movabs $0x103ce473e,%r10
  0x0000000104882633: callq  *%r10
  0x0000000104882636: test   %rbx,%rbx
  0x0000000104882639: je     0x0000000104882cad
  0x000000010488263f: mov    0x8(%rbx),%r10d
  0x0000000104882643: cmp    $0xf801540f,%r10d  ;   {metadata(&apos;org/openjdk/jmh/infra/Blackhole&apos;)}
  0x000000010488264a: jne    0x0000000104882cc8
  0x0000000104882650: mov    %rbx,%rdi
  0x0000000104882653: mov    %rbp,%r11
  0x0000000104882656: test   %rbp,%rbp
  0x0000000104882659: je     0x0000000104882cb4
  0x000000010488265f: mov    0x8(%rbp),%r8d
  0x0000000104882663: cmp    $0xf8000041,%r8d   ;   {metadata({type array char})}
  0x000000010488266a: jne    0x0000000104882ccb
  0x0000000104882670: mov    %rbp,%rcx
  0x0000000104882673: mov    %rcx,%r10
  0x0000000104882676: mov    %rcx,%rdx
  0x0000000104882679: test   %r13,%r13
  0x000000010488267c: je     0x0000000104882cc0
  0x0000000104882682: mov    0x8(%r13),%r9d
  0x0000000104882686: cmp    $0xf801826f,%r9d   ;   {metadata({type array char}[])}
  0x000000010488268d: jne    0x0000000104882ccb
  0x0000000104882693: mov    %r13,%r9           ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)

  0x0000000104882696: mov    0xc(%rcx),%r11d    ;*arraylength
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@26 (line 39)
                                                ; implicit exception: dispatches to 0x0000000104882d19
  0x000000010488269a: jmp    0x000000010488270b
  0x000000010488269c: mov    %r9,0x80(%rsp)
  0x00000001048826a4: mov    %r8,0x78(%rsp)
  0x00000001048826a9: mov    %ebx,0x54(%rsp)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048826ad: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x00000001048826b7: mov    0x50(%rsp),%edx
  0x00000001048826bb: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [72]=Derived_oop_[56] off=224}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x00000001048826c0: mov    0x54(%rsp),%ebx
  0x00000001048826c4: mov    0x78(%rsp),%r8
  0x00000001048826c9: mov    0x80(%rsp),%r9
  0x00000001048826d1: jmpq   0x00000001048829d2
  0x00000001048826d6: data32 nopw 0x0(%rax,%rax,1)
  0x00000001048826e0: mov    0x28(%rsp),%ebp
  0x00000001048826e4: mov    0x20(%rsp),%r9     ; OopMap{r9=Oop [0]=Oop [8]=Oop [16]=Oop [56]=Oop off=265}
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@109 (line 39)

  0x00000001048826e9: test   %eax,-0x20986ef(%rip)        # 0x00000001027ea000
                                                ;*goto
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@109 (line 39)
                                                ;   {poll}
  0x00000001048826ef: mov    %ebp,0x28(%rsp)
  0x00000001048826f3: mov    (%rsp),%rdi
  0x00000001048826f7: mov    0x38(%rsp),%rcx
  0x00000001048826fc: mov    0x8(%rsp),%rdx
  0x0000000104882701: mov    0x10(%rsp),%r10
  0x0000000104882706: mov    0x1c(%rsp),%r11d   ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)

  0x000000010488270b: mov    0x18(%rsp),%r8d
  0x0000000104882710: cmp    %r11d,%r8d
  0x0000000104882713: jge    0x0000000104882b05  ;*if_icmpge
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@27 (line 39)

  0x0000000104882719: cmp    %r11d,%r8d
  0x000000010488271c: jae    0x0000000104882b14
  0x0000000104882722: mov    %r10,0x10(%rsp)
  0x0000000104882727: mov    %rdx,0x8(%rsp)
  0x000000010488272c: mov    %rdi,(%rsp)
  0x0000000104882730: mov    %rax,-0x8(%rsp)
  0x0000000104882735: mov    0x18(%rsp),%eax
  0x0000000104882739: mov    %eax,0x34(%rsp)
  0x000000010488273d: mov    -0x8(%rsp),%rax
  0x0000000104882742: movzwl 0x10(%rcx,%r8,2),%edi  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)

  0x0000000104882748: mov    0x28(%rsp),%r10d
  0x000000010488274d: lea    0x10(%r9,%r10,4),%r10  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x0000000104882752: mov    %r10,0x40(%rsp)
  0x0000000104882757: mov    %r9,0x20(%rsp)
  0x000000010488275c: mov    0x30(%rsp),%ebx
  0x0000000104882760: lea    0x10(%rcx,%rbx,2),%r10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882765: mov    %r10,0x48(%rsp)
  0x000000010488276a: mov    %rcx,0x38(%rsp)
  0x000000010488276f: mov    %r11d,0x1c(%rsp)
  0x0000000104882774: sub    0x30(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882779: sub    0x30(%rsp),%r8d    ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x000000010488277e: cmp    %r8d,%r11d
  0x0000000104882781: mov    %r8d,0x50(%rsp)
  0x0000000104882786: cmovl  %r11d,%r8d         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x000000010488278a: mov    %r8d,0x2c(%rsp)
  0x000000010488278f: add    %r8d,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882792: mov    0x18(%rsp),%r10d
  0x0000000104882797: inc    %r10d              ;*iadd
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@62 (line 44)

  0x000000010488279a: mov    %r10d,0x18(%rsp)
  0x000000010488279f: movslq %r8d,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048827a2: mov    %r10,0x58(%rsp)
  0x00000001048827a7: movslq 0x50(%rsp),%rcx    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048827ac: mov    %r10,%r8
  0x00000001048827af: shl    %r8
  0x00000001048827b2: movslq 0x50(%rsp),%r10    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048827b7: add    $0x10,%r8
  0x00000001048827bb: mov    %r8,%r9
  0x00000001048827be: and    $0xfffffffffffffff9,%r9
  0x00000001048827c2: shr    $0x3,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048827c6: cmp    $0x2c,%edi
  0x00000001048827c9: je     0x0000000104882942  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@40 (line 42)

  0x00000001048827cf: cmp    $0xa,%edi
  0x00000001048827d2: jne    0x00000001048826e0  ;*if_icmpne
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@72 (line 45)

  0x00000001048827d8: mov    0x50(%rsp),%edi
  0x00000001048827dc: test   %edi,%edi
  0x00000001048827de: jl     0x0000000104882c64  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048827e4: cmp    $0x80000,%edi
  0x00000001048827ea: ja     0x0000000104882be5
  0x00000001048827f0: shl    %rcx
  0x00000001048827f3: add    $0x17,%rcx
  0x00000001048827f7: mov    %rcx,0x60(%rsp)
  0x00000001048827fc: cmp    $0x80000,%edi
  0x0000000104882802: ja     0x0000000104882ac5
  0x0000000104882808: mov    0x60(%r15),%rbp
  0x000000010488280c: mov    %rcx,%r10
  0x000000010488280f: and    $0xfffffffffffffff8,%r10
  0x0000000104882813: mov    %rbp,%r11
  0x0000000104882816: add    %r10,%r11
  0x0000000104882819: cmp    0x70(%r15),%r11
  0x000000010488281d: jae    0x0000000104882ac5
  0x0000000104882823: mov    %r11,0x60(%r15)
  0x0000000104882827: prefetchnta 0xc0(%r11)
  0x000000010488282f: movq   $0x1,0x0(%rbp)
  0x0000000104882837: prefetchnta 0x100(%r11)
  0x000000010488283f: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000104882846: mov    %edi,0xc(%rbp)
  0x0000000104882849: prefetchnta 0x140(%r11)
  0x0000000104882851: prefetchnta 0x180(%r11)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882859: mov    %rbp,0x68(%rsp)
  0x000000010488285e: mov    %rbp,%r10
  0x0000000104882861: add    $0x10,%r10
  0x0000000104882865: mov    %r10,%rdx
  0x0000000104882868: mov    0x60(%rsp),%rbp
  0x000000010488286d: shr    $0x3,%rbp
  0x0000000104882871: mov    %rbp,%rcx
  0x0000000104882874: add    $0xfffffffffffffffe,%rcx
  0x0000000104882878: mov    0x30(%rsp),%r10d
  0x000000010488287d: test   %r10d,%r10d
  0x0000000104882880: jl     0x0000000104882c19
  0x0000000104882886: mov    0x1c(%rsp),%r11d
  0x000000010488288b: cmp    %ebx,%r11d
  0x000000010488288e: jb     0x0000000104882c19
  0x0000000104882894: mov    0x50(%rsp),%r11d
  0x0000000104882899: cmp    0x2c(%rsp),%r11d
  0x000000010488289e: jb     0x0000000104882c19
  0x00000001048828a4: mov    0x2c(%rsp),%r10d
  0x00000001048828a9: test   %r10d,%r10d
  0x00000001048828ac: jle    0x0000000104882c4d
  0x00000001048828b2: cmp    %r11d,%r10d
  0x00000001048828b5: jl     0x0000000104882aa8
  0x00000001048828bb: mov    0x48(%rsp),%rdi
  0x00000001048828c0: mov    %rdx,%rsi
  0x00000001048828c3: mov    0x58(%rsp),%rdx
  0x00000001048828c8: movabs $0x104829580,%r10
  0x00000001048828d2: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x00000001048828d5: mov    0x20(%rsp),%r11
  0x00000001048828da: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x0000000104882d09
  0x00000001048828de: mov    0x28(%rsp),%r10d
  0x00000001048828e3: cmp    %r9d,%r10d
  0x00000001048828e6: jae    0x0000000104882bed
  0x00000001048828ec: mov    0x40(%rsp),%r10
  0x00000001048828f1: mov    %r10,%r9
  0x00000001048828f4: mov    0x68(%rsp),%r8
  0x00000001048828f9: shr    $0x3,%r8
  0x00000001048828fd: mov    %r8d,(%r10)
  0x0000000104882900: shr    $0x9,%r9
  0x0000000104882904: movabs $0x104297000,%r10
  0x000000010488290e: mov    %r12b,(%r10,%r9,1)
  0x0000000104882912: mov    (%rsp),%r10
  0x0000000104882916: test   %r10,%r10
  0x0000000104882919: je     0x0000000104882c05  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)

  0x000000010488291f: mov    %r10,%rsi
  0x0000000104882922: mov    %r11,%rdx
  0x0000000104882925: xchg   %ax,%ax
  0x0000000104882927: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop off=844}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {optimized virtual_call}
  0x000000010488292c: mov    0x18(%rsp),%r11d
  0x0000000104882931: mov    %r11d,0x30(%rsp)
  0x0000000104882936: xor    %ebp,%ebp
  0x0000000104882938: mov    0x20(%rsp),%r9
  0x000000010488293d: jmpq   0x00000001048826e9
  0x0000000104882942: mov    0x28(%rsp),%ebp
  0x0000000104882946: inc    %ebp               ;*iinc
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@47 (line 43)

  0x0000000104882948: mov    0x50(%rsp),%r11d
  0x000000010488294d: test   %r11d,%r11d
  0x0000000104882950: jl     0x0000000104882bac  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882956: cmp    $0x80000,%r11d
  0x000000010488295d: ja     0x0000000104882b31
  0x0000000104882963: shl    %rcx
  0x0000000104882966: add    $0x17,%rcx
  0x000000010488296a: mov    %rcx,0x60(%rsp)
  0x000000010488296f: cmp    $0x80000,%r11d
  0x0000000104882976: ja     0x000000010488269c
  0x000000010488297c: mov    0x60(%r15),%rax
  0x0000000104882980: mov    %rcx,%r10
  0x0000000104882983: and    $0xfffffffffffffff8,%r10
  0x0000000104882987: mov    %rax,%r11
  0x000000010488298a: add    %r10,%r11
  0x000000010488298d: cmp    0x70(%r15),%r11
  0x0000000104882991: jae    0x000000010488269c
  0x0000000104882997: mov    %r11,0x60(%r15)
  0x000000010488299b: prefetchnta 0xc0(%r11)
  0x00000001048829a3: movq   $0x1,(%rax)
  0x00000001048829aa: prefetchnta 0x100(%r11)
  0x00000001048829b2: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x00000001048829b9: mov    0x50(%rsp),%r10d
  0x00000001048829be: mov    %r10d,0xc(%rax)
  0x00000001048829c2: prefetchnta 0x140(%r11)
  0x00000001048829ca: prefetchnta 0x180(%r11)   ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x00000001048829d2: mov    %rax,0x68(%rsp)
  0x00000001048829d7: mov    %rax,%rsi
  0x00000001048829da: add    $0x10,%rsi
  0x00000001048829de: mov    0x60(%rsp),%rdx
  0x00000001048829e3: shr    $0x3,%rdx
  0x00000001048829e7: mov    %rdx,%rcx
  0x00000001048829ea: add    $0xfffffffffffffffe,%rcx
  0x00000001048829ee: mov    0x30(%rsp),%r10d
  0x00000001048829f3: test   %r10d,%r10d
  0x00000001048829f6: jl     0x0000000104882b65
  0x00000001048829fc: mov    0x1c(%rsp),%r11d
  0x0000000104882a01: cmp    %ebx,%r11d
  0x0000000104882a04: jb     0x0000000104882b65
  0x0000000104882a0a: mov    0x50(%rsp),%r10d
  0x0000000104882a0f: cmp    0x2c(%rsp),%r10d
  0x0000000104882a14: jb     0x0000000104882b65
  0x0000000104882a1a: mov    0x2c(%rsp),%r11d
  0x0000000104882a1f: test   %r11d,%r11d
  0x0000000104882a22: jle    0x0000000104882b95
  0x0000000104882a28: cmp    %r10d,%r11d
  0x0000000104882a2b: jl     0x0000000104882a90
  0x0000000104882a2d: mov    0x48(%rsp),%rdi
  0x0000000104882a32: mov    0x58(%rsp),%rdx
  0x0000000104882a37: movabs $0x104829580,%r10
  0x0000000104882a41: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882a44: mov    0x20(%rsp),%r9
  0x0000000104882a49: mov    0xc(%r9),%r8d      ; implicit exception: dispatches to 0x0000000104882cf9
  0x0000000104882a4d: mov    0x28(%rsp),%r10d
  0x0000000104882a52: cmp    %r8d,%r10d
  0x0000000104882a55: jae    0x0000000104882b39
  0x0000000104882a5b: mov    0x40(%rsp),%r11
  0x0000000104882a60: mov    %r11,%r10
  0x0000000104882a63: mov    0x68(%rsp),%r8
  0x0000000104882a68: shr    $0x3,%r8
  0x0000000104882a6c: mov    %r8d,(%r11)
  0x0000000104882a6f: shr    $0x9,%r10
  0x0000000104882a73: movabs $0x104297000,%r11
  0x0000000104882a7d: mov    %r12b,(%r11,%r10,1)  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)

  0x0000000104882a81: mov    0x18(%rsp),%r10d
  0x0000000104882a86: mov    %r10d,0x30(%rsp)
  0x0000000104882a8b: jmpq   0x00000001048826e9
  0x0000000104882a90: mov    %rax,%rdi
  0x0000000104882a93: add    %r9,%rdi
  0x0000000104882a96: sub    %r8,%rdx
  0x0000000104882a99: mov    %rdx,%rcx
  0x0000000104882a9c: xor    %rax,%rax
  0x0000000104882a9f: shl    $0x3,%rcx
  0x0000000104882aa3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882aa6: jmp    0x0000000104882a2d
  0x0000000104882aa8: mov    0x68(%rsp),%rdi
  0x0000000104882aad: add    %r9,%rdi
  0x0000000104882ab0: sub    %r8,%rbp
  0x0000000104882ab3: mov    %rbp,%rcx
  0x0000000104882ab6: xor    %rax,%rax
  0x0000000104882ab9: shl    $0x3,%rcx
  0x0000000104882abd: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882ac0: jmpq   0x00000001048828bb
  0x0000000104882ac5: mov    %r9,0x80(%rsp)
  0x0000000104882acd: mov    %r8,0x78(%rsp)
  0x0000000104882ad2: mov    %ebx,0x54(%rsp)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882ad6: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
  0x0000000104882ae0: mov    %edi,%edx
  0x0000000104882ae2: mov    (%rsp),%rbp
  0x0000000104882ae6: nop
  0x0000000104882ae7: callq  0x0000000104846b60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [72]=Derived_oop_[56] off=1292}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104882aec: mov    %rax,%rbp
  0x0000000104882aef: mov    0x54(%rsp),%ebx
  0x0000000104882af3: mov    0x78(%rsp),%r8
  0x0000000104882af8: mov    0x80(%rsp),%r9
  0x0000000104882b00: jmpq   0x0000000104882859
  0x0000000104882b05: add    $0xa0,%rsp
  0x0000000104882b0c: pop    %rbp
  0x0000000104882b0d: test   %eax,-0x2098b13(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104882b13: retq   
  0x0000000104882b14: mov    $0xffffffe4,%esi
  0x0000000104882b19: mov    %rdi,%rbp
  0x0000000104882b1c: mov    %r9,0x8(%rsp)
  0x0000000104882b21: mov    %rcx,0x20(%rsp)
  0x0000000104882b26: nop
  0x0000000104882b27: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [8]=Oop [32]=Oop off=1356}
                                                ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)
                                                ;   {runtime_call}
  0x0000000104882b2c: callq  0x0000000103c85e14  ;*caload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@33 (line 40)
                                                ;   {runtime_call}
  0x0000000104882b31: mov    %r10,%rcx
  0x0000000104882b34: jmpq   0x0000000104882963
  0x0000000104882b39: mov    $0xffffffe4,%esi
  0x0000000104882b3e: mov    0x34(%rsp),%r8d
  0x0000000104882b43: mov    %r8d,0x18(%rsp)
  0x0000000104882b48: mov    %rax,-0x8(%rsp)
  0x0000000104882b4d: mov    0x28(%rsp),%eax
  0x0000000104882b51: mov    %eax,0x1c(%rsp)
  0x0000000104882b55: mov    -0x8(%rsp),%rax
  0x0000000104882b5a: nop
  0x0000000104882b5b: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [32]=Oop [56]=Oop [104]=Oop off=1408}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x0000000104882b60: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104882b65: mov    %rsi,%rdi
  0x0000000104882b68: xor    %rax,%rax
  0x0000000104882b6b: shl    $0x3,%rcx
  0x0000000104882b6f: rep rex.W stos %al,%es:(%rdi)
  0x0000000104882b72: mov    0x8(%rsp),%rsi
  0x0000000104882b77: mov    0x30(%rsp),%edx
  0x0000000104882b7b: mov    0x68(%rsp),%rcx
  0x0000000104882b80: xor    %r8d,%r8d
  0x0000000104882b83: mov    0x2c(%rsp),%r9d
  0x0000000104882b88: data32 xchg %ax,%ax
  0x0000000104882b8b: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [104]=Oop off=1456}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104882b90: jmpq   0x0000000104882a44
  0x0000000104882b95: test   %r11d,%r11d
  0x0000000104882b98: jl     0x0000000104882b65
  0x0000000104882b9a: mov    %rsi,%rdi
  0x0000000104882b9d: xor    %rax,%rax
  0x0000000104882ba0: shl    $0x3,%rcx
  0x0000000104882ba4: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882ba7: jmpq   0x0000000104882a44  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882bac: mov    $0xffffff65,%esi
  0x0000000104882bb1: mov    0x38(%rsp),%r10
  0x0000000104882bb6: mov    %r10,0x8(%rsp)
  0x0000000104882bbb: mov    0x34(%rsp),%r10d
  0x0000000104882bc0: mov    %r10d,0x18(%rsp)
  0x0000000104882bc5: mov    0x28(%rsp),%r11d
  0x0000000104882bca: mov    %r11d,0x1c(%rsp)
  0x0000000104882bcf: mov    0x50(%rsp),%r10d
  0x0000000104882bd4: mov    %r10d,0x3c(%rsp)
  0x0000000104882bd9: xchg   %ax,%ax
  0x0000000104882bdb: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [32]=Oop off=1536}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104882be0: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)
                                                ;   {runtime_call}
  0x0000000104882be5: mov    %r10,%rcx
  0x0000000104882be8: jmpq   0x00000001048827f0
  0x0000000104882bed: mov    $0xffffffe4,%esi
  0x0000000104882bf2: mov    (%rsp),%rbp
  0x0000000104882bf6: mov    %r11,0x18(%rsp)
  0x0000000104882bfb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [24]=Oop [56]=Oop [104]=Oop off=1568}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x0000000104882c00: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104882c05: mov    $0xfffffff6,%esi
  0x0000000104882c0a: mov    %r11,%rbp
  0x0000000104882c0d: xchg   %ax,%ax
  0x0000000104882c0f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop off=1588}
                                                ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)
                                                ;   {runtime_call}
  0x0000000104882c14: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104882c19: mov    %rdx,%rdi
  0x0000000104882c1c: xor    %rax,%rax
  0x0000000104882c1f: shl    $0x3,%rcx
  0x0000000104882c23: rep rex.W stos %al,%es:(%rdi)
  0x0000000104882c26: mov    0x10(%rsp),%rsi
  0x0000000104882c2b: mov    0x30(%rsp),%edx
  0x0000000104882c2f: mov    0x68(%rsp),%rcx
  0x0000000104882c34: xor    %r8d,%r8d
  0x0000000104882c37: mov    0x2c(%rsp),%r9d
  0x0000000104882c3c: mov    (%rsp),%rbp
  0x0000000104882c40: data32 xchg %ax,%ax
  0x0000000104882c43: callq  0x0000000104844620  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [56]=Oop [64]=Derived_oop_[32] [104]=Oop off=1640}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104882c48: jmpq   0x00000001048828d5
  0x0000000104882c4d: test   %r10d,%r10d
  0x0000000104882c50: jl     0x0000000104882c19
  0x0000000104882c52: mov    %rdx,%rdi
  0x0000000104882c55: xor    %rax,%rax
  0x0000000104882c58: shl    $0x3,%rcx
  0x0000000104882c5c: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882c5f: jmpq   0x00000001048828d5  ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882c64: mov    $0xffffff65,%esi
  0x0000000104882c69: mov    (%rsp),%rbp
  0x0000000104882c6d: mov    0x38(%rsp),%r10
  0x0000000104882c72: mov    %r10,(%rsp)
  0x0000000104882c76: mov    0x20(%rsp),%r10
  0x0000000104882c7b: mov    %r10,0x8(%rsp)
  0x0000000104882c80: mov    0x34(%rsp),%r10d
  0x0000000104882c85: mov    %r10d,0x10(%rsp)
  0x0000000104882c8a: mov    0x28(%rsp),%r11d
  0x0000000104882c8f: mov    %r11d,0x14(%rsp)
  0x0000000104882c94: mov    0x30(%rsp),%r11d
  0x0000000104882c99: mov    %r11d,0x28(%rsp)
  0x0000000104882c9e: mov    %edi,0x34(%rsp)
  0x0000000104882ca2: nop
  0x0000000104882ca3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1736}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104882ca8: callq  0x0000000103c85e14  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104882cad: xor    %edi,%edi
  0x0000000104882caf: jmpq   0x0000000104882653
  0x0000000104882cb4: xor    %ecx,%ecx
  0x0000000104882cb6: xor    %edx,%edx
  0x0000000104882cb8: xor    %r10d,%r10d
  0x0000000104882cbb: jmpq   0x0000000104882679
  0x0000000104882cc0: xor    %r9d,%r9d
  0x0000000104882cc3: jmpq   0x0000000104882696
  0x0000000104882cc8: mov    %rbp,%r11
  0x0000000104882ccb: mov    $0xffffff9d,%esi
  0x0000000104882cd0: mov    0x30(%rsp),%ebp
  0x0000000104882cd4: mov    0x18(%rsp),%r10d
  0x0000000104882cd9: mov    %r10d,0x4(%rsp)
  0x0000000104882cde: mov    %rbx,0x8(%rsp)
  0x0000000104882ce3: mov    %r11,0x10(%rsp)
  0x0000000104882ce8: mov    %r13,0x18(%rsp)
  0x0000000104882ced: xchg   %ax,%ax
  0x0000000104882cef: callq  0x00000001047dc1a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=1812}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x0000000104882cf4: callq  0x0000000103c85e14  ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x0000000104882cf9: mov    $0xfffffff6,%esi
  0x0000000104882cfe: nop
  0x0000000104882cff: callq  0x00000001047dc1a0  ; OopMap{[104]=Oop off=1828}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x0000000104882d04: callq  0x0000000103c85e14  ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@58 (line 43)
                                                ;   {runtime_call}
  0x0000000104882d09: mov    $0xfffffff6,%esi
  0x0000000104882d0e: nop
  0x0000000104882d0f: callq  0x00000001047dc1a0  ; OopMap{[104]=Oop off=1844}
                                                ;*aastore
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@90 (line 46)
                                                ;   {runtime_call}
  0x0000000104882d14: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104882d19: mov    $0xffffff86,%esi
  0x0000000104882d1e: mov    %rdi,%rbp
  0x0000000104882d21: mov    %rcx,(%rsp)
  0x0000000104882d25: mov    %r9,0x8(%rsp)
  0x0000000104882d2a: nop
  0x0000000104882d2b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=1872}
                                                ;*iload
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@23 (line 39)
                                                ;   {runtime_call}
  0x0000000104882d30: callq  0x0000000103c85e14  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)
                                                ;   {runtime_call}
  0x0000000104882d35: jmp    0x0000000104882d39  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882d37: jmp    0x0000000104882d3e  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@87 (line 46)

  0x0000000104882d39: mov    %rax,%rsi
  0x0000000104882d3c: jmp    0x0000000104882d46  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@55 (line 43)

  0x0000000104882d3e: mov    %rax,%rsi
  0x0000000104882d41: jmp    0x0000000104882d46  ;*invokevirtual consume
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@100 (line 48)

  0x0000000104882d43: mov    %rax,%rsi          ;*synchronization entry
                                                ; - org.github.arnaudroger.SimplifiedBenchmark::benchmarkDirect@-1 (line 32)

  0x0000000104882d46: add    $0xa0,%rsp
  0x0000000104882d4d: pop    %rbp
  0x0000000104882d4e: jmpq   0x00000001048446e0  ;   {runtime_call}
  0x0000000104882d53: hlt    
  0x0000000104882d54: hlt    
  0x0000000104882d55: hlt    
  0x0000000104882d56: hlt    
  0x0000000104882d57: hlt    
  0x0000000104882d58: hlt    
  0x0000000104882d59: hlt    
  0x0000000104882d5a: hlt    
  0x0000000104882d5b: hlt    
  0x0000000104882d5c: hlt    
  0x0000000104882d5d: hlt    
  0x0000000104882d5e: hlt    
  0x0000000104882d5f: hlt    
[Stub Code]
  0x0000000104882d60: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104882d6a: jmpq   0x0000000104882d6a  ;   {runtime_call}
[Exception Handler]
  0x0000000104882d6f: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104882d74: callq  0x0000000104882d79
  0x0000000104882d79: subq   $0x5,(%rsp)
  0x0000000104882d7e: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104882d83: hlt    
  0x0000000104882d84: hlt    
  0x0000000104882d85: hlt    
  0x0000000104882d86: hlt    
  0x0000000104882d87: hlt    
<nmethod compile_id='89' compile_kind='osr' compiler='C2' entry='0x00000001048825e0' size='4304' address='0x0000000104882450' relocation_offset='296' insts_offset='400' stub_offset='2320' scopes_data_offset='2408' scopes_pcs_offset='3104' dependencies_offset='4144' handler_table_offset='4152' nul_chk_table_offset='4272' oops_offset='2360' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='6019' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.525'/>
<writer thread='21251'/>
[Loaded org.apache.commons.math3.stat.descriptive.StatisticalSummary from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Statistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.Aggregator from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.Deduplicator from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.ResultRole from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.AbstractStatistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.util.SingletonStatistics from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.options.TimeValue$1 from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.results.AggregationPolicy from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
<writer thread='7171'/>
[Loaded org.openjdk.jmh.results.IterationResultMetaData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded java.util.Collections$SingletonSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor30 from __JVM_DefineClass__]
<task_queued compile_id='90' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5000' iicount='25' stamp='2.372' comment='count' hot_count='5001'/>
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor31 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor32 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor33 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor34 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor35 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor36 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor37 from __JVM_DefineClass__]
<writer thread='19203'/>
Decoding compiled method 0x0000000104886c10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001092124d8} &apos;matchFields&apos; &apos;([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;&apos; in &apos;java/io/ObjectStreamClass&apos;
  # parm0:    rsi:rsi   = &apos;[Ljava/io/ObjectStreamField;&apos;
  # parm1:    rdx:rdx   = &apos;java/io/ObjectStreamClass&apos;
  #           [sp+0xd0]  (sp of caller)
  0x0000000104886f80: mov    %eax,-0x14000(%rsp)
  0x0000000104886f87: push   %rbp
  0x0000000104886f88: sub    $0xc0,%rsp         ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x0000000104886f8f: test   %rdx,%rdx
  0x0000000104886f92: je     0x0000000104887f84  ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104886f98: mov    0x38(%rdx),%r11d
  0x0000000104886f9c: mov    %r11,%r8
  0x0000000104886f9f: shl    $0x3,%r8           ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104886fa3: mov    %rsi,%r9
  0x0000000104886fa6: mov    0xc(%rsi),%r10d    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ; implicit exception: dispatches to 0x0000000104888d05
  0x0000000104886faa: cmp    $0x40000,%r10d
  0x0000000104886fb1: ja     0x00000001048881d5
  0x0000000104886fb7: mov    0x60(%r15),%rsi
  0x0000000104886fbb: movslq %r10d,%rcx
  0x0000000104886fbe: shl    $0x2,%rcx
  0x0000000104886fc2: add    $0x17,%rcx
  0x0000000104886fc6: mov    %rcx,%r11
  0x0000000104886fc9: and    $0xfffffffffffffff8,%r11
  0x0000000104886fcd: mov    %rsi,%rbx
  0x0000000104886fd0: add    %r11,%rbx
  0x0000000104886fd3: cmp    0x70(%r15),%rbx
  0x0000000104886fd7: jae    0x00000001048881d5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104886fdd: mov    %rbx,0x60(%r15)    ;*isub
                                                ; - java.lang.String::&lt;init&gt;@54 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104886fe1: prefetchnta 0xc0(%rbx)
  0x0000000104886fe8: movq   $0x1,(%rsi)
  0x0000000104886fef: prefetchnta 0x100(%rbx)   ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104886ff6: movl   $0xf8002678,0x8(%rsi)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x0000000104886ffd: mov    %r10d,0xc(%rsi)    ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887001: prefetchnta 0x140(%rbx)
  0x0000000104887008: mov    %rsi,%rdi
  0x000000010488700b: add    $0x10,%rdi
  0x000000010488700f: prefetchnta 0x180(%rbx)   ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887016: shr    $0x3,%rcx
  0x000000010488701a: add    $0xfffffffffffffffe,%rcx
  0x000000010488701e: xor    %rax,%rax
  0x0000000104887021: shl    $0x3,%rcx
  0x0000000104887025: rep rex.W stos %al,%es:(%rdi)  ;*iadd
                                                ; - java.lang.String::&lt;init&gt;@74 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887028: mov    %rsi,%rbx          ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x000000010488702b: test   %r10d,%r10d
  0x000000010488702e: jle    0x0000000104887eee  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887034: test   %r10d,%r10d
  0x0000000104887037: jbe    0x0000000104888a05  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x000000010488703d: mov    %r10d,%r11d
  0x0000000104887040: dec    %r11d
  0x0000000104887043: cmp    %r10d,%r11d
  0x0000000104887046: jae    0x0000000104888a05  ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x000000010488704c: mov    0xc(%r8),%r11d     ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@34 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888a05
  0x0000000104887050: test   %r11d,%r11d
  0x0000000104887053: jle    0x0000000104888a05
  0x0000000104887059: test   %r11d,%r11d
  0x000000010488705c: jbe    0x0000000104888a05  ;*aastore
                                                ; - java.io.ObjectStreamClass::matchFields@238 (line 2315)

  0x0000000104887062: mov    %r11d,%ecx
  0x0000000104887065: dec    %ecx
  0x0000000104887067: cmp    %r11d,%ecx
  0x000000010488706a: jae    0x0000000104888a05  ;*invokevirtual setOffset
                                                ; - java.io.ObjectStreamClass::matchFields@230 (line 2314)

  0x0000000104887070: mov    %r11d,0x1c(%rsp)
  0x0000000104887075: mov    %rbx,0x20(%rsp)
  0x000000010488707a: mov    %r10d,0x18(%rsp)
  0x000000010488707f: mov    %r8,0x10(%rsp)
  0x0000000104887084: mov    %r9,(%rsp)
  0x0000000104887088: mov    %rdx,0x8(%rsp)
  0x000000010488708d: mov    $0xf80025ef,%r10d  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x0000000104887093: shl    $0x3,%r10
  0x0000000104887097: mov    %r10,0x28(%rsp)
  0x000000010488709c: mov    $0xf8001b4b,%r10d  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000001048870a2: shl    $0x3,%r10
  0x00000001048870a6: mov    %r10,0x30(%rsp)
  0x00000001048870ab: mov    $0xf80002da,%r11d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001048870b1: movabs $0x0,%r10
  0x00000001048870bb: lea    (%r10,%r11,8),%r10
  0x00000001048870bf: mov    %r10,0x38(%rsp)
  0x00000001048870c4: xor    %r8d,%r8d
  0x00000001048870c7: jmpq   0x0000000104887506
  0x00000001048870cc: mov    %rbp,0x90(%rsp)
  0x00000001048870d4: jmp    0x00000001048870de
  0x00000001048870d6: mov    %rbp,0x90(%rsp)
  0x00000001048870de: mov    0x60(%r15),%rax
  0x00000001048870e2: mov    %rax,%r10
  0x00000001048870e5: add    $0x18,%r10
  0x00000001048870e9: cmp    0x70(%r15),%r10
  0x00000001048870ed: jae    0x00000001048880e7  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048870f3: mov    %r10,0x60(%r15)
  0x00000001048870f7: prefetchnta 0xc0(%r10)
  0x00000001048870ff: mov    0x30(%rsp),%r10
  0x0000000104887104: mov    0xa8(%r10),%r10
  0x000000010488710b: mov    %r10,(%rax)
  0x000000010488710e: movl   $0xf8001b4b,0x8(%rax)  ;*new
                                                ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104887115: mov    %r12d,0xc(%rax)    ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887119: mov    %r12,0x10(%rax)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010488711d: mov    %rax,0x60(%rsp)
  0x0000000104887122: mov    0x60(%r15),%rax
  0x0000000104887126: mov    %rax,%r10
  0x0000000104887129: add    $0x30,%r10
  0x000000010488712d: cmp    0x70(%r15),%r10
  0x0000000104887131: jae    0x00000001048880fd  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887137: mov    %r10,0x60(%r15)
  0x000000010488713b: prefetchnta 0xc0(%r10)
  0x0000000104887143: movq   $0x1,(%rax)
  0x000000010488714a: prefetchnta 0x100(%r10)
  0x0000000104887152: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x0000000104887159: prefetchnta 0x140(%r10)
  0x0000000104887161: movl   $0x10,0xc(%rax)    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887168: prefetchnta 0x180(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887170: mov    %r12,0x10(%rax)
  0x0000000104887174: mov    %r12,0x18(%rax)
  0x0000000104887178: mov    %r12,0x20(%rax)
  0x000000010488717c: mov    %r12,0x28(%rax)    ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887180: mov    0x60(%rsp),%r10
  0x0000000104887185: mov    %rax,%r11
  0x0000000104887188: shr    $0x3,%r11
  0x000000010488718c: mov    0x60(%rsp),%r8
  0x0000000104887191: mov    %r11d,0x10(%r8)    ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887195: shr    $0x9,%r10
  0x0000000104887199: movabs $0x104297000,%r11
  0x00000001048871a3: mov    %r12b,(%r11,%r10,1)  ;*ifne
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@35 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048871a7: mov    %r8,%rsi
  0x00000001048871aa: mov    $0x1,%edx
  0x00000001048871af: mov    %r8,%rbp
  0x00000001048871b2: nop
  0x00000001048871b3: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=568}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x00000001048871b8: mov    0xc(%rbp),%r11d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048871bc: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048871bf: mov    %r11d,%r8d
  0x00000001048871c2: inc    %r8d
  0x00000001048871c5: mov    0x60(%rsp),%r10
  0x00000001048871ca: mov    %r8d,0xc(%r10)     ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048871ce: mov    0xc(%r12,%rbp,8),%r8d  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888c2d
  0x00000001048871d3: cmp    %r8d,%r11d
  0x00000001048871d6: jae    0x0000000104888551  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048871dc: mov    0x90(%rsp),%r10
  0x00000001048871e4: mov    0x14(%r10),%r8d    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048871e8: lea    (%r12,%rbp,8),%r10
  0x00000001048871ec: mov    $0x4c,%r9d
  0x00000001048871f2: mov    %r9w,0x10(%r10,%r11,2)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048871f8: test   %r8d,%r8d
  0x00000001048871fb: je     0x0000000104887f00  ;*aload_0
                                                ; - java.io.ObjectStreamField::getClassSignature@30 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887201: lea    (%r12,%r8,8),%rsi  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887205: mov    $0x2e,%edx
  0x000000010488720a: mov    $0x2f,%ecx
  0x000000010488720f: mov    0x68(%rsp),%rbp
  0x0000000104887214: data32 xchg %ax,%ax
  0x0000000104887217: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop off=668}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010488721c: mov    0x60(%rsp),%rsi
  0x0000000104887221: mov    %rax,%rdx
  0x0000000104887224: data32 xchg %ax,%ax
  0x0000000104887227: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=684}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010488722c: mov    %rax,0x60(%rsp)
  0x0000000104887231: mov    0xc(%rax),%edx     ; implicit exception: dispatches to 0x0000000104888c41
  0x0000000104887234: inc    %edx               ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887236: mov    %rax,%rsi
  0x0000000104887239: mov    %rax,%rbp
  0x000000010488723c: data32 xchg %ax,%ax
  0x000000010488723f: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop off=708}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887244: mov    0xc(%rbp),%r10d    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887248: mov    %r10d,0x70(%rsp)
  0x000000010488724d: mov    0x10(%rbp),%r11d   ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887251: mov    %r11d,0x74(%rsp)
  0x0000000104887256: mov    0x70(%rsp),%r11d
  0x000000010488725b: inc    %r11d              ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010488725e: mov    %r11d,0x78(%rsp)
  0x0000000104887263: mov    %r11d,0xc(%rbp)    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887267: mov    0x74(%rsp),%r11d
  0x000000010488726c: mov    0xc(%r12,%r11,8),%r10d  ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888c51
  0x0000000104887271: mov    %r10d,0x44(%rsp)
  0x0000000104887276: mov    0x70(%rsp),%r10d
  0x000000010488727b: cmp    0x44(%rsp),%r10d
  0x0000000104887280: jae    0x00000001048885a1
  0x0000000104887286: mov    0x60(%r15),%r9
  0x000000010488728a: mov    %r9,%r10
  0x000000010488728d: add    $0x18,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887291: shl    $0x3,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887295: mov    %r11,0x80(%rsp)
  0x000000010488729d: mov    0x70(%rsp),%ecx
  0x00000001048872a1: mov    $0x3b,%r8d
  0x00000001048872a7: mov    %r8w,0x10(%r11,%rcx,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048872ad: cmp    0x70(%r15),%r10
  0x00000001048872b1: jae    0x0000000104888119
  0x00000001048872b7: mov    %r10,0x60(%r15)
  0x00000001048872bb: prefetchnta 0xc0(%r10)
  0x00000001048872c3: mov    0x38(%rsp),%r10
  0x00000001048872c8: mov    0xa8(%r10),%r10
  0x00000001048872cf: mov    %r10,(%r9)
  0x00000001048872d2: movl   $0xf80002da,0x8(%r9)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000001048872da: mov    %r12d,0xc(%r9)
  0x00000001048872de: mov    %r12,0x10(%r9)     ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048872e2: mov    %r9,0x60(%rsp)
  0x00000001048872e7: mov    0x78(%rsp),%r10d
  0x00000001048872ec: test   %r10d,%r10d
  0x00000001048872ef: jle    0x0000000104887fdb  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048872f5: mov    0x44(%rsp),%ebp
  0x00000001048872f9: sub    0x70(%rsp),%ebp
  0x00000001048872fd: dec    %ebp               ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048872ff: test   %ebp,%ebp
  0x0000000104887301: jl     0x00000001048888e1
  0x0000000104887307: mov    %r10d,%r11d
  0x000000010488730a: test   %r11d,%r11d
  0x000000010488730d: jl     0x0000000104888931  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887313: cmp    $0x80000,%r11d
  0x000000010488731a: ja     0x000000010488860d  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887320: movslq 0x70(%rsp),%rbp
  0x0000000104887325: add    $0x1,%rbp          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887329: shl    %rbp
  0x000000010488732c: add    $0x17,%rbp         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887330: mov    %rbp,%r10
  0x0000000104887333: and    $0xfffffffffffffff8,%r10  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887337: mov    %r10,0x88(%rsp)
  0x000000010488733f: cmp    $0x80000,%r11d
  0x0000000104887346: ja     0x0000000104888130
  0x000000010488734c: mov    0x60(%r15),%r11
  0x0000000104887350: mov    %r11,%r10
  0x0000000104887353: mov    0x88(%rsp),%r8
  0x000000010488735b: add    %r8,%r10           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488735e: cmp    0x70(%r15),%r10
  0x0000000104887362: jae    0x0000000104888130
  0x0000000104887368: mov    %r10,0x60(%r15)
  0x000000010488736c: prefetchnta 0xc0(%r10)
  0x0000000104887374: movq   $0x1,(%r11)
  0x000000010488737b: prefetchnta 0x100(%r10)
  0x0000000104887383: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x000000010488738b: mov    0x78(%rsp),%r8d
  0x0000000104887390: mov    %r8d,0xc(%r11)
  0x0000000104887394: prefetchnta 0x140(%r10)
  0x000000010488739c: prefetchnta 0x180(%r10)   ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873a4: mov    %r11,0x90(%rsp)
  0x00000001048873ac: mov    0x44(%rsp),%r11d
  0x00000001048873b1: cmp    0x78(%rsp),%r11d
  0x00000001048873b6: mov    0x78(%rsp),%r9d
  0x00000001048873bb: cmovl  %r11d,%r9d         ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873bf: mov    0x90(%rsp),%r10
  0x00000001048873c7: add    $0x10,%r10         ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873cb: shr    $0x3,%rbp          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873cf: mov    %rbp,%rcx
  0x00000001048873d2: add    $0xfffffffffffffffe,%rcx
  0x00000001048873d6: cmp    %r9d,%r11d
  0x00000001048873d9: jb     0x0000000104888618
  0x00000001048873df: mov    0x78(%rsp),%r8d
  0x00000001048873e4: cmp    %r9d,%r8d
  0x00000001048873e7: jb     0x0000000104888618  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873ed: test   %r9d,%r9d
  0x00000001048873f0: jle    0x0000000104888645  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048873f6: mov    0x74(%rsp),%r11d
  0x00000001048873fb: lea    0x10(%r12,%r11,8),%rbx  ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887400: cmp    %r8d,%r9d
  0x0000000104887403: jl     0x0000000104888099
  0x0000000104887409: mov    0x88(%rsp),%rdx
  0x0000000104887411: add    $0xfffffffffffffff0,%rdx
  0x0000000104887415: shr    $0x3,%rdx          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887419: mov    %rbx,%rdi
  0x000000010488741c: mov    %r10,%rsi
  0x000000010488741f: movabs $0x104829780,%r10
  0x0000000104887429: callq  *%r10              ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488742c: mov    0x90(%rsp),%r10
  0x0000000104887434: shr    $0x3,%r10          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887438: mov    0x60(%rsp),%r11
  0x000000010488743d: mov    %r10d,0xc(%r11)    ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887441: mov    %r11,%r10
  0x0000000104887444: shr    $0x9,%r10
  0x0000000104887448: movabs $0x104297000,%r11
  0x0000000104887452: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887456: mov    0x68(%rsp),%rsi
  0x000000010488745b: mov    0x60(%rsp),%rdx
  0x0000000104887460: mov    0x58(%rsp),%rbp
  0x0000000104887465: xchg   %ax,%ax
  0x0000000104887467: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=1260}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@233 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x000000010488746c: jmpq   0x000000010488754a
  0x0000000104887471: mov    0xc(%r12,%rbx,8),%r8d  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ; implicit exception: dispatches to 0x0000000104888c0d
  0x0000000104887476: mov    0xc(%r12,%r8,8),%ebp  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ; implicit exception: dispatches to 0x0000000104888c1d
  0x000000010488747b: test   %ebp,%ebp
  0x000000010488747d: jle    0x00000001048886ad  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887483: test   %ebp,%ebp
  0x0000000104887485: jbe    0x0000000104888515  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010488748b: movzwl 0x10(%r12,%r8,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887491: cmp    $0x4c,%r11d
  0x0000000104887495: je     0x00000001048878d2
  0x000000010488749b: cmp    $0x5b,%r11d
  0x000000010488749f: jne    0x00000001048878a1
  0x00000001048874a5: jmpq   0x00000001048878d2
  0x00000001048874aa: mov    0x58(%rsp),%r10
  0x00000001048874af: test   %r10,%r10
  0x00000001048874b2: je     0x00000001048884a9  ;*putfield signature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@65 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048874b8: mov    0x20(%rsp),%r10
  0x00000001048874bd: mov    0x54(%rsp),%r11d
  0x00000001048874c2: lea    0x10(%r10,%r11,4),%r10  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x00000001048874c7: mov    0x40(%rsp),%r8d
  0x00000001048874cc: mov    0xc(%r12,%r8,8),%r11d
  0x00000001048874d1: mov    0x58(%rsp),%r8
  0x00000001048874d6: mov    %r11d,0xc(%r8)
  0x00000001048874da: shr    $0x3,%r8
  0x00000001048874de: mov    %r8d,(%r10)
  0x00000001048874e1: shr    $0x9,%r10
  0x00000001048874e5: movabs $0x104297000,%r11
  0x00000001048874ef: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048874f3: mov    0x54(%rsp),%r8d
  0x00000001048874f8: inc    %r8d
  0x00000001048874fb: cmp    0x18(%rsp),%r8d
  0x0000000104887500: jge    0x0000000104887ee9  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104887506: mov    (%rsp),%r10
  0x000000010488750a: mov    0x10(%r10,%r8,4),%r10d  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010488750f: mov    %r10d,0x40(%rsp)
  0x0000000104887514: test   %r10d,%r10d
  0x0000000104887517: je     0x00000001048882d1  ;*invokevirtual getOffset
                                                ; - java.io.ObjectStreamClass::matchFields@227 (line 2314)

  0x000000010488751d: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887521: mov    %r10,0x48(%rsp)
  0x0000000104887526: xor    %r10d,%r10d
  0x0000000104887529: xor    %edx,%edx
  0x000000010488752b: mov    %r8d,0x54(%rsp)
  0x0000000104887530: mov    %r10,0x58(%rsp)
  0x0000000104887535: jmpq   0x000000010488775b
  0x000000010488753a: lea    (%r12,%r11,8),%r10
  0x000000010488753e: mov    $0x56,%r8d
  0x0000000104887544: mov    %r8w,0x10(%r10,%rbp,2)
  0x000000010488754a: mov    0x60(%r15),%r11
  0x000000010488754e: mov    %r11,%r10
  0x0000000104887551: add    $0x18,%r10
  0x0000000104887555: cmp    0x70(%r15),%r10
  0x0000000104887559: jae    0x000000010488805d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488755f: mov    %r10,0x60(%r15)    ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887563: prefetchnta 0xc0(%r10)    ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488756b: mov    0x38(%rsp),%r10
  0x0000000104887570: mov    0xa8(%r10),%r10
  0x0000000104887577: mov    %r10,(%r11)
  0x000000010488757a: movl   $0xf80002da,0x8(%r11)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104887582: mov    %r12d,0xc(%r11)
  0x0000000104887586: mov    %r12,0x10(%r11)
  0x000000010488758a: mov    %r11,0x60(%rsp)
  0x000000010488758f: mov    0x68(%rsp),%r10
  0x0000000104887594: mov    0xc(%r10),%r11d    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887598: mov    %r11d,0x70(%rsp)
  0x000000010488759d: mov    0x10(%r10),%r11d   ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048875a1: mov    0x70(%rsp),%r10d
  0x00000001048875a6: test   %r10d,%r10d
  0x00000001048875a9: jle    0x0000000104887f4e  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048875af: mov    0xc(%r12,%r11,8),%ebp  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ; implicit exception: dispatches to 0x0000000104888bcd
  0x00000001048875b4: mov    %ebp,%r10d
  0x00000001048875b7: sub    0x70(%rsp),%r10d   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x00000001048875bc: test   %r10d,%r10d
  0x00000001048875bf: jl     0x0000000104888379  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048875c5: mov    0x70(%rsp),%r8d
  0x00000001048875ca: test   %r8d,%r8d
  0x00000001048875cd: jl     0x00000001048883c9  ;*aload_0
                                                ; - java.io.ObjectStreamField::getTypeCode@0 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x00000001048875d3: cmp    $0x80000,%r8d
  0x00000001048875da: ja     0x0000000104888211  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048875e0: movslq %r8d,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048875e3: lea    (%r12,%r11,8),%r8  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048875e7: mov    %r8,0x68(%rsp)
  0x00000001048875ec: shl    %r10
  0x00000001048875ef: add    $0x17,%r10         ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048875f3: mov    %r10,0x78(%rsp)
  0x00000001048875f8: and    $0xfffffffffffffff8,%r10
  0x00000001048875fc: mov    %r10,0x80(%rsp)
  0x0000000104887604: mov    0x70(%rsp),%r8d
  0x0000000104887609: cmp    $0x80000,%r8d
  0x0000000104887610: ja     0x0000000104888074
  0x0000000104887616: mov    0x60(%r15),%r9
  0x000000010488761a: mov    %r9,%r10
  0x000000010488761d: mov    0x80(%rsp),%r8
  0x0000000104887625: add    %r8,%r10           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887628: cmp    0x70(%r15),%r10
  0x000000010488762c: jae    0x0000000104888074
  0x0000000104887632: mov    %r10,0x60(%r15)
  0x0000000104887636: prefetchnta 0xc0(%r10)
  0x000000010488763e: movq   $0x1,(%r9)
  0x0000000104887645: prefetchnta 0x100(%r10)
  0x000000010488764d: movl   $0xf8000041,0x8(%r9)  ;   {metadata({type array char})}
  0x0000000104887655: mov    0x70(%rsp),%r8d
  0x000000010488765a: mov    %r8d,0xc(%r9)
  0x000000010488765e: prefetchnta 0x140(%r10)
  0x0000000104887666: prefetchnta 0x180(%r10)
  0x000000010488766e: mov    %r9,0x88(%rsp)
  0x0000000104887676: cmp    0x70(%rsp),%ebp
  0x000000010488767a: mov    0x70(%rsp),%r9d
  0x000000010488767f: cmovl  %ebp,%r9d          ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887683: mov    0x88(%rsp),%rsi
  0x000000010488768b: add    $0x10,%rsi         ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488768f: mov    0x78(%rsp),%r10
  0x0000000104887694: shr    $0x3,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887698: mov    %r10,%rcx
  0x000000010488769b: add    $0xfffffffffffffffe,%rcx  ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488769f: cmp    %r9d,%ebp
  0x00000001048876a2: jb     0x0000000104888255
  0x00000001048876a8: mov    0x70(%rsp),%r8d
  0x00000001048876ad: cmp    %r9d,%r8d
  0x00000001048876b0: jb     0x0000000104888255  ;*ifnonnull
                                                ; - java.lang.Class::getName@6 (line 641)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876b6: test   %r9d,%r9d
  0x00000001048876b9: jle    0x0000000104888281  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876bf: lea    0x10(%r12,%r11,8),%r8  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876c4: cmp    0x70(%rsp),%r9d
  0x00000001048876c9: jl     0x0000000104887f93  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876cf: mov    0x80(%rsp),%rdx
  0x00000001048876d7: add    $0xfffffffffffffff0,%rdx
  0x00000001048876db: shr    $0x3,%rdx          ;*putfield name
                                                ; - java.lang.Class::getName@16 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876df: mov    %r8,%rdi
  0x00000001048876e2: movabs $0x104829780,%r10
  0x00000001048876ec: callq  *%r10              ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876ef: mov    0x88(%rsp),%r10
  0x00000001048876f7: mov    %r10,%r11
  0x00000001048876fa: shr    $0x3,%r11          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048876fe: mov    0x60(%rsp),%r10
  0x0000000104887703: mov    %r11d,0xc(%r10)
  0x0000000104887707: shr    $0x9,%r10
  0x000000010488770b: movabs $0x104297000,%r11
  0x0000000104887715: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887719: mov    0x60(%rsp),%rsi
  0x000000010488771e: nop
  0x000000010488771f: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop off=1956}
                                                ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887724: mov    0x58(%rsp),%r10
  0x0000000104887729: mov    %rax,%r11
  0x000000010488772c: shr    $0x3,%r11
  0x0000000104887730: mov    0x58(%rsp),%r8
  0x0000000104887735: mov    %r11d,0x18(%r8)
  0x0000000104887739: shr    $0x9,%r10
  0x000000010488773d: movabs $0x104297000,%r11
  0x0000000104887747: mov    %r12b,(%r11,%r10,1)  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@1 (line 134)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488774b: mov    0x50(%rsp),%edx    ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x000000010488774f: inc    %edx
  0x0000000104887751: cmp    0x1c(%rsp),%edx
  0x0000000104887755: jge    0x00000001048874aa  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x000000010488775b: mov    0x10(%rsp),%r10
  0x0000000104887760: mov    0x10(%r10,%rdx,4),%r11d  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x0000000104887765: mov    %r11d,0x44(%rsp)
  0x000000010488776a: mov    0x14(%r12,%r11,8),%r11d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ; implicit exception: dispatches to 0x0000000104888b09
  0x000000010488776f: mov    0x40(%rsp),%r10d
  0x0000000104887774: mov    0x14(%r12,%r10,8),%r10d  ;*aload_0
                                                ; - java.io.ObjectStreamField::getField@0 (line 279)
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x0000000104887779: mov    0xc(%r12,%r10,8),%r9d  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888b19
  0x000000010488777e: cmp    %r11d,%r10d
  0x0000000104887781: je     0x0000000104887857  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887787: mov    0xc(%r12,%r11,8),%r11d  ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888b2d
  0x000000010488778c: mov    0xc(%r12,%r11,8),%r10d
  0x0000000104887791: mov    0xc(%r12,%r9,8),%ecx  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887796: cmp    %r10d,%ecx
  0x0000000104887799: jne    0x000000010488774f  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488779b: lea    (%r12,%r11,8),%r10
  0x000000010488779f: lea    0x10(%r12,%r11,8),%rsi
  0x00000001048877a4: lea    (%r12,%r9,8),%r10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048877a8: lea    0x10(%r12,%r9,8),%rdi
  0x00000001048877ad: cmp    %rsi,%rdi
  0x00000001048877b0: je     0x000000010488783e
  0x00000001048877b6: test   %ecx,%ecx
  0x00000001048877b8: je     0x000000010488783e
  0x00000001048877be: shl    %ecx
  0x00000001048877c0: mov    %ecx,%eax
  0x00000001048877c2: and    $0x1e,%eax
  0x00000001048877c5: and    $0xffffffffffffffe0,%ecx
  0x00000001048877c8: je     0x000000010488780d
  0x00000001048877ca: lea    (%rdi,%rcx,1),%rdi
  0x00000001048877ce: lea    (%rsi,%rcx,1),%rsi
  0x00000001048877d2: neg    %rcx
  0x00000001048877d5: vmovdqu (%rdi,%rcx,1),%ymm1
  0x00000001048877da: vmovdqu (%rsi,%rcx,1),%ymm0
  0x00000001048877df: (bad)  
  0x00000001048877e2: enterq $0xe2c4,$0x7d
  0x00000001048877e6: (bad)  
  0x00000001048877e7: leaveq 
  0x00000001048877e8: jne    0x0000000104887845
  0x00000001048877ea: add    $0x20,%rcx
  0x00000001048877ee: jne    0x00000001048877d5
  0x00000001048877f0: test   %eax,%eax
  0x00000001048877f2: je     0x000000010488783e
  0x00000001048877f4: vmovdqu -0x20(%rdi,%rax,1),%ymm1
  0x00000001048877fa: vmovdqu -0x20(%rsi,%rax,1),%ymm0
  0x0000000104887800: (bad)  
  0x0000000104887803: enterq $0xe2c4,$0x7d
  0x0000000104887807: (bad)  
  0x0000000104887808: leaveq 
  0x0000000104887809: jne    0x0000000104887845
  0x000000010488780b: jmp    0x000000010488783e
  0x000000010488780d: mov    %eax,%ecx
  0x000000010488780f: and    $0xfffffffffffffffc,%ecx
  0x0000000104887812: je     0x000000010488782d
  0x0000000104887814: lea    (%rdi,%rcx,1),%rdi
  0x0000000104887818: lea    (%rsi,%rcx,1),%rsi
  0x000000010488781c: neg    %rcx
  0x000000010488781f: mov    (%rdi,%rcx,1),%ebx
  0x0000000104887822: cmp    (%rsi,%rcx,1),%ebx
  0x0000000104887825: jne    0x0000000104887845
  0x0000000104887827: add    $0x4,%rcx
  0x000000010488782b: jne    0x000000010488781f
  0x000000010488782d: test   $0x2,%eax
  0x0000000104887832: je     0x000000010488783e
  0x0000000104887834: movzwl (%rdi),%ebx
  0x0000000104887837: movzwl (%rsi),%ecx
  0x000000010488783a: cmp    %ecx,%ebx
  0x000000010488783c: jne    0x0000000104887845
  0x000000010488783e: mov    $0x1,%eax
  0x0000000104887843: jmp    0x0000000104887847
  0x0000000104887845: xor    %eax,%eax
  0x0000000104887847: (bad)  
  0x000000010488784a: leaveq 
  0x000000010488784b: (bad)  
  0x000000010488784e: rolb   $0xfe,-0x77bf040(%rbp)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887855: (bad)  
  0x0000000104887856: incl   0x5c(%rbx,%rcx,4)  ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@34 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488785a: and    $0x40,%al
  0x000000010488785c: mov    0x18(%r12,%r11,8),%r11d  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@139 (line 2301)

  0x0000000104887861: mov    0xc(%r12,%r11,8),%r10d  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ; implicit exception: dispatches to 0x0000000104888b8d
  0x0000000104887866: mov    0xc(%r12,%r10,8),%r9d  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ; implicit exception: dispatches to 0x0000000104888b9d
  0x000000010488786b: test   %r9d,%r9d
  0x000000010488786e: jle    0x00000001048882fd
  0x0000000104887874: test   %r9d,%r9d
  0x0000000104887877: jbe    0x0000000104888219  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010488787d: movzwl 0x10(%r12,%r10,8),%r8d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887883: mov    0x44(%rsp),%r11d
  0x0000000104887888: mov    0x18(%r12,%r11,8),%ebx  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x000000010488788d: cmp    $0x4c,%r8d
  0x0000000104887891: je     0x0000000104887471  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887897: cmp    $0x5b,%r8d
  0x000000010488789b: je     0x0000000104887471  ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)

  0x00000001048878a1: mov    0xc(%r12,%rbx,8),%r8d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ; implicit exception: dispatches to 0x0000000104888bdd
  0x00000001048878a6: mov    0xc(%r12,%r8,8),%r9d  ; implicit exception: dispatches to 0x0000000104888bed
  0x00000001048878ab: movzwl 0x10(%r12,%r10,8),%r11d  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048878b1: test   %r9d,%r9d
  0x00000001048878b4: jle    0x0000000104888425  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x00000001048878ba: test   %r9d,%r9d
  0x00000001048878bd: jbe    0x0000000104888293
  0x00000001048878c3: movzwl 0x10(%r12,%r8,8),%r10d
  0x00000001048878c9: cmp    %r10d,%r11d
  0x00000001048878cc: jne    0x0000000104888469
  0x00000001048878d2: mov    0x44(%rsp),%r11d
  0x00000001048878d7: mov    0x20(%r12,%r11,8),%r11d
  0x00000001048878dc: test   %r11d,%r11d
  0x00000001048878df: je     0x000000010488833d
  0x00000001048878e5: mov    0x60(%r15),%r11
  0x00000001048878e9: mov    %r11,%r10
  0x00000001048878ec: add    $0x28,%r10
  0x00000001048878f0: cmp    0x70(%r15),%r10
  0x00000001048878f4: jae    0x0000000104888009  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048878fa: mov    %r10,0x60(%r15)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048878fe: prefetchnta 0xc0(%r10)    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887906: mov    0x28(%rsp),%r10
  0x000000010488790b: mov    0xa8(%r10),%r10
  0x0000000104887912: mov    %r10,(%r11)
  0x0000000104887915: movl   $0xf80025ef,0x8(%r11)  ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x000000010488791d: mov    %r12d,0xc(%r11)    ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887921: mov    %r12,0x10(%r11)
  0x0000000104887925: mov    %r12,0x18(%r11)
  0x0000000104887929: mov    %r12,0x20(%r11)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488792d: mov    %edx,0x50(%rsp)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104887931: mov    %r11,0x58(%rsp)
  0x0000000104887936: mov    0x44(%rsp),%r11d
  0x000000010488793b: movzbl 0x10(%r12,%r11,8),%r11d
  0x0000000104887941: mov    0x58(%rsp),%r10
  0x0000000104887946: mov    %r11b,0x10(%r10)   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010488794a: mov    0x44(%rsp),%r10d
  0x000000010488794f: mov    0x20(%r12,%r10,8),%r10d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x0000000104887954: mov    0x58(%rsp),%r11
  0x0000000104887959: mov    %r10d,0x20(%r11)
  0x000000010488795d: shr    $0x9,%r11
  0x0000000104887961: movabs $0x104297000,%r8
  0x000000010488796b: mov    %r12b,(%r8,%r11,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x000000010488796f: mov    0x24(%r12,%r10,8),%r9d  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888bad
  0x0000000104887974: mov    0x20(%r12,%r10,8),%r10d  ;*new
                                                ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)

  0x0000000104887979: mov    0x58(%rsp),%r11
  0x000000010488797e: mov    %r10d,0x14(%r11)
  0x0000000104887982: mov    %r11,%r10
  0x0000000104887985: shr    $0x9,%r10
  0x0000000104887989: movabs $0x104297000,%r11
  0x0000000104887993: mov    %r12b,(%r11,%r10,1)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887997: mov    0x48(%r12,%r9,8),%r10  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888bbd
  0x000000010488799c: mov    %r10,0x60(%rsp)
  0x00000001048879a1: mov    0x58(%rsp),%r10
  0x00000001048879a6: lea    (%r12,%r9,8),%rbp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048879aa: shr    $0x9,%r10
  0x00000001048879ae: mov    %r12b,(%r11,%r10,1)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048879b2: mov    0x60(%r15),%rax    ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048879b6: mov    %rax,%r10
  0x00000001048879b9: add    $0x18,%r10         ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048879bd: mov    0x60(%rsp),%r11
  0x00000001048879c2: test   %r11,%r11
  0x00000001048879c5: mov    %rbp,%r11
  0x00000001048879c8: movabs $0x6c00007c0,%r8   ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Object&apos;)}
  0x00000001048879d2: cmovne %r8,%r11
  0x00000001048879d6: shr    $0x3,%r11
  0x00000001048879da: mov    0x58(%rsp),%r8
  0x00000001048879df: mov    %r11d,0x1c(%r8)
  0x00000001048879e3: cmp    0x70(%r15),%r10
  0x00000001048879e7: jae    0x0000000104888049  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048879ed: mov    %r10,0x60(%r15)
  0x00000001048879f1: prefetchnta 0xc0(%r10)
  0x00000001048879f9: mov    0x30(%rsp),%r10
  0x00000001048879fe: mov    0xa8(%r10),%r10
  0x0000000104887a05: mov    %r10,(%rax)        ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a08: movl   $0xf8001b4b,0x8(%rax)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104887a0f: mov    %r12d,0xc(%rax)    ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a13: mov    %r12,0x10(%rax)    ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104887a17: mov    %rax,0x68(%rsp)
  0x0000000104887a1c: mov    0x60(%r15),%rax
  0x0000000104887a20: mov    %rax,%r10
  0x0000000104887a23: add    $0x30,%r10
  0x0000000104887a27: cmp    0x70(%r15),%r10
  0x0000000104887a2b: jae    0x0000000104888030  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a31: mov    %r10,0x60(%r15)    ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a35: prefetchnta 0xc0(%r10)    ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a3d: movq   $0x1,(%rax)        ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a44: prefetchnta 0x100(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a4c: movl   $0xf8000041,0x8(%rax)  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104887a53: prefetchnta 0x140(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a5b: movl   $0x10,0xc(%rax)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a62: prefetchnta 0x180(%r10)   ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a6a: mov    %r12,0x10(%rax)    ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a6e: mov    %r12,0x18(%rax)
  0x0000000104887a72: mov    %r12,0x20(%rax)
  0x0000000104887a76: mov    %r12,0x28(%rax)    ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887a7a: mov    0x68(%rsp),%r10
  0x0000000104887a7f: mov    %rax,%r8
  0x0000000104887a82: shr    $0x3,%r8
  0x0000000104887a86: mov    0x68(%rsp),%r11
  0x0000000104887a8b: mov    %r8d,0x10(%r11)    ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887a8f: shr    $0x9,%r10
  0x0000000104887a93: movabs $0x104297000,%r11
  0x0000000104887a9d: mov    %r12b,(%r11,%r10,1)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104887aa1: mov    0x60(%rsp),%r10
  0x0000000104887aa6: test   %r10,%r10
  0x0000000104887aa9: je     0x0000000104887ab8  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887aab: mov    0x8(%r10),%r11d
  0x0000000104887aaf: test   %r11d,%r11d
  0x0000000104887ab2: jl     0x0000000104887c32  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x0000000104887ab8: mov    0x60(%rsp),%r10
  0x0000000104887abd: test   %r10,%r10
  0x0000000104887ac0: jne    0x00000001048870cc  ;*if_icmpge
                                                ; - java.io.ObjectStreamClass::matchFields@47 (line 2292)

  0x0000000104887ac6: mov    $0x1,%edx
  0x0000000104887acb: jmp    0x0000000104887ad9  ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x0000000104887acd: test   %r10,%r10
  0x0000000104887ad0: jne    0x00000001048870d6
  0x0000000104887ad6: add    $0x2,%edx          ;*if_icmpge
                                                ; - java.io.ObjectStreamClass::matchFields@47 (line 2292)

  0x0000000104887ad9: movabs $0x6c00013d0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = int)}
  0x0000000104887ae3: cmp    %r10,%rbp
  0x0000000104887ae6: je     0x0000000104887ca8
  0x0000000104887aec: movabs $0x6c0001508,%r10  ;   {oop(a &apos;java/lang/Class&apos; = byte)}
  0x0000000104887af6: cmp    %r10,%rbp
  0x0000000104887af9: je     0x0000000104887cf1  ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887aff: movabs $0x6c0001640,%r10  ;   {oop(a &apos;java/lang/Class&apos; = long)}
  0x0000000104887b09: cmp    %r10,%rbp
  0x0000000104887b0c: je     0x0000000104887d39
  0x0000000104887b12: movabs $0x6c0001438,%r10  ;   {oop(a &apos;java/lang/Class&apos; = float)}
  0x0000000104887b1c: cmp    %r10,%rbp
  0x0000000104887b1f: je     0x0000000104887d81
  0x0000000104887b25: movabs $0x6c00014a0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = double)}
  0x0000000104887b2f: cmp    %r10,%rbp
  0x0000000104887b32: je     0x0000000104887dc9
  0x0000000104887b38: movabs $0x6c00016a8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = short)}
  0x0000000104887b42: cmp    %r10,%rbp
  0x0000000104887b45: je     0x0000000104887e11  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::getClassSignature@31 (line 299)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887b4b: movabs $0x6c00015d8,%r10  ;   {oop(a &apos;java/lang/Class&apos; = char)}
  0x0000000104887b55: cmp    %r10,%rbp
  0x0000000104887b58: je     0x0000000104887e59
  0x0000000104887b5e: movabs $0x6c0001570,%r10  ;   {oop(a &apos;java/lang/Class&apos; = boolean)}
  0x0000000104887b68: cmp    %r10,%rbp
  0x0000000104887b6b: je     0x0000000104887ea1  ;*ifeq
                                                ; - java.io.ObjectStreamField::getClassSignature@12 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887b71: movabs $0x6c0001710,%r10  ;   {oop(a &apos;java/lang/Class&apos; = void)}
  0x0000000104887b7b: cmp    %r10,%rbp
  0x0000000104887b7e: jne    0x00000001048884d9  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@85 (line 2295)

  0x0000000104887b84: mov    0x68(%rsp),%rsi
  0x0000000104887b89: mov    %rsi,%rbp
  0x0000000104887b8c: data32 xchg %ax,%ax
  0x0000000104887b8f: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3092}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887b94: mov    0x10(%rbp),%r11d   ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887b98: mov    0xc(%rbp),%ebp     ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887b9b: mov    %ebp,%r10d
  0x0000000104887b9e: inc    %r10d
  0x0000000104887ba1: mov    0x68(%rsp),%r8
  0x0000000104887ba6: mov    %r10d,0xc(%r8)     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887baa: mov    0xc(%r12,%r11,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888bfd
  0x0000000104887baf: cmp    %r10d,%ebp
  0x0000000104887bb2: jb     0x000000010488753a  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887bb8: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887bbd: mov    0x20(%rsp),%r10
  0x0000000104887bc2: mov    %r10,0x18(%rsp)
  0x0000000104887bc7: mov    0x54(%rsp),%r8d
  0x0000000104887bcc: mov    %r8d,0x20(%rsp)
  0x0000000104887bd1: mov    0x40(%rsp),%r10d
  0x0000000104887bd6: mov    %r10d,0x24(%rsp)
  0x0000000104887bdb: mov    0x50(%rsp),%r8d
  0x0000000104887be0: mov    %r8d,0x28(%rsp)
  0x0000000104887be5: mov    0x58(%rsp),%r10
  0x0000000104887bea: mov    %r10,0x38(%rsp)
  0x0000000104887bef: mov    0x68(%rsp),%r10
  0x0000000104887bf4: mov    %r10,0x48(%rsp)
  0x0000000104887bf9: mov    %r10,0x50(%rsp)
  0x0000000104887bfe: mov    %r11d,0x2c(%rsp)
  0x0000000104887c03: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [44]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=3208}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104887c08: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104887c0d: xor    %ebp,%ebp          ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3215}
                                                ;*goto
                                                ; - java.io.ObjectStreamField::getClassSignature@27 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c0f: test   %eax,-0x209dc15(%rip)        # 0x00000001027ea000
                                                ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)
                                                ;   {poll}
  0x0000000104887c15: mov    0x48(%rbp),%r10    ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888b7d
  0x0000000104887c19: test   %r10,%r10
  0x0000000104887c1c: je     0x0000000104887acd  ;*aload_1
                                                ; - java.io.ObjectStreamField::getClassSignature@237 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c22: mov    %r10,%r11          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c25: mov    0x8(%r11),%r11d
  0x0000000104887c29: test   %r11d,%r11d
  0x0000000104887c2c: jge    0x0000000104887acd
  0x0000000104887c32: mov    0x68(%rsp),%r10
  0x0000000104887c37: mov    0xc(%r10),%edx
  0x0000000104887c3b: inc    %edx               ;*invokevirtual isUnshared
                                                ; - java.io.ObjectStreamClass::matchFields@156 (line 2303)

  0x0000000104887c3d: mov    %r10,%rsi
  0x0000000104887c40: data32 xchg %ax,%ax
  0x0000000104887c43: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3272}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887c48: mov    0x68(%rsp),%r10
  0x0000000104887c4d: mov    0xc(%r10),%edx     ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)

  0x0000000104887c51: mov    0x10(%r10),%r10d   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@-1 (line 134)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c55: mov    %edx,%r11d
  0x0000000104887c58: inc    %r11d
  0x0000000104887c5b: mov    0x68(%rsp),%r8
  0x0000000104887c60: mov    %r11d,0xc(%r8)     ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887c64: mov    0xc(%r12,%r10,8),%r11d  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@58 (line 302)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888b69
  0x0000000104887c69: cmp    %r11d,%edx
  0x0000000104887c6c: jae    0x000000010488814c  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104887c72: mov    0x48(%rbp),%r11    ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c76: shl    $0x3,%r10
  0x0000000104887c7a: mov    $0x5b,%r8d
  0x0000000104887c80: mov    %r8w,0x10(%r10,%rdx,2)  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104887c86: test   %r11,%r11
  0x0000000104887c89: je     0x00000001048881a5
  0x0000000104887c8f: mov    0x8(%r11),%r10d
  0x0000000104887c93: test   %r10d,%r10d
  0x0000000104887c96: jge    0x0000000104887c0d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887c9c: mov    0xe0(%r11),%rbp    ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887ca3: jmpq   0x0000000104887c0f
  0x0000000104887ca8: mov    0x68(%rsp),%rsi
  0x0000000104887cad: mov    %rsi,%rbp
  0x0000000104887cb0: data32 xchg %ax,%ax
  0x0000000104887cb3: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3384}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887cb8: mov    0xc(%rbp),%r8d     ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104887cbc: mov    0x10(%rbp),%ebp
  0x0000000104887cbf: mov    %r8d,%r11d
  0x0000000104887cc2: inc    %r11d
  0x0000000104887cc5: mov    0x68(%rsp),%r10
  0x0000000104887cca: mov    %r11d,0xc(%r10)    ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887cce: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888c65
  0x0000000104887cd3: cmp    %r11d,%r8d
  0x0000000104887cd6: jae    0x0000000104888657  ;*iconst_0
                                                ; - java.io.ObjectStreamField::isPrimitive@25 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887cdc: lea    (%r12,%rbp,8),%r10
  0x0000000104887ce0: mov    $0x49,%r9d
  0x0000000104887ce6: mov    %r9w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887cec: jmpq   0x000000010488754a
  0x0000000104887cf1: mov    0x68(%rsp),%rsi
  0x0000000104887cf6: mov    %rsi,%rbp
  0x0000000104887cf9: xchg   %ax,%ax
  0x0000000104887cfb: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3456}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887d00: mov    0xc(%rbp),%r8d     ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887d04: mov    0x10(%rbp),%ebp    ;*invokevirtual getType
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@28 (line 138)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d07: mov    %r8d,%r10d
  0x0000000104887d0a: inc    %r10d
  0x0000000104887d0d: mov    0x68(%rsp),%r11
  0x0000000104887d12: mov    %r10d,0xc(%r11)    ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887d16: mov    0xc(%r12,%rbp,8),%r10d  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@92 (line 306)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888c79
  0x0000000104887d1b: cmp    %r10d,%r8d
  0x0000000104887d1e: jae    0x00000001048886d1  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887d24: lea    (%r12,%rbp,8),%r10
  0x0000000104887d28: mov    $0x42,%r9d
  0x0000000104887d2e: mov    %r9w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d34: jmpq   0x000000010488754a
  0x0000000104887d39: mov    0x68(%rsp),%rsi
  0x0000000104887d3e: mov    %rsi,%rbp
  0x0000000104887d41: xchg   %ax,%ax
  0x0000000104887d43: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3528}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887d48: mov    0xc(%rbp),%r8d     ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)

  0x0000000104887d4c: mov    0x10(%rbp),%ebp    ;*putfield type
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@53 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d4f: mov    %r8d,%r11d
  0x0000000104887d52: inc    %r11d
  0x0000000104887d55: mov    0x68(%rsp),%r10
  0x0000000104887d5a: mov    %r11d,0xc(%r10)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887d5e: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888c8d
  0x0000000104887d63: cmp    %r11d,%r8d
  0x0000000104887d66: jae    0x0000000104888729  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887d6c: lea    (%r12,%rbp,8),%r10
  0x0000000104887d70: mov    $0x4a,%r9d
  0x0000000104887d76: mov    %r9w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d7c: jmpq   0x000000010488754a
  0x0000000104887d81: mov    0x68(%rsp),%rsi
  0x0000000104887d86: mov    %rsi,%rbp
  0x0000000104887d89: xchg   %ax,%ax
  0x0000000104887d8b: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3600}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887d90: mov    0xc(%rbp),%r8d     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d94: mov    0x10(%rbp),%ebp    ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887d97: mov    %r8d,%r10d
  0x0000000104887d9a: inc    %r10d
  0x0000000104887d9d: mov    0x68(%rsp),%r11
  0x0000000104887da2: mov    %r10d,0xc(%r11)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887da6: mov    0xc(%r12,%rbp,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888ca1
  0x0000000104887dab: cmp    %r10d,%r8d
  0x0000000104887dae: jae    0x0000000104888781  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887db4: lea    (%r12,%rbp,8),%r10
  0x0000000104887db8: mov    $0x46,%r9d
  0x0000000104887dbe: mov    %r9w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887dc4: jmpq   0x000000010488754a
  0x0000000104887dc9: mov    0x68(%rsp),%rsi
  0x0000000104887dce: mov    %rsi,%rbp
  0x0000000104887dd1: xchg   %ax,%ax
  0x0000000104887dd3: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3672}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887dd8: mov    0xc(%rbp),%r8d     ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)

  0x0000000104887ddc: mov    0x10(%rbp),%ebp    ;*ifeq
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@43 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887ddf: mov    %r8d,%r11d
  0x0000000104887de2: inc    %r11d
  0x0000000104887de5: mov    0x68(%rsp),%r10
  0x0000000104887dea: mov    %r11d,0xc(%r10)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887dee: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888cb5
  0x0000000104887df3: cmp    %r11d,%r8d
  0x0000000104887df6: jae    0x00000001048887d9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887dfc: lea    (%r12,%rbp,8),%r10
  0x0000000104887e00: mov    $0x44,%r9d
  0x0000000104887e06: mov    %r9w,0x10(%r10,%r8,2)  ;*putfield name
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@24 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e0c: jmpq   0x000000010488754a
  0x0000000104887e11: mov    0x68(%rsp),%rsi
  0x0000000104887e16: mov    %rsi,%rbp
  0x0000000104887e19: xchg   %ax,%ax
  0x0000000104887e1b: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3744}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887e20: mov    0xc(%rbp),%r8d     ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887e24: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e27: mov    %r8d,%r10d
  0x0000000104887e2a: inc    %r10d
  0x0000000104887e2d: mov    0x68(%rsp),%r11
  0x0000000104887e32: mov    %r10d,0xc(%r11)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887e36: mov    0xc(%r12,%rbp,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888cc9
  0x0000000104887e3b: cmp    %r10d,%r8d
  0x0000000104887e3e: jae    0x0000000104888831  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887e44: lea    (%r12,%rbp,8),%r10
  0x0000000104887e48: mov    $0x53,%r9d
  0x0000000104887e4e: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e54: jmpq   0x000000010488754a
  0x0000000104887e59: mov    0x68(%rsp),%rsi
  0x0000000104887e5e: mov    %rsi,%rbp
  0x0000000104887e61: xchg   %ax,%ax
  0x0000000104887e63: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3816}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887e68: mov    0xc(%rbp),%r8d     ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e6c: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e6f: mov    %r8d,%r11d
  0x0000000104887e72: inc    %r11d
  0x0000000104887e75: mov    0x68(%rsp),%r10
  0x0000000104887e7a: mov    %r11d,0xc(%r10)    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887e7e: mov    0xc(%r12,%rbp,8),%r11d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888cdd
  0x0000000104887e83: cmp    %r11d,%r8d
  0x0000000104887e86: jae    0x0000000104888889  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887e8c: lea    (%r12,%rbp,8),%r10
  0x0000000104887e90: mov    $0x43,%r9d
  0x0000000104887e96: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887e9c: jmpq   0x000000010488754a
  0x0000000104887ea1: mov    0x68(%rsp),%rsi
  0x0000000104887ea6: mov    %rsi,%rbp
  0x0000000104887ea9: xchg   %ax,%ax
  0x0000000104887eab: callq  0x000000010481d020  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=3888}
                                                ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887eb0: mov    0xc(%rbp),%r8d     ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104887eb4: mov    0x10(%rbp),%ebp    ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887eb7: mov    %r8d,%r10d
  0x0000000104887eba: inc    %r10d
  0x0000000104887ebd: mov    0x68(%rsp),%r11
  0x0000000104887ec2: mov    %r10d,0xc(%r11)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887ec6: mov    0xc(%r12,%rbp,8),%r10d  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ; implicit exception: dispatches to 0x0000000104888cf1
  0x0000000104887ecb: cmp    %r10d,%r8d
  0x0000000104887ece: jae    0x00000001048889ad  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887ed4: lea    (%r12,%rbp,8),%r10
  0x0000000104887ed8: mov    $0x5a,%r9d
  0x0000000104887ede: mov    %r9w,0x10(%r10,%r8,2)  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887ee4: jmpq   0x000000010488754a
  0x0000000104887ee9: mov    0x20(%rsp),%rbx    ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x0000000104887eee: mov    %rbx,%rax
  0x0000000104887ef1: add    $0xc0,%rsp
  0x0000000104887ef8: pop    %rbp
  0x0000000104887ef9: test   %eax,-0x209deff(%rip)        # 0x00000001027ea000
                                                ;   {poll_return}
  0x0000000104887eff: retq                      ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)

  0x0000000104887f00: mov    0x90(%rsp),%rsi
  0x0000000104887f08: data32 xchg %ax,%ax
  0x0000000104887f0b: callq  0x000000010481d020  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=3984}
                                                ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {optimized virtual_call}
  0x0000000104887f10: mov    0x90(%rsp),%r10
  0x0000000104887f18: mov    %rax,%r8
  0x0000000104887f1b: shr    $0x3,%r8
  0x0000000104887f1f: mov    0x90(%rsp),%r11
  0x0000000104887f27: mov    %r8d,0x14(%r11)
  0x0000000104887f2b: shr    $0x9,%r10
  0x0000000104887f2f: movabs $0x104297000,%r11
  0x0000000104887f39: mov    %r12b,(%r11,%r10,1)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887f3d: test   %rax,%rax
  0x0000000104887f40: je     0x0000000104888a25  ;*invokevirtual intern
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@62 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887f46: mov    %rax,%rsi
  0x0000000104887f49: jmpq   0x0000000104887205
  0x0000000104887f4e: test   %r10d,%r10d
  0x0000000104887f51: jl     0x0000000104888a45  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104887f57: test   %r11d,%r11d
  0x0000000104887f5a: je     0x0000000104888a35  ;*invokevirtual getTypeCode
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887f60: mov    0x60(%rsp),%r10
  0x0000000104887f65: movl   $0xd8000000,0xc(%r10)  ;   {oop([C)}
  0x0000000104887f6d: shr    $0x9,%r10
  0x0000000104887f71: movabs $0x104297000,%r11
  0x0000000104887f7b: mov    %r12b,(%r11,%r10,1)  ;*new
                                                ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887f7f: jmpq   0x0000000104887719
  0x0000000104887f84: movabs $0x6c002a048,%r8   ;   {oop(a &apos;java/io/ObjectStreamField&apos;[0] )}
  0x0000000104887f8e: jmpq   0x0000000104886fa3
  0x0000000104887f93: movslq %r9d,%rdx          ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887f96: mov    %rdx,%r11
  0x0000000104887f99: shl    %r11
  0x0000000104887f9c: add    $0x10,%r11         ;*invokevirtual toString
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887fa0: mov    %r11,%r9
  0x0000000104887fa3: and    $0xfffffffffffffff9,%r9
  0x0000000104887fa7: mov    0x88(%rsp),%rdi
  0x0000000104887faf: add    %r9,%rdi
  0x0000000104887fb2: shr    $0x3,%r11
  0x0000000104887fb6: sub    %r11,%r10
  0x0000000104887fb9: mov    %r10,%rcx
  0x0000000104887fbc: xor    %rax,%rax
  0x0000000104887fbf: shl    $0x3,%rcx
  0x0000000104887fc3: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial getName0
                                                ; - java.lang.Class::getName@11 (line 642)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887fc6: mov    %r8,%rdi
  0x0000000104887fc9: movabs $0x1048294c0,%r10
  0x0000000104887fd3: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104887fd6: jmpq   0x00000001048876ef
  0x0000000104887fdb: mov    %r10d,%r11d
  0x0000000104887fde: test   %r11d,%r11d
  0x0000000104887fe1: jl     0x0000000104888a95  ;*getfield signature
                                                ; - java.io.ObjectStreamField::getTypeCode@1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)

  0x0000000104887fe7: movl   $0xd8000000,0xc(%r9)  ;   {oop([C)}
  0x0000000104887fef: mov    %r9,%r10
  0x0000000104887ff2: shr    $0x9,%r10
  0x0000000104887ff6: movabs $0x104297000,%r11
  0x0000000104888000: mov    %r12b,(%r11,%r10,1)  ;*getfield name
                                                ; - java.lang.Class::getName@1 (line 640)
                                                ; - java.io.ObjectStreamField::getClassSignature@212 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888004: jmpq   0x0000000104887456
  0x0000000104888009: mov    %edx,0x50(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x000000010488800d: mov    0x44(%rsp),%r10d
  0x0000000104888012: lea    (%r12,%r10,8),%rbp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888016: movabs $0x7c0012f78,%rsi  ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/io/ObjectStreamField&apos;)}
  0x0000000104888020: data32 xchg %ax,%ax
  0x0000000104888023: callq  0x0000000104846960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop off=4264}
                                                ;*new  ; - java.io.ObjectStreamClass::matchFields@145 (line 2302)
                                                ;   {runtime_call}
  0x0000000104888028: mov    %rax,%r11
  0x000000010488802b: jmpq   0x0000000104887931
  0x0000000104888030: movabs $0x7c0000208,%rsi  ;*invokevirtual getField
                                                ; - java.io.ObjectStreamClass::matchFields@151 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010488803a: mov    $0x10,%edx
  0x000000010488803f: callq  0x0000000104846a60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=4292}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@4 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888044: jmpq   0x0000000104887a7a
  0x0000000104888049: movabs $0x7c000da58,%rsi  ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x0000000104888053: callq  0x0000000104846960  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop off=4312}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@0 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888058: jmpq   0x0000000104887a17
  0x000000010488805d: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104888067: callq  0x0000000104846960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop off=4332}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488806c: mov    %rax,%r11
  0x000000010488806f: jmpq   0x000000010488758a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888074: mov    %r11d,0x74(%rsp)
  0x0000000104888079: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104888083: mov    0x70(%rsp),%edx
  0x0000000104888087: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop off=4364}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488808c: mov    %rax,%r9
  0x000000010488808f: mov    0x74(%rsp),%r11d
  0x0000000104888094: jmpq   0x000000010488766e
  0x0000000104888099: movslq %r9d,%rdx          ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488809c: mov    %rdx,%r11
  0x000000010488809f: shl    %r11
  0x00000001048880a2: add    $0x10,%r11
  0x00000001048880a6: mov    %r11,%r8
  0x00000001048880a9: and    $0xfffffffffffffff9,%r8
  0x00000001048880ad: mov    0x90(%rsp),%rdi
  0x00000001048880b5: add    %r8,%rdi
  0x00000001048880b8: shr    $0x3,%r11
  0x00000001048880bc: mov    %rbp,%r8
  0x00000001048880bf: sub    %r11,%r8
  0x00000001048880c2: mov    %r8,%rcx
  0x00000001048880c5: xor    %rax,%rax
  0x00000001048880c8: shl    $0x3,%rcx
  0x00000001048880cc: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048880cf: mov    %rbx,%rdi
  0x00000001048880d2: mov    %r10,%rsi
  0x00000001048880d5: movabs $0x1048294c0,%r10
  0x00000001048880df: callq  *%r10              ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048880e2: jmpq   0x000000010488742c
  0x00000001048880e7: movabs $0x7c000da58,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata(&apos;java/lang/StringBuilder&apos;)}
  0x00000001048880f1: xchg   %ax,%ax
  0x00000001048880f3: callq  0x0000000104846960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [104]=Oop [144]=Oop off=4472}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@199 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048880f8: jmpq   0x000000010488711d  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048880fd: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x0000000104888107: mov    $0x10,%edx
  0x000000010488810c: data32 xchg %ax,%ax
  0x000000010488810f: callq  0x0000000104846a60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=4500}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.ObjectStreamField::getClassSignature@203 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888114: jmpq   0x0000000104887180
  0x0000000104888119: movabs $0x7c00016d0,%rsi  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000104888123: callq  0x0000000104846960  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [128]=Oop off=4520}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888128: mov    %rax,%r9
  0x000000010488812b: jmpq   0x00000001048872e2  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888130: movabs $0x7c0000208,%rsi  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {metadata({type array char})}
  0x000000010488813a: mov    0x78(%rsp),%edx
  0x000000010488813e: nop
  0x000000010488813f: callq  0x0000000104846b60  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [128]=Oop off=4548}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888144: mov    %rax,%r11
  0x0000000104888147: jmpq   0x00000001048873a4  ;*ifeq
                                                ; - java.io.ObjectStreamClass::matchFields@69 (line 2294)

  0x000000010488814c: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888151: mov    0x20(%rsp),%r11
  0x0000000104888156: mov    %r11,0x18(%rsp)
  0x000000010488815b: mov    0x54(%rsp),%r11d
  0x0000000104888160: mov    %r11d,0x20(%rsp)
  0x0000000104888165: mov    0x40(%rsp),%r8d
  0x000000010488816a: mov    %r8d,0x24(%rsp)
  0x000000010488816f: mov    0x50(%rsp),%r11d
  0x0000000104888174: mov    %r11d,0x28(%rsp)
  0x0000000104888179: mov    0x58(%rsp),%r11
  0x000000010488817e: mov    %r11,0x38(%rsp)
  0x0000000104888183: mov    0x68(%rsp),%r11
  0x0000000104888188: mov    %r11,0x48(%rsp)
  0x000000010488818d: mov    %r11,0x50(%rsp)
  0x0000000104888192: mov    %r10d,0x2c(%rsp)
  0x0000000104888197: mov    %edx,0x58(%rsp)
  0x000000010488819b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [44]=NarrowOop [56]=Oop [72]=Oop [80]=Oop off=4640}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048881a0: callq  0x0000000103c85e14  ;*astore_2
                                                ; - java.io.ObjectStreamClass::matchFields@14 (line 2275)
                                                ;   {runtime_call}
  0x00000001048881a5: mov    $0xfffffff4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x00000001048881aa: mov    0x20(%rsp),%r10
  0x00000001048881af: mov    %r10,0x18(%rsp)
  0x00000001048881b4: mov    0x40(%rsp),%r10d
  0x00000001048881b9: mov    %r10d,0x24(%rsp)
  0x00000001048881be: mov    0x58(%rsp),%r10
  0x00000001048881c3: mov    %r10,0x38(%rsp)
  0x00000001048881c8: data32 xchg %ax,%ax
  0x00000001048881cb: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [88]=Oop [104]=Oop off=4688}
                                                ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048881d0: callq  0x0000000103c85e14  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048881d5: mov    %r10d,0x10(%rsp)
  0x00000001048881da: mov    %r8,0x8(%rsp)
  0x00000001048881df: mov    %r9,(%rsp)
  0x00000001048881e3: mov    %rdx,%rbp
  0x00000001048881e6: movabs $0x7c00133c0,%rsi  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)
                                                ;   {metadata(&apos;java/io/ObjectStreamField&apos;[])}
  0x00000001048881f0: mov    %r10d,%edx
  0x00000001048881f3: callq  0x0000000104846a60  ; OopMap{rbp=Oop [0]=Oop [8]=Oop off=4728}
                                                ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x00000001048881f8: mov    %rbp,%rdx
  0x00000001048881fb: mov    (%rsp),%r9
  0x00000001048881ff: mov    0x8(%rsp),%r8
  0x0000000104888204: mov    0x10(%rsp),%r10d
  0x0000000104888209: mov    %rax,%rsi
  0x000000010488820c: jmpq   0x0000000104887028
  0x0000000104888211: movslq %r8d,%r10          ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888214: jmpq   0x00000001048875e3  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x0000000104888219: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488821e: mov    (%rsp),%rbp
  0x0000000104888222: mov    0x8(%rsp),%r11
  0x0000000104888227: mov    %r11,(%rsp)
  0x000000010488822b: mov    0x10(%rsp),%r11
  0x0000000104888230: mov    %r11,0x8(%rsp)
  0x0000000104888235: mov    0x20(%rsp),%r11
  0x000000010488823a: mov    %r11,0x10(%rsp)
  0x000000010488823f: mov    %edx,0x20(%rsp)
  0x0000000104888243: mov    %r10d,0x28(%rsp)
  0x0000000104888248: data32 xchg %ax,%ax
  0x000000010488824b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=4816}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888250: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104888255: mov    %rsi,%rdi
  0x0000000104888258: xor    %rax,%rax
  0x000000010488825b: shl    $0x3,%rcx
  0x000000010488825f: rep rex.W stos %al,%es:(%rdi)  ;*if_acmpne
                                                ; - java.io.ObjectStreamField::getClassSignature@143 (line 312)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888262: mov    0x68(%rsp),%rsi
  0x0000000104888267: xor    %edx,%edx
  0x0000000104888269: mov    0x88(%rsp),%rcx
  0x0000000104888271: xor    %r8d,%r8d
  0x0000000104888274: data32 xchg %ax,%ax
  0x0000000104888277: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [136]=Oop off=4860}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488827c: jmpq   0x00000001048876ef
  0x0000000104888281: mov    %rsi,%rdi
  0x0000000104888284: xor    %rax,%rax
  0x0000000104888287: shl    $0x3,%rcx
  0x000000010488828b: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@222 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488828e: jmpq   0x00000001048876ef  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104888293: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888298: mov    (%rsp),%rbp
  0x000000010488829c: mov    0x8(%rsp),%r10
  0x00000001048882a1: mov    %r10,(%rsp)
  0x00000001048882a5: mov    0x10(%rsp),%r10
  0x00000001048882aa: mov    %r10,0x8(%rsp)
  0x00000001048882af: mov    0x20(%rsp),%r10
  0x00000001048882b4: mov    %r10,0x10(%rsp)
  0x00000001048882b9: mov    %edx,0x20(%rsp)
  0x00000001048882bd: mov    %r11d,0x28(%rsp)
  0x00000001048882c2: mov    %r8d,0x2c(%rsp)
  0x00000001048882c7: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [44]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=4940}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x00000001048882cc: callq  0x0000000103c85e14  ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x00000001048882d1: mov    $0xffffff86,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x00000001048882d6: mov    (%rsp),%rbp
  0x00000001048882da: mov    0x8(%rsp),%r10
  0x00000001048882df: mov    %r10,(%rsp)
  0x00000001048882e3: mov    0x10(%rsp),%r10
  0x00000001048882e8: mov    %r10,0x8(%rsp)
  0x00000001048882ed: mov    %r8d,0x18(%rsp)
  0x00000001048882f2: nop
  0x00000001048882f3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [32]=Oop [64]=NarrowOop off=4984}
                                                ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)
                                                ;   {runtime_call}
  0x00000001048882f8: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x00000001048882fd: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888302: mov    (%rsp),%rbp
  0x0000000104888306: mov    0x8(%rsp),%r10
  0x000000010488830b: mov    %r10,(%rsp)
  0x000000010488830f: mov    0x10(%rsp),%r10
  0x0000000104888314: mov    %r10,0x8(%rsp)
  0x0000000104888319: mov    0x20(%rsp),%r10
  0x000000010488831e: mov    %r10,0x10(%rsp)
  0x0000000104888323: mov    %edx,0x20(%rsp)
  0x0000000104888327: mov    %r11d,0x28(%rsp)
  0x000000010488832c: mov    %r9d,0x2c(%rsp)
  0x0000000104888331: xchg   %ax,%ax
  0x0000000104888333: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5048}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888338: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x000000010488833d: mov    $0xffffff65,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888342: mov    (%rsp),%rbp
  0x0000000104888346: mov    0x8(%rsp),%r10
  0x000000010488834b: mov    %r10,(%rsp)
  0x000000010488834f: mov    0x10(%rsp),%r10
  0x0000000104888354: mov    %r10,0x8(%rsp)
  0x0000000104888359: mov    0x20(%rsp),%r10
  0x000000010488835e: mov    %r10,0x10(%rsp)
  0x0000000104888363: mov    %edx,0x20(%rsp)
  0x0000000104888367: mov    %r11d,0x28(%rsp)
  0x000000010488836c: data32 xchg %ax,%ax
  0x000000010488836f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5108}
                                                ;*ifnull
                                                ; - java.io.ObjectStreamClass::matchFields@142 (line 2301)
                                                ;   {runtime_call}
  0x0000000104888374: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888379: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488837e: mov    0x20(%rsp),%r8
  0x0000000104888383: mov    %r8,0x18(%rsp)
  0x0000000104888388: mov    0x54(%rsp),%ebp
  0x000000010488838c: mov    0x40(%rsp),%r9d
  0x0000000104888391: mov    %r9d,0x20(%rsp)
  0x0000000104888396: mov    0x50(%rsp),%r8d
  0x000000010488839b: mov    %r8d,0x24(%rsp)
  0x00000001048883a0: mov    0x58(%rsp),%r8
  0x00000001048883a5: mov    %r8,0x30(%rsp)
  0x00000001048883aa: mov    0x60(%rsp),%r8
  0x00000001048883af: mov    %r8,0x40(%rsp)
  0x00000001048883b4: mov    %r11d,0x48(%rsp)
  0x00000001048883b9: mov    %r10d,0x50(%rsp)
  0x00000001048883be: nop
  0x00000001048883bf: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [32]=NarrowOop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop [96]=Oop off=5188}
                                                ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048883c4: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048883c9: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048883ce: mov    0x20(%rsp),%r10
  0x00000001048883d3: mov    %r10,0x18(%rsp)
  0x00000001048883d8: mov    0x54(%rsp),%r8d
  0x00000001048883dd: mov    %r8d,0x20(%rsp)
  0x00000001048883e2: mov    0x40(%rsp),%ebp
  0x00000001048883e6: mov    0x50(%rsp),%r10d
  0x00000001048883eb: mov    %r10d,0x24(%rsp)
  0x00000001048883f0: mov    0x58(%rsp),%r10
  0x00000001048883f5: mov    %r10,0x30(%rsp)
  0x00000001048883fa: mov    0x60(%rsp),%r10
  0x00000001048883ff: mov    %r10,0x40(%rsp)
  0x0000000104888404: mov    %r11d,0x48(%rsp)
  0x0000000104888409: mov    0x70(%rsp),%r11d
  0x000000010488840e: mov    %r11d,0x50(%rsp)
  0x0000000104888413: mov    %r11d,0x54(%rsp)
  0x0000000104888418: data32 xchg %ax,%ax
  0x000000010488841b: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop [96]=Oop off=5280}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888420: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888425: mov    $0xffffff65,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488842a: mov    (%rsp),%rbp
  0x000000010488842e: mov    0x8(%rsp),%r10
  0x0000000104888433: mov    %r10,(%rsp)
  0x0000000104888437: mov    0x10(%rsp),%r10
  0x000000010488843c: mov    %r10,0x8(%rsp)
  0x0000000104888441: mov    0x20(%rsp),%r10
  0x0000000104888446: mov    %r10,0x10(%rsp)
  0x000000010488844b: mov    %edx,0x20(%rsp)
  0x000000010488844f: mov    %r11d,0x28(%rsp)
  0x0000000104888454: mov    %ebx,0x2c(%rsp)
  0x0000000104888458: mov    %r9d,0x30(%rsp)
  0x000000010488845d: xchg   %ax,%ax
  0x000000010488845f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [44]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5348}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x0000000104888464: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888469: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488846e: mov    (%rsp),%rbp
  0x0000000104888472: mov    0x8(%rsp),%r8
  0x0000000104888477: mov    %r8,(%rsp)
  0x000000010488847b: mov    0x10(%rsp),%r8
  0x0000000104888480: mov    %r8,0x8(%rsp)
  0x0000000104888485: mov    0x20(%rsp),%r8
  0x000000010488848a: mov    %r8,0x10(%rsp)
  0x000000010488848f: mov    %edx,0x20(%rsp)
  0x0000000104888493: mov    %r11d,0x28(%rsp)
  0x0000000104888498: mov    %r10d,0x2c(%rsp)
  0x000000010488849d: xchg   %ax,%ax
  0x000000010488849f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [64]=NarrowOop [68]=NarrowOop off=5412}
                                                ;*if_icmpeq
                                                ; - java.io.ObjectStreamClass::matchFields@98 (line 2296)
                                                ;   {runtime_call}
  0x00000001048884a4: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048884a9: mov    $0xffffff65,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048884ae: mov    (%rsp),%rbp
  0x00000001048884b2: mov    0x8(%rsp),%r10
  0x00000001048884b7: mov    %r10,(%rsp)
  0x00000001048884bb: mov    0x10(%rsp),%r10
  0x00000001048884c0: mov    %r10,0x8(%rsp)
  0x00000001048884c5: mov    0x20(%rsp),%r10
  0x00000001048884ca: mov    %r10,0x10(%rsp)
  0x00000001048884cf: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [64]=NarrowOop [88]=Oop off=5460}
                                                ;*ifnonnull
                                                ; - java.io.ObjectStreamClass::matchFields@200 (line 2310)
                                                ;   {runtime_call}
  0x00000001048884d4: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x00000001048884d9: mov    $0x2d,%esi         ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x00000001048884de: mov    (%rsp),%rbp
  0x00000001048884e2: mov    0x8(%rsp),%r10
  0x00000001048884e7: mov    %r10,(%rsp)
  0x00000001048884eb: mov    0x10(%rsp),%r10
  0x00000001048884f0: mov    %r10,0x8(%rsp)
  0x00000001048884f5: mov    0x20(%rsp),%r10
  0x00000001048884fa: mov    %r10,0x10(%rsp)
  0x00000001048884ff: mov    0x58(%rsp),%r10
  0x0000000104888504: mov    %r10,0x30(%rsp)
  0x0000000104888509: xchg   %ax,%ax
  0x000000010488850b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [48]=Oop [64]=NarrowOop [88]=Oop off=5520}
                                                ;*new  ; - java.io.ObjectStreamField::getClassSignature@190 (line 319)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888510: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888515: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488851a: mov    (%rsp),%rbp
  0x000000010488851e: mov    0x8(%rsp),%r10
  0x0000000104888523: mov    %r10,(%rsp)
  0x0000000104888527: mov    0x10(%rsp),%r10
  0x000000010488852c: mov    %r10,0x8(%rsp)
  0x0000000104888531: mov    0x20(%rsp),%r10
  0x0000000104888536: mov    %r10,0x10(%rsp)
  0x000000010488853b: mov    %edx,0x20(%rsp)
  0x000000010488853f: mov    %r8d,0x28(%rsp)
  0x0000000104888544: data32 xchg %ax,%ax
  0x0000000104888547: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [40]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5580}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x000000010488854c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888551: mov    $0xffffffe4,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104888556: mov    0x20(%rsp),%r10
  0x000000010488855b: mov    %r10,0x18(%rsp)
  0x0000000104888560: mov    0x54(%rsp),%r8d
  0x0000000104888565: mov    %r8d,0x20(%rsp)
  0x000000010488856a: mov    0x40(%rsp),%r10d
  0x000000010488856f: mov    %r10d,0x24(%rsp)
  0x0000000104888574: mov    0x50(%rsp),%r10d
  0x0000000104888579: mov    %r10d,0x28(%rsp)
  0x000000010488857e: mov    0x58(%rsp),%r10
  0x0000000104888583: mov    %r10,0x38(%rsp)
  0x0000000104888588: mov    0x68(%rsp),%r10
  0x000000010488858d: mov    %r10,0x48(%rsp)
  0x0000000104888592: mov    %r11d,0x2c(%rsp)
  0x0000000104888597: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [96]=Oop [104]=Oop [144]=Oop off=5660}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488859c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048885a1: mov    $0xffffffe4,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048885a6: mov    (%rsp),%rbp
  0x00000001048885aa: mov    0x8(%rsp),%r10
  0x00000001048885af: mov    %r10,(%rsp)
  0x00000001048885b3: mov    0x10(%rsp),%r10
  0x00000001048885b8: mov    %r10,0x8(%rsp)
  0x00000001048885bd: mov    0x20(%rsp),%r10
  0x00000001048885c2: mov    %r10,0x10(%rsp)
  0x00000001048885c7: mov    0x54(%rsp),%r11d
  0x00000001048885cc: mov    %r11d,0x18(%rsp)
  0x00000001048885d1: mov    0x40(%rsp),%r10d
  0x00000001048885d6: mov    %r10d,0x1c(%rsp)
  0x00000001048885db: mov    0x50(%rsp),%r10d
  0x00000001048885e0: mov    %r10d,0x20(%rsp)
  0x00000001048885e5: mov    0x58(%rsp),%r10
  0x00000001048885ea: mov    %r10,0x30(%rsp)
  0x00000001048885ef: mov    0x68(%rsp),%r10
  0x00000001048885f4: mov    %r10,0x40(%rsp)
  0x00000001048885f9: mov    0x60(%rsp),%r10
  0x00000001048885fe: mov    %r10,0x50(%rsp)
  0x0000000104888603: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [96]=Oop [104]=Oop [116]=NarrowOop off=5768}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888608: callq  0x0000000103c85e14  ;   {runtime_call}
  0x000000010488860d: movslq %r11d,%r10         ;*invokestatic getClassSignature
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888610: mov    %r10,%rbp
  0x0000000104888613: jmpq   0x0000000104887329
  0x0000000104888618: mov    %r10,%rdi
  0x000000010488861b: xor    %rax,%rax
  0x000000010488861e: shl    $0x3,%rcx
  0x0000000104888622: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888625: mov    0x80(%rsp),%rsi
  0x000000010488862d: xor    %edx,%edx
  0x000000010488862f: mov    0x90(%rsp),%rcx
  0x0000000104888637: xor    %r8d,%r8d
  0x000000010488863a: nop
  0x000000010488863b: callq  0x0000000104844620  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [32]=Oop [64]=NarrowOop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [144]=Oop off=5824}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888640: jmpq   0x000000010488742c
  0x0000000104888645: mov    %r10,%rdi
  0x0000000104888648: xor    %rax,%rax
  0x000000010488864b: shl    $0x3,%rcx
  0x000000010488864f: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888652: jmpq   0x000000010488742c  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)

  0x0000000104888657: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488865c: mov    0x20(%rsp),%r10
  0x0000000104888661: mov    %r10,0x18(%rsp)
  0x0000000104888666: mov    0x54(%rsp),%r10d
  0x000000010488866b: mov    %r10d,0x20(%rsp)
  0x0000000104888670: mov    0x40(%rsp),%r11d
  0x0000000104888675: mov    %r11d,0x24(%rsp)
  0x000000010488867a: mov    0x50(%rsp),%r11d
  0x000000010488867f: mov    %r11d,0x28(%rsp)
  0x0000000104888684: mov    0x58(%rsp),%r10
  0x0000000104888689: mov    %r10,0x38(%rsp)
  0x000000010488868e: mov    0x68(%rsp),%r10
  0x0000000104888693: mov    %r10,0x48(%rsp)
  0x0000000104888698: mov    %r10,0x50(%rsp)
  0x000000010488869d: mov    %r8d,0x2c(%rsp)
  0x00000001048886a2: nop
  0x00000001048886a3: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=5928}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048886a8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x00000001048886ad: mov    $0xffffff65,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048886b2: mov    0x20(%rsp),%r10
  0x00000001048886b7: mov    %r10,0x18(%rsp)
  0x00000001048886bc: mov    %edx,0x28(%rsp)
  0x00000001048886c0: mov    %ebx,0x30(%rsp)
  0x00000001048886c4: data32 xchg %ax,%ax
  0x00000001048886c7: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [48]=NarrowOop [64]=NarrowOop [68]=NarrowOop off=5964}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x00000001048886cc: callq  0x0000000103c85e14  ;*putfield offset
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@6 (line 57)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048886d1: mov    $0xffffffe4,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048886d6: mov    0x20(%rsp),%r10
  0x00000001048886db: mov    %r10,0x18(%rsp)
  0x00000001048886e0: mov    0x54(%rsp),%r10d
  0x00000001048886e5: mov    %r10d,0x20(%rsp)
  0x00000001048886ea: mov    0x40(%rsp),%r11d
  0x00000001048886ef: mov    %r11d,0x24(%rsp)
  0x00000001048886f4: mov    0x50(%rsp),%r11d
  0x00000001048886f9: mov    %r11d,0x28(%rsp)
  0x00000001048886fe: mov    0x58(%rsp),%r10
  0x0000000104888703: mov    %r10,0x38(%rsp)
  0x0000000104888708: mov    0x68(%rsp),%r10
  0x000000010488870d: mov    %r10,0x48(%rsp)
  0x0000000104888712: mov    %r10,0x50(%rsp)
  0x0000000104888717: mov    %r8d,0x2c(%rsp)
  0x000000010488871c: data32 xchg %ax,%ax
  0x000000010488871f: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6052}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888724: callq  0x0000000103c85e14  ;*getfield signature
                                                ; - java.io.ObjectStreamField::isPrimitive@1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888729: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488872e: mov    0x20(%rsp),%r10
  0x0000000104888733: mov    %r10,0x18(%rsp)
  0x0000000104888738: mov    0x54(%rsp),%r11d
  0x000000010488873d: mov    %r11d,0x20(%rsp)
  0x0000000104888742: mov    0x40(%rsp),%r10d
  0x0000000104888747: mov    %r10d,0x24(%rsp)
  0x000000010488874c: mov    0x50(%rsp),%r11d
  0x0000000104888751: mov    %r11d,0x28(%rsp)
  0x0000000104888756: mov    0x58(%rsp),%r10
  0x000000010488875b: mov    %r10,0x38(%rsp)
  0x0000000104888760: mov    0x68(%rsp),%r10
  0x0000000104888765: mov    %r10,0x48(%rsp)
  0x000000010488876a: mov    %r10,0x50(%rsp)
  0x000000010488876f: mov    %r8d,0x2c(%rsp)
  0x0000000104888774: data32 xchg %ax,%ax
  0x0000000104888777: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6140}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488877c: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888781: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888786: mov    0x20(%rsp),%r10
  0x000000010488878b: mov    %r10,0x18(%rsp)
  0x0000000104888790: mov    0x54(%rsp),%r10d
  0x0000000104888795: mov    %r10d,0x20(%rsp)
  0x000000010488879a: mov    0x40(%rsp),%r11d
  0x000000010488879f: mov    %r11d,0x24(%rsp)
  0x00000001048887a4: mov    0x50(%rsp),%r11d
  0x00000001048887a9: mov    %r11d,0x28(%rsp)
  0x00000001048887ae: mov    0x58(%rsp),%r10
  0x00000001048887b3: mov    %r10,0x38(%rsp)
  0x00000001048887b8: mov    0x68(%rsp),%r10
  0x00000001048887bd: mov    %r10,0x48(%rsp)
  0x00000001048887c2: mov    %r10,0x50(%rsp)
  0x00000001048887c7: mov    %r8d,0x2c(%rsp)
  0x00000001048887cc: data32 xchg %ax,%ax
  0x00000001048887cf: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6228}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048887d4: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x00000001048887d9: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048887de: mov    0x20(%rsp),%r10
  0x00000001048887e3: mov    %r10,0x18(%rsp)
  0x00000001048887e8: mov    0x54(%rsp),%r11d
  0x00000001048887ed: mov    %r11d,0x20(%rsp)
  0x00000001048887f2: mov    0x40(%rsp),%r10d
  0x00000001048887f7: mov    %r10d,0x24(%rsp)
  0x00000001048887fc: mov    0x50(%rsp),%r11d
  0x0000000104888801: mov    %r11d,0x28(%rsp)
  0x0000000104888806: mov    0x58(%rsp),%r10
  0x000000010488880b: mov    %r10,0x38(%rsp)
  0x0000000104888810: mov    0x68(%rsp),%r10
  0x0000000104888815: mov    %r10,0x48(%rsp)
  0x000000010488881a: mov    %r10,0x50(%rsp)
  0x000000010488881f: mov    %r8d,0x2c(%rsp)
  0x0000000104888824: data32 xchg %ax,%ax
  0x0000000104888827: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6316}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488882c: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888831: mov    $0xffffffe4,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888836: mov    0x20(%rsp),%r10
  0x000000010488883b: mov    %r10,0x18(%rsp)
  0x0000000104888840: mov    0x54(%rsp),%r10d
  0x0000000104888845: mov    %r10d,0x20(%rsp)
  0x000000010488884a: mov    0x40(%rsp),%r11d
  0x000000010488884f: mov    %r11d,0x24(%rsp)
  0x0000000104888854: mov    0x50(%rsp),%r11d
  0x0000000104888859: mov    %r11d,0x28(%rsp)
  0x000000010488885e: mov    0x58(%rsp),%r10
  0x0000000104888863: mov    %r10,0x38(%rsp)
  0x0000000104888868: mov    0x68(%rsp),%r10
  0x000000010488886d: mov    %r10,0x48(%rsp)
  0x0000000104888872: mov    %r10,0x50(%rsp)
  0x0000000104888877: mov    %r8d,0x2c(%rsp)
  0x000000010488887c: data32 xchg %ax,%ax
  0x000000010488887f: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6404}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888884: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@18 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888889: mov    $0xffffffe4,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x000000010488888e: mov    0x20(%rsp),%r10
  0x0000000104888893: mov    %r10,0x18(%rsp)
  0x0000000104888898: mov    0x54(%rsp),%r11d
  0x000000010488889d: mov    %r11d,0x20(%rsp)
  0x00000001048888a2: mov    0x40(%rsp),%r10d
  0x00000001048888a7: mov    %r10d,0x24(%rsp)
  0x00000001048888ac: mov    0x50(%rsp),%r11d
  0x00000001048888b1: mov    %r11d,0x28(%rsp)
  0x00000001048888b6: mov    0x58(%rsp),%r10
  0x00000001048888bb: mov    %r10,0x38(%rsp)
  0x00000001048888c0: mov    0x68(%rsp),%r10
  0x00000001048888c5: mov    %r10,0x48(%rsp)
  0x00000001048888ca: mov    %r10,0x50(%rsp)
  0x00000001048888cf: mov    %r8d,0x2c(%rsp)
  0x00000001048888d4: data32 xchg %ax,%ax
  0x00000001048888d7: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6492}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048888dc: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048888e1: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048888e6: mov    0x20(%rsp),%r10
  0x00000001048888eb: mov    %r10,0x18(%rsp)
  0x00000001048888f0: mov    0x54(%rsp),%r11d
  0x00000001048888f5: mov    %r11d,0x20(%rsp)
  0x00000001048888fa: mov    0x40(%rsp),%r10d
  0x00000001048888ff: mov    %r10d,0x24(%rsp)
  0x0000000104888904: mov    0x50(%rsp),%r11d
  0x0000000104888909: mov    %r11d,0x28(%rsp)
  0x000000010488890e: mov    0x58(%rsp),%r10
  0x0000000104888913: mov    %r10,0x38(%rsp)
  0x0000000104888918: mov    0x68(%rsp),%r10
  0x000000010488891d: mov    %r10,0x48(%rsp)
  0x0000000104888922: mov    %r9,0x58(%rsp)
  0x0000000104888927: callq  0x00000001047dc1a0  ; OopMap{[0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [88]=Oop [104]=Oop [116]=NarrowOop off=6572}
                                                ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x000000010488892c: callq  0x0000000103c85e14  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888931: mov    $0xffffff65,%esi   ;*getfield name
                                                ; - java.io.ObjectStreamField::getName@1 (line 150)
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)

  0x0000000104888936: mov    (%rsp),%rbp
  0x000000010488893a: mov    0x8(%rsp),%r10
  0x000000010488893f: mov    %r10,(%rsp)
  0x0000000104888943: mov    0x10(%rsp),%r10
  0x0000000104888948: mov    %r10,0x8(%rsp)
  0x000000010488894d: mov    0x20(%rsp),%r10
  0x0000000104888952: mov    %r10,0x10(%rsp)
  0x0000000104888957: mov    0x54(%rsp),%r10d
  0x000000010488895c: mov    %r10d,0x18(%rsp)
  0x0000000104888961: mov    0x40(%rsp),%r11d
  0x0000000104888966: mov    %r11d,0x1c(%rsp)
  0x000000010488896b: mov    0x50(%rsp),%r10d
  0x0000000104888970: mov    %r10d,0x20(%rsp)
  0x0000000104888975: mov    0x58(%rsp),%r10
  0x000000010488897a: mov    %r10,0x30(%rsp)
  0x000000010488897f: mov    0x68(%rsp),%r10
  0x0000000104888984: mov    %r10,0x40(%rsp)
  0x0000000104888989: mov    %r9,0x50(%rsp)
  0x000000010488898e: mov    0x78(%rsp),%r10d
  0x0000000104888993: mov    %r10d,%r11d
  0x0000000104888996: mov    %r11d,0x5c(%rsp)
  0x000000010488899b: mov    %r11d,0x60(%rsp)
  0x00000001048889a0: data32 xchg %ax,%ax
  0x00000001048889a3: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [104]=Oop [116]=NarrowOop off=6696}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x00000001048889a8: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x00000001048889ad: mov    $0xffffffe4,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x00000001048889b2: mov    0x20(%rsp),%r10
  0x00000001048889b7: mov    %r10,0x18(%rsp)
  0x00000001048889bc: mov    0x54(%rsp),%r10d
  0x00000001048889c1: mov    %r10d,0x20(%rsp)
  0x00000001048889c6: mov    0x40(%rsp),%r11d
  0x00000001048889cb: mov    %r11d,0x24(%rsp)
  0x00000001048889d0: mov    0x50(%rsp),%r11d
  0x00000001048889d5: mov    %r11d,0x28(%rsp)
  0x00000001048889da: mov    0x58(%rsp),%r10
  0x00000001048889df: mov    %r10,0x38(%rsp)
  0x00000001048889e4: mov    0x68(%rsp),%r10
  0x00000001048889e9: mov    %r10,0x48(%rsp)
  0x00000001048889ee: mov    %r10,0x50(%rsp)
  0x00000001048889f3: mov    %r8d,0x2c(%rsp)
  0x00000001048889f8: data32 xchg %ax,%ax
  0x00000001048889fb: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [36]=NarrowOop [56]=Oop [72]=Oop [80]=Oop [88]=Oop off=6784}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888a00: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888a05: mov    $0xffffff86,%esi   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888a0a: mov    %r9,%rbp
  0x0000000104888a0d: mov    %rdx,(%rsp)
  0x0000000104888a11: mov    %r8,0x8(%rsp)
  0x0000000104888a16: mov    %rbx,0x10(%rsp)
  0x0000000104888a1b: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop off=6816}
                                                ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)
                                                ;   {runtime_call}
  0x0000000104888a20: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888a25: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888a2a: nop
  0x0000000104888a2b: callq  0x00000001047dc1a0  ; OopMap{off=6832}
                                                ;*invokevirtual replace
                                                ; - java.io.ObjectStreamField::getClassSignature@219 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888a30: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888a35: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888a3a: nop
  0x0000000104888a3b: callq  0x00000001047dc1a0  ; OopMap{off=6848}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888a40: callq  0x0000000103c85e14  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888a45: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888a4a: mov    0x20(%rsp),%r10
  0x0000000104888a4f: mov    %r10,0x18(%rsp)
  0x0000000104888a54: mov    0x40(%rsp),%ebp
  0x0000000104888a58: mov    0x50(%rsp),%r10d
  0x0000000104888a5d: mov    %r10d,0x24(%rsp)
  0x0000000104888a62: mov    0x58(%rsp),%r10
  0x0000000104888a67: mov    %r10,0x30(%rsp)
  0x0000000104888a6c: mov    0x60(%rsp),%r10
  0x0000000104888a71: mov    %r10,0x40(%rsp)
  0x0000000104888a76: mov    %r11d,0x48(%rsp)
  0x0000000104888a7b: mov    0x70(%rsp),%r10d
  0x0000000104888a80: mov    %r10d,%r11d
  0x0000000104888a83: mov    %r11d,0x50(%rsp)
  0x0000000104888a88: data32 xchg %ax,%ax
  0x0000000104888a8b: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop [0]=Oop [8]=Oop [16]=Oop [24]=Oop [48]=Oop [64]=Oop [72]=NarrowOop [88]=Oop [96]=Oop off=6928}
                                                ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888a90: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888a95: mov    $0xffffff65,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888a9a: mov    (%rsp),%rbp
  0x0000000104888a9e: mov    0x8(%rsp),%r10
  0x0000000104888aa3: mov    %r10,(%rsp)
  0x0000000104888aa7: mov    0x10(%rsp),%r10
  0x0000000104888aac: mov    %r10,0x8(%rsp)
  0x0000000104888ab1: mov    0x20(%rsp),%r10
  0x0000000104888ab6: mov    %r10,0x10(%rsp)
  0x0000000104888abb: mov    0x54(%rsp),%r10d
  0x0000000104888ac0: mov    %r10d,0x18(%rsp)
  0x0000000104888ac5: mov    0x40(%rsp),%r11d
  0x0000000104888aca: mov    %r11d,0x1c(%rsp)
  0x0000000104888acf: mov    0x50(%rsp),%r10d
  0x0000000104888ad4: mov    %r10d,0x20(%rsp)
  0x0000000104888ad9: mov    0x58(%rsp),%r10
  0x0000000104888ade: mov    %r10,0x30(%rsp)
  0x0000000104888ae3: mov    0x68(%rsp),%r10
  0x0000000104888ae8: mov    %r10,0x40(%rsp)
  0x0000000104888aed: mov    %r9,0x50(%rsp)
  0x0000000104888af2: mov    0x78(%rsp),%r10d
  0x0000000104888af7: mov    %r10d,%r11d
  0x0000000104888afa: mov    %r11d,0x5c(%rsp)
  0x0000000104888aff: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [28]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [96]=Oop [104]=Oop [116]=NarrowOop off=7044}
                                                ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888b04: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b09: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getClassSignature@-1 (line 294)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b0e: nop
  0x0000000104888b0f: callq  0x00000001047dc1a0  ; OopMap{off=7060}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b14: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b19: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b1e: mov    %r11d,%ebp
  0x0000000104888b21: xchg   %ax,%ax
  0x0000000104888b23: callq  0x00000001047dc1a0  ; OopMap{rbp=NarrowOop off=7080}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b28: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b2d: mov    $0xfffffff4,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b32: mov    (%rsp),%rbp
  0x0000000104888b36: mov    0x8(%rsp),%r11
  0x0000000104888b3b: mov    %r11,(%rsp)
  0x0000000104888b3f: mov    0x10(%rsp),%r11
  0x0000000104888b44: mov    %r11,0x8(%rsp)
  0x0000000104888b49: mov    0x20(%rsp),%r11
  0x0000000104888b4e: mov    %r11,0x10(%rsp)
  0x0000000104888b53: mov    %edx,0x28(%rsp)
  0x0000000104888b57: mov    %r10d,0x30(%rsp)
  0x0000000104888b5c: data32 xchg %ax,%ax
  0x0000000104888b5f: callq  0x00000001047dc1a0  ; OopMap{rbp=Oop [0]=Oop [8]=Oop [16]=Oop [48]=NarrowOop [64]=NarrowOop [68]=NarrowOop [88]=Oop off=7140}
                                                ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b64: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888b69: mov    $0xfffffff6,%esi   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b6e: mov    %edx,%ebp
  0x0000000104888b70: data32 xchg %ax,%ax
  0x0000000104888b73: callq  0x00000001047dc1a0  ; OopMap{off=7160}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@18 (line 296)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888b78: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x0000000104888b7d: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b82: nop
  0x0000000104888b83: callq  0x00000001047dc1a0  ; OopMap{off=7176}
                                                ;*invokevirtual isArray
                                                ; - java.io.ObjectStreamField::getClassSignature@9 (line 295)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888b88: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b8d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888b92: nop
  0x0000000104888b93: callq  0x00000001047dc1a0  ; OopMap{off=7192}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888b98: callq  0x0000000103c85e14  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@63 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888b9d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888ba2: nop
  0x0000000104888ba3: callq  0x00000001047dc1a0  ; OopMap{off=7208}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888ba8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888bad: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888bb2: nop
  0x0000000104888bb3: callq  0x00000001047dc1a0  ; OopMap{off=7224}
                                                ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888bb8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888bbd: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888bc2: nop
  0x0000000104888bc3: callq  0x00000001047dc1a0  ; OopMap{off=7240}
                                                ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@40 (line 139)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888bc8: callq  0x0000000103c85e14  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888bcd: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888bd2: nop
  0x0000000104888bd3: callq  0x00000001047dc1a0  ; OopMap{off=7256}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@238 (line 324)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888bd8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888bdd: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888be2: nop
  0x0000000104888be3: callq  0x00000001047dc1a0  ; OopMap{off=7272}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x0000000104888be8: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888bed: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888bf2: nop
  0x0000000104888bf3: callq  0x00000001047dc1a0  ; OopMap{off=7288}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@95 (line 2296)
                                                ;   {runtime_call}
  0x0000000104888bf8: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888bfd: mov    $0xfffffff6,%esi   ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c02: nop
  0x0000000104888c03: callq  0x00000001047dc1a0  ; OopMap{off=7304}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@183 (line 317)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c08: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888c0d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c12: nop
  0x0000000104888c13: callq  0x00000001047dc1a0  ; OopMap{off=7320}
                                                ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c18: callq  0x0000000103c85e14  ;*invokevirtual equals
                                                ; - java.io.ObjectStreamClass::matchFields@66 (line 2294)
                                                ;   {runtime_call}
  0x0000000104888c1d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c22: nop
  0x0000000104888c23: callq  0x00000001047dc1a0  ; OopMap{off=7336}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c28: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c2d: mov    $0xfffffff6,%esi   ;*invokevirtual getName
                                                ; - java.io.ObjectStreamClass::matchFields@58 (line 2294)

  0x0000000104888c32: mov    %r11d,%ebp
  0x0000000104888c35: xchg   %ax,%ax
  0x0000000104888c37: callq  0x00000001047dc1a0  ; OopMap{off=7356}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@208 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c3c: callq  0x0000000103c85e14  ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x0000000104888c41: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c46: nop
  0x0000000104888c47: callq  0x00000001047dc1a0  ; OopMap{off=7372}
                                                ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c4c: callq  0x0000000103c85e14  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c51: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c56: mov    0x70(%rsp),%ebp
  0x0000000104888c5a: nop
  0x0000000104888c5b: callq  0x00000001047dc1a0  ; OopMap{off=7392}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c60: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c65: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c6a: mov    %r8d,%ebp
  0x0000000104888c6d: xchg   %ax,%ax
  0x0000000104888c6f: callq  0x00000001047dc1a0  ; OopMap{off=7412}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@47 (line 301)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c74: callq  0x0000000103c85e14  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c79: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c7e: mov    %r8d,%ebp
  0x0000000104888c81: xchg   %ax,%ax
  0x0000000104888c83: callq  0x00000001047dc1a0  ; OopMap{off=7432}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@64 (line 303)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c88: callq  0x0000000103c85e14  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::isPrimitive@-1 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888c8d: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888c92: mov    %r8d,%ebp
  0x0000000104888c95: xchg   %ax,%ax
  0x0000000104888c97: callq  0x00000001047dc1a0  ; OopMap{off=7452}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@81 (line 305)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888c9c: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@82 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888ca1: mov    $0xfffffff6,%esi   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888ca6: mov    %r8d,%ebp
  0x0000000104888ca9: xchg   %ax,%ax
  0x0000000104888cab: callq  0x00000001047dc1a0  ; OopMap{off=7472}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@98 (line 307)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888cb0: callq  0x0000000103c85e14  ;*ifne
                                                ; - java.io.ObjectStreamClass::matchFields@77 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888cb5: mov    $0xfffffff6,%esi   ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.ObjectStreamField::getClassSignature@230 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888cba: mov    %r8d,%ebp
  0x0000000104888cbd: xchg   %ax,%ax
  0x0000000104888cbf: callq  0x00000001047dc1a0  ; OopMap{off=7492}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@115 (line 309)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888cc4: callq  0x0000000103c85e14  ;*invokevirtual isPrimitive
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888cc9: mov    $0xfffffff6,%esi   ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888cce: mov    %r8d,%ebp
  0x0000000104888cd1: xchg   %ax,%ax
  0x0000000104888cd3: callq  0x00000001047dc1a0  ; OopMap{off=7512}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@132 (line 311)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888cd8: callq  0x0000000103c85e14  ;*iconst_0
                                                ; - java.io.ObjectStreamField::isPrimitive@25 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888cdd: mov    $0xfffffff6,%esi   ;*invokevirtual append
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888ce2: mov    %r8d,%ebp
  0x0000000104888ce5: xchg   %ax,%ax
  0x0000000104888ce7: callq  0x00000001047dc1a0  ; OopMap{off=7532}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@149 (line 313)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888cec: callq  0x0000000103c85e14  ;*if_icmpeq
                                                ; - java.io.ObjectStreamField::isPrimitive@12 (line 236)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)
                                                ;   {runtime_call}
  0x0000000104888cf1: mov    $0xfffffff6,%esi   ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@227 (line 322)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888cf6: mov    %r8d,%ebp
  0x0000000104888cf9: xchg   %ax,%ax
  0x0000000104888cfb: callq  0x00000001047dc1a0  ; OopMap{off=7552}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuilder::append@2 (line 202)
                                                ; - java.io.ObjectStreamField::getClassSignature@166 (line 315)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)
                                                ;   {runtime_call}
  0x0000000104888d00: callq  0x0000000103c85e14  ;*anewarray
                                                ; - java.io.ObjectStreamClass::matchFields@17 (line 2289)
                                                ;   {runtime_call}
  0x0000000104888d05: mov    $0xfffffff6,%esi
  0x0000000104888d0a: nop
  0x0000000104888d0b: callq  0x00000001047dc1a0  ; OopMap{off=7568}
                                                ;*arraylength
                                                ; - java.io.ObjectStreamClass::matchFields@16 (line 2289)
                                                ;   {runtime_call}
  0x0000000104888d10: callq  0x0000000103c85e14  ;   {runtime_call}
  0x0000000104888d15: jmp    0x0000000104888d2a  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d17: jmp    0x0000000104888d40  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)

  0x0000000104888d19: mov    %rax,%rsi
  0x0000000104888d1c: jmp    0x0000000104888d98
  0x0000000104888d1e: mov    %rax,%rsi
  0x0000000104888d21: jmp    0x0000000104888d98  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d23: mov    %rax,%rsi
  0x0000000104888d26: jmp    0x0000000104888d98  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d28: jmp    0x0000000104888d2a  ;*invokespecial &lt;init&gt;
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d2a: mov    %rax,%rsi
  0x0000000104888d2d: jmp    0x0000000104888d98
  0x0000000104888d2f: mov    %rax,%rsi
  0x0000000104888d32: jmp    0x0000000104888d98  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d34: mov    %rax,%rsi
  0x0000000104888d37: jmp    0x0000000104888d98  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)

  0x0000000104888d39: mov    %rax,%rsi
  0x0000000104888d3c: jmp    0x0000000104888d98  ;*invokevirtual getComponentType
                                                ; - java.io.ObjectStreamField::getClassSignature@23 (line 297)
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@59 (line 140)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d3e: jmp    0x0000000104888d40  ;*invokevirtual getName
                                                ; - java.io.ObjectStreamField::&lt;init&gt;@21 (line 137)
                                                ; - java.io.ObjectStreamClass::matchFields@160 (line 2303)

  0x0000000104888d40: mov    %rax,%rsi
  0x0000000104888d43: jmp    0x0000000104888d98
  0x0000000104888d45: mov    %rax,%rsi
  0x0000000104888d48: jmp    0x0000000104888d98
  0x0000000104888d4a: mov    %rax,%rsi
  0x0000000104888d4d: jmp    0x0000000104888d98
  0x0000000104888d4f: mov    %rax,%rsi
  0x0000000104888d52: jmp    0x0000000104888d98  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d54: mov    %rax,%rsi
  0x0000000104888d57: jmp    0x0000000104888d98  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d59: mov    %rax,%rsi
  0x0000000104888d5c: jmp    0x0000000104888d98
  0x0000000104888d5e: mov    %rax,%rsi
  0x0000000104888d61: jmp    0x0000000104888d98
  0x0000000104888d63: mov    %rax,%rsi
  0x0000000104888d66: jmp    0x0000000104888d98
  0x0000000104888d68: mov    %rax,%rsi
  0x0000000104888d6b: jmp    0x0000000104888d98  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d6d: mov    %rax,%rsi
  0x0000000104888d70: jmp    0x0000000104888d98  ;*synchronization entry
                                                ; - java.io.ObjectStreamField::getTypeCode@-1 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d72: mov    %rax,%rsi
  0x0000000104888d75: jmp    0x0000000104888d98  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d77: mov    %rax,%rsi
  0x0000000104888d7a: jmp    0x0000000104888d98
  0x0000000104888d7c: mov    %rax,%rsi
  0x0000000104888d7f: jmp    0x0000000104888d98
  0x0000000104888d81: mov    %rax,%rsi
  0x0000000104888d84: jmp    0x0000000104888d98
  0x0000000104888d86: mov    %rax,%rsi
  0x0000000104888d89: jmp    0x0000000104888d98  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d8b: mov    %rax,%rsi
  0x0000000104888d8e: jmp    0x0000000104888d98  ;*invokevirtual charAt
                                                ; - java.io.ObjectStreamField::isPrimitive@5 (line 235)
                                                ; - java.io.ObjectStreamClass::matchFields@74 (line 2295)

  0x0000000104888d90: mov    %rax,%rsi
  0x0000000104888d93: jmp    0x0000000104888d98  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.ObjectStreamField::getTypeCode@5 (line 193)
                                                ; - java.io.ObjectStreamClass::matchFields@90 (line 2296)

  0x0000000104888d95: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.ObjectStreamClass::matchFields@31 (line 2291)

  0x0000000104888d98: add    $0xc0,%rsp
  0x0000000104888d9f: pop    %rbp
  0x0000000104888da0: jmpq   0x00000001048446e0  ;*aload_2
                                                ; - java.io.ObjectStreamClass::matchFields@50 (line 2293)
                                                ;   {runtime_call}
  0x0000000104888da5: hlt    
  0x0000000104888da6: hlt    
  0x0000000104888da7: hlt    
  0x0000000104888da8: hlt    
  0x0000000104888da9: hlt    
  0x0000000104888daa: hlt    
  0x0000000104888dab: hlt    
  0x0000000104888dac: hlt    
  0x0000000104888dad: hlt    
  0x0000000104888dae: hlt    
  0x0000000104888daf: hlt    
  0x0000000104888db0: hlt    
  0x0000000104888db1: hlt    
  0x0000000104888db2: hlt    
  0x0000000104888db3: hlt    
  0x0000000104888db4: hlt    
  0x0000000104888db5: hlt    
  0x0000000104888db6: hlt    
  0x0000000104888db7: hlt    
  0x0000000104888db8: hlt    
  0x0000000104888db9: hlt    
  0x0000000104888dba: hlt    
  0x0000000104888dbb: hlt    
  0x0000000104888dbc: hlt    
  0x0000000104888dbd: hlt    
  0x0000000104888dbe: hlt    
  0x0000000104888dbf: hlt    
[Stub Code]
  0x0000000104888dc0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000104888dca: jmpq   0x0000000104888dca  ;   {runtime_call}
  0x0000000104888dcf: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888dd9: jmpq   0x0000000104888dd9  ;   {runtime_call}
  0x0000000104888dde: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888de8: jmpq   0x0000000104888de8  ;   {runtime_call}
  0x0000000104888ded: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888df7: jmpq   0x0000000104888df7  ;   {runtime_call}
  0x0000000104888dfc: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e06: jmpq   0x0000000104888e06  ;   {runtime_call}
  0x0000000104888e0b: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e15: jmpq   0x0000000104888e15  ;   {runtime_call}
  0x0000000104888e1a: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e24: jmpq   0x0000000104888e24  ;   {runtime_call}
  0x0000000104888e29: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e33: jmpq   0x0000000104888e33  ;   {runtime_call}
  0x0000000104888e38: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e42: jmpq   0x0000000104888e42  ;   {runtime_call}
  0x0000000104888e47: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e51: jmpq   0x0000000104888e51  ;   {runtime_call}
  0x0000000104888e56: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e60: jmpq   0x0000000104888e60  ;   {runtime_call}
  0x0000000104888e65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e6f: jmpq   0x0000000104888e6f  ;   {runtime_call}
  0x0000000104888e74: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e7e: jmpq   0x0000000104888e7e  ;   {runtime_call}
  0x0000000104888e83: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e8d: jmpq   0x0000000104888e8d  ;   {runtime_call}
  0x0000000104888e92: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888e9c: jmpq   0x0000000104888e9c  ;   {runtime_call}
  0x0000000104888ea1: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888eab: jmpq   0x0000000104888eab  ;   {runtime_call}
  0x0000000104888eb0: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000104888eba: jmpq   0x0000000104888eba  ;   {runtime_call}
[Exception Handler]
  0x0000000104888ebf: jmpq   0x0000000104843760  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000104888ec4: callq  0x0000000104888ec9
  0x0000000104888ec9: subq   $0x5,(%rsp)
  0x0000000104888ece: jmpq   0x000000010481e3c0  ;   {runtime_call}
  0x0000000104888ed3: hlt    
  0x0000000104888ed4: hlt    
  0x0000000104888ed5: hlt    
  0x0000000104888ed6: hlt    
  0x0000000104888ed7: hlt    
<nmethod compile_id='90' compiler='C2' entry='0x0000000104886f80' size='22336' address='0x0000000104886c10' relocation_offset='296' insts_offset='880' stub_offset='8624' scopes_data_offset='9112' scopes_pcs_offset='13328' dependencies_offset='21392' handler_table_offset='21408' nul_chk_table_offset='22104' oops_offset='8904' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5002' iicount='29' stamp='2.543'/>
<writer thread='7171'/>
[Loaded org.openjdk.jmh.runner.link.ResultsFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor38 from __JVM_DefineClass__]
<writer thread='21251'/>
[Loaded sun.reflect.GeneratedMethodAccessor1 from __JVM_DefineClass__]
<writer thread='7171'/>
[Loaded org.openjdk.jmh.results.BenchmarkResultMetaData from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.ResultMetadataFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor39 from __JVM_DefineClass__]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor40 from __JVM_DefineClass__]
[Loaded java.util.HashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$KeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$IdentityHashMapIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.IdentityHashMap$KeyIterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='5127'/>
[Loaded org.openjdk.jmh.util.FileUtils from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded org.openjdk.jmh.runner.link.FinishingFrame from file:/Users/aroger/dev/github/sfm-csv-variability/target/benchmarks.jar]
[Loaded sun.reflect.GeneratedSerializationConstructorAccessor41 from __JVM_DefineClass__]
[Loaded sun.net.ConnectionResetException from /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/rt.jar]
<writer thread='13571'/>
<destroy_vm stamp='23.352'/>
<tty_done stamp='23.352'/>
</tty>
<compilation_log thread='19715'>
<start_compile_thread name='C2 CompilerThread1' thread='19715' process='22189' stamp='0.069'/>
<task compile_id='2' method='java/util/Properties$LineReader readLine ()I' bytes='468' count='26' backedge_count='5316' iicount='26' stamp='0.091'>
<phase name='parse' nodes='3' live='3' stamp='0.091'>
<type id='722' name='int'/>
<klass id='832' name='java/util/Properties$LineReader' flags='0'/>
<method id='833' holder='832' name='readLine' return='722' flags='0' bytes='468' iicount='27'/>
<parse method='833' uses='27' stamp='0.091'>
<uncommon_trap bci='21' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='21' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='161' bci='29'/>
<branch target_bci='101' taken='9166' not_taken='1' cnt='9167' prob='0.999891'/>
<bc code='199' bci='37'/>
<branch target_bci='54' taken='1' not_taken='0'/>
<bc code='182' bci='48'/>
<klass id='837' name='java/io/Reader' flags='1025'/>
<klass id='821' name='[C' flags='1041'/>
<method id='838' holder='837' name='read' return='722' arguments='821' flags='1' bytes='9' iicount='1'/>
<dependency type='unique_concrete_method' ctxk='837' x='838'/>
<call method='838' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='48'/>
<uncommon_trap bci='48' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='62'/>
<klass id='835' name='java/io/BufferedInputStream' flags='1'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='836' holder='797' name='read' return='722' arguments='824' flags='1' bytes='9' iicount='1'/>
<call method='836' count='1' prof_factor='1' virtual='1' inline='1' receiver='835' receiver_count='1'/>
<klass id='841' name='java/io/FilterInputStream' flags='1'/>
<method id='842' holder='841' name='read' return='722' arguments='824' flags='1' bytes='9' iicount='3'/>
<call method='842' count='1' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<predicted_call bci='62' klass='835'/>
<uncommon_trap bci='62' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<direct_call bci='62'/>
<bc code='157' bci='77'/>
<branch target_bci='101' taken='1' not_taken='0'/>
<bc code='153' bci='81'/>
<branch target_bci='89' taken='0' not_taken='0'/>
<bc code='153' bci='86'/>
<branch target_bci='91' taken='0' not_taken='0'/>
<bc code='153' bci='93'/>
<branch target_bci='99' taken='0' not_taken='0'/>
<bc code='198' bci='105'/>
<branch target_bci='133' taken='0' not_taken='9167' cnt='9167' prob='never'/>
<uncommon_trap bci='105' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='51' bci='126'/>
<uncommon_trap bci='126' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='152'/>
<branch target_bci='167' taken='9167' not_taken='0' cnt='9167' prob='always'/>
<uncommon_trap bci='152' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='153' bci='168'/>
<branch target_bci='217' taken='7333' not_taken='1834' cnt='9167' prob='0.799935'/>
<bc code='159' bci='174'/>
<branch target_bci='21' taken='1598' not_taken='236' cnt='1834' prob='0.87132'/>
<bc code='159' bci='180'/>
<branch target_bci='21' taken='0' not_taken='236' cnt='236' prob='never'/>
<uncommon_trap bci='180' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='186'/>
<branch target_bci='192' taken='236' not_taken='0' cnt='236' prob='always'/>
<uncommon_trap bci='186' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='194'/>
<branch target_bci='212' taken='94' not_taken='142' cnt='236' prob='0.398305'/>
<bc code='159' bci='200'/>
<branch target_bci='21' taken='0' not_taken='142' cnt='142' prob='never'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='206'/>
<branch target_bci='212' taken='127' not_taken='15' cnt='142' prob='0.894366'/>
<bc code='153' bci='219'/>
<branch target_bci='243' taken='7427' not_taken='127' cnt='7554' prob='0.983188'/>
<bc code='159' bci='228'/>
<branch target_bci='237' taken='111' not_taken='16' cnt='127' prob='0.874016'/>
<bc code='160' bci='234'/>
<branch target_bci='243' taken='16' not_taken='0'/>
<bc code='159' bci='246'/>
<branch target_bci='347' taken='221' not_taken='7222' cnt='7443' prob='0.0296923'/>
<bc code='159' bci='252'/>
<branch target_bci='347' taken='0' not_taken='7222' cnt='7222' prob='never'/>
<uncommon_trap bci='252' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='85' bci='264'/>
<uncommon_trap bci='264' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='264' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='271'/>
<branch target_bci='320' taken='7221' not_taken='1' cnt='7222' prob='0.999862'/>
<bc code='156' bci='285'/>
<branch target_bci='292' taken='1' not_taken='0'/>
<bc code='190' bci='310'/>
<uncommon_trap bci='310' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='311'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='839' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' iicount='1057'/>
<call method='839' count='1' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='101'/>
<bc code='160' bci='323'/>
<branch target_bci='341' taken='7127' not_taken='94' cnt='7221' prob='0.986982'/>
<bc code='154' bci='328'/>
<branch target_bci='335' taken='0' not_taken='94' cnt='94' prob='never'/>
<uncommon_trap bci='328' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='349'/>
<branch target_bci='356' taken='111' not_taken='110' cnt='221' prob='0.502262'/>
<bc code='154' bci='353'/>
<branch target_bci='369' taken='110' not_taken='0' cnt='110' prob='always'/>
<uncommon_trap bci='353' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='377'/>
<branch target_bci='438' taken='110' not_taken='0' cnt='110' prob='always'/>
<uncommon_trap bci='377' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='153' bci='440'/>
<branch target_bci='466' taken='16' not_taken='94' cnt='110' prob='0.145455'/>
<bc code='160' bci='457'/>
<branch target_bci='21' taken='94' not_taken='0' cnt='94' prob='always'/>
<parse_done nodes='815' live='794' memory='202824' stamp='0.092'/>
</parse>
<phase_done name='parse' nodes='817' live='559' stamp='0.092'/>
</phase>
<phase name='optimizer' nodes='817' live='559' stamp='0.092'>
<phase name='idealLoop' nodes='844' live='519' stamp='0.093'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='863' live='532' stamp='0.093'/>
</phase>
<phase name='escapeAnalysis' nodes='863' live='532' stamp='0.093'>
<phase name='connectionGraph' nodes='864' live='533' stamp='0.093'>
<phase_done name='connectionGraph' nodes='864' live='533' stamp='0.093'/>
</phase>
<phase_done name='escapeAnalysis' nodes='864' live='533' stamp='0.093'/>
</phase>
<phase name='idealLoop' nodes='864' live='533' stamp='0.093'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.094'/>
</phase>
<phase name='idealLoop' nodes='911' live='519' stamp='0.094'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.094'/>
</phase>
<phase name='idealLoop' nodes='911' live='519' stamp='0.094'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='911' live='519' stamp='0.094'/>
</phase>
<phase name='ccp' nodes='911' live='519' stamp='0.094'>
<phase_done name='ccp' nodes='911' live='519' stamp='0.094'/>
</phase>
<phase name='idealLoop' nodes='919' live='518' stamp='0.094'>
<loop_tree>
<loop idx='853' >
<loop idx='862' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='960' live='518' stamp='0.095'/>
</phase>
<phase_done name='optimizer' nodes='1042' live='562' stamp='0.095'/>
</phase>
<phase name='matcher' nodes='1042' live='562' stamp='0.095'>
<phase_done name='matcher' nodes='606' live='606' stamp='0.095'/>
</phase>
<phase name='regalloc' nodes='763' live='761' stamp='0.096'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='1231' live='1060' stamp='0.100'/>
</phase>
<phase name='output' nodes='1233' live='1062' stamp='0.100'>
<phase_done name='output' nodes='1272' live='1086' stamp='0.101'/>
</phase>
<dependency type='unique_concrete_method' ctxk='837' x='838'/>
<code_cache total_blobs='201' nmethods='2' adapters='148' free_code_cache='49824512'/>
<task_done success='1' nmsize='2168' count='5000' backedge_count='5000' stamp='0.107'/>
</task>
<task compile_id='10' method='java/lang/String charAt (I)C' bytes='29' count='5169' backedge_count='1' iicount='10177' stamp='0.137'>
<phase name='parse' nodes='3' live='3' stamp='0.137'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='10196'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='6' klass='834'/>
<parse method='832' uses='10196' stamp='0.137'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7002' cnt='7002' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7002' not_taken='0' cnt='7002' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.137'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.137'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.137'>
<phase name='ccp' nodes='103' live='63' stamp='0.137'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.137'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.137'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.137'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.137'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.137'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.137'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.137'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.138'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.138'>
<phase_done name='output' nodes='94' live='86' stamp='0.138'/>
</phase>
<code_cache total_blobs='234' nmethods='10' adapters='174' free_code_cache='49811072'/>
<task_done success='1' nmsize='216' count='6296' backedge_count='1' stamp='0.139'/>
</task>
<task compile_id='32' method='java/lang/String lastIndexOf (II)I' bytes='52' count='517' backedge_count='5030' iicount='517' stamp='0.168'>
<phase name='parse' nodes='3' live='3' stamp='0.168'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='lastIndexOf' return='722' arguments='722 722' flags='1' bytes='52' iicount='517'/>
<parse method='832' uses='517' stamp='0.168'>
<bc code='162' bci='3'/>
<branch target_bci='45' taken='0' not_taken='429' cnt='429' prob='never'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='16'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='3032'/>
<call method='836' count='429' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='155' bci='23'/>
<branch target_bci='43' taken='3' not_taken='6755' cnt='6758' prob='0.000443918'/>
<uncommon_trap bci='26' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='31'/>
<branch target_bci='37' taken='6328' not_taken='427' cnt='6755' prob='0.936788'/>
<bc code='155' bci='23'/>
<branch target_bci='43' taken='3' not_taken='6755' cnt='6328' prob='0.000443918'/>
<parse_done nodes='153' live='146' memory='45416' stamp='0.168'/>
</parse>
<phase_done name='parse' nodes='154' live='112' stamp='0.168'/>
</phase>
<phase name='optimizer' nodes='154' live='112' stamp='0.168'>
<phase name='idealLoop' nodes='154' live='102' stamp='0.168'>
<loop_tree>
<loop idx='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='183' live='106' stamp='0.168'/>
</phase>
<phase name='idealLoop' nodes='183' live='106' stamp='0.168'>
<loop_tree>
<loop idx='259' inner_loop='1' main_loop='259' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='277' live='179' stamp='0.168'/>
</phase>
<phase name='idealLoop' nodes='277' live='179' stamp='0.168'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='336' live='213' stamp='0.168'/>
</phase>
<phase name='ccp' nodes='336' live='213' stamp='0.168'>
<phase_done name='ccp' nodes='336' live='213' stamp='0.168'/>
</phase>
<phase name='idealLoop' nodes='336' live='213' stamp='0.168'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='336' live='200' stamp='0.169'/>
</phase>
<phase name='idealLoop' nodes='336' live='200' stamp='0.169'>
<loop_tree>
<loop idx='225' inner_loop='1' pre_loop='163' >
</loop>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
<loop idx='197' inner_loop='1' post_loop='163' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='352' live='194' stamp='0.169'/>
</phase>
<phase_done name='optimizer' nodes='355' live='184' stamp='0.169'/>
</phase>
<phase name='matcher' nodes='355' live='184' stamp='0.169'>
<phase_done name='matcher' nodes='148' live='148' stamp='0.169'/>
</phase>
<phase name='regalloc' nodes='211' live='210' stamp='0.169'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='224' live='221' stamp='0.169'/>
</phase>
<phase name='output' nodes='224' live='221' stamp='0.169'>
<phase_done name='output' nodes='250' live='233' stamp='0.169'/>
</phase>
<code_cache total_blobs='260' nmethods='34' adapters='176' free_code_cache='49796032'/>
<task_done success='1' nmsize='376' count='529' backedge_count='5176' inlined_bytes='11' stamp='0.171'/>
</task>
<task compile_id='39' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='5009' backedge_count='1' iicount='10010' stamp='0.175'>
<phase name='parse' nodes='3' live='3' stamp='0.175'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='10016'/>
<parse method='832' uses='10016' stamp='0.175'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.175'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.175'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.175'>
<phase name='ccp' nodes='56' live='38' stamp='0.175'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.175'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.175'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.175'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.175'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.175'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.175'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.175'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.175'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.175'>
<phase_done name='output' nodes='55' live='53' stamp='0.176'/>
</phase>
<code_cache total_blobs='265' nmethods='39' adapters='176' free_code_cache='49793664'/>
<task_done success='1' nmsize='152' count='5155' backedge_count='1' stamp='0.176'/>
</task>
<task compile_id='43' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='367' backedge_count='5140' iicount='367' stamp='0.180'>
<phase name='parse' nodes='3' live='3' stamp='0.180'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='367'/>
<parse method='832' uses='367' stamp='0.180'>
<bc code='159' bci='2'/>
<branch target_bci='125' taken='0' not_taken='253' cnt='253' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='0' not_taken='1265' cnt='1265' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='29' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='35'/>
<branch target_bci='20' taken='1012' not_taken='253' cnt='1265' prob='0.8'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='0' not_taken='1265' cnt='1265' prob='never'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='44'/>
<branch target_bci='125' taken='0' not_taken='253' cnt='253' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='253' not_taken='1012' cnt='1265' prob='0.2'/>
<uncommon_trap bci='62' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='62' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='70'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='71'/>
<uncommon_trap bci='71' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='253' not_taken='1012' cnt='1012' prob='0.2'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='254' not_taken='4616' cnt='4870' prob='0.0521561'/>
<uncommon_trap bci='84' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='84' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='4014' not_taken='602' cnt='4616' prob='0.869584'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='254' not_taken='4616' cnt='4616' prob='0.0521561'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='589'/>
<call method='834' count='254' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='254' stamp='0.180'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.431239' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.180'>
<parse_done nodes='505' live='487' memory='113016' stamp='0.180'/>
</parse>
<parse_done nodes='524' live='505' memory='128072' stamp='0.180'/>
</parse>
<parse_done nodes='526' live='506' memory='128712' stamp='0.180'/>
</parse>
<phase_done name='parse' nodes='528' live='362' stamp='0.180'/>
</phase>
<phase name='optimizer' nodes='528' live='362' stamp='0.180'>
<phase name='idealLoop' nodes='529' live='322' stamp='0.180'>
<loop_tree>
<loop idx='537' >
</loop>
<loop idx='543' >
</loop>
<loop idx='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='551' live='309' stamp='0.181'/>
</phase>
<phase name='escapeAnalysis' nodes='551' live='309' stamp='0.181'>
<phase name='connectionGraph' nodes='552' live='310' stamp='0.181'>
<phase_done name='connectionGraph' nodes='552' live='310' stamp='0.181'/>
</phase>
<phase_done name='escapeAnalysis' nodes='552' live='310' stamp='0.181'/>
</phase>
<phase name='idealLoop' nodes='552' live='310' stamp='0.181'>
<loop_tree>
<loop idx='537' inner_loop='1' >
</loop>
<loop idx='543' inner_loop='1' >
</loop>
<loop idx='549' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='634' live='329' stamp='0.181'/>
</phase>
<phase name='idealLoop' nodes='634' live='329' stamp='0.181'>
<loop_tree>
<loop idx='727' inner_loop='1' main_loop='727' >
</loop>
<loop idx='825' inner_loop='1' main_loop='825' >
</loop>
<loop idx='932' inner_loop='1' main_loop='932' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='949' live='579' stamp='0.181'/>
</phase>
<phase name='idealLoop' nodes='949' live='579' stamp='0.181'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1176' live='688' stamp='0.182'/>
</phase>
<phase name='ccp' nodes='1176' live='688' stamp='0.182'>
<phase_done name='ccp' nodes='1176' live='688' stamp='0.183'/>
</phase>
<phase name='idealLoop' nodes='1180' live='666' stamp='0.183'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1266' live='643' stamp='0.183'/>
</phase>
<phase name='idealLoop' nodes='1266' live='643' stamp='0.183'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1269' live='600' stamp='0.183'/>
</phase>
<phase name='idealLoop' nodes='1269' live='600' stamp='0.184'>
<loop_tree>
<loop idx='690' inner_loop='1' pre_loop='537' >
</loop>
<loop idx='974' inner_loop='1' main_loop='974' >
</loop>
<loop idx='646' inner_loop='1' post_loop='537' >
</loop>
<loop idx='783' inner_loop='1' pre_loop='543' >
</loop>
<loop idx='1023' inner_loop='1' main_loop='1023' >
</loop>
<loop idx='754' inner_loop='1' post_loop='543' >
</loop>
<loop idx='887' inner_loop='1' pre_loop='549' >
</loop>
<loop idx='1067' inner_loop='1' main_loop='1067' >
</loop>
<loop idx='851' inner_loop='1' post_loop='549' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1293' live='548' stamp='0.184'/>
</phase>
<phase_done name='optimizer' nodes='1421' live='575' stamp='0.184'/>
</phase>
<phase name='matcher' nodes='1421' live='575' stamp='0.184'>
<phase_done name='matcher' nodes='463' live='463' stamp='0.185'/>
</phase>
<phase name='regalloc' nodes='618' live='617' stamp='0.185'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='889' live='732' stamp='0.188'/>
</phase>
<phase name='output' nodes='895' live='738' stamp='0.188'>
<phase_done name='output' nodes='935' live='756' stamp='0.188'/>
</phase>
<code_cache total_blobs='277' nmethods='50' adapters='177' free_code_cache='49783744'/>
<task_done success='1' nmsize='1400' count='459' backedge_count='7337' inlined_bytes='11' stamp='0.194'/>
</task>
<task compile_id='55' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='418' backedge_count='5058' iicount='418' stamp='0.214'>
<phase name='parse' nodes='3' live='3' stamp='0.214'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='418'/>
<parse method='832' uses='418' stamp='0.214'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='282' not_taken='0' cnt='282' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='201' not_taken='282' cnt='483' prob='0.416149'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='0' not_taken='282' cnt='282' prob='never'/>
<uncommon_trap bci='66' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='201' not_taken='6387' cnt='6588' prob='0.03051'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='82' not_taken='6305' cnt='6387' prob='0.0128386'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='201' not_taken='6387' cnt='6305' prob='0.03051'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='201' not_taken='82' cnt='283' prob='0.710247'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='82' not_taken='0' cnt='82' prob='always'/>
<uncommon_trap bci='123' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='0' not_taken='82' cnt='82' prob='never'/>
<uncommon_trap bci='150' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='201' not_taken='282' cnt='201' prob='0.416149'/>
<parse_done nodes='337' live='320' memory='88688' stamp='0.214'/>
</parse>
<phase_done name='parse' nodes='338' live='240' stamp='0.214'/>
</phase>
<phase name='optimizer' nodes='338' live='240' stamp='0.214'>
<phase name='idealLoop' nodes='338' live='220' stamp='0.214'>
<loop_tree>
<loop idx='338' >
<loop idx='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='233' stamp='0.214'/>
</phase>
<phase name='idealLoop' nodes='382' live='233' stamp='0.214'>
<loop_tree>
<loop idx='338' >
<loop idx='349' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='236' stamp='0.214'/>
</phase>
<phase name='idealLoop' nodes='399' live='236' stamp='0.214'>
<loop_tree>
<loop idx='338' >
<loop idx='487' inner_loop='1' main_loop='487' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='502' live='320' stamp='0.214'/>
</phase>
<phase name='ccp' nodes='502' live='320' stamp='0.215'>
<phase_done name='ccp' nodes='502' live='320' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='502' live='318' stamp='0.215'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='357' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='585' live='357' stamp='0.215'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='624' live='344' stamp='0.215'/>
</phase>
<phase name='idealLoop' nodes='624' live='344' stamp='0.215'>
<loop_tree>
<loop idx='338' >
<loop idx='444' inner_loop='1' pre_loop='349' >
</loop>
<loop idx='541' inner_loop='1' main_loop='541' >
</loop>
<loop idx='410' inner_loop='1' post_loop='349' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='638' live='342' stamp='0.215'/>
</phase>
<phase_done name='optimizer' nodes='645' live='330' stamp='0.215'/>
</phase>
<phase name='matcher' nodes='645' live='330' stamp='0.215'>
<phase_done name='matcher' nodes='294' live='294' stamp='0.216'/>
</phase>
<phase name='regalloc' nodes='401' live='399' stamp='0.216'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='639' live='534' stamp='0.217'/>
</phase>
<phase name='output' nodes='639' live='534' stamp='0.217'>
<phase_done name='output' nodes='671' live='550' stamp='0.218'/>
</phase>
<code_cache total_blobs='284' nmethods='55' adapters='179' free_code_cache='49773888'/>
<task_done success='1' nmsize='1144' count='424' backedge_count='5232' stamp='0.222'/>
</task>
<task compile_id='58' compile_kind='osr' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='10000' backedge_count='5024' iicount='703' decompiles='1' unstable_if_traps='1' osr_bci='78' stamp='0.281'>
<phase name='parse' nodes='3' live='3' stamp='0.281'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='703'/>
<parse method='832' uses='703' osr_bci='78' stamp='0.281'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='78' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='78' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='78' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='579' not_taken='11288' cnt='11867' prob='0.0487908'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='9749' not_taken='1539' cnt='11288' prob='0.863661'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1356'/>
<call method='834' count='579' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='579' stamp='0.281'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.426991' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.281'>
<parse_done nodes='288' live='280' memory='75304' stamp='0.282'/>
</parse>
<parse_done nodes='309' live='300' memory='79200' stamp='0.282'/>
</parse>
<parse_done nodes='309' live='299' memory='79328' stamp='0.282'/>
</parse>
<phase_done name='parse' nodes='311' live='217' stamp='0.282'/>
</phase>
<phase name='optimizer' nodes='311' live='217' stamp='0.282'>
<phase name='idealLoop' nodes='326' live='203' stamp='0.282'>
<loop_tree>
<loop idx='326' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='327' live='203' stamp='0.282'/>
</phase>
<phase name='escapeAnalysis' nodes='327' live='203' stamp='0.282'>
<phase name='connectionGraph' nodes='328' live='204' stamp='0.282'>
<phase_done name='connectionGraph' nodes='328' live='204' stamp='0.282'/>
</phase>
<phase_done name='escapeAnalysis' nodes='328' live='204' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='328' live='204' stamp='0.282'>
<loop_tree>
<loop idx='326' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='425' live='211' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='425' live='211' stamp='0.282'>
<loop_tree>
<loop idx='430' main_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='596' live='324' stamp='0.282'/>
</phase>
<phase name='idealLoop' nodes='596' live='324' stamp='0.282'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='638' inner_loop='1' main_loop='638' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='341' stamp='0.283'/>
</phase>
<phase name='ccp' nodes='672' live='341' stamp='0.283'>
<phase_done name='ccp' nodes='672' live='341' stamp='0.283'/>
</phase>
<phase name='idealLoop' nodes='676' live='329' stamp='0.283'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='638' inner_loop='1' main_loop='638' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='699' live='317' stamp='0.283'/>
</phase>
<phase name='idealLoop' nodes='699' live='317' stamp='0.283'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='728' inner_loop='1' main_loop='728' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='757' live='363' stamp='0.283'/>
</phase>
<phase name='idealLoop' nodes='757' live='363' stamp='0.283'>
<loop_tree>
<loop idx='536' inner_loop='1' pre_loop='430' >
</loop>
<loop idx='728' inner_loop='1' main_loop='728' >
</loop>
<loop idx='457' inner_loop='1' post_loop='430' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='792' live='358' stamp='0.283'/>
</phase>
<phase_done name='optimizer' nodes='852' live='363' stamp='0.284'/>
</phase>
<phase name='matcher' nodes='852' live='363' stamp='0.284'>
<phase_done name='matcher' nodes='292' live='292' stamp='0.284'/>
</phase>
<phase name='regalloc' nodes='386' live='385' stamp='0.284'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='480' live='438' stamp='0.285'/>
</phase>
<phase name='output' nodes='484' live='442' stamp='0.285'>
<phase_done name='output' nodes='514' live='458' stamp='0.285'/>
</phase>
<code_cache total_blobs='292' nmethods='58' adapters='184' free_code_cache='49765696'/>
<task_done success='1' nmsize='888' count='5000' backedge_count='5020' inlined_bytes='11' stamp='0.288'/>
</task>
<task compile_id='60' method='sun/reflect/ClassFileAssembler emitByte (B)V' bytes='11' count='5030' backedge_count='1' iicount='10030' stamp='0.289'>
<phase name='parse' nodes='3' live='3' stamp='0.289'>
<type id='724' name='void'/>
<type id='720' name='byte'/>
<klass id='832' name='sun/reflect/ClassFileAssembler' flags='0'/>
<method id='833' holder='832' name='emitByte' return='724' arguments='720' flags='1' bytes='11' iicount='10075'/>
<parse method='833' uses='10075' stamp='0.289'>
<bc code='185' bci='5'/>
<klass id='835' name='sun/reflect/ByteVectorImpl' flags='0'/>
<klass id='836' name='sun/reflect/ByteVector' flags='1536'/>
<method id='837' holder='836' name='add' return='724' arguments='720' flags='1025' bytes='0' iicount='1'/>
<call method='837' count='6823' prof_factor='1' virtual='1' inline='1' receiver='835' receiver_count='6823'/>
<method id='838' holder='835' name='add' return='724' arguments='720' flags='1' bytes='38' iicount='10392'/>
<call method='838' count='6823' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='835'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='838' uses='6823' stamp='0.289'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='7280' not_taken='20' cnt='7300' prob='0.99726'/>
<bc code='183' bci='24'/>
<type id='722' name='int'/>
<method id='839' holder='835' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='31'/>
<call method='839' count='20' prof_factor='0.656563' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='169' live='163' memory='48560' stamp='0.289'/>
</parse>
<parse_done nodes='174' live='167' memory='49984' stamp='0.289'/>
</parse>
<phase_done name='parse' nodes='176' live='113' stamp='0.289'/>
</phase>
<phase name='optimizer' nodes='176' live='113' stamp='0.289'>
<phase name='ccp' nodes='180' live='113' stamp='0.289'>
<phase_done name='ccp' nodes='180' live='113' stamp='0.289'/>
</phase>
<phase name='idealLoop' nodes='180' live='113' stamp='0.289'>
<phase_done name='idealLoop' nodes='215' live='115' stamp='0.289'/>
</phase>
<phase name='idealLoop' nodes='215' live='115' stamp='0.289'>
<phase_done name='idealLoop' nodes='220' live='115' stamp='0.289'/>
</phase>
<phase_done name='optimizer' nodes='233' live='114' stamp='0.289'/>
</phase>
<phase name='matcher' nodes='233' live='114' stamp='0.289'>
<phase_done name='matcher' nodes='103' live='103' stamp='0.289'/>
</phase>
<phase name='regalloc' nodes='129' live='127' stamp='0.290'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='154' live='143' stamp='0.290'/>
</phase>
<phase name='output' nodes='154' live='143' stamp='0.290'>
<phase_done name='output' nodes='169' live='155' stamp='0.290'/>
</phase>
<code_cache total_blobs='293' nmethods='59' adapters='184' free_code_cache='49764352'/>
<task_done success='1' nmsize='328' count='7742' backedge_count='1' stamp='0.291'/>
</task>
<task compile_id='61' method='sun/reflect/ByteVectorImpl add (B)V' bytes='38' count='7742' backedge_count='1' iicount='12742' stamp='0.291'>
<phase name='parse' nodes='3' live='3' stamp='0.291'>
<type id='724' name='void'/>
<type id='720' name='byte'/>
<klass id='832' name='sun/reflect/ByteVectorImpl' flags='0'/>
<method id='833' holder='832' name='add' return='724' arguments='720' flags='1' bytes='38' iicount='12742'/>
<parse method='833' uses='12742' stamp='0.292'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='9418' not_taken='25' cnt='9443' prob='0.997353'/>
<bc code='183' bci='24'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='36'/>
<call method='835' count='25' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='122' live='118' memory='39176' stamp='0.292'/>
</parse>
<phase_done name='parse' nodes='124' live='85' stamp='0.292'/>
</phase>
<phase name='optimizer' nodes='124' live='85' stamp='0.292'>
<phase name='ccp' nodes='124' live='85' stamp='0.292'>
<phase_done name='ccp' nodes='124' live='85' stamp='0.292'/>
</phase>
<phase name='idealLoop' nodes='124' live='85' stamp='0.292'>
<phase_done name='idealLoop' nodes='159' live='87' stamp='0.292'/>
</phase>
<phase name='idealLoop' nodes='159' live='87' stamp='0.292'>
<phase_done name='idealLoop' nodes='164' live='87' stamp='0.292'/>
</phase>
<phase_done name='optimizer' nodes='171' live='86' stamp='0.292'/>
</phase>
<phase name='matcher' nodes='171' live='86' stamp='0.292'>
<phase_done name='matcher' nodes='79' live='79' stamp='0.292'/>
</phase>
<phase name='regalloc' nodes='98' live='97' stamp='0.292'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='112' live='105' stamp='0.292'/>
</phase>
<phase name='output' nodes='112' live='105' stamp='0.292'>
<phase_done name='output' nodes='126' live='116' stamp='0.292'/>
</phase>
<code_cache total_blobs='295' nmethods='60' adapters='185' free_code_cache='49762688'/>
<task_done success='1' nmsize='264' count='7742' backedge_count='1' stamp='0.293'/>
</task>
<task compile_id='62' method='sun/reflect/ClassFileAssembler emitConstantPoolUTF8 (Ljava/lang/String;)V' bytes='50' count='671' backedge_count='5000' iicount='671' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/ClassFileAssembler' flags='0'/>
<method id='833' holder='832' name='emitConstantPoolUTF8' return='724' arguments='730' flags='1' bytes='50' iicount='675'/>
<parse method='833' uses='675' stamp='0.320'>
<bc code='184' bci='1'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='835' name='sun/reflect/UTF8' flags='0'/>
<method id='836' holder='835' name='encode' return='824' arguments='730' flags='8' bytes='191' iicount='702'/>
<call method='836' count='467' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='467' stamp='0.320'>
<observe that='has_exception_handlers'/>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='839' holder='730' name='length' return='722' flags='1' bytes='6' iicount='8460'/>
<call method='839' count='484' prof_factor='0.665242' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='322' stamp='0.320'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='77' live='74' memory='32632' stamp='0.320'/>
</parse>
<bc code='184' bci='6'/>
<method id='840' holder='835' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='702'/>
<call method='840' count='484' prof_factor='0.665242' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='322' stamp='0.320'>
<bc code='182' bci='1'/>
<call method='839' count='484' prof_factor='0.458689' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='222' stamp='0.320'>
<parse_done nodes='107' live='103' memory='37480' stamp='0.320'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='842' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='842' count='6514' prof_factor='0.458689' inline='1'/>
<klass id='846' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='842' bci='13' reason='unloaded' action='reinterpret' index='6' klass='846'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='2988' stamp='0.320'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='243' live='232' memory='61336' stamp='0.320'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='284' live='270' memory='74824' stamp='0.320'/>
</parse>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='26'/>
<call method='842' count='6514' prof_factor='0.665242' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='4333' stamp='0.321'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='465' live='444' memory='104072' stamp='0.321'/>
</parse>
<bc code='161' bci='37'/>
<branch target_bci='59' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='37' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='44'/>
<branch target_bci='59' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='55'/>
<uncommon_trap bci='55' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='534' live='509' memory='128704' stamp='0.321'/>
</parse>
<bc code='182' bci='7'/>
<type id='720' name='byte'/>
<method id='837' holder='832' name='emitByte' return='724' arguments='720' flags='1' bytes='11' compile_id='60' compiler='C2' iicount='12742'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='466' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='466' stamp='0.321'>
<bc code='185' bci='5'/>
<klass id='851' name='sun/reflect/ByteVectorImpl' flags='0'/>
<klass id='848' name='sun/reflect/ByteVector' flags='1536'/>
<method id='849' holder='848' name='add' return='724' arguments='720' flags='1025' bytes='0' iicount='1'/>
<call method='849' count='9443' prof_factor='0.036572' virtual='1' inline='1' receiver='851' receiver_count='9443'/>
<method id='852' holder='851' name='add' return='724' arguments='720' flags='1' bytes='38' compile_id='61' compiler='C2' iicount='12742'/>
<call method='852' count='9443' prof_factor='0.036572' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='851'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='852' uses='345' stamp='0.321'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='9418' not_taken='25' cnt='9443' prob='0.997353'/>
<bc code='183' bci='24'/>
<method id='853' holder='851' name='resize' return='724' arguments='722' flags='2' bytes='44' iicount='52'/>
<call method='853' count='25' prof_factor='0.0270758' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='689' live='658' memory='156504' stamp='0.321'/>
</parse>
<parse_done nodes='695' live='663' memory='158400' stamp='0.321'/>
</parse>
<bc code='182' bci='14'/>
<type id='721' name='short'/>
<method id='838' holder='832' name='emitShort' return='724' arguments='721' flags='1' bytes='24' iicount='2767'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<call method='838' count='466' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='466' stamp='0.321'>
<bc code='182' bci='10'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='-1' prof_factor='0.168413' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='10'/>
<bc code='182' bci='20'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='-1' prof_factor='0.168413' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='20'/>
<parse_done nodes='764' live='731' memory='170624' stamp='0.321'/>
</parse>
<bc code='162' bci='22'/>
<branch target_bci='38' taken='467' not_taken='6374' cnt='6841' prob='0.0682649'/>
<uncommon_trap bci='25' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='25' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='51' bci='28'/>
<uncommon_trap bci='28' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='29'/>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<call method='837' count='6374' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='6374' stamp='0.322'>
<bc code='185' bci='5'/>
<call method='849' count='9443' prof_factor='0.500235' virtual='1' inline='1' receiver='851' receiver_count='9443'/>
<call method='852' count='9443' prof_factor='0.500235' inline='1'/>
<inline_success reason='inline (hot)'/>
<predicted_call bci='5' klass='851'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='5' reason='class_check' action='maybe_recompile' comment='monomorphic vcall checkcast'/>
<parse method='852' uses='4724' stamp='0.322'>
<bc code='190' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='16'/>
<branch target_bci='27' taken='9418' not_taken='25' cnt='9443' prob='0.997353'/>
<bc code='183' bci='24'/>
<call method='853' count='25' prof_factor='0.370742' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='24'/>
<bc code='84' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='978' live='936' memory='205360' stamp='0.322'/>
</parse>
<parse_done nodes='983' live='940' memory='206824' stamp='0.322'/>
</parse>
<bc code='162' bci='22'/>
<branch target_bci='38' taken='467' not_taken='6374' cnt='6374' prob='0.0682649'/>
<parse_done nodes='1014' live='970' memory='213040' stamp='0.322'/>
</parse>
<phase_done name='parse' nodes='1016' live='603' stamp='0.322'/>
</phase>
<phase name='optimizer' nodes='1016' live='603' stamp='0.322'>
<phase name='idealLoop' nodes='1032' live='560' stamp='0.323'>
<loop_tree>
<loop idx='1040' >
</loop>
<loop idx='1050' >
</loop>
<loop idx='1060' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1065' live='551' stamp='0.323'/>
</phase>
<phase name='escapeAnalysis' nodes='1065' live='551' stamp='0.323'>
<phase name='connectionGraph' nodes='1066' live='552' stamp='0.323'>
<phase_done name='connectionGraph' nodes='1066' live='552' stamp='0.323'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1066' live='552' stamp='0.323'/>
</phase>
<phase name='idealLoop' nodes='1066' live='552' stamp='0.323'>
<loop_tree>
<loop idx='1040' inner_loop='1' >
</loop>
<loop idx='1050' inner_loop='1' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1146' live='537' stamp='0.324'/>
</phase>
<phase name='idealLoop' nodes='1146' live='537' stamp='0.324'>
<loop_tree>
<loop idx='1040' inner_loop='1' >
</loop>
<loop idx='1050' inner_loop='1' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1222' live='549' stamp='0.324'/>
</phase>
<phase name='idealLoop' nodes='1222' live='549' stamp='0.324'>
<loop_tree>
<loop idx='1389' inner_loop='1' main_loop='1389' >
</loop>
<loop idx='1607' inner_loop='1' main_loop='1607' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1683' live='815' stamp='0.325'/>
</phase>
<phase name='ccp' nodes='1683' live='815' stamp='0.325'>
<phase_done name='ccp' nodes='1683' live='815' stamp='0.325'/>
</phase>
<phase name='idealLoop' nodes='1689' live='813' stamp='0.326'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1896' live='921' stamp='0.326'/>
</phase>
<phase name='idealLoop' nodes='1896' live='921' stamp='0.326'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1971' live='889' stamp='0.327'/>
</phase>
<phase name='idealLoop' nodes='1971' live='889' stamp='0.327'>
<loop_tree>
<loop idx='1302' inner_loop='1' pre_loop='1040' >
</loop>
<loop idx='1733' inner_loop='1' main_loop='1733' >
</loop>
<loop idx='1240' inner_loop='1' post_loop='1040' >
</loop>
<loop idx='1512' inner_loop='1' pre_loop='1050' >
</loop>
<loop idx='1801' inner_loop='1' main_loop='1801' >
</loop>
<loop idx='1440' inner_loop='1' post_loop='1050' >
</loop>
<loop idx='1060' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1994' live='885' stamp='0.328'/>
</phase>
<phase_done name='optimizer' nodes='2103' live='902' stamp='0.328'/>
</phase>
<phase name='matcher' nodes='2103' live='902' stamp='0.328'>
<phase_done name='matcher' nodes='811' live='811' stamp='0.329'/>
</phase>
<phase name='regalloc' nodes='1098' live='1092' stamp='0.329'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1497' live='1269' stamp='0.333'/>
</phase>
<phase name='output' nodes='1497' live='1269' stamp='0.333'>
<phase_done name='output' nodes='1551' live='1298' stamp='0.335'/>
</phase>
<dependency type='unique_concrete_method' ctxk='832' x='837'/>
<dependency type='unique_concrete_method' ctxk='832' x='838'/>
<code_cache total_blobs='299' nmethods='63' adapters='185' free_code_cache='49742848'/>
<task_done success='1' nmsize='2256' count='918' backedge_count='8296' inlined_bytes='388' stamp='0.346'/>
</task>
<task compile_id='65' method='java/io/ObjectStreamField getName ()Ljava/lang/String;' bytes='5' count='6373' backedge_count='1' iicount='36368' stamp='0.346'>
<phase name='parse' nodes='3' live='3' stamp='0.346'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/io/ObjectStreamField' flags='1'/>
<method id='833' holder='832' name='getName' return='730' flags='1' bytes='5' iicount='36368'/>
<parse method='833' uses='36368' stamp='0.346'>
<parse_done nodes='27' live='26' memory='22992' stamp='0.346'/>
</parse>
<phase_done name='parse' nodes='28' live='14' stamp='0.346'/>
</phase>
<phase name='optimizer' nodes='28' live='14' stamp='0.346'>
<phase name='ccp' nodes='28' live='14' stamp='0.346'>
<phase_done name='ccp' nodes='28' live='14' stamp='0.346'/>
</phase>
<phase name='idealLoop' nodes='28' live='14' stamp='0.346'>
<phase_done name='idealLoop' nodes='28' live='14' stamp='0.346'/>
</phase>
<phase_done name='optimizer' nodes='28' live='14' stamp='0.346'/>
</phase>
<phase name='matcher' nodes='28' live='14' stamp='0.346'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.346'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.346'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='17' live='17' stamp='0.346'/>
</phase>
<phase name='output' nodes='17' live='17' stamp='0.346'>
<phase_done name='output' nodes='24' live='24' stamp='0.350'/>
</phase>
<code_cache total_blobs='300' nmethods='65' adapters='185' free_code_cache='49745472'/>
<task_done success='1' nmsize='120' count='6377' backedge_count='1' stamp='0.351'/>
</task>
<task compile_id='67' method='java/lang/String length ()I' bytes='6' count='5004' backedge_count='1' iicount='10005' stamp='0.352'>
<phase name='parse' nodes='3' live='3' stamp='0.352'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='10016'/>
<parse method='832' uses='10016' stamp='0.352'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.352'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.352'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.352'>
<phase name='ccp' nodes='45' live='27' stamp='0.352'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.352'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.352'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.352'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.353'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.353'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.353'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.353'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.353'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.353'>
<phase_done name='output' nodes='38' live='37' stamp='0.353'/>
</phase>
<code_cache total_blobs='301' nmethods='66' adapters='185' free_code_cache='49744704'/>
<task_done success='1' nmsize='120' count='5042' backedge_count='1' stamp='0.353'/>
</task>
<task compile_id='68' method='java/lang/Math min (II)I' bytes='11' count='5000' backedge_count='1' iicount='10000' stamp='0.353'>
<phase name='parse' nodes='3' live='3' stamp='0.353'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='10003'/>
<parse method='833' uses='10003' stamp='0.353'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='3171' not_taken='3542' cnt='6713' prob='0.472367'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.353'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.353'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.353'>
<phase name='ccp' nodes='33' live='18' stamp='0.353'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.353'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.353'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.353'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.353'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.353'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.353'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.353'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.353'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.353'>
<phase_done name='output' nodes='23' live='23' stamp='0.353'/>
</phase>
<code_cache total_blobs='302' nmethods='67' adapters='185' free_code_cache='49744192'/>
<task_done success='1' nmsize='56' count='5204' backedge_count='1' stamp='0.354'/>
</task>
<task compile_id='69' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='10000' backedge_count='5005' iicount='563' decompiles='1' unstable_if_traps='1' osr_bci='69' stamp='0.368'>
<phase name='parse' nodes='3' live='3' stamp='0.368'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='563'/>
<parse method='832' uses='563' osr_bci='69' stamp='0.368'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='69' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='69' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='69' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='345' not_taken='11886' cnt='12231' prob='0.028207'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='618' not_taken='11268' cnt='11886' prob='0.0519939'/>
<uncommon_trap bci='91' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='91' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='345' not_taken='756' cnt='1101' prob='0.313352'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='84' not_taken='672' cnt='756' prob='0.111111'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='672' not_taken='0' cnt='672' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='672' not_taken='84' cnt='756' prob='0.888889'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='345' not_taken='1099' cnt='1017' prob='0.23892'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='138' not_taken='962' cnt='1100' prob='0.125455'/>
<parse_done nodes='470' live='452' memory='105152' stamp='0.369'/>
</parse>
<phase_done name='parse' nodes='471' live='357' stamp='0.369'/>
</phase>
<phase name='optimizer' nodes='471' live='357' stamp='0.369'>
<phase name='idealLoop' nodes='484' live='310' stamp='0.369'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='426' stamp='0.369'/>
</phase>
<phase name='idealLoop' nodes='724' live='426' stamp='0.369'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='0.370'/>
</phase>
<phase name='idealLoop' nodes='724' live='407' stamp='0.370'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='0.370'/>
</phase>
<phase name='ccp' nodes='724' live='407' stamp='0.370'>
<phase_done name='ccp' nodes='724' live='407' stamp='0.370'/>
</phase>
<phase name='idealLoop' nodes='729' live='392' stamp='0.370'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='744' live='374' stamp='0.370'/>
</phase>
<phase name='idealLoop' nodes='744' live='374' stamp='0.370'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='763' live='376' stamp='0.370'/>
</phase>
<phase_done name='optimizer' nodes='773' live='361' stamp='0.370'/>
</phase>
<phase name='matcher' nodes='773' live='361' stamp='0.370'>
<phase_done name='matcher' nodes='323' live='323' stamp='0.371'/>
</phase>
<phase name='regalloc' nodes='451' live='448' stamp='0.371'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='666' live='578' stamp='0.373'/>
</phase>
<phase name='output' nodes='666' live='578' stamp='0.373'>
<phase_done name='output' nodes='691' live='592' stamp='0.374'/>
</phase>
<code_cache total_blobs='305' nmethods='68' adapters='187' free_code_cache='49739456'/>
<task_done success='1' nmsize='1368' count='5000' backedge_count='5037' stamp='0.378'/>
</task>
<task compile_id='70' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='5000' backedge_count='5044' iicount='603' decompiles='1' unstable_if_traps='1' stamp='0.378'>
<phase name='parse' nodes='3' live='3' stamp='0.378'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='603'/>
<parse method='832' uses='603' stamp='0.378'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='467' not_taken='0' cnt='467' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='385' not_taken='1339' cnt='1724' prob='0.223318'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='178' not_taken='1162' cnt='1340' prob='0.132836'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='385' not_taken='13360' cnt='13745' prob='0.0280102'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='778' not_taken='12582' cnt='13360' prob='0.0582335'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='385' not_taken='13360' cnt='12582' prob='0.0280102'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='385' not_taken='956' cnt='1341' prob='0.287099'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='84' not_taken='872' cnt='956' prob='0.0878661'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='872' not_taken='0' cnt='872' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='872' not_taken='84' cnt='956' prob='0.912134'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='385' not_taken='1339' cnt='1257' prob='0.223318'/>
<parse_done nodes='417' live='398' memory='104048' stamp='0.379'/>
</parse>
<phase_done name='parse' nodes='418' live='300' stamp='0.379'/>
</phase>
<phase name='optimizer' nodes='418' live='300' stamp='0.379'>
<phase name='idealLoop' nodes='418' live='265' stamp='0.379'>
<loop_tree>
<loop idx='418' >
<loop idx='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='481' live='271' stamp='0.379'/>
</phase>
<phase name='idealLoop' nodes='481' live='271' stamp='0.379'>
<loop_tree>
<loop idx='418' >
<loop idx='429' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='274' stamp='0.379'/>
</phase>
<phase name='idealLoop' nodes='498' live='274' stamp='0.379'>
<loop_tree>
<loop idx='418' >
<loop idx='586' inner_loop='1' main_loop='586' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='601' live='358' stamp='0.379'/>
</phase>
<phase name='ccp' nodes='601' live='358' stamp='0.379'>
<phase_done name='ccp' nodes='601' live='358' stamp='0.379'/>
</phase>
<phase name='idealLoop' nodes='601' live='356' stamp='0.379'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='682' live='392' stamp='0.380'/>
</phase>
<phase name='idealLoop' nodes='682' live='392' stamp='0.380'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='722' live='379' stamp='0.380'/>
</phase>
<phase name='idealLoop' nodes='722' live='379' stamp='0.380'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='737' live='377' stamp='0.380'/>
</phase>
<phase_done name='optimizer' nodes='744' live='363' stamp='0.380'/>
</phase>
<phase name='matcher' nodes='744' live='363' stamp='0.380'>
<phase_done name='matcher' nodes='316' live='316' stamp='0.381'/>
</phase>
<phase name='regalloc' nodes='437' live='435' stamp='0.381'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='757' live='591' stamp='0.383'/>
</phase>
<phase name='output' nodes='759' live='593' stamp='0.383'>
<phase_done name='output' nodes='790' live='610' stamp='0.383'/>
</phase>
<code_cache total_blobs='306' nmethods='69' adapters='187' free_code_cache='49735744'/>
<task_done success='1' nmsize='1336' count='5000' backedge_count='5044' stamp='0.387'/>
</task>
<task compile_id='71' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='5027' backedge_count='1' iicount='10027' stamp='0.387'>
<phase name='parse' nodes='3' live='3' stamp='0.387'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='10027'/>
<parse method='832' uses='10027' stamp='0.388'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5070' not_taken='1658' cnt='6728' prob='0.753567'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2436'/>
<call method='834' count='1658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='1658' stamp='0.388'>
<bc code='183' bci='31'/>
<method id='837' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='837' count='-1' prof_factor='0.680624' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='837' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='129' live='127' memory='41976' stamp='0.388'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3115'/>
<call method='836' count='1658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='1658' stamp='0.388'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='840' count='-1' prof_factor='0.532263' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='841' count='-1' prof_factor='0.532263' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='307' live='304' memory='74912' stamp='0.388'/>
</parse>
<parse_done nodes='334' live='330' memory='80752' stamp='0.388'/>
</parse>
<phase_done name='parse' nodes='336' live='211' stamp='0.388'/>
</phase>
<phase name='optimizer' nodes='336' live='211' stamp='0.388'>
<phase name='escapeAnalysis' nodes='340' live='208' stamp='0.388'>
<phase name='connectionGraph' nodes='341' live='209' stamp='0.388'>
<phase_done name='connectionGraph' nodes='341' live='209' stamp='0.388'/>
</phase>
<phase_done name='escapeAnalysis' nodes='341' live='209' stamp='0.388'/>
</phase>
<phase name='ccp' nodes='341' live='209' stamp='0.388'>
<phase_done name='ccp' nodes='341' live='209' stamp='0.388'/>
</phase>
<phase name='idealLoop' nodes='341' live='208' stamp='0.388'>
<phase_done name='idealLoop' nodes='347' live='208' stamp='0.388'/>
</phase>
<phase_done name='optimizer' nodes='405' live='246' stamp='0.388'/>
</phase>
<phase name='matcher' nodes='405' live='246' stamp='0.388'>
<phase_done name='matcher' nodes='245' live='245' stamp='0.389'/>
</phase>
<phase name='regalloc' nodes='308' live='307' stamp='0.389'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='392' live='368' stamp='0.390'/>
</phase>
<phase name='output' nodes='394' live='370' stamp='0.390'>
<phase_done name='output' nodes='414' live='382' stamp='0.390'/>
</phase>
<code_cache total_blobs='307' nmethods='70' adapters='187' free_code_cache='49733888'/>
<task_done success='1' nmsize='712' count='5076' backedge_count='1' inlined_bytes='69' stamp='0.392'/>
</task>
<task compile_id='72' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='5022' backedge_count='2184' iicount='7838' stamp='0.398'>
<phase name='parse' nodes='3' live='3' stamp='0.398'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='7838'/>
<parse method='832' uses='7838' stamp='0.398'>
<bc code='180' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='21'/>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='25'/>
<branch target_bci='40' taken='0' not_taken='5422' cnt='5422' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='37'/>
<branch target_bci='42' taken='5183' not_taken='239' cnt='5422' prob='0.95592'/>
<bc code='155' bci='47'/>
<branch target_bci='70' taken='286' not_taken='6202' cnt='6488' prob='0.0440814'/>
<uncommon_trap bci='50' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='56'/>
<uncommon_trap bci='56' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='64'/>
<uncommon_trap bci='64' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='65'/>
<branch target_bci='42' taken='1305' not_taken='4897' cnt='6202' prob='0.210416'/>
<bc code='155' bci='47'/>
<branch target_bci='70' taken='286' not_taken='6202' cnt='6488' prob='0.0440814'/>
<parse_done nodes='222' live='211' memory='56664' stamp='0.398'/>
</parse>
<phase_done name='parse' nodes='223' live='157' stamp='0.398'/>
</phase>
<phase name='optimizer' nodes='223' live='157' stamp='0.398'>
<phase name='idealLoop' nodes='223' live='145' stamp='0.398'>
<loop_tree>
<loop idx='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.398'/>
</phase>
<phase name='idealLoop' nodes='338' live='153' stamp='0.398'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.398'/>
</phase>
<phase name='idealLoop' nodes='338' live='153' stamp='0.398'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='153' stamp='0.398'/>
</phase>
<phase name='ccp' nodes='338' live='153' stamp='0.398'>
<phase_done name='ccp' nodes='338' live='153' stamp='0.398'/>
</phase>
<phase name='idealLoop' nodes='338' live='152' stamp='0.398'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='341' live='139' stamp='0.399'/>
</phase>
<phase name='idealLoop' nodes='341' live='139' stamp='0.399'>
<loop_tree>
<loop idx='232' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='344' live='139' stamp='0.399'/>
</phase>
<phase_done name='optimizer' nodes='352' live='139' stamp='0.399'/>
</phase>
<phase name='matcher' nodes='352' live='139' stamp='0.399'>
<phase_done name='matcher' nodes='127' live='127' stamp='0.399'/>
</phase>
<phase name='regalloc' nodes='172' live='169' stamp='0.399'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='194' live='188' stamp='0.399'/>
</phase>
<phase name='output' nodes='194' live='188' stamp='0.399'>
<phase_done name='output' nodes='213' live='199' stamp='0.399'/>
</phase>
<code_cache total_blobs='308' nmethods='71' adapters='187' free_code_cache='49732480'/>
<task_done success='1' nmsize='344' count='5085' backedge_count='2198' stamp='0.401'/>
</task>
<task compile_id='73' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='5099' backedge_count='1' iicount='10099' stamp='0.402'>
<phase name='parse' nodes='3' live='3' stamp='0.402'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='832' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='10101'/>
<parse method='832' uses='10101' stamp='0.402'>
<parse_done nodes='27' live='26' memory='22992' stamp='0.402'/>
</parse>
<phase_done name='parse' nodes='28' live='14' stamp='0.402'/>
</phase>
<phase name='optimizer' nodes='28' live='14' stamp='0.402'>
<phase name='ccp' nodes='28' live='14' stamp='0.402'>
<phase_done name='ccp' nodes='28' live='14' stamp='0.402'/>
</phase>
<phase name='idealLoop' nodes='28' live='14' stamp='0.402'>
<phase_done name='idealLoop' nodes='28' live='14' stamp='0.402'/>
</phase>
<phase_done name='optimizer' nodes='28' live='14' stamp='0.402'/>
</phase>
<phase name='matcher' nodes='28' live='14' stamp='0.402'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.402'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.402'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='17' live='17' stamp='0.402'/>
</phase>
<phase name='output' nodes='17' live='17' stamp='0.402'>
<phase_done name='output' nodes='24' live='24' stamp='0.402'/>
</phase>
<code_cache total_blobs='311' nmethods='72' adapters='189' free_code_cache='49730816'/>
<task_done success='1' nmsize='120' count='7777' backedge_count='1' stamp='0.402'/>
</task>
<task compile_id='74' method='java/lang/Class searchFields ([Ljava/lang/reflect/Field;Ljava/lang/String;)Ljava/lang/reflect/Field;' bytes='41' count='417' backedge_count='7274' iicount='417' stamp='0.402'>
<phase name='parse' nodes='3' live='3' stamp='0.402'>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<klass id='832' name='[Ljava/lang/reflect/Field;' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='833' holder='731' name='searchFields' return='768' arguments='832 730' flags='10' bytes='41' iicount='420'/>
<parse method='833' uses='420' stamp='0.402'>
<bc code='182' bci='1'/>
<method id='836' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='1797'/>
<call method='836' count='311' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='10'/>
<branch target_bci='39' taken='217' not_taken='9154' cnt='9371' prob='0.0231565'/>
<uncommon_trap bci='13' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='13' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='15'/>
<uncommon_trap bci='15' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='16'/>
<method id='837' holder='768' name='getName' return='730' flags='1' bytes='5' compile_id='73' compiler='C2' iicount='12777'/>
<call method='837' count='9154' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='837' uses='9154' stamp='0.402'>
<uncommon_trap bci='16' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='170' live='163' memory='49008' stamp='0.403'/>
</parse>
<bc code='166' bci='20'/>
<branch target_bci='33' taken='9059' not_taken='95' cnt='9154' prob='0.989622'/>
<bc code='184' bci='23'/>
<klass id='835' name='sun/reflect/ReflectionFactory' flags='1'/>
<method id='838' holder='731' name='getReflectionFactory' return='835' flags='10' bytes='26' iicount='292'/>
<call method='838' count='95' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='95' stamp='0.403'>
<bc code='183' bci='10'/>
<type id='724' name='void'/>
<klass id='842' name='sun/reflect/ReflectionFactory$GetReflectionFactoryAction' flags='25'/>
<method id='843' holder='842' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='4'/>
<call method='843' count='-1' prof_factor='0.325342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='-1' stamp='0.403'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='849' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='849' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='849' uses='-1' stamp='0.403'>
<parse_done nodes='260' live='252' memory='70904' stamp='0.403'/>
</parse>
<parse_done nodes='261' live='252' memory='71464' stamp='0.403'/>
</parse>
<bc code='184' bci='13'/>
<klass id='845' name='java/security/PrivilegedAction' flags='1537'/>
<klass id='844' name='java/security/AccessController' flags='17'/>
<method id='846' holder='844' name='doPrivileged' return='729' arguments='845' flags='265' bytes='0' iicount='206'/>
<call method='846' count='-1' prof_factor='0.325342' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='13'/>
<bc code='192' bci='16'/>
<dependency type='leaf_type' ctxk='835'/>
<uncommon_trap bci='16' reason='null_check' action='make_not_entrant'/>
<dependency type='leaf_type' ctxk='835'/>
<uncommon_trap bci='16' reason='class_check' action='maybe_recompile'/>
<parse_done nodes='337' live='325' memory='83208' stamp='0.403'/>
</parse>
<bc code='50' bci='28'/>
<uncommon_trap bci='28' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='29'/>
<method id='839' holder='835' name='copyField' return='768' arguments='768' flags='1' bytes='10' iicount='541'/>
<dependency type='unique_concrete_method' ctxk='835' x='839'/>
<call method='839' count='95' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='95' stamp='0.403'>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='0'/>
<klass id='852' name='sun/reflect/LangReflectAccess' flags='1537'/>
<method id='853' holder='835' name='langReflectAccess' return='852' flags='10' bytes='15' iicount='857'/>
<call method='853' count='-1' prof_factor='0.175601' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.403'>
<bc code='184' bci='7'/>
<type id='716' name='boolean'/>
<type id='722' name='int'/>
<klass id='856' name='java/lang/reflect/Modifier' flags='1'/>
<method id='857' holder='856' name='isPublic' return='716' arguments='722' flags='9' bytes='12' iicount='89'/>
<call method='857' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='7'/>
<parse_done nodes='444' live='429' memory='100808' stamp='0.403'/>
</parse>
<bc code='185' bci='4'/>
<method id='854' holder='852' name='copyField' return='768' arguments='768' flags='1025' bytes='0' iicount='1'/>
<call method='854' count='-1' prof_factor='0.175601' virtual='1' inline='1'/>
<virtual_call bci='4'/>
<parse_done nodes='469' live='453' memory='105464' stamp='0.403'/>
</parse>
<bc code='162' bci='10'/>
<branch target_bci='39' taken='217' not_taken='9154' cnt='9059' prob='0.0231565'/>
<parse_done nodes='487' live='469' memory='108944' stamp='0.403'/>
</parse>
<phase_done name='parse' nodes='489' live='284' stamp='0.403'/>
</phase>
<phase name='optimizer' nodes='489' live='284' stamp='0.403'>
<phase name='idealLoop' nodes='493' live='271' stamp='0.403'>
<loop_tree>
<loop idx='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='500' live='270' stamp='0.403'/>
</phase>
<phase name='escapeAnalysis' nodes='500' live='270' stamp='0.403'>
<phase name='connectionGraph' nodes='501' live='271' stamp='0.403'>
<phase_done name='connectionGraph' nodes='501' live='271' stamp='0.403'/>
</phase>
<phase_done name='escapeAnalysis' nodes='501' live='271' stamp='0.403'/>
</phase>
<phase name='idealLoop' nodes='501' live='271' stamp='0.403'>
<loop_tree>
<loop idx='499' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='263' stamp='0.403'/>
</phase>
<phase name='idealLoop' nodes='514' live='263' stamp='0.403'>
<loop_tree>
<loop idx='499' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='534' live='270' stamp='0.404'/>
</phase>
<phase name='idealLoop' nodes='534' live='270' stamp='0.404'>
<loop_tree>
<loop idx='643' inner_loop='1' main_loop='643' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='658' live='374' stamp='0.404'/>
</phase>
<phase name='ccp' nodes='658' live='374' stamp='0.404'>
<phase_done name='ccp' nodes='658' live='374' stamp='0.404'/>
</phase>
<phase name='idealLoop' nodes='659' live='371' stamp='0.404'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='643' inner_loop='1' main_loop='643' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='730' live='371' stamp='0.404'/>
</phase>
<phase name='idealLoop' nodes='730' live='371' stamp='0.404'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='799' live='422' stamp='0.405'/>
</phase>
<phase name='idealLoop' nodes='799' live='422' stamp='0.405'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='827' live='412' stamp='0.405'/>
</phase>
<phase name='idealLoop' nodes='827' live='412' stamp='0.405'>
<loop_tree>
<loop idx='596' inner_loop='1' pre_loop='499' >
</loop>
<loop idx='775' inner_loop='1' main_loop='775' >
</loop>
<loop idx='554' inner_loop='1' post_loop='499' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='845' live='398' stamp='0.405'/>
</phase>
<phase_done name='optimizer' nodes='915' live='414' stamp='0.405'/>
</phase>
<phase name='matcher' nodes='915' live='414' stamp='0.405'>
<phase_done name='matcher' nodes='352' live='352' stamp='0.406'/>
</phase>
<phase name='regalloc' nodes='477' live='469' stamp='0.406'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='521' live='493' stamp='0.407'/>
</phase>
<phase name='output' nodes='523' live='495' stamp='0.407'>
<phase_done name='output' nodes='553' live='510' stamp='0.407'/>
</phase>
<dependency type='leaf_type' ctxk='835'/>
<dependency type='unique_concrete_method' ctxk='835' x='839'/>
<code_cache total_blobs='317' nmethods='73' adapters='194' free_code_cache='49725312'/>
<task_done success='1' nmsize='808' count='435' backedge_count='7819' inlined_bytes='62' stamp='0.411'/>
</task>
<task compile_id='75' method='java/lang/String getChars (II[CI)V' bytes='62' count='5038' backedge_count='1' iicount='10039' stamp='0.432'>
<phase name='parse' nodes='3' live='3' stamp='0.432'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='10066'/>
<klass id='835' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='36' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<uncommon_trap method='832' bci='22' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<uncommon_trap method='832' bci='4' reason='unloaded' action='reinterpret' index='6' klass='835'/>
<parse method='832' uses='10066' stamp='0.432'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='6803' not_taken='0' cnt='6803' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='6803' not_taken='0' cnt='6803' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='6803' not_taken='0' cnt='6803' prob='always'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='834' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='834' count='6803' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='95'/>
<parse_done nodes='187' live='181' memory='51688' stamp='0.432'/>
</parse>
<phase_done name='parse' nodes='189' live='129' stamp='0.432'/>
</phase>
<phase name='optimizer' nodes='189' live='129' stamp='0.432'>
<phase name='ccp' nodes='189' live='129' stamp='0.432'>
<phase_done name='ccp' nodes='189' live='129' stamp='0.432'/>
</phase>
<phase name='idealLoop' nodes='189' live='128' stamp='0.432'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.432'/>
</phase>
<phase name='idealLoop' nodes='189' live='125' stamp='0.432'>
<phase_done name='idealLoop' nodes='189' live='125' stamp='0.432'/>
</phase>
<phase_done name='optimizer' nodes='195' live='128' stamp='0.432'/>
</phase>
<phase name='matcher' nodes='195' live='128' stamp='0.432'>
<phase_done name='matcher' nodes='118' live='118' stamp='0.432'/>
</phase>
<phase name='regalloc' nodes='158' live='156' stamp='0.432'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='198' live='185' stamp='0.433'/>
</phase>
<phase name='output' nodes='200' live='187' stamp='0.433'>
<phase_done name='output' nodes='219' live='199' stamp='0.433'/>
</phase>
<code_cache total_blobs='329' nmethods='74' adapters='205' free_code_cache='49718336'/>
<task_done success='1' nmsize='376' count='8706' backedge_count='1' stamp='0.434'/>
</task>
<task compile_id='76' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='8033' backedge_count='1' iicount='13035' stamp='0.434'>
<phase name='parse' nodes='3' live='3' stamp='0.434'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='13063'/>
<parse method='832' uses='13063' stamp='0.434'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='9798' not_taken='0' cnt='9798' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='834' count='9798' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='9798' stamp='0.434'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='69' live='66' memory='30696' stamp='0.435'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10076'/>
<call method='835' count='9798' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='9798' stamp='0.435'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5091' not_taken='1686' cnt='6777' prob='0.751217'/>
<bc code='183' bci='17'/>
<method id='839' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2464'/>
<call method='839' count='1686' prof_factor='0.97241' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='1639' stamp='0.435'>
<bc code='183' bci='31'/>
<method id='843' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='843' count='-1' prof_factor='0.665179' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='843' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='185' live='180' memory='50872' stamp='0.435'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='840' name='java/util/Arrays' flags='1'/>
<method id='841' holder='840' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3229'/>
<call method='841' count='1686' prof_factor='0.97241' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='1639' stamp='0.435'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='846' count='-1' prof_factor='0.507587' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='847' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='847' count='-1' prof_factor='0.507587' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='363' live='357' memory='88504' stamp='0.435'/>
</parse>
<parse_done nodes='390' live='383' memory='93840' stamp='0.435'/>
</parse>
<bc code='182' bci='35'/>
<method id='836' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13706'/>
<call method='836' count='9798' prof_factor='1' inline='1'/>
<klass id='849' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='36' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<uncommon_trap method='836' bci='22' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<uncommon_trap method='836' bci='4' reason='unloaded' action='reinterpret' index='6' klass='849'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='9798' stamp='0.435'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='184' bci='58'/>
<call method='847' count='10407' prof_factor='0.714869' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='541' live='530' memory='131256' stamp='0.435'/>
</parse>
<parse_done nodes='558' live='546' memory='134792' stamp='0.435'/>
</parse>
<phase_done name='parse' nodes='560' live='336' stamp='0.435'/>
</phase>
<phase name='optimizer' nodes='560' live='336' stamp='0.435'>
<phase name='escapeAnalysis' nodes='564' live='331' stamp='0.435'>
<phase name='connectionGraph' nodes='565' live='332' stamp='0.435'>
<phase_done name='connectionGraph' nodes='565' live='332' stamp='0.435'/>
</phase>
<phase_done name='escapeAnalysis' nodes='565' live='332' stamp='0.435'/>
</phase>
<phase name='ccp' nodes='565' live='332' stamp='0.436'>
<phase_done name='ccp' nodes='565' live='332' stamp='0.436'/>
</phase>
<phase name='idealLoop' nodes='565' live='330' stamp='0.436'>
<phase_done name='idealLoop' nodes='585' live='332' stamp='0.436'/>
</phase>
<phase_done name='optimizer' nodes='656' live='374' stamp='0.436'/>
</phase>
<phase name='matcher' nodes='656' live='374' stamp='0.436'>
<phase_done name='matcher' nodes='369' live='369' stamp='0.436'/>
</phase>
<phase name='regalloc' nodes='471' live='466' stamp='0.436'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='633' live='567' stamp='0.439'/>
</phase>
<phase name='output' nodes='633' live='567' stamp='0.439'>
<phase_done name='output' nodes='657' live='583' stamp='0.439'/>
</phase>
<code_cache total_blobs='330' nmethods='75' adapters='205' free_code_cache='49715264'/>
<task_done success='1' nmsize='1064' count='6389' backedge_count='1' inlined_bytes='164' stamp='0.443'/>
</task>
<task compile_id='77' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='5855' backedge_count='1' iicount='20853' stamp='0.443'>
<phase name='parse' nodes='3' live='3' stamp='0.443'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='20861'/>
<parse method='832' uses='20861' stamp='0.443'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='76' compiler='C2' iicount='21387'/>
<call method='834' count='17572' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='20862' stamp='0.443'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21388' not_taken='0' cnt='21388' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='835' count='18088' prof_factor='0.975452' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='20863' stamp='0.443'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='79' live='76' memory='32856' stamp='0.443'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='836' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10076'/>
<call method='836' count='18088' prof_factor='0.975452' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='20863' stamp='0.444'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5091' not_taken='1686' cnt='6777' prob='0.751217'/>
<bc code='183' bci='17'/>
<method id='841' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2464'/>
<call method='841' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='841' uses='1686' stamp='0.444'>
<bc code='183' bci='31'/>
<method id='845' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='845' count='-1' prof_factor='0.684253' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='845' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='195' live='190' memory='53080' stamp='0.444'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3229'/>
<call method='843' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='843' uses='1686' stamp='0.444'>
<bc code='184' bci='11'/>
<klass id='847' name='java/lang/Math' flags='17'/>
<method id='848' holder='847' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='848' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='849' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='849' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='373' live='367' memory='89160' stamp='0.444'/>
</parse>
<parse_done nodes='400' live='393' memory='94496' stamp='0.444'/>
</parse>
<bc code='182' bci='35'/>
<method id='837' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13706'/>
<call method='837' count='18088' prof_factor='0.975452' inline='1'/>
<klass id='851' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='837' bci='36' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<uncommon_trap method='837' bci='22' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<uncommon_trap method='837' bci='4' reason='unloaded' action='reinterpret' index='6' klass='851'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='20863' stamp='0.444'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='184' bci='58'/>
<call method='849' count='10407' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='551' live='540' memory='133416' stamp='0.444'/>
</parse>
<parse_done nodes='568' live='556' memory='138008' stamp='0.444'/>
</parse>
<parse_done nodes='571' live='558' memory='138928' stamp='0.444'/>
</parse>
<phase_done name='parse' nodes='573' live='336' stamp='0.444'/>
</phase>
<phase name='optimizer' nodes='573' live='336' stamp='0.444'>
<phase name='escapeAnalysis' nodes='577' live='331' stamp='0.445'>
<phase name='connectionGraph' nodes='578' live='332' stamp='0.445'>
<phase_done name='connectionGraph' nodes='578' live='332' stamp='0.445'/>
</phase>
<phase_done name='escapeAnalysis' nodes='578' live='332' stamp='0.445'/>
</phase>
<phase name='ccp' nodes='578' live='332' stamp='0.445'>
<phase_done name='ccp' nodes='578' live='332' stamp='0.445'/>
</phase>
<phase name='idealLoop' nodes='578' live='330' stamp='0.445'>
<phase_done name='idealLoop' nodes='598' live='332' stamp='0.445'/>
</phase>
<phase_done name='optimizer' nodes='669' live='374' stamp='0.445'/>
</phase>
<phase name='matcher' nodes='669' live='374' stamp='0.445'>
<phase_done name='matcher' nodes='369' live='369' stamp='0.445'/>
</phase>
<phase name='regalloc' nodes='471' live='466' stamp='0.446'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='639' live='573' stamp='0.448'/>
</phase>
<phase name='output' nodes='639' live='573' stamp='0.448'>
<phase_done name='output' nodes='663' live='589' stamp='0.448'/>
</phase>
<code_cache total_blobs='331' nmethods='76' adapters='205' free_code_cache='49712128'/>
<task_done success='1' nmsize='1064' count='5112' backedge_count='1' inlined_bytes='214' stamp='0.453'/>
</task>
<task compile_id='78' method='java/lang/Long formatUnsignedLong (JI[CII)I' bytes='52' count='5000' backedge_count='5002' iicount='9663' stamp='0.453'>
<phase name='parse' nodes='3' live='3' stamp='0.453'>
<type id='722' name='int'/>
<type id='723' name='long'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' iicount='9664'/>
<parse method='832' uses='9664' stamp='0.453'>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='7947' not_taken='15054' cnt='23001' prob='0.345507'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='15054' not_taken='0' cnt='15054' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='7947' not_taken='15054' cnt='23001' prob='0.345507'/>
<parse_done nodes='249' live='240' memory='61256' stamp='0.453'/>
</parse>
<phase_done name='parse' nodes='250' live='169' stamp='0.453'/>
</phase>
<phase name='optimizer' nodes='250' live='169' stamp='0.453'>
<phase name='idealLoop' nodes='250' live='159' stamp='0.453'>
<loop_tree>
<loop idx='250' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='173' stamp='0.453'/>
</phase>
<phase name='idealLoop' nodes='339' live='173' stamp='0.453'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='153' stamp='0.453'/>
</phase>
<phase name='idealLoop' nodes='339' live='153' stamp='0.453'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='339' live='153' stamp='0.453'/>
</phase>
<phase name='ccp' nodes='339' live='153' stamp='0.453'>
<phase_done name='ccp' nodes='339' live='153' stamp='0.453'/>
</phase>
<phase name='idealLoop' nodes='339' live='152' stamp='0.453'>
<loop_tree>
<loop idx='298' inner_loop='1' partial_peel_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='345' live='152' stamp='0.453'/>
</phase>
<phase_done name='optimizer' nodes='348' live='151' stamp='0.454'/>
</phase>
<phase name='matcher' nodes='348' live='151' stamp='0.454'>
<phase_done name='matcher' nodes='139' live='139' stamp='0.454'/>
</phase>
<phase name='regalloc' nodes='172' live='171' stamp='0.454'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='243' live='222' stamp='0.454'/>
</phase>
<phase name='output' nodes='243' live='222' stamp='0.454'>
<phase_done name='output' nodes='259' live='231' stamp='0.454'/>
</phase>
<code_cache total_blobs='334' nmethods='77' adapters='205' free_code_cache='49684928'/>
<task_done success='1' nmsize='504' count='5000' backedge_count='5002' stamp='0.456'/>
</task>
<task compile_id='79' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='7946' backedge_count='1' iicount='12946' stamp='0.456'>
<phase name='parse' nodes='3' live='3' stamp='0.456'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='12959'/>
<parse method='832' uses='12959' stamp='0.456'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='834' count='9680' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='9680' stamp='0.456'>
<parse_done nodes='51' live='50' memory='26632' stamp='0.456'/>
</parse>
<parse_done nodes='69' live='67' memory='30360' stamp='0.617'/>
</parse>
<phase_done name='parse' nodes='70' live='31' stamp='0.617'/>
</phase>
<phase name='optimizer' nodes='70' live='31' stamp='0.617'>
<phase name='ccp' nodes='70' live='26' stamp='0.617'>
<phase_done name='ccp' nodes='70' live='26' stamp='0.617'/>
</phase>
<phase name='idealLoop' nodes='70' live='26' stamp='0.617'>
<phase_done name='idealLoop' nodes='70' live='26' stamp='0.618'/>
</phase>
<phase_done name='optimizer' nodes='70' live='26' stamp='0.618'/>
</phase>
<phase name='matcher' nodes='70' live='26' stamp='0.618'>
<phase_done name='matcher' nodes='25' live='25' stamp='0.618'/>
</phase>
<phase name='regalloc' nodes='27' live='27' stamp='0.618'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='27' live='27' stamp='0.618'/>
</phase>
<phase name='output' nodes='27' live='27' stamp='0.618'>
<phase_done name='output' nodes='34' live='34' stamp='0.618'/>
</phase>
<code_cache total_blobs='335' nmethods='79' adapters='205' free_code_cache='49666304'/>
<task_done success='1' nmsize='120' count='7232' backedge_count='1' inlined_bytes='1' stamp='0.618'/>
</task>
<task compile_id='81' method='java/lang/Long toHexString (J)Ljava/lang/String;' bytes='6' count='5462' backedge_count='1' iicount='15462' stamp='0.618'>
<phase name='parse' nodes='3' live='3' stamp='0.619'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='toHexString' return='730' arguments='723' flags='9' bytes='6' iicount='16191'/>
<parse method='832' uses='16191' stamp='0.619'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='834' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' iicount='16263'/>
<call method='834' count='12927' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='16190' stamp='0.619'>
<bc code='184' bci='3'/>
<method id='835' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='16334'/>
<call method='835' count='13079' prof_factor='0.995511' inline='1'/>
<intrinsic id='_numberOfLeadingZeros_l' nodes='1'/>
<bc code='184' bci='16'/>
<klass id='836' name='java/lang/Math' flags='17'/>
<method id='837' holder='836' name='max' return='722' arguments='722 722' flags='9' bytes='11' compile_id='80' compiler='C2' iicount='16500'/>
<call method='837' count='13079' prof_factor='0.995511' inline='1'/>
<intrinsic id='_max' nodes='3'/>
<bc code='184' bci='34'/>
<klass id='821' name='[C' flags='1041'/>
<method id='838' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' compile_id='78' compiler='C2' iicount='11105'/>
<call method='838' count='13079' prof_factor='0.995511' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='16188' stamp='0.619'>
<bc code='52' bci='32'/>
<observe that='!need_range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9383' not_taken='17926' cnt='27309' prob='0.343586'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='17926' not_taken='0' cnt='17926' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<observe that='!need_range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9383' not_taken='17926' cnt='27309' prob='0.343586'/>
<parse_done nodes='294' live='288' memory='76744' stamp='0.619'/>
</parse>
<bc code='183' bci='45'/>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<method id='839' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' compile_id='79' compiler='C2' iicount='17231'/>
<call method='839' count='13079' prof_factor='0.995511' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='16188' stamp='0.619'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='844' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='844' count='13932' prof_factor='0.93947' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='16188' stamp='0.619'>
<parse_done nodes='362' live='355' memory='88312' stamp='0.619'/>
</parse>
<parse_done nodes='382' live='374' memory='91432' stamp='0.619'/>
</parse>
<parse_done nodes='384' live='375' memory='92168' stamp='0.619'/>
</parse>
<parse_done nodes='386' live='376' memory='93264' stamp='0.619'/>
</parse>
<phase_done name='parse' nodes='388' live='227' stamp='0.619'/>
</phase>
<phase name='optimizer' nodes='388' live='227' stamp='0.619'>
<phase name='idealLoop' nodes='388' live='205' stamp='0.620'>
<loop_tree>
<loop idx='388' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='389' live='205' stamp='0.685'/>
</phase>
<phase name='escapeAnalysis' nodes='389' live='205' stamp='0.685'>
<phase name='connectionGraph' nodes='391' live='207' stamp='0.685'>
<phase_done name='connectionGraph' nodes='391' live='207' stamp='0.685'/>
</phase>
<phase_done name='escapeAnalysis' nodes='391' live='207' stamp='0.685'/>
</phase>
<phase name='idealLoop' nodes='391' live='207' stamp='0.685'>
<loop_tree>
<loop idx='388' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='458' live='226' stamp='0.686'/>
</phase>
<phase name='idealLoop' nodes='458' live='226' stamp='0.686'>
<loop_tree>
<loop idx='465' main_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='610' live='308' stamp='0.686'/>
</phase>
<phase name='idealLoop' nodes='610' live='308' stamp='0.686'>
<loop_tree>
<loop idx='541' inner_loop='1' pre_loop='465' >
</loop>
<loop idx='465' inner_loop='1' main_loop='465' >
</loop>
<loop idx='486' inner_loop='1' post_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='610' live='308' stamp='0.686'/>
</phase>
<phase name='ccp' nodes='610' live='308' stamp='0.686'>
<phase_done name='ccp' nodes='610' live='308' stamp='0.686'/>
</phase>
<phase name='idealLoop' nodes='614' live='306' stamp='0.686'>
<loop_tree>
<loop idx='541' inner_loop='1' pre_loop='465' >
</loop>
<loop idx='465' inner_loop='1' main_loop='465' >
</loop>
<loop idx='486' inner_loop='1' post_loop='465' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='620' live='303' stamp='0.687'/>
</phase>
<phase_done name='optimizer' nodes='744' live='378' stamp='0.687'/>
</phase>
<phase name='matcher' nodes='744' live='378' stamp='0.687'>
<phase_done name='matcher' nodes='330' live='330' stamp='0.687'/>
</phase>
<phase name='regalloc' nodes='405' live='405' stamp='0.687'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='509' live='461' stamp='0.689'/>
</phase>
<phase name='output' nodes='513' live='465' stamp='0.689'>
<phase_done name='output' nodes='536' live='477' stamp='0.689'/>
</phase>
<code_cache total_blobs='336' nmethods='81' adapters='205' free_code_cache='49668608'/>
<task_done success='1' nmsize='888' count='6117' backedge_count='1' inlined_bytes='217' stamp='0.697'/>
</task>
<task compile_id='83' method='java/lang/Long numberOfLeadingZeros (J)I' bytes='94' count='6117' backedge_count='1' iicount='156088' stamp='0.697'>
<phase name='parse' nodes='3' live='3' stamp='0.697'>
<type id='722' name='int'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='156088'/>
<parse method='832' uses='156088' stamp='0.697'>
<bc code='154' bci='3'/>
<branch target_bci='9' taken='156089' not_taken='0' cnt='156089' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='18'/>
<branch target_bci='27' taken='0' not_taken='156089' cnt='156089' prob='never'/>
<uncommon_trap bci='18' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='31'/>
<branch target_bci='42' taken='0' not_taken='156089' cnt='156089' prob='never'/>
<uncommon_trap bci='31' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='154' bci='46'/>
<branch target_bci='57' taken='156089' not_taken='0' cnt='156089' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='61'/>
<branch target_bci='71' taken='117614' not_taken='38475' cnt='156089' prob='0.753506'/>
<bc code='154' bci='75'/>
<branch target_bci='85' taken='31384' not_taken='124706' cnt='156090' prob='0.201063'/>
<parse_done nodes='131' live='126' memory='40880' stamp='0.697'/>
</parse>
<phase_done name='parse' nodes='132' live='90' stamp='0.697'/>
</phase>
<phase name='optimizer' nodes='132' live='90' stamp='0.697'>
<phase name='ccp' nodes='132' live='87' stamp='0.697'>
<phase_done name='ccp' nodes='132' live='87' stamp='0.697'/>
</phase>
<phase name='idealLoop' nodes='132' live='87' stamp='0.697'>
<phase_done name='idealLoop' nodes='138' live='87' stamp='0.697'/>
</phase>
<phase_done name='optimizer' nodes='141' live='90' stamp='0.697'/>
</phase>
<phase name='matcher' nodes='141' live='90' stamp='0.697'>
<phase_done name='matcher' nodes='95' live='95' stamp='0.697'/>
</phase>
<phase name='regalloc' nodes='117' live='117' stamp='0.697'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='129' live='127' stamp='0.698'/>
</phase>
<phase name='output' nodes='129' live='127' stamp='0.698'>
<phase_done name='output' nodes='142' live='135' stamp='0.702'/>
</phase>
<code_cache total_blobs='338' nmethods='83' adapters='205' free_code_cache='49664448'/>
<task_done success='1' nmsize='280' count='6117' backedge_count='1' stamp='0.703'/>
</task>
<task compile_id='85' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5135' backedge_count='1' iicount='10138' stamp='1.197'>
<phase name='parse' nodes='3' live='3' stamp='1.197'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='10300'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='8' reason='unloaded' action='reinterpret' index='2' klass='838'/>
<parse method='833' uses='10300' stamp='1.197'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='7136' not_taken='0' cnt='7136' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='54'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='836' count='7140' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='837' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='837' count='7139' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='114'/>
<parse_done nodes='230' live='227' memory='57056' stamp='1.197'/>
</parse>
<phase_done name='parse' nodes='232' live='164' stamp='1.198'/>
</phase>
<phase name='optimizer' nodes='232' live='164' stamp='1.198'>
<phase name='escapeAnalysis' nodes='232' live='163' stamp='1.198'>
<phase name='connectionGraph' nodes='233' live='164' stamp='1.198'>
<phase_done name='connectionGraph' nodes='233' live='164' stamp='1.198'/>
</phase>
<phase_done name='escapeAnalysis' nodes='233' live='164' stamp='1.198'/>
</phase>
<phase name='ccp' nodes='233' live='164' stamp='1.198'>
<phase_done name='ccp' nodes='233' live='164' stamp='1.198'/>
</phase>
<phase name='idealLoop' nodes='237' live='161' stamp='1.198'>
<phase_done name='idealLoop' nodes='240' live='161' stamp='1.198'/>
</phase>
<phase_done name='optimizer' nodes='295' live='199' stamp='1.198'/>
</phase>
<phase name='matcher' nodes='295' live='199' stamp='1.198'>
<phase_done name='matcher' nodes='194' live='194' stamp='1.198'/>
</phase>
<phase name='regalloc' nodes='245' live='244' stamp='1.198'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='306' live='286' stamp='1.200'/>
</phase>
<phase name='output' nodes='308' live='288' stamp='1.200'>
<phase_done name='output' nodes='322' live='298' stamp='1.200'/>
</phase>
<code_cache total_blobs='340' nmethods='85' adapters='205' free_code_cache='49654592'/>
<task_done success='1' nmsize='536' count='6575' backedge_count='1' inlined_bytes='11' stamp='1.201'/>
</task>
<task compile_id='87' method='org/openjdk/jmh/infra/Blackhole consume ([Ljava/lang/Object;)V' bytes='42' count='5027' backedge_count='1' iicount='10031' stamp='1.212'>
<phase name='parse' nodes='3' live='3' stamp='1.212'>
<type id='724' name='void'/>
<klass id='833' name='[Ljava/lang/Object;' flags='1041'/>
<klass id='832' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<method id='834' holder='832' name='consume' return='724' arguments='833' flags='17' bytes='42' iicount='10222'/>
<parse method='834' uses='10222' stamp='1.212'>
<bc code='154' bci='24'/>
<branch target_bci='41' taken='7015' not_taken='2' cnt='7017' prob='0.999715'/>
<parse_done nodes='85' live='84' memory='32192' stamp='1.212'/>
</parse>
<phase_done name='parse' nodes='86' live='65' stamp='1.212'/>
</phase>
<phase name='optimizer' nodes='86' live='65' stamp='1.212'>
<phase name='ccp' nodes='86' live='65' stamp='1.212'>
<phase_done name='ccp' nodes='86' live='65' stamp='1.212'/>
</phase>
<phase name='idealLoop' nodes='86' live='65' stamp='1.212'>
<phase_done name='idealLoop' nodes='86' live='65' stamp='1.212'/>
</phase>
<phase_done name='optimizer' nodes='86' live='65' stamp='1.212'/>
</phase>
<phase name='matcher' nodes='86' live='65' stamp='1.212'>
<phase_done name='matcher' nodes='61' live='61' stamp='1.212'/>
</phase>
<phase name='regalloc' nodes='67' live='67' stamp='1.213'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='67' live='67' stamp='1.213'/>
</phase>
<phase name='output' nodes='67' live='67' stamp='1.213'>
<phase_done name='output' nodes='76' live='74' stamp='1.213'/>
</phase>
<code_cache total_blobs='342' nmethods='87' adapters='205' free_code_cache='49649344'/>
<task_done success='1' nmsize='184' count='8549' backedge_count='1' stamp='1.214'/>
</task>
<task compile_id='89' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='5671' iicount='2' decompiles='1' unstable_if_traps='1' osr_bci='23' stamp='1.510'>
<phase name='parse' nodes='3' live='3' stamp='1.510'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkDirect' return='724' arguments='833 834' flags='1' bytes='113' compile_id='88' compiler='C2' iicount='2'/>
<parse method='835' uses='2' osr_bci='23' stamp='1.510'>
<observe trap='unstable_if' count='1' total='1'/>
<uncommon_trap bci='23' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='27'/>
<branch target_bci='112' taken='1' not_taken='798197' cnt='798198' prob='1.25282e-06'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='40'/>
<branch target_bci='68' taken='639241' not_taken='158956' cnt='798197' prob='0.800856'/>
<bc code='184' bci='55'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='21573'/>
<call method='839' count='158956' prof_factor='1' inline='1'/>
<klass id='845' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='839' bci='8' reason='unloaded' action='reinterpret' index='2' klass='845'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='158956' stamp='1.510'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='843' count='18275' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='844' count='18274' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='412' live='405' memory='95328' stamp='1.511'/>
</parse>
<bc code='83' bci='58'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='58' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='72'/>
<branch target_bci='106' taken='621580' not_taken='17661' cnt='639241' prob='0.972372'/>
<bc code='184' bci='87'/>
<call method='839' count='17661' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='17661' stamp='1.511'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='843' count='18275' prof_factor='0.818662' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='844' count='18274' prof_factor='0.818662' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='670' live='659' memory='149640' stamp='1.511'/>
</parse>
<bc code='83' bci='90'/>
<uncommon_trap bci='90' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='90' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='100'/>
<klass id='840' name='[Ljava/lang/Object;' flags='1041'/>
<method id='841' holder='834' name='consume' return='724' arguments='840' flags='17' bytes='42' compile_id='87' compiler='C2' iicount='13549'/>
<call method='841' count='17661' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='100'/>
<uncommon_trap bci='100' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='760' live='745' memory='166752' stamp='1.511'/>
</parse>
<phase_done name='parse' nodes='762' live='522' stamp='1.511'/>
</phase>
<phase name='optimizer' nodes='762' live='522' stamp='1.511'>
<phase name='idealLoop' nodes='778' live='511' stamp='1.512'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='780' live='511' stamp='1.512'/>
</phase>
<phase name='escapeAnalysis' nodes='780' live='511' stamp='1.512'>
<phase name='connectionGraph' nodes='781' live='512' stamp='1.512'>
<phase_done name='connectionGraph' nodes='781' live='512' stamp='1.512'/>
</phase>
<phase_done name='escapeAnalysis' nodes='781' live='512' stamp='1.512'/>
</phase>
<phase name='idealLoop' nodes='781' live='512' stamp='1.512'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='792' live='509' stamp='1.512'/>
</phase>
<phase name='idealLoop' nodes='792' live='509' stamp='1.512'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='792' live='509' stamp='1.512'/>
</phase>
<phase name='idealLoop' nodes='792' live='509' stamp='1.512'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='792' live='509' stamp='1.513'/>
</phase>
<phase name='ccp' nodes='792' live='509' stamp='1.513'>
<phase_done name='ccp' nodes='792' live='509' stamp='1.513'/>
</phase>
<phase name='idealLoop' nodes='804' live='480' stamp='1.513'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='810' live='465' stamp='1.513'/>
</phase>
<phase name='idealLoop' nodes='810' live='465' stamp='1.513'>
<loop_tree>
<loop idx='778' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='816' live='465' stamp='1.514'/>
</phase>
<phase_done name='optimizer' nodes='930' live='527' stamp='1.514'/>
</phase>
<phase name='matcher' nodes='930' live='527' stamp='1.514'>
<phase_done name='matcher' nodes='524' live='524' stamp='1.514'/>
</phase>
<phase name='regalloc' nodes='680' live='677' stamp='1.515'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1082' live='915' stamp='1.519'/>
</phase>
<phase name='output' nodes='1088' live='921' stamp='1.519'>
<phase_done name='output' nodes='1119' live='943' stamp='1.519'/>
</phase>
<code_cache total_blobs='344' nmethods='89' adapters='205' free_code_cache='49640448'/>
<task_done success='1' nmsize='1960' count='10000' backedge_count='5468' inlined_bytes='148' stamp='1.525'/>
</task>
</compilation_log>
<compilation_log thread='19203'>
<start_compile_thread name='C2 CompilerThread0' thread='19203' process='22189' stamp='0.069'/>
<task compile_id='1' method='java/lang/String hashCode ()I' bytes='55' count='502' backedge_count='5000' iicount='502' stamp='0.083'>
<phase name='parse' nodes='3' live='3' stamp='0.083'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='502'/>
<parse method='832' uses='502' stamp='0.083'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='105' not_taken='197' cnt='302' prob='0.347682'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='48' not_taken='149' cnt='197' prob='0.243655'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='150' not_taken='6406' cnt='6556' prob='0.0228798'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='150' not_taken='6406' cnt='6406' prob='0.0228798'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.083'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.083'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.083'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.083'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.083'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.083'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.083'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.083'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.083'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.084'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.084'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.084'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='198' stamp='0.084'/>
</phase>
<phase name='idealLoop' nodes='382' live='198' stamp='0.084'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='407' live='186' stamp='0.084'/>
</phase>
<phase name='idealLoop' nodes='407' live='186' stamp='0.084'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='417' live='169' stamp='0.084'/>
</phase>
<phase_done name='optimizer' nodes='420' live='158' stamp='0.084'/>
</phase>
<phase name='matcher' nodes='420' live='158' stamp='0.084'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.084'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.084'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.085'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.085'>
<phase_done name='output' nodes='213' live='200' stamp='0.085'/>
</phase>
<code_cache total_blobs='197' nmethods='1' adapters='146' free_code_cache='49836928'/>
<task_done success='1' nmsize='376' count='511' backedge_count='5045' stamp='0.087'/>
</task>
<task compile_id='3' method='java/lang/String indexOf (II)I' bytes='70' count='325' backedge_count='5060' iicount='325' stamp='0.099'>
<phase name='parse' nodes='3' live='3' stamp='0.099'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='328'/>
<parse method='832' uses='328' stamp='0.099'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='157' not_taken='0' cnt='157' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='138' not_taken='19' cnt='157' prob='0.878981'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='138' cnt='138' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='138' not_taken='6784' cnt='6922' prob='0.0199364'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='6783' not_taken='1' cnt='6784' prob='0.999853'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='138' not_taken='6784' cnt='6783' prob='0.0199364'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.100'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.100'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.100'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.100'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.100'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.100'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.100'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.100'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.100'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.100'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.100'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.100'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='361' live='225' stamp='0.100'/>
</phase>
<phase name='idealLoop' nodes='361' live='225' stamp='0.100'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='215' stamp='0.100'/>
</phase>
<phase name='idealLoop' nodes='380' live='215' stamp='0.100'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='380' live='212' stamp='0.101'/>
</phase>
<phase_done name='optimizer' nodes='384' live='201' stamp='0.101'/>
</phase>
<phase name='matcher' nodes='384' live='201' stamp='0.101'>
<phase_done name='matcher' nodes='161' live='161' stamp='0.101'/>
</phase>
<phase name='regalloc' nodes='227' live='226' stamp='0.101'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='244' live='241' stamp='0.102'/>
</phase>
<phase name='output' nodes='244' live='241' stamp='0.102'>
<phase_done name='output' nodes='269' live='253' stamp='0.107'/>
</phase>
<code_cache total_blobs='201' nmethods='3' adapters='148' free_code_cache='49828288'/>
<task_done success='1' nmsize='408' count='361' backedge_count='6083' stamp='0.109'/>
</task>
<task compile_id='16' method='jdk/internal/org/objectweb/asm/ByteVector putUTF8 (Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;' bytes='142' count='381' backedge_count='5074' iicount='382' stamp='0.150'>
<phase name='parse' nodes='3' live='3' stamp='0.150'>
<klass id='832' name='jdk/internal/org/objectweb/asm/ByteVector' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='833' holder='832' name='putUTF8' return='832' arguments='730' flags='1' bytes='142' iicount='382'/>
<klass id='839' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='11' reason='unloaded' action='reinterpret' index='7' klass='839'/>
<parse method='833' uses='382' stamp='0.150'>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='2233'/>
<call method='835' count='267' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='267' stamp='0.150'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='68' live='65' memory='30904' stamp='0.150'/>
</parse>
<bc code='164' bci='8'/>
<branch target_bci='19' taken='267' not_taken='0' cnt='267' prob='always'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='34'/>
<branch target_bci='44' taken='207' not_taken='60' cnt='267' prob='0.775281'/>
<bc code='183' bci='41'/>
<type id='724' name='void'/>
<method id='838' holder='832' name='enlarge' return='724' arguments='722' flags='2' bytes='51' iicount='86'/>
<call method='838' count='60' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='41'/>
<bc code='84' bci='61'/>
<uncommon_trap bci='61' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='61' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='70'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='267' not_taken='6594' cnt='6861' prob='0.0389156'/>
<uncommon_trap bci='80' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='80' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='83'/>
<type id='717' name='char'/>
<method id='836' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='836' count='6594' prof_factor='1' inline='1'/>
<klass id='842' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='13' reason='unloaded' action='reinterpret' index='6' klass='842'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='6594' stamp='0.151'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='342' live='327' memory='85360' stamp='0.151'/>
</parse>
<bc code='161' bci='91'/>
<branch target_bci='114' taken='0' not_taken='6593' cnt='6593' prob='never'/>
<uncommon_trap bci='91' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='98'/>
<branch target_bci='114' taken='0' not_taken='6593' cnt='6593' prob='never'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='110'/>
<uncommon_trap bci='110' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='77'/>
<branch target_bci='135' taken='267' not_taken='6594' cnt='6593' prob='0.0389156'/>
<parse_done nodes='411' live='392' memory='99392' stamp='0.151'/>
</parse>
<phase_done name='parse' nodes='413' live='276' stamp='0.151'/>
</phase>
<phase name='optimizer' nodes='413' live='276' stamp='0.151'>
<phase name='idealLoop' nodes='413' live='263' stamp='0.151'>
<loop_tree>
<loop idx='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='468' live='268' stamp='0.151'/>
</phase>
<phase name='idealLoop' nodes='468' live='268' stamp='0.151'>
<loop_tree>
<loop idx='419' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='272' stamp='0.152'/>
</phase>
<phase name='idealLoop' nodes='511' live='272' stamp='0.152'>
<loop_tree>
<loop idx='713' inner_loop='1' main_loop='713' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='782' live='437' stamp='0.152'/>
</phase>
<phase name='ccp' nodes='782' live='437' stamp='0.152'>
<phase_done name='ccp' nodes='782' live='437' stamp='0.152'/>
</phase>
<phase name='idealLoop' nodes='783' live='436' stamp='0.152'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='920' live='513' stamp='0.152'/>
</phase>
<phase name='idealLoop' nodes='920' live='513' stamp='0.152'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='977' live='504' stamp='0.153'/>
</phase>
<phase name='idealLoop' nodes='977' live='504' stamp='0.153'>
<loop_tree>
<loop idx='608' inner_loop='1' pre_loop='419' >
</loop>
<loop idx='844' inner_loop='1' main_loop='844' >
</loop>
<loop idx='533' inner_loop='1' post_loop='419' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='996' live='507' stamp='0.153'/>
</phase>
<phase_done name='optimizer' nodes='1016' live='488' stamp='0.153'/>
</phase>
<phase name='matcher' nodes='1016' live='488' stamp='0.153'>
<phase_done name='matcher' nodes='449' live='449' stamp='0.153'/>
</phase>
<phase name='regalloc' nodes='583' live='579' stamp='0.154'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='767' live='676' stamp='0.156'/>
</phase>
<phase name='output' nodes='767' live='676' stamp='0.156'>
<phase_done name='output' nodes='800' live='696' stamp='0.156'/>
</phase>
<code_cache total_blobs='249' nmethods='23' adapters='176' free_code_cache='49801408'/>
<task_done success='1' nmsize='1288' count='514' backedge_count='8965' inlined_bytes='35' stamp='0.161'/>
</task>
<task compile_id='36' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='1297' backedge_count='5048' iicount='1297' stamp='0.172'>
<phase name='parse' nodes='3' live='3' stamp='0.172'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='1300'/>
<parse method='832' uses='1300' stamp='0.172'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='522' not_taken='149' cnt='671' prob='0.777943'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='0' not_taken='522' cnt='522' prob='never'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='218' not_taken='304' cnt='522' prob='0.417625'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='287' not_taken='6116' cnt='6403' prob='0.0448227'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='6098' not_taken='18' cnt='6116' prob='0.997057'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='287' not_taken='6116' cnt='6098' prob='0.0448227'/>
<parse_done nodes='272' live='258' memory='71384' stamp='0.173'/>
</parse>
<phase_done name='parse' nodes='273' live='183' stamp='0.173'/>
</phase>
<phase name='optimizer' nodes='273' live='183' stamp='0.173'>
<phase name='idealLoop' nodes='277' live='171' stamp='0.173'>
<loop_tree>
<loop idx='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='318' live='156' stamp='0.173'/>
</phase>
<phase name='idealLoop' nodes='318' live='156' stamp='0.173'>
<loop_tree>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='597' live='280' stamp='0.173'/>
</phase>
<phase name='idealLoop' nodes='597' live='280' stamp='0.173'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='311' stamp='0.174'/>
</phase>
<phase name='ccp' nodes='672' live='311' stamp='0.174'>
<phase_done name='ccp' nodes='672' live='311' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='672' live='310' stamp='0.174'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='289' stamp='0.174'/>
</phase>
<phase name='idealLoop' nodes='672' live='289' stamp='0.174'>
<loop_tree>
<loop idx='398' inner_loop='1' pre_loop='284' >
</loop>
<loop idx='634' inner_loop='1' main_loop='634' >
</loop>
<loop idx='344' inner_loop='1' post_loop='284' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='672' live='286' stamp='0.174'/>
</phase>
<phase_done name='optimizer' nodes='682' live='263' stamp='0.174'/>
</phase>
<phase name='matcher' nodes='682' live='263' stamp='0.174'>
<phase_done name='matcher' nodes='226' live='226' stamp='0.174'/>
</phase>
<phase name='regalloc' nodes='306' live='303' stamp='0.175'>
<regalloc attempts='4' success='1'/>
<phase_done name='regalloc' nodes='387' live='343' stamp='0.176'/>
</phase>
<phase name='output' nodes='387' live='343' stamp='0.176'>
<phase_done name='output' nodes='415' live='357' stamp='0.176'/>
</phase>
<code_cache total_blobs='268' nmethods='42' adapters='176' free_code_cache='49790784'/>
<task_done success='1' nmsize='632' count='1360' backedge_count='5583' stamp='0.179'/>
</task>
<task compile_id='52' method='jdk/internal/org/objectweb/asm/Type getArgumentsAndReturnSizes (Ljava/lang/String;)I' bytes='151' count='160' backedge_count='5017' iicount='160' stamp='0.197'>
<phase name='parse' nodes='3' live='3' stamp='0.197'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='jdk/internal/org/objectweb/asm/Type' flags='1'/>
<method id='833' holder='832' name='getArgumentsAndReturnSizes' return='722' arguments='730' flags='9' bytes='151' iicount='160'/>
<parse method='833' uses='160' stamp='0.197'>
<bc code='182' bci='9'/>
<type id='717' name='char'/>
<method id='835' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='835' count='459' prof_factor='1' inline='1'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='835' bci='13' reason='unloaded' action='reinterpret' index='6' klass='836'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='459' stamp='0.198'>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='121' live='116' memory='38424' stamp='0.198'/>
</parse>
<bc code='160' bci='16'/>
<branch target_bci='57' taken='386' not_taken='73' cnt='459' prob='0.840959'/>
<uncommon_trap bci='57' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='57' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='160' bci='60'/>
<branch target_bci='85' taken='5' not_taken='381' cnt='386' prob='0.0129534'/>
<bc code='182' bci='68'/>
<call method='835' count='6658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='6658' stamp='0.198'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='262' live='250' memory='71376' stamp='0.198'/>
</parse>
<bc code='159' bci='73'/>
<branch target_bci='79' taken='382' not_taken='6276' cnt='6658' prob='0.0573746'/>
<uncommon_trap bci='76' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='76' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='68'/>
<call method='835' count='6658' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='6658' stamp='0.198'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='389' live='370' memory='90392' stamp='0.198'/>
</parse>
<bc code='159' bci='73'/>
<branch target_bci='79' taken='382' not_taken='6276' cnt='6276' prob='0.0573746'/>
<bc code='160' bci='88'/>
<branch target_bci='127' taken='5' not_taken='0'/>
<bc code='182' bci='93'/>
<call method='835' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='93'/>
<bc code='160' bci='100'/>
<branch target_bci='109' taken='0' not_taken='0'/>
<uncommon_trap bci='103' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='103' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='93'/>
<call method='835' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='93'/>
<bc code='160' bci='100'/>
<branch target_bci='109' taken='0' not_taken='0'/>
<bc code='159' bci='112'/>
<branch target_bci='121' taken='0' not_taken='0'/>
<bc code='160' bci='118'/>
<branch target_bci='148' taken='0' not_taken='0'/>
<bc code='159' bci='130'/>
<branch target_bci='139' taken='0' not_taken='5'/>
<bc code='160' bci='136'/>
<branch target_bci='145' taken='5' not_taken='0'/>
<bc code='182' bci='9'/>
<call method='835' count='459' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='459' stamp='0.198'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='630' live='604' memory='141472' stamp='0.198'/>
</parse>
<bc code='160' bci='16'/>
<branch target_bci='57' taken='386' not_taken='73' cnt='387' prob='0.840959'/>
<bc code='182' bci='21'/>
<call method='835' count='73' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='73' stamp='0.198'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='723' live='692' memory='155592' stamp='0.199'/>
</parse>
<bc code='160' bci='31'/>
<branch target_bci='38' taken='70' not_taken='3' cnt='73' prob='0.958904'/>
<bc code='159' bci='41'/>
<branch target_bci='50' taken='0' not_taken='70' cnt='70' prob='never'/>
<uncommon_trap bci='41' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='47'/>
<branch target_bci='54' taken='70' not_taken='0' cnt='70' prob='always'/>
<uncommon_trap bci='47' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='762' live='728' memory='161512' stamp='0.199'/>
</parse>
<phase_done name='parse' nodes='764' live='464' stamp='0.199'/>
</phase>
<phase name='optimizer' nodes='764' live='464' stamp='0.199'>
<phase name='idealLoop' nodes='770' live='436' stamp='0.199'>
<loop_tree>
<loop idx='770' >
<loop idx='771' inner_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='801' live='431' stamp='0.199'/>
</phase>
<phase name='idealLoop' nodes='801' live='431' stamp='0.199'>
<loop_tree>
<loop idx='770' >
<loop idx='771' inner_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='858' live='442' stamp='0.200'/>
</phase>
<phase name='idealLoop' nodes='858' live='442' stamp='0.200'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='860' live='425' stamp='0.200'/>
</phase>
<phase name='ccp' nodes='860' live='425' stamp='0.200'>
<phase_done name='ccp' nodes='860' live='425' stamp='0.200'/>
</phase>
<phase name='idealLoop' nodes='863' live='424' stamp='0.200'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='875' live='393' stamp='0.200'/>
</phase>
<phase name='idealLoop' nodes='875' live='393' stamp='0.200'>
<loop_tree>
<loop idx='770' >
<loop idx='828' inner_loop='1' partial_peel_loop='1' >
</loop>
<loop idx='772' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='884' live='394' stamp='0.201'/>
</phase>
<phase_done name='optimizer' nodes='914' live='408' stamp='0.201'/>
</phase>
<phase name='matcher' nodes='914' live='408' stamp='0.201'>
<phase_done name='matcher' nodes='386' live='386' stamp='0.201'/>
</phase>
<phase name='regalloc' nodes='517' live='512' stamp='0.201'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='649' live='604' stamp='0.202'/>
</phase>
<phase name='output' nodes='649' live='604' stamp='0.202'>
<phase_done name='output' nodes='688' live='630' stamp='0.203'/>
</phase>
<code_cache total_blobs='282' nmethods='54' adapters='178' free_code_cache='49777856'/>
<task_done success='1' nmsize='1208' count='203' backedge_count='7126' inlined_bytes='145' stamp='0.208'/>
</task>
<task compile_id='56' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='182' backedge_count='5044' iicount='182' stamp='0.270'>
<phase name='parse' nodes='3' live='3' stamp='0.271'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='833' holder='832' name='encode' return='722' arguments='821 722 722 824' flags='1' bytes='359' iicount='182'/>
<klass id='838' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='833' bci='175' reason='unloaded' action='reinterpret' index='22' klass='838'/>
<uncommon_trap method='833' bci='153' reason='unloaded' action='reinterpret' index='22' klass='838'/>
<parse method='833' uses='182' stamp='0.271'>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='14'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='6322'/>
<call method='836' count='135' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='136' not_taken='6619' cnt='6755' prob='0.0201332'/>
<uncommon_trap bci='27' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='6619' cnt='6619' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='136' not_taken='6619' cnt='6619' prob='0.0201332'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='136' not_taken='0' cnt='136' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='227' live='217' memory='59008' stamp='0.271'/>
</parse>
<phase_done name='parse' nodes='228' live='159' stamp='0.271'/>
</phase>
<phase name='optimizer' nodes='228' live='159' stamp='0.271'>
<phase name='idealLoop' nodes='233' live='140' stamp='0.271'>
<loop_tree>
<loop idx='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='288' live='144' stamp='0.271'/>
</phase>
<phase name='idealLoop' nodes='288' live='144' stamp='0.271'>
<loop_tree>
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='426' live='262' stamp='0.271'/>
</phase>
<phase name='idealLoop' nodes='426' live='262' stamp='0.271'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='320' stamp='0.271'/>
</phase>
<phase name='ccp' nodes='514' live='320' stamp='0.272'>
<phase_done name='ccp' nodes='514' live='320' stamp='0.272'/>
</phase>
<phase name='idealLoop' nodes='514' live='318' stamp='0.272'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='570' live='310' stamp='0.272'/>
</phase>
<phase name='idealLoop' nodes='570' live='310' stamp='0.272'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='293' stamp='0.272'/>
</phase>
<phase_done name='optimizer' nodes='586' live='273' stamp='0.272'/>
</phase>
<phase name='matcher' nodes='586' live='273' stamp='0.272'>
<phase_done name='matcher' nodes='227' live='227' stamp='0.272'/>
</phase>
<phase name='regalloc' nodes='296' live='294' stamp='0.272'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='364' live='329' stamp='0.273'/>
</phase>
<phase name='output' nodes='364' live='329' stamp='0.273'>
<phase_done name='output' nodes='385' live='342' stamp='0.273'/>
</phase>
<code_cache total_blobs='291' nmethods='57' adapters='184' free_code_cache='49767872'/>
<task_done success='1' nmsize='632' count='185' backedge_count='5209' inlined_bytes='11' stamp='0.275'/>
</task>
<task compile_id='59' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='5000' backedge_count='5036' iicount='714' decompiles='1' unstable_if_traps='1' stamp='0.288'>
<phase name='parse' nodes='3' live='3' stamp='0.288'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='714'/>
<parse method='832' uses='714' stamp='0.288'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='159' bci='2'/>
<branch target_bci='125' taken='0' not_taken='600' cnt='600' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='11' not_taken='2970' cnt='2981' prob='0.00369004'/>
<uncommon_trap bci='29' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='35'/>
<branch target_bci='20' taken='2380' not_taken='590' cnt='2970' prob='0.801347'/>
<bc code='162' bci='26'/>
<branch target_bci='41' taken='11' not_taken='2970' cnt='2981' prob='0.00369004'/>
<bc code='162' bci='44'/>
<branch target_bci='125' taken='11' not_taken='590' cnt='601' prob='0.0183028'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='590' not_taken='2288' cnt='2878' prob='0.205003'/>
<uncommon_trap bci='62' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='62' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='70'/>
<uncommon_trap bci='70' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='70' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='71'/>
<uncommon_trap bci='71' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='59'/>
<branch target_bci='78' taken='590' not_taken='2288' cnt='2288' prob='0.205003'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='591' not_taken='11492' cnt='12083' prob='0.0489117'/>
<uncommon_trap bci='84' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='84' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='88'/>
<uncommon_trap bci='88' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='88' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='98'/>
<branch target_bci='105' taken='9923' not_taken='1569' cnt='11492' prob='0.86347'/>
<bc code='85' bci='107'/>
<uncommon_trap bci='107' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='81'/>
<branch target_bci='114' taken='591' not_taken='11492' cnt='11492' prob='0.0489117'/>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1374'/>
<call method='834' count='591' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='591' stamp='0.289'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='835' count='-1' prof_factor='0.430131' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='-1' stamp='0.289'>
<parse_done nodes='522' live='505' memory='128256' stamp='0.289'/>
</parse>
<parse_done nodes='541' live='523' memory='131024' stamp='0.289'/>
</parse>
<parse_done nodes='543' live='523' memory='131664' stamp='0.289'/>
</parse>
<phase_done name='parse' nodes='545' live='380' stamp='0.289'/>
</phase>
<phase name='optimizer' nodes='545' live='380' stamp='0.289'>
<phase name='idealLoop' nodes='546' live='339' stamp='0.289'>
<loop_tree>
<loop idx='554' >
</loop>
<loop idx='560' >
</loop>
<loop idx='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='568' live='326' stamp='0.289'/>
</phase>
<phase name='escapeAnalysis' nodes='568' live='326' stamp='0.289'>
<phase name='connectionGraph' nodes='569' live='327' stamp='0.289'>
<phase_done name='connectionGraph' nodes='569' live='327' stamp='0.289'/>
</phase>
<phase_done name='escapeAnalysis' nodes='569' live='327' stamp='0.289'/>
</phase>
<phase name='idealLoop' nodes='569' live='327' stamp='0.289'>
<loop_tree>
<loop idx='554' inner_loop='1' >
</loop>
<loop idx='560' inner_loop='1' >
</loop>
<loop idx='566' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='597' live='307' stamp='0.290'/>
</phase>
<phase name='idealLoop' nodes='597' live='307' stamp='0.290'>
<loop_tree>
<loop idx='554' inner_loop='1' >
</loop>
<loop idx='560' inner_loop='1' >
</loop>
<loop idx='566' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='679' live='326' stamp='0.290'/>
</phase>
<phase name='idealLoop' nodes='679' live='326' stamp='0.290'>
<loop_tree>
<loop idx='767' inner_loop='1' main_loop='767' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='972' inner_loop='1' main_loop='972' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='989' live='574' stamp='0.290'/>
</phase>
<phase name='ccp' nodes='989' live='574' stamp='0.291'>
<phase_done name='ccp' nodes='989' live='574' stamp='0.291'/>
</phase>
<phase name='idealLoop' nodes='993' live='552' stamp='0.291'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='767' inner_loop='1' main_loop='767' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='972' inner_loop='1' main_loop='972' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1039' live='536' stamp='0.291'/>
</phase>
<phase name='idealLoop' nodes='1039' live='536' stamp='0.291'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1135' live='606' stamp='0.291'/>
</phase>
<phase name='idealLoop' nodes='1135' live='606' stamp='0.291'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1192' live='565' stamp='0.292'/>
</phase>
<phase name='idealLoop' nodes='1192' live='565' stamp='0.292'>
<loop_tree>
<loop idx='731' inner_loop='1' pre_loop='554' >
</loop>
<loop idx='1063' inner_loop='1' main_loop='1063' >
</loop>
<loop idx='691' inner_loop='1' post_loop='554' >
</loop>
<loop idx='823' inner_loop='1' pre_loop='560' >
</loop>
<loop idx='865' inner_loop='1' main_loop='865' >
</loop>
<loop idx='794' inner_loop='1' post_loop='560' >
</loop>
<loop idx='927' inner_loop='1' pre_loop='566' >
</loop>
<loop idx='1111' inner_loop='1' main_loop='1111' >
</loop>
<loop idx='891' inner_loop='1' post_loop='566' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1221' live='538' stamp='0.292'/>
</phase>
<phase_done name='optimizer' nodes='1347' live='563' stamp='0.293'/>
</phase>
<phase name='matcher' nodes='1347' live='563' stamp='0.293'>
<phase_done name='matcher' nodes='445' live='445' stamp='0.293'/>
</phase>
<phase name='regalloc' nodes='601' live='600' stamp='0.293'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='838' live='694' stamp='0.296'/>
</phase>
<phase name='output' nodes='842' live='698' stamp='0.296'>
<phase_done name='output' nodes='886' live='715' stamp='0.296'/>
</phase>
<code_cache total_blobs='296' nmethods='61' adapters='185' free_code_cache='49759360'/>
<task_done success='1' nmsize='1240' count='5000' backedge_count='5025' inlined_bytes='11' stamp='0.300'/>
</task>
<task compile_id='63' method='sun/reflect/UTF8 encode (Ljava/lang/String;)[B' bytes='191' count='671' backedge_count='5000' iicount='671' stamp='0.320'>
<phase name='parse' nodes='3' live='3' stamp='0.320'>
<klass id='824' name='[B' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/UTF8' flags='0'/>
<method id='833' holder='832' name='encode' return='824' arguments='730' flags='8' bytes='191' iicount='678'/>
<parse method='833' uses='678' stamp='0.320'>
<observe that='has_exception_handlers'/>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='8460'/>
<call method='835' count='467' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='467' stamp='0.320'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='67' live='64' memory='30728' stamp='0.320'/>
</parse>
<bc code='184' bci='6'/>
<method id='836' holder='832' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='702'/>
<call method='836' count='467' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='467' stamp='0.320'>
<bc code='182' bci='1'/>
<call method='835' count='484' prof_factor='0.665242' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='322' stamp='0.320'>
<parse_done nodes='97' live='93' memory='35472' stamp='0.320'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6999' prob='0.0692956'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='838' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='838' count='6514' prof_factor='0.665242' inline='1'/>
<klass id='841' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='838' bci='13' reason='unloaded' action='reinterpret' index='6' klass='841'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='4333' stamp='0.320'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='233' live='222' memory='58640' stamp='0.320'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='6514' cnt='6514' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='485' not_taken='6514' cnt='6514' prob='0.0692956'/>
<parse_done nodes='274' live='260' memory='73184' stamp='0.320'/>
</parse>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='467' not_taken='6380' cnt='6847' prob='0.0682051'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='26'/>
<call method='838' count='6380' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='6380' stamp='0.321'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='455' live='434' memory='101368' stamp='0.321'/>
</parse>
<bc code='161' bci='37'/>
<branch target_bci='59' taken='0' not_taken='6380' cnt='6380' prob='never'/>
<uncommon_trap bci='37' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='44'/>
<branch target_bci='59' taken='0' not_taken='6380' cnt='6380' prob='never'/>
<uncommon_trap bci='44' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='84' bci='55'/>
<uncommon_trap bci='55' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='20'/>
<branch target_bci='172' taken='467' not_taken='6380' cnt='6380' prob='0.0682051'/>
<parse_done nodes='524' live='499' memory='125776' stamp='0.321'/>
</parse>
<phase_done name='parse' nodes='526' live='320' stamp='0.321'/>
</phase>
<phase name='optimizer' nodes='526' live='320' stamp='0.321'>
<phase name='idealLoop' nodes='533' live='284' stamp='0.321'>
<loop_tree>
<loop idx='540' >
</loop>
<loop idx='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='559' live='277' stamp='0.321'/>
</phase>
<phase name='escapeAnalysis' nodes='559' live='277' stamp='0.321'>
<phase name='connectionGraph' nodes='560' live='278' stamp='0.321'>
<phase_done name='connectionGraph' nodes='560' live='278' stamp='0.321'/>
</phase>
<phase_done name='escapeAnalysis' nodes='560' live='278' stamp='0.321'/>
</phase>
<phase name='idealLoop' nodes='560' live='278' stamp='0.321'>
<loop_tree>
<loop idx='540' inner_loop='1' >
</loop>
<loop idx='550' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='563' live='259' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='563' live='259' stamp='0.322'>
<loop_tree>
<loop idx='540' inner_loop='1' >
</loop>
<loop idx='550' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='620' live='267' stamp='0.322'/>
</phase>
<phase name='idealLoop' nodes='620' live='267' stamp='0.322'>
<loop_tree>
<loop idx='787' inner_loop='1' main_loop='787' >
</loop>
<loop idx='1005' inner_loop='1' main_loop='1005' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1081' live='535' stamp='0.323'/>
</phase>
<phase name='ccp' nodes='1081' live='535' stamp='0.323'>
<phase_done name='ccp' nodes='1081' live='535' stamp='0.323'/>
</phase>
<phase name='idealLoop' nodes='1084' live='533' stamp='0.323'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1275' live='641' stamp='0.324'/>
</phase>
<phase name='idealLoop' nodes='1275' live='641' stamp='0.324'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1334' live='622' stamp='0.324'/>
</phase>
<phase name='idealLoop' nodes='1334' live='622' stamp='0.324'>
<loop_tree>
<loop idx='700' inner_loop='1' pre_loop='540' >
</loop>
<loop idx='1116' inner_loop='1' main_loop='1116' >
</loop>
<loop idx='638' inner_loop='1' post_loop='540' >
</loop>
<loop idx='910' inner_loop='1' pre_loop='550' >
</loop>
<loop idx='1184' inner_loop='1' main_loop='1184' >
</loop>
<loop idx='838' inner_loop='1' post_loop='550' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1341' live='618' stamp='0.325'/>
</phase>
<phase_done name='optimizer' nodes='1425' live='636' stamp='0.325'/>
</phase>
<phase name='matcher' nodes='1425' live='636' stamp='0.325'>
<phase_done name='matcher' nodes='556' live='556' stamp='0.326'/>
</phase>
<phase name='regalloc' nodes='769' live='767' stamp='0.326'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1003' live='852' stamp='0.329'/>
</phase>
<phase name='output' nodes='1003' live='852' stamp='0.329'>
<phase_done name='output' nodes='1037' live='870' stamp='0.329'/>
</phase>
<code_cache total_blobs='298' nmethods='62' adapters='185' free_code_cache='49755136'/>
<task_done success='1' nmsize='1400' count='864' backedge_count='7529' inlined_bytes='151' stamp='0.335'/>
</task>
<task compile_id='64' method='sun/reflect/UTF8 utf8Length (Ljava/lang/String;)I' bytes='81' count='864' backedge_count='7529' iicount='864' stamp='0.335'>
<phase name='parse' nodes='3' live='3' stamp='0.335'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='sun/reflect/UTF8' flags='0'/>
<method id='833' holder='832' name='utf8Length' return='722' arguments='730' flags='10' bytes='81' iicount='864'/>
<parse method='833' uses='864' stamp='0.335'>
<bc code='182' bci='1'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='9482'/>
<call method='835' count='646' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='646' stamp='0.335'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='67' live='64' memory='30600' stamp='0.335'/>
</parse>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='647' not_taken='8782' cnt='9429' prob='0.0686181'/>
<uncommon_trap bci='14' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='14' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='16'/>
<type id='717' name='char'/>
<method id='836' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='836' count='8782' prof_factor='1' inline='1'/>
<klass id='838' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='836' bci='13' reason='unloaded' action='reinterpret' index='6' klass='838'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='8782' stamp='0.335'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='203' live='193' memory='53072' stamp='0.335'/>
</parse>
<bc code='161' bci='27'/>
<branch target_bci='43' taken='0' not_taken='8782' cnt='8782' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='34'/>
<branch target_bci='43' taken='0' not_taken='8782' cnt='8782' prob='never'/>
<uncommon_trap bci='34' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='11'/>
<branch target_bci='79' taken='647' not_taken='8782' cnt='8782' prob='0.0686181'/>
<parse_done nodes='244' live='231' memory='59448' stamp='0.335'/>
</parse>
<phase_done name='parse' nodes='245' live='149' stamp='0.335'/>
</phase>
<phase name='optimizer' nodes='245' live='149' stamp='0.335'>
<phase name='idealLoop' nodes='246' live='133' stamp='0.335'>
<loop_tree>
<loop idx='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='259' live='121' stamp='0.335'/>
</phase>
<phase name='idealLoop' nodes='259' live='121' stamp='0.335'>
<loop_tree>
<loop idx='252' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='279' live='128' stamp='0.335'/>
</phase>
<phase name='idealLoop' nodes='279' live='128' stamp='0.335'>
<loop_tree>
<loop idx='446' inner_loop='1' main_loop='446' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='500' live='253' stamp='0.336'/>
</phase>
<phase name='ccp' nodes='500' live='253' stamp='0.336'>
<phase_done name='ccp' nodes='500' live='253' stamp='0.336'/>
</phase>
<phase name='idealLoop' nodes='501' live='252' stamp='0.336'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='584' live='304' stamp='0.336'/>
</phase>
<phase name='idealLoop' nodes='584' live='304' stamp='0.336'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='607' live='296' stamp='0.337'/>
</phase>
<phase name='idealLoop' nodes='607' live='296' stamp='0.337'>
<loop_tree>
<loop idx='359' inner_loop='1' pre_loop='252' >
</loop>
<loop idx='530' inner_loop='1' main_loop='530' >
</loop>
<loop idx='297' inner_loop='1' post_loop='252' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='609' live='294' stamp='0.337'/>
</phase>
<phase_done name='optimizer' nodes='616' live='286' stamp='0.337'/>
</phase>
<phase name='matcher' nodes='616' live='286' stamp='0.337'>
<phase_done name='matcher' nodes='248' live='248' stamp='0.337'/>
</phase>
<phase name='regalloc' nodes='349' live='347' stamp='0.337'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='383' live='367' stamp='0.338'/>
</phase>
<phase name='output' nodes='383' live='367' stamp='0.338'>
<phase_done name='output' nodes='409' live='377' stamp='0.346'/>
</phase>
<code_cache total_blobs='300' nmethods='64' adapters='185' free_code_cache='49740800'/>
<task_done success='1' nmsize='568' count='864' backedge_count='7529' inlined_bytes='35' stamp='0.350'/>
</task>
<task compile_id='66' compile_kind='osr' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5002' iicount='16' osr_bci='43' stamp='0.351'>
<phase name='parse' nodes='3' live='3' stamp='0.351'>
<klass id='834' name='[Ljava/io/ObjectStreamField;' flags='1041'/>
<klass id='832' name='java/io/ObjectStreamClass' flags='1'/>
<method id='835' holder='832' name='matchFields' return='834' arguments='834 832' flags='10' bytes='247' iicount='16'/>
<klass id='849' name='java/io/InvalidClassException' unloaded='1'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<parse method='835' uses='16' osr_bci='43' stamp='0.351'>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<klass id='833' name='java/io/ObjectStreamField' flags='1'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='833'/>
<uncommon_trap bci='43' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='46'/>
<uncommon_trap bci='46' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='117' not_taken='14784' cnt='14901' prob='0.00785182'/>
<bc code='50' bci='53'/>
<uncommon_trap bci='53' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='58'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='840' holder='833' name='getName' return='730' flags='1' bytes='5' compile_id='65' compiler='C2' iicount='36372'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='14784' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='14784' stamp='0.351'>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='298' live='291' memory='71392' stamp='0.351'/>
</parse>
<bc code='182' bci='63'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='14784' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='14784' stamp='0.352'>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='326' live='317' memory='76200' stamp='0.352'/>
</parse>
<bc code='182' bci='66'/>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='843' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' compile_id='36' compiler='C2' iicount='1360'/>
<call method='843' count='14784' prof_factor='1' inline='1'/>
<uncommon_trap bci='66' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='66' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_equals' nodes='73'/>
<bc code='153' bci='69'/>
<branch target_bci='192' taken='14668' not_taken='116' cnt='14784' prob='0.992154'/>
<bc code='182' bci='74'/>
<method id='844' holder='833' name='isPrimitive' return='716' flags='1' bytes='27' iicount='1093'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='116' stamp='0.352'>
<bc code='182' bci='5'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='852' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='852' count='-1' prof_factor='0.10613' inline='1'/>
<klass id='854' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='852' bci='13' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.352'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='512' live='496' memory='102768' stamp='0.352'/>
</parse>
<parse_done nodes='535' live='518' memory='118032' stamp='0.352'/>
</parse>
<bc code='154' bci='77'/>
<branch target_bci='88' taken='116' not_taken='0' cnt='116' prob='always'/>
<uncommon_trap bci='77' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='90'/>
<method id='845' holder='833' name='getTypeCode' return='717' flags='1' bytes='9' iicount='877'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='116' stamp='0.352'>
<bc code='182' bci='5'/>
<call method='852' count='-1' prof_factor='0.132269' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.352'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='651' live='628' memory='136592' stamp='0.352'/>
</parse>
<parse_done nodes='653' live='629' memory='137000' stamp='0.352'/>
</parse>
<bc code='182' bci='95'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='116' stamp='0.352'>
<bc code='182' bci='5'/>
<call method='852' count='-1' prof_factor='0.132269' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.352'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='756' live='727' memory='154000' stamp='0.352'/>
</parse>
<parse_done nodes='758' live='728' memory='154472' stamp='0.352'/>
</parse>
<bc code='159' bci='98'/>
<branch target_bci='137' taken='116' not_taken='0' cnt='116' prob='always'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='139'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='846' holder='833' name='getField' return='768' flags='0' bytes='5' iicount='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='116' stamp='0.352'>
<parse_done nodes='786' live='754' memory='158552' stamp='0.352'/>
</parse>
<bc code='198' bci='142'/>
<branch target_bci='168' taken='0' not_taken='116' cnt='116' prob='never'/>
<uncommon_trap bci='142' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='151'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='116' stamp='0.352'>
<parse_done nodes='840' live='806' memory='170080' stamp='0.352'/>
</parse>
<bc code='182' bci='156'/>
<method id='847' holder='833' name='isUnshared' return='716' flags='1' bytes='5' iicount='263'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<call method='847' count='116' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='847' uses='116' stamp='0.352'>
<parse_done nodes='861' live='826' memory='174720' stamp='0.352'/>
</parse>
<bc code='183' bci='160'/>
<type id='724' name='void'/>
<method id='848' holder='833' name='&lt;init&gt;' return='724' arguments='768 716 716' flags='0' bytes='69' iicount='392'/>
<call method='848' count='116' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='116' stamp='0.352'>
<bc code='183' bci='1'/>
<method id='859' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='859' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.352'>
<parse_done nodes='904' live='868' memory='184608' stamp='0.352'/>
</parse>
<bc code='182' bci='21'/>
<method id='860' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='8832'/>
<call method='860' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='accessor'/>
<parse method='860' uses='-1' stamp='0.352'>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='956' live='918' memory='196112' stamp='0.352'/>
</parse>
<bc code='182' bci='28'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='861' holder='768' name='getType' return='731' flags='1' bytes='5' iicount='475'/>
<call method='861' count='-1' prof_factor='0.295918' inline='1'/>
<inline_success reason='accessor'/>
<parse method='861' uses='-1' stamp='0.352'>
<parse_done nodes='987' live='948' memory='201672' stamp='0.352'/>
</parse>
<bc code='182' bci='40'/>
<method id='864' holder='731' name='isPrimitive' return='716' flags='257' bytes='0' iicount='3360'/>
<call method='864' count='-1' prof_factor='0.295918' inline='1'/>
<uncommon_trap bci='40' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isPrimitive' nodes='26'/>
<bc code='184' bci='59'/>
<method id='862' holder='833' name='getClassSignature' return='730' arguments='731' flags='10' bytes='242' iicount='433'/>
<call method='862' count='-1' prof_factor='0.295918' inline='1'/>
<klass id='887' name='java/lang/InternalError' unloaded='1'/>
<uncommon_trap method='862' bci='190' reason='unloaded' action='reinterpret' index='45' klass='887'/>
<inline_success reason='inline (hot)'/>
<parse method='862' uses='-1' stamp='0.353'>
<bc code='183' bci='4'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='870' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='2121'/>
<call method='870' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='4'/>
<bc code='182' bci='9'/>
<method id='871' holder='731' name='isArray' return='716' flags='257' bytes='0' iicount='1829'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isArray' nodes='17'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='18'/>
<method id='872' holder='795' name='append' return='795' arguments='717' flags='1' bytes='8' iicount='2139'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<bc code='182' bci='23'/>
<method id='888' holder='731' name='getComponentType' return='731' flags='257' bytes='0' iicount='384'/>
<call method='888' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_getComponentType' nodes='40'/>
<bc code='182' bci='9'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isArray' nodes='30'/>
<bc code='182' bci='31'/>
<call method='864' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isPrimitive' nodes='12'/>
<bc code='182' bci='47'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='47'/>
<bc code='182' bci='64'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='64'/>
<bc code='182' bci='81'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='81'/>
<bc code='182' bci='98'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='98'/>
<bc code='182' bci='115'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='115'/>
<bc code='182' bci='132'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='132'/>
<bc code='182' bci='149'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='149'/>
<bc code='182' bci='166'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='166'/>
<bc code='182' bci='183'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='183'/>
<bc code='187' bci='190'/>
<uncommon_trap bci='190' reason='unloaded' action='reinterpret' index='45'/>
<bc code='183' bci='203'/>
<call method='870' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='208'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='208'/>
<bc code='182' bci='212'/>
<method id='873' holder='731' name='getName' return='730' flags='1' bytes='21' iicount='2198'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='-1' stamp='0.354'>
<bc code='183' bci='11'/>
<method id='901' holder='731' name='getName0' return='730' flags='258' bytes='0' iicount='115'/>
<call method='901' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='11'/>
<parse_done nodes='1665' live='1618' memory='365048' stamp='0.354'/>
</parse>
<bc code='182' bci='219'/>
<method id='874' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' compile_id='59' compiler='C2' iicount='739'/>
<call method='874' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='219'/>
<uncommon_trap bci='219' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='222'/>
<method id='875' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='4077'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='222'/>
<uncommon_trap bci='222' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='227'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='227'/>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='230'/>
<method id='876' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='2275'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='230'/>
<uncommon_trap bci='230' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='233'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='233'/>
<bc code='182' bci='238'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='238'/>
<parse_done nodes='1829' live='1777' memory='397520' stamp='0.354'/>
</parse>
<bc code='182' bci='62'/>
<method id='863' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='1291'/>
<call method='863' count='-1' prof_factor='0.295918' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='62'/>
<uncommon_trap bci='62' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1887' live='1833' memory='411568' stamp='0.354'/>
</parse>
<bc code='199' bci='200'/>
<branch target_bci='223' taken='117' not_taken='0' cnt='117' prob='always'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='227'/>
<method id='838' holder='833' name='getOffset' return='722' flags='1' bytes='5' iicount='392'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<call method='838' count='117' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='838' uses='117' stamp='0.354'>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1948' live='1891' memory='421024' stamp='0.354'/>
</parse>
<bc code='182' bci='230'/>
<method id='839' holder='833' name='setOffset' return='724' arguments='722' flags='4' bytes='6' iicount='587'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<call method='839' count='117' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='117' stamp='0.354'>
<parse_done nodes='1963' live='1905' memory='424536' stamp='0.354'/>
</parse>
<bc code='83' bci='238'/>
<uncommon_trap bci='238' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='238' reason='range_check' action='make_not_entrant' comment='range_check'/>
<dependency type='leaf_type' ctxk='833'/>
<bc code='190' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='2' not_taken='116' cnt='117' prob='0.0169492'/>
<bc code='50' bci='34'/>
<uncommon_trap bci='34' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2074' live='2011' memory='496296' stamp='0.354'/>
</parse>
<late_inline method='876'>
<jvms bci='238' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='876' uses='-1' stamp='0.355'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='905' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='4246'/>
<call method='905' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap method='905' bci='58' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<uncommon_trap method='905' bci='25' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<uncommon_trap method='905' bci='8' reason='unloaded' action='reinterpret' index='6' klass='854'/>
<inline_success reason='inline (hot)'/>
<parse method='905' uses='-1' stamp='0.355'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.355'>
<parse_done nodes='2155' live='1334' memory='511704' stamp='0.355'/>
</parse>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='58'/>
<uncommon_trap bci='58' reason='unloaded' action='reinterpret' index='6'/>
<bc code='184' bci='75'/>
<klass id='910' name='java/util/Arrays' flags='1'/>
<method id='911' holder='910' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4776'/>
<call method='911' count='-1' prof_factor='1' inline='1'/>
<klass id='918' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='911' bci='8' reason='unloaded' action='reinterpret' index='2' klass='918'/>
<inline_fail reason='too big'/>
<direct_call bci='75'/>
<parse_done nodes='2288' live='1461' memory='536008' stamp='0.355'/>
</parse>
<parse_done nodes='2297' live='1469' memory='538416' stamp='0.355'/>
</parse>
<late_inline method='875'>
<jvms bci='233' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='875' uses='-1' stamp='0.355'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='904' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='4425'/>
<call method='904' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='2'/>
<parse_done nodes='2324' live='1494' memory='544440' stamp='0.355'/>
</parse>
<late_inline method='876'>
<jvms bci='230' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='876' uses='-1' stamp='0.355'>
<bc code='183' bci='13'/>
<call method='905' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='905' uses='-1' stamp='0.355'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.355'>
<parse_done nodes='2395' live='1563' memory='558568' stamp='0.355'/>
</parse>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='6'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='187' bci='58'/>
<uncommon_trap bci='58' reason='unloaded' action='reinterpret' index='6'/>
<bc code='184' bci='75'/>
<call method='911' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='75'/>
<parse_done nodes='2524' live='1686' memory='582696' stamp='0.355'/>
</parse>
<parse_done nodes='2533' live='1694' memory='586160' stamp='0.355'/>
</parse>
<late_inline method='872'>
<jvms bci='227' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.355'>
<bc code='183' bci='2'/>
<method id='891' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='3011'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.355'>
<bc code='183' bci='7'/>
<method id='921' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='8784'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.355'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<method id='926' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2029'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.355'>
<bc code='183' bci='31'/>
<method id='929' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='929' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='2672' live='1830' memory='608880' stamp='0.356'/>
</parse>
<bc code='184' bci='20'/>
<method id='927' holder='910' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='2537'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.356'>
<bc code='184' bci='11'/>
<klass id='915' name='java/lang/Math' flags='17'/>
<method id='916' holder='915' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='917' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='2850' live='2007' memory='635960' stamp='0.356'/>
</parse>
<parse_done nodes='2875' live='2031' memory='641816' stamp='0.356'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2923' live='2076' memory='651896' stamp='0.356'/>
</parse>
<parse_done nodes='2929' live='2081' memory='655000' stamp='0.356'/>
</parse>
<late_inline method='875'>
<jvms bci='222' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='875' uses='-1' stamp='0.356'>
<bc code='183' bci='2'/>
<call method='904' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='2'/>
<parse_done nodes='2956' live='2106' memory='668128' stamp='0.356'/>
</parse>
<late_inline method='872'>
<jvms bci='208' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.356'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.356'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.356'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.356'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3093' live='2240' memory='690976' stamp='0.356'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.356'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3260' live='2406' memory='719976' stamp='0.356'/>
</parse>
<parse_done nodes='3285' live='2430' memory='725880' stamp='0.356'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3333' live='2475' memory='740616' stamp='0.356'/>
</parse>
<parse_done nodes='3339' live='2480' memory='742696' stamp='0.356'/>
</parse>
<late_inline method='870'>
<jvms bci='203' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='870' uses='-1' stamp='0.356'>
<bc code='183' bci='3'/>
<method id='890' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2794'/>
<call method='890' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='890' uses='-1' stamp='0.356'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.356'>
<parse_done nodes='3384' live='2523' memory='751416' stamp='0.356'/>
</parse>
<parse_done nodes='3424' live='2562' memory='758640' stamp='0.356'/>
</parse>
<parse_done nodes='3430' live='2567' memory='760832' stamp='0.356'/>
</parse>
<late_inline method='872'>
<jvms bci='183' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.356'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.356'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.356'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.357'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3567' live='2701' memory='790816' stamp='0.357'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.357'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3734' live='2867' memory='871712' stamp='0.357'/>
</parse>
<parse_done nodes='3759' live='2891' memory='877632' stamp='0.357'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3807' live='2936' memory='888432' stamp='0.357'/>
</parse>
<parse_done nodes='3813' live='2941' memory='890496' stamp='0.357'/>
</parse>
<late_inline method='872'>
<jvms bci='166' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.357'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.357'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.357'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.357'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='3950' live='3075' memory='911872' stamp='0.357'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.357'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4117' live='3241' memory='1052872' stamp='0.357'/>
</parse>
<parse_done nodes='4142' live='3265' memory='1058728' stamp='0.357'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4190' live='3310' memory='1068232' stamp='0.357'/>
</parse>
<parse_done nodes='4196' live='3315' memory='1074392' stamp='0.357'/>
</parse>
<late_inline method='872'>
<jvms bci='149' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.357'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.357'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.357'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.357'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='4333' live='3449' memory='1096504' stamp='0.357'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.357'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4500' live='3615' memory='1122920' stamp='0.358'/>
</parse>
<parse_done nodes='4525' live='3639' memory='1128776' stamp='0.358'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4573' live='3684' memory='1139432' stamp='0.358'/>
</parse>
<parse_done nodes='4579' live='3689' memory='1141496' stamp='0.358'/>
</parse>
<late_inline method='872'>
<jvms bci='132' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.358'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.358'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.358'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.358'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='4716' live='3823' memory='1163224' stamp='0.358'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.358'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4883' live='3989' memory='1191008' stamp='0.358'/>
</parse>
<parse_done nodes='4908' live='4013' memory='1197376' stamp='0.358'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4956' live='4058' memory='1206880' stamp='0.358'/>
</parse>
<parse_done nodes='4962' live='4063' memory='1208944' stamp='0.358'/>
</parse>
<late_inline method='872'>
<jvms bci='115' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.358'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.358'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.358'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.358'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5099' live='4197' memory='1229016' stamp='0.358'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.358'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5266' live='4363' memory='1256824' stamp='0.358'/>
</parse>
<parse_done nodes='5291' live='4387' memory='1262680' stamp='0.358'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5339' live='4432' memory='1272184' stamp='0.358'/>
</parse>
<parse_done nodes='5345' live='4437' memory='1274248' stamp='0.358'/>
</parse>
<late_inline method='872'>
<jvms bci='98' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.358'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.358'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.358'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.359'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5482' live='4571' memory='1298712' stamp='0.359'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.359'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5649' live='4737' memory='1333200' stamp='0.359'/>
</parse>
<parse_done nodes='5674' live='4761' memory='1355016' stamp='0.359'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5722' live='4806' memory='1364520' stamp='0.359'/>
</parse>
<parse_done nodes='5728' live='4811' memory='1366584' stamp='0.359'/>
</parse>
<late_inline method='872'>
<jvms bci='81' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.359'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.359'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.359'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.359'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='5865' live='4945' memory='1388488' stamp='0.359'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.359'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6032' live='5111' memory='1417632' stamp='0.359'/>
</parse>
<parse_done nodes='6057' live='5135' memory='1423488' stamp='0.359'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6105' live='5180' memory='1435040' stamp='0.359'/>
</parse>
<parse_done nodes='6111' live='5185' memory='1437104' stamp='0.359'/>
</parse>
<late_inline method='872'>
<jvms bci='64' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.359'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.359'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.359'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.360'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='6248' live='5319' memory='1466704' stamp='0.360'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.360'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6415' live='5485' memory='1500392' stamp='0.360'/>
</parse>
<parse_done nodes='6440' live='5509' memory='1506248' stamp='0.360'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6488' live='5554' memory='1515872' stamp='0.360'/>
</parse>
<parse_done nodes='6494' live='5559' memory='1517936' stamp='0.360'/>
</parse>
<late_inline method='872'>
<jvms bci='47' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.360'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.360'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.360'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.360'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='6631' live='5693' memory='1540760' stamp='0.360'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.360'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6798' live='5859' memory='1566496' stamp='0.360'/>
</parse>
<parse_done nodes='6823' live='5883' memory='1572448' stamp='0.360'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6871' live='5928' memory='1584304' stamp='0.360'/>
</parse>
<parse_done nodes='6877' live='5933' memory='1586368' stamp='0.360'/>
</parse>
<late_inline method='872'>
<jvms bci='18' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='872' uses='-1' stamp='0.360'>
<bc code='183' bci='2'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='0.360'>
<bc code='183' bci='7'/>
<call method='921' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='921' uses='-1' stamp='0.360'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='6791' not_taken='1994' cnt='8785' prob='0.773022'/>
<bc code='183' bci='17'/>
<call method='926' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='926' uses='1994' stamp='0.360'>
<bc code='183' bci='31'/>
<call method='929' count='-1' prof_factor='0.98275' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='7017' live='6070' memory='1611856' stamp='0.360'/>
</parse>
<bc code='184' bci='20'/>
<call method='927' count='1251' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='927' uses='1994' stamp='0.360'>
<bc code='184' bci='11'/>
<call method='916' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='917' count='-1' prof_factor='0.785968' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='7184' live='6236' memory='1639528' stamp='0.361'/>
</parse>
<parse_done nodes='7209' live='6260' memory='1645384' stamp='0.361'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='7257' live='6305' memory='1655016' stamp='0.361'/>
</parse>
<parse_done nodes='7263' live='6310' memory='1657080' stamp='0.361'/>
</parse>
<late_inline method='870'>
<jvms bci='4' method='862'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='870' uses='-1' stamp='0.361'>
<bc code='183' bci='3'/>
<call method='890' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='890' uses='-1' stamp='0.361'>
<bc code='183' bci='1'/>
<call method='859' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='859' uses='-1' stamp='0.361'>
<parse_done nodes='7312' live='6357' memory='1666920' stamp='0.361'/>
</parse>
<parse_done nodes='7357' live='6401' memory='1675048' stamp='0.361'/>
</parse>
<parse_done nodes='7369' live='6412' memory='1678216' stamp='0.361'/>
</parse>
<phase_done name='parse' nodes='7369' live='3921' stamp='0.361'/>
</phase>
<phase name='optimizer' nodes='7369' live='3921' stamp='0.361'>
<phase name='idealLoop' nodes='3517' live='3517' stamp='0.364'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='3543' live='3526' stamp='0.365'/>
</phase>
<phase name='escapeAnalysis' nodes='3543' live='3526' stamp='0.365'>
<phase name='connectionGraph' nodes='3544' live='3527' stamp='0.365'>
<phase_done name='connectionGraph' nodes='3544' live='3527' stamp='0.366'/>
</phase>
<phase_done name='escapeAnalysis' nodes='3544' live='3527' stamp='0.366'/>
</phase>
<phase name='idealLoop' nodes='3544' live='3527' stamp='0.366'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4147' live='3431' stamp='0.369'/>
</phase>
<phase name='idealLoop' nodes='4147' live='3431' stamp='0.369'>
<loop_tree>
<loop idx='3527' >
<loop idx='3537' inner_loop='1' >
</loop>
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4619' live='3447' stamp='0.371'/>
</phase>
<phase name='idealLoop' nodes='4619' live='3447' stamp='0.371'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4625' live='3441' stamp='0.373'/>
</phase>
<phase name='ccp' nodes='4625' live='3441' stamp='0.374'>
<phase_done name='ccp' nodes='4625' live='3441' stamp='0.374'/>
</phase>
<phase name='idealLoop' nodes='4641' live='3406' stamp='0.374'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4789' live='3400' stamp='0.376'/>
</phase>
<phase name='idealLoop' nodes='4789' live='3400' stamp='0.376'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4931' live='3369' stamp='0.379'/>
</phase>
<phase name='idealLoop' nodes='4931' live='3369' stamp='0.379'>
<loop_tree>
<loop idx='3527' >
<loop idx='3538' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='5073' live='3369' stamp='0.380'/>
</phase>
<comment that='1/0 subword/long to 0/1 int/long'/>
<phase_done name='optimizer' nodes='6072' live='3932' stamp='0.381'/>
</phase>
<phase name='matcher' nodes='6072' live='3932' stamp='0.381'>
<phase_done name='matcher' nodes='4079' live='4079' stamp='0.385'/>
</phase>
<phase name='regalloc' nodes='5140' live='5120' stamp='0.388'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='8158' live='6745' stamp='0.449'/>
</phase>
<phase name='output' nodes='8192' live='6779' stamp='0.449'>
<phase_done name='output' nodes='8398' live='6877' stamp='0.456'/>
</phase>
<dependency type='leaf_type' ctxk='833'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<code_cache total_blobs='333' nmethods='78' adapters='205' free_code_cache='49672256'/>
<task_done success='1' nmsize='13896' count='5000' backedge_count='5006' inlined_bytes='2444' stamp='0.617'/>
</task>
<task compile_id='80' method='java/lang/Math max (II)I' bytes='11' count='9615' backedge_count='1' iicount='14616' stamp='0.617'>
<phase name='parse' nodes='3' live='3' stamp='0.617'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='max' return='722' arguments='722 722' flags='9' bytes='11' iicount='14626'/>
<parse method='833' uses='14626' stamp='0.617'>
<bc code='161' bci='2'/>
<branch target_bci='9' taken='0' not_taken='11358' cnt='11358' prob='never'/>
<uncommon_trap bci='2' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='37' live='35' memory='25520' stamp='0.618'/>
</parse>
<phase_done name='parse' nodes='38' live='20' stamp='0.618'/>
</phase>
<phase name='optimizer' nodes='38' live='20' stamp='0.618'>
<phase name='ccp' nodes='38' live='20' stamp='0.618'>
<phase_done name='ccp' nodes='38' live='20' stamp='0.618'/>
</phase>
<phase name='idealLoop' nodes='38' live='20' stamp='0.618'>
<phase_done name='idealLoop' nodes='38' live='20' stamp='0.618'/>
</phase>
<phase_done name='optimizer' nodes='38' live='20' stamp='0.618'/>
</phase>
<phase name='matcher' nodes='38' live='20' stamp='0.618'>
<phase_done name='matcher' nodes='22' live='22' stamp='0.618'/>
</phase>
<phase name='regalloc' nodes='27' live='27' stamp='0.618'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='34' live='32' stamp='0.618'/>
</phase>
<phase name='output' nodes='34' live='32' stamp='0.618'>
<phase_done name='output' nodes='40' live='37' stamp='0.618'/>
</phase>
<code_cache total_blobs='335' nmethods='80' adapters='205' free_code_cache='49671104'/>
<task_done success='1' nmsize='88' count='6501' backedge_count='1' stamp='0.619'/>
</task>
<task compile_id='82' method='java/lang/Long toUnsignedString0 (JI)Ljava/lang/String;' bytes='49' count='6142' backedge_count='1' iicount='136119' stamp='0.685'>
<phase name='parse' nodes='3' live='3' stamp='0.685'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='723' name='long'/>
<type id='722' name='int'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='832' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' iicount='136166'/>
<parse method='832' uses='136166' stamp='0.686'>
<bc code='184' bci='3'/>
<method id='834' holder='817' name='numberOfLeadingZeros' return='722' arguments='723' flags='9' bytes='94' iicount='136287'/>
<call method='834' count='132922' prof_factor='1' inline='1'/>
<intrinsic id='_numberOfLeadingZeros_l' nodes='1'/>
<bc code='108' bci='14'/>
<uncommon_trap bci='14' reason='div0_check' action='maybe_recompile'/>
<bc code='184' bci='16'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='max' return='722' arguments='722 722' flags='9' bytes='11' compile_id='80' compiler='C2' iicount='16500'/>
<call method='836' count='132921' prof_factor='1' inline='1'/>
<intrinsic id='_max' nodes='3'/>
<bc code='184' bci='34'/>
<klass id='821' name='[C' flags='1041'/>
<method id='837' holder='817' name='formatUnsignedLong' return='722' arguments='723 722 821 722 722' flags='8' bytes='52' compile_id='78' compiler='C2' iicount='11105'/>
<call method='837' count='132921' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='136164' stamp='0.686'>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9383' not_taken='17926' cnt='27309' prob='0.343586'/>
<uncommon_trap bci='44' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='44' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='157' bci='46'/>
<branch target_bci='15' taken='17926' not_taken='0' cnt='17926' prob='always'/>
<uncommon_trap bci='46' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='32'/>
<uncommon_trap bci='32' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='85' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='153' bci='41'/>
<branch target_bci='49' taken='9383' not_taken='17926' cnt='27309' prob='0.343586'/>
<parse_done nodes='309' live='300' memory='78616' stamp='0.686'/>
</parse>
<bc code='183' bci='45'/>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<method id='838' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' compile_id='79' compiler='C2' iicount='17231'/>
<call method='838' count='132921' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='136164' stamp='0.686'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='842' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='842' count='13932' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='17231' stamp='0.686'>
<parse_done nodes='377' live='367' memory='90112' stamp='0.686'/>
</parse>
<parse_done nodes='396' live='385' memory='93136' stamp='0.686'/>
</parse>
<parse_done nodes='398' live='386' memory='93776' stamp='0.686'/>
</parse>
<phase_done name='parse' nodes='400' live='254' stamp='0.686'/>
</phase>
<phase name='optimizer' nodes='400' live='254' stamp='0.686'>
<phase name='idealLoop' nodes='400' live='232' stamp='0.686'>
<loop_tree>
<loop idx='400' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='401' live='232' stamp='0.686'/>
</phase>
<phase name='escapeAnalysis' nodes='401' live='232' stamp='0.686'>
<phase name='connectionGraph' nodes='403' live='234' stamp='0.686'>
<phase_done name='connectionGraph' nodes='403' live='234' stamp='0.686'/>
</phase>
<phase_done name='escapeAnalysis' nodes='403' live='234' stamp='0.686'/>
</phase>
<phase name='idealLoop' nodes='403' live='234' stamp='0.686'>
<loop_tree>
<loop idx='400' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='487' live='245' stamp='0.687'/>
</phase>
<phase name='idealLoop' nodes='487' live='245' stamp='0.687'>
<loop_tree>
<loop idx='494' main_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='656' live='344' stamp='0.687'/>
</phase>
<phase name='idealLoop' nodes='656' live='344' stamp='0.687'>
<loop_tree>
<loop idx='581' inner_loop='1' pre_loop='494' >
</loop>
<loop idx='494' inner_loop='1' main_loop='494' >
</loop>
<loop idx='516' inner_loop='1' post_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='656' live='344' stamp='0.687'/>
</phase>
<phase name='ccp' nodes='656' live='344' stamp='0.687'>
<phase_done name='ccp' nodes='656' live='344' stamp='0.687'/>
</phase>
<phase name='idealLoop' nodes='660' live='342' stamp='0.687'>
<loop_tree>
<loop idx='581' inner_loop='1' pre_loop='494' >
</loop>
<loop idx='494' inner_loop='1' main_loop='494' >
</loop>
<loop idx='516' inner_loop='1' post_loop='494' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='666' live='339' stamp='0.687'/>
</phase>
<phase_done name='optimizer' nodes='792' live='412' stamp='0.688'/>
</phase>
<phase name='matcher' nodes='792' live='412' stamp='0.688'>
<phase_done name='matcher' nodes='367' live='367' stamp='0.688'/>
</phase>
<phase name='regalloc' nodes='459' live='459' stamp='0.688'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='643' live='565' stamp='0.690'/>
</phase>
<phase name='output' nodes='649' live='571' stamp='0.690'>
<phase_done name='output' nodes='676' live='585' stamp='0.697'/>
</phase>
<code_cache total_blobs='337' nmethods='82' adapters='205' free_code_cache='49665728'/>
<task_done success='1' nmsize='1112' count='6117' backedge_count='1' inlined_bytes='168' stamp='0.702'/>
</task>
<task compile_id='84' compile_kind='osr' method='org/github/arnaudroger/CsvContent setUp ()V' bytes='82' count='10000' backedge_count='5472' iicount='1' osr_bci='20' stamp='0.702'>
<phase name='parse' nodes='3' live='3' stamp='0.702'>
<type id='724' name='void'/>
<klass id='832' name='org/github/arnaudroger/CsvContent' flags='1'/>
<method id='833' holder='832' name='setUp' return='724' flags='1' bytes='82' iicount='1'/>
<parse method='833' uses='1' osr_bci='20' stamp='0.704'>
<uncommon_trap bci='20' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='20' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='20' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='22'/>
<uncommon_trap bci='22' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='25'/>
<branch target_bci='57' taken='18809' not_taken='188090' cnt='206899' prob='0.0909091'/>
<bc code='158' bci='29'/>
<branch target_bci='39' taken='18809' not_taken='169281' cnt='188090' prob='0.1'/>
<bc code='182' bci='35'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='839' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='77' compiler='C2' iicount='25109'/>
<call method='839' count='169281' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='169281' stamp='0.704'>
<uncommon_trap bci='35' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='842' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='76' compiler='C2' iicount='21387'/>
<call method='842' count='21810' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='25110' stamp='0.704'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21388' not_taken='0' cnt='21388' prob='always'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='844' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='67' compiler='C2' iicount='10042'/>
<call method='844' count='18088' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='21388' stamp='0.704'>
<parse_done nodes='229' live='223' memory='55872' stamp='0.704'/>
</parse>
<bc code='183' bci='21'/>
<method id='845' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10076'/>
<call method='845' count='18088' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='21388' stamp='0.704'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5091' not_taken='1686' cnt='6777' prob='0.751217'/>
<bc code='183' bci='17'/>
<method id='851' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='2464'/>
<call method='851' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1686' stamp='0.704'>
<bc code='183' bci='31'/>
<method id='855' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='855' count='-1' prof_factor='0.684253' inline='1'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<uncommon_trap method='855' bci='7' reason='unloaded' action='reinterpret' index='12' klass='752'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='350' live='342' memory='85024' stamp='0.704'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='852' name='java/util/Arrays' flags='1'/>
<method id='853' holder='852' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='3229'/>
<call method='853' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1686' stamp='0.704'>
<bc code='184' bci='11'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='858' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='859' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='859' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_arraycopy' nodes='105'/>
<parse_done nodes='526' live='517' memory='125552' stamp='0.704'/>
</parse>
<parse_done nodes='553' live='543' memory='131080' stamp='0.704'/>
</parse>
<bc code='182' bci='35'/>
<method id='846' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' compile_id='75' compiler='C2' iicount='13706'/>
<call method='846' count='18088' prof_factor='1' inline='1'/>
<klass id='861' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='846' bci='36' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<uncommon_trap method='846' bci='22' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<uncommon_trap method='846' bci='4' reason='unloaded' action='reinterpret' index='6' klass='861'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='21388' stamp='0.704'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10407' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='63'/>
<parse_done nodes='671' live='659' memory='154184' stamp='0.704'/>
</parse>
<parse_done nodes='688' live='675' memory='158392' stamp='0.705'/>
</parse>
<parse_done nodes='691' live='677' memory='160032' stamp='0.705'/>
</parse>
<bc code='184' bci='44'/>
<type id='723' name='long'/>
<klass id='817' name='java/lang/Long' flags='17'/>
<method id='840' holder='817' name='toHexString' return='730' arguments='723' flags='9' bytes='6' compile_id='81' compiler='C2' iicount='156088'/>
<call method='840' count='188090' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='840' uses='188090' stamp='0.705'>
<bc code='184' bci='2'/>
<method id='863' holder='817' name='toUnsignedString0' return='730' arguments='723 722' flags='8' bytes='49' compile_id='82' compiler='C2' iicount='156088'/>
<call method='863' count='152789' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a big method'/>
<direct_call bci='2'/>
<parse_done nodes='727' live='712' memory='167616' stamp='0.705'/>
</parse>
<bc code='182' bci='47'/>
<call method='839' count='188089' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='188089' stamp='0.705'>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<call method='842' count='21810' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='25110' stamp='0.705'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21388' not_taken='0' cnt='21388' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='10'/>
<call method='844' count='18088' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='21388' stamp='0.705'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='811' live='792' memory='182448' stamp='0.705'/>
</parse>
<bc code='183' bci='21'/>
<call method='845' count='18088' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='21388' stamp='0.705'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5091' not_taken='1686' cnt='6777' prob='0.751217'/>
<bc code='183' bci='17'/>
<call method='851' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1686' stamp='0.705'>
<bc code='183' bci='31'/>
<call method='855' count='-1' prof_factor='0.684253' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='923' live='902' memory='199696' stamp='0.705'/>
</parse>
<bc code='184' bci='20'/>
<call method='853' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1686' stamp='0.705'>
<bc code='184' bci='11'/>
<call method='858' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='859' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='1090' live='1068' memory='259416' stamp='0.705'/>
</parse>
<parse_done nodes='1115' live='1092' memory='264888' stamp='0.705'/>
</parse>
<bc code='182' bci='35'/>
<call method='846' count='18088' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='21388' stamp='0.705'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='190' bci='18'/>
<uncommon_trap bci='18' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10407' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='78'/>
<parse_done nodes='1266' live='1239' memory='293896' stamp='0.705'/>
</parse>
<parse_done nodes='1283' live='1255' memory='297680' stamp='0.705'/>
</parse>
<parse_done nodes='1286' live='1257' memory='298704' stamp='0.705'/>
</parse>
<bc code='182' bci='60'/>
<call method='839' count='18809' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='18809' stamp='0.705'>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<bc code='183' bci='2'/>
<call method='842' count='21810' prof_factor='0.749094' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='18810' stamp='0.705'>
<bc code='199' bci='1'/>
<branch target_bci='9' taken='21388' not_taken='0' cnt='21388' prob='always'/>
<bc code='182' bci='10'/>
<call method='844' count='18088' prof_factor='0.879506' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='18811' stamp='0.705'>
<parse_done nodes='1351' live='1320' memory='311808' stamp='0.705'/>
</parse>
<bc code='183' bci='21'/>
<call method='845' count='18088' prof_factor='0.879506' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='18811' stamp='0.705'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='5091' not_taken='1686' cnt='6777' prob='0.751217'/>
<bc code='183' bci='17'/>
<call method='851' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='851' uses='1686' stamp='0.705'>
<bc code='183' bci='31'/>
<call method='855' count='-1' prof_factor='0.684253' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='31'/>
<parse_done nodes='1469' live='1436' memory='330664' stamp='0.705'/>
</parse>
<bc code='184' bci='20'/>
<call method='853' count='1686' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='1686' stamp='0.705'>
<bc code='184' bci='11'/>
<call method='858' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='859' count='-1' prof_factor='0.522143' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='1636' live='1602' memory='357096' stamp='0.706'/>
</parse>
<parse_done nodes='1661' live='1626' memory='362472' stamp='0.706'/>
</parse>
<bc code='182' bci='35'/>
<call method='846' count='18088' prof_factor='0.879506' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='18811' stamp='0.706'>
<bc code='156' bci='1'/>
<branch target_bci='13' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='164' bci='19'/>
<branch target_bci='31' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='164' bci='33'/>
<branch target_bci='47' taken='10407' not_taken='0' cnt='10407' prob='always'/>
<bc code='184' bci='58'/>
<call method='859' count='10407' prof_factor='1' inline='1'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='62'/>
<parse_done nodes='1778' live='1741' memory='384824' stamp='0.706'/>
</parse>
<parse_done nodes='1795' live='1757' memory='389032' stamp='0.706'/>
</parse>
<parse_done nodes='1798' live='1759' memory='390160' stamp='0.706'/>
</parse>
<bc code='162' bci='15'/>
<branch target_bci='70' taken='0' not_taken='18809' cnt='18809' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1820' live='1780' memory='395656' stamp='0.706'/>
</parse>
<phase_done name='parse' nodes='1821' live='1021' stamp='0.706'/>
</phase>
<phase name='optimizer' nodes='1821' live='1021' stamp='0.706'>
<phase name='idealLoop' nodes='1846' live='999' stamp='0.706'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1860' live='1005' stamp='0.707'/>
</phase>
<phase name='escapeAnalysis' nodes='1860' live='1005' stamp='0.707'>
<phase name='connectionGraph' nodes='1861' live='1006' stamp='0.707'>
<phase_done name='connectionGraph' nodes='1861' live='1006' stamp='0.707'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1861' live='1006' stamp='0.707'/>
</phase>
<phase name='idealLoop' nodes='1861' live='1006' stamp='0.707'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1937' live='999' stamp='0.707'/>
</phase>
<phase name='idealLoop' nodes='1937' live='999' stamp='0.707'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1942' live='997' stamp='0.708'/>
</phase>
<phase name='idealLoop' nodes='1942' live='997' stamp='0.708'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1942' live='997' stamp='0.708'/>
</phase>
<phase name='ccp' nodes='1942' live='997' stamp='0.709'>
<phase_done name='ccp' nodes='1942' live='997' stamp='0.709'/>
</phase>
<phase name='idealLoop' nodes='1950' live='963' stamp='0.709'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1997' live='957' stamp='0.709'/>
</phase>
<phase name='idealLoop' nodes='1997' live='957' stamp='0.709'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2026' live='941' stamp='0.710'/>
</phase>
<phase name='idealLoop' nodes='2026' live='941' stamp='0.710'>
<loop_tree>
<loop idx='1852' >
<loop idx='1858' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2055' live='941' stamp='0.710'/>
</phase>
<phase_done name='optimizer' nodes='2232' live='1043' stamp='0.710'/>
</phase>
<phase name='matcher' nodes='2232' live='1043' stamp='0.710'>
<phase_done name='matcher' nodes='1094' live='1094' stamp='0.711'/>
</phase>
<phase name='regalloc' nodes='1390' live='1380' stamp='0.712'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='1970' live='1761' stamp='0.721'/>
</phase>
<phase name='output' nodes='1982' live='1773' stamp='0.721'>
<phase_done name='output' nodes='2035' live='1801' stamp='0.722'/>
</phase>
<code_cache total_blobs='339' nmethods='84' adapters='205' free_code_cache='49656064'/>
<task_done success='1' nmsize='3344' count='10000' backedge_count='5351' inlined_bytes='672' stamp='0.738'/>
</task>
<task compile_id='86' compile_kind='osr' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='10000' backedge_count='5564' iicount='1' osr_bci='23' stamp='1.197'>
<phase name='parse' nodes='3' live='3' stamp='1.197'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkDirect' return='724' arguments='833 834' flags='1' bytes='113' iicount='1'/>
<parse method='835' uses='1' osr_bci='23' stamp='1.197'>
<uncommon_trap bci='23' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='23' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='190' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='27'/>
<branch target_bci='112' taken='0' not_taken='12862' cnt='12862' prob='never'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='40'/>
<branch target_bci='68' taken='9651' not_taken='3210' cnt='12861' prob='0.750408'/>
<bc code='184' bci='55'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='11587'/>
<call method='839' count='3210' prof_factor='1' inline='1'/>
<klass id='845' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='839' bci='8' reason='unloaded' action='reinterpret' index='2' klass='845'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='3210' stamp='1.198'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='9365' not_taken='0' cnt='9365' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='843' count='9368' prof_factor='0.277035' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='844' count='9367' prof_factor='0.277035' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='417' live='409' memory='96120' stamp='1.198'/>
</parse>
<bc code='83' bci='58'/>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='58' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='72'/>
<branch target_bci='106' taken='9294' not_taken='357' cnt='9651' prob='0.963009'/>
<bc code='184' bci='87'/>
<call method='839' count='357' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='357' stamp='1.198'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='9365' not_taken='0' cnt='9365' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='843' count='9368' prof_factor='0.0308104' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='844' count='9367' prof_factor='0.0308104' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='675' live='663' memory='150424' stamp='1.198'/>
</parse>
<bc code='83' bci='90'/>
<uncommon_trap bci='90' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='90' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='100'/>
<klass id='840' name='[Ljava/lang/Object;' flags='1041'/>
<method id='841' holder='834' name='consume' return='724' arguments='840' flags='17' bytes='42' iicount='504'/>
<call method='841' count='357' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='100'/>
<uncommon_trap bci='100' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='764' live='749' memory='167184' stamp='1.199'/>
</parse>
<phase_done name='parse' nodes='765' live='524' stamp='1.199'/>
</phase>
<phase name='optimizer' nodes='765' live='524' stamp='1.199'>
<phase name='idealLoop' nodes='781' live='513' stamp='1.199'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='783' live='513' stamp='1.199'/>
</phase>
<phase name='escapeAnalysis' nodes='783' live='513' stamp='1.199'>
<phase name='connectionGraph' nodes='784' live='514' stamp='1.199'>
<phase_done name='connectionGraph' nodes='784' live='514' stamp='1.199'/>
</phase>
<phase_done name='escapeAnalysis' nodes='784' live='514' stamp='1.199'/>
</phase>
<phase name='idealLoop' nodes='784' live='514' stamp='1.199'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='795' live='511' stamp='1.200'/>
</phase>
<phase name='idealLoop' nodes='795' live='511' stamp='1.200'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='795' live='511' stamp='1.200'/>
</phase>
<phase name='idealLoop' nodes='795' live='511' stamp='1.200'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='795' live='511' stamp='1.200'/>
</phase>
<phase name='ccp' nodes='795' live='511' stamp='1.200'>
<phase_done name='ccp' nodes='795' live='511' stamp='1.200'/>
</phase>
<phase name='idealLoop' nodes='807' live='482' stamp='1.200'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='813' live='467' stamp='1.200'/>
</phase>
<phase name='idealLoop' nodes='813' live='467' stamp='1.200'>
<loop_tree>
<loop idx='781' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='819' live='467' stamp='1.201'/>
</phase>
<phase_done name='optimizer' nodes='934' live='530' stamp='1.201'/>
</phase>
<phase name='matcher' nodes='934' live='530' stamp='1.201'>
<phase_done name='matcher' nodes='528' live='528' stamp='1.201'/>
</phase>
<phase name='regalloc' nodes='685' live='682' stamp='1.202'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1096' live='927' stamp='1.205'/>
</phase>
<phase name='output' nodes='1102' live='933' stamp='1.205'>
<phase_done name='output' nodes='1129' live='954' stamp='1.205'/>
</phase>
<code_cache total_blobs='341' nmethods='86' adapters='205' free_code_cache='49650112'/>
<task_done success='1' nmsize='1992' count='10000' backedge_count='5709' inlined_bytes='148' stamp='1.211'/>
</task>
<task compile_id='88' method='org/github/arnaudroger/SimplifiedBenchmark benchmarkDirect (Lorg/github/arnaudroger/CsvContent;Lorg/openjdk/jmh/infra/Blackhole;)V' bytes='113' count='5000' backedge_count='659' iicount='2' decompiles='1' unstable_if_traps='1' stamp='1.495'>
<phase name='parse' nodes='3' live='3' stamp='1.495'>
<type id='724' name='void'/>
<klass id='833' name='org/github/arnaudroger/CsvContent' flags='1'/>
<klass id='834' name='org/openjdk/jmh/infra/Blackhole' flags='17'/>
<klass id='832' name='org/github/arnaudroger/SimplifiedBenchmark' flags='1'/>
<method id='835' holder='832' name='benchmarkDirect' return='724' arguments='833 834' flags='1' bytes='113' iicount='2'/>
<parse method='835' uses='2' stamp='1.496'>
<observe trap='unstable_if' count='1' total='1'/>
<bc code='180' bci='1'/>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='27'/>
<branch target_bci='112' taken='1' not_taken='357915' cnt='357916' prob='2.79395e-06'/>
<uncommon_trap bci='30' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='30' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='33'/>
<uncommon_trap bci='33' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='40'/>
<branch target_bci='68' taken='285590' not_taken='72325' cnt='357915' prob='0.797927'/>
<bc code='184' bci='55'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='21573'/>
<call method='839' count='72325' prof_factor='1' inline='1'/>
<klass id='845' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='839' bci='8' reason='unloaded' action='reinterpret' index='2' klass='845'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='72325' stamp='1.496'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='842' name='java/lang/Math' flags='17'/>
<method id='843' holder='842' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='843' count='18275' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='844' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='844' count='18274' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='113'/>
<parse_done nodes='390' live='383' memory='93616' stamp='1.496'/>
</parse>
<bc code='83' bci='58'/>
<uncommon_trap bci='58' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='72'/>
<branch target_bci='106' taken='277555' not_taken='8035' cnt='285590' prob='0.971865'/>
<bc code='184' bci='87'/>
<call method='839' count='8035' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='8035' stamp='1.496'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='843' count='18275' prof_factor='0.372456' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='844' count='18274' prof_factor='0.372456' inline='1'/>
<intrinsic id='_arraycopy' nodes='108'/>
<parse_done nodes='641' live='631' memory='149200' stamp='1.497'/>
</parse>
<bc code='83' bci='90'/>
<uncommon_trap bci='90' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='100'/>
<klass id='840' name='[Ljava/lang/Object;' flags='1041'/>
<method id='841' holder='834' name='consume' return='724' arguments='840' flags='17' bytes='42' compile_id='87' compiler='C2' iicount='13549'/>
<call method='841' count='8035' prof_factor='1' inline='1'/>
<inline_fail reason='disallowed by CompilerOracle'/>
<direct_call bci='100'/>
<uncommon_trap bci='100' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='27'/>
<branch target_bci='112' taken='1' not_taken='357915' cnt='357915' prob='2.79395e-06'/>
<parse_done nodes='724' live='711' memory='165840' stamp='1.497'/>
</parse>
<phase_done name='parse' nodes='726' live='483' stamp='1.497'/>
</phase>
<phase name='optimizer' nodes='726' live='483' stamp='1.497'>
<phase name='idealLoop' nodes='728' live='471' stamp='1.497'>
<loop_tree>
<loop idx='734' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='735' live='469' stamp='1.498'/>
</phase>
<phase name='escapeAnalysis' nodes='735' live='469' stamp='1.498'>
<phase name='connectionGraph' nodes='736' live='470' stamp='1.498'>
<phase_done name='connectionGraph' nodes='736' live='470' stamp='1.498'/>
</phase>
<phase_done name='escapeAnalysis' nodes='736' live='470' stamp='1.498'/>
</phase>
<phase name='idealLoop' nodes='736' live='470' stamp='1.498'>
<loop_tree>
<loop idx='734' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='765' live='476' stamp='1.498'/>
</phase>
<phase name='idealLoop' nodes='765' live='476' stamp='1.498'>
<loop_tree>
<loop idx='734' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='765' live='474' stamp='1.498'/>
</phase>
<phase name='idealLoop' nodes='765' live='474' stamp='1.498'>
<loop_tree>
<loop idx='734' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='765' live='474' stamp='1.498'/>
</phase>
<phase name='ccp' nodes='765' live='474' stamp='1.498'>
<phase_done name='ccp' nodes='765' live='474' stamp='1.498'/>
</phase>
<phase name='idealLoop' nodes='779' live='449' stamp='1.499'>
<loop_tree>
<loop idx='734' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='788' live='435' stamp='1.499'/>
</phase>
<phase name='idealLoop' nodes='788' live='435' stamp='1.499'>
<loop_tree>
<loop idx='734' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='797' live='435' stamp='1.499'/>
</phase>
<phase_done name='optimizer' nodes='968' live='533' stamp='1.499'/>
</phase>
<phase name='matcher' nodes='968' live='533' stamp='1.499'>
<phase_done name='matcher' nodes='546' live='546' stamp='1.500'/>
</phase>
<phase name='regalloc' nodes='699' live='697' stamp='1.500'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1071' live='925' stamp='1.503'/>
</phase>
<phase name='output' nodes='1075' live='929' stamp='1.503'>
<phase_done name='output' nodes='1102' live='949' stamp='1.504'/>
</phase>
<code_cache total_blobs='343' nmethods='88' adapters='205' free_code_cache='49644800'/>
<task_done success='1' nmsize='1992' count='10000' backedge_count='6024' inlined_bytes='148' stamp='1.510'/>
</task>
<task compile_id='90' method='java/io/ObjectStreamClass matchFields ([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;' bytes='247' count='5000' backedge_count='5021' iicount='25' stamp='2.372'>
<phase name='parse' nodes='3' live='3' stamp='2.372'>
<klass id='834' name='[Ljava/io/ObjectStreamField;' flags='1041'/>
<klass id='832' name='java/io/ObjectStreamClass' flags='1'/>
<method id='835' holder='832' name='matchFields' return='834' arguments='834 832' flags='10' bytes='247' iicount='25'/>
<klass id='849' name='java/io/InvalidClassException' unloaded='1'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<uncommon_trap method='835' bci='101' reason='unloaded' action='reinterpret' index='95' klass='849'/>
<parse method='835' uses='25' stamp='2.372'>
<bc code='198' bci='1'/>
<branch target_bci='11' taken='0' not_taken='10'/>
<bc code='190' bci='16'/>
<uncommon_trap bci='16' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='11' not_taken='262' cnt='273' prob='0.040293'/>
<uncommon_trap bci='31' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='31' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='34'/>
<uncommon_trap bci='34' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='46'/>
<uncommon_trap bci='46' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='263' not_taken='31224' cnt='31487' prob='0.00835265'/>
<uncommon_trap bci='50' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='50' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='50' bci='53'/>
<uncommon_trap bci='53' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='182' bci='58'/>
<klass id='833' name='java/io/ObjectStreamField' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='840' holder='833' name='getName' return='730' flags='1' bytes='5' compile_id='65' compiler='C2' iicount='36372'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='31224' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='31224' stamp='2.372'>
<uncommon_trap bci='58' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='293' live='283' memory='77392' stamp='2.372'/>
</parse>
<bc code='182' bci='63'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<call method='840' count='31224' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='840' uses='31224' stamp='2.372'>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='322' live='310' memory='82408' stamp='2.372'/>
</parse>
<bc code='182' bci='66'/>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='843' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' compile_id='36' compiler='C2' iicount='1360'/>
<call method='843' count='31224' prof_factor='1' inline='1'/>
<uncommon_trap bci='66' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='66' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_equals' nodes='74'/>
<bc code='153' bci='69'/>
<branch target_bci='192' taken='30962' not_taken='262' cnt='31224' prob='0.991609'/>
<bc code='182' bci='74'/>
<method id='844' holder='833' name='isPrimitive' return='716' flags='1' bytes='27' iicount='2007'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='262' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='262' stamp='2.373'>
<bc code='182' bci='5'/>
<type id='717' name='char'/>
<type id='722' name='int'/>
<method id='853' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='10' compiler='C2' iicount='11296'/>
<call method='853' count='-1' prof_factor='0.130543' inline='1'/>
<klass id='855' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='853' bci='13' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.373'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='511' live='492' memory='110800' stamp='2.373'/>
</parse>
<parse_done nodes='535' live='515' memory='126208' stamp='2.373'/>
</parse>
<bc code='154' bci='77'/>
<branch target_bci='88' taken='249' not_taken='13' cnt='262' prob='0.950382'/>
<bc code='182' bci='82'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<call method='844' count='13' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='844' uses='13' stamp='2.373'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.00647733' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.373'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='647' live='622' memory='145776' stamp='2.373'/>
</parse>
<parse_done nodes='669' live='643' memory='148704' stamp='2.373'/>
</parse>
<bc code='153' bci='85'/>
<branch target_bci='137' taken='13' not_taken='0'/>
<bc code='182' bci='90'/>
<method id='845' holder='833' name='getTypeCode' return='717' flags='1' bytes='9' iicount='1869'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='249' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='249' stamp='2.373'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.133226' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.373'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='782' live='751' memory='167672' stamp='2.373'/>
</parse>
<parse_done nodes='785' live='753' memory='168288' stamp='2.373'/>
</parse>
<bc code='182' bci='95'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<call method='845' count='249' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='845' uses='249' stamp='2.373'>
<bc code='182' bci='5'/>
<call method='853' count='-1' prof_factor='0.133226' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='2.373'>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='7997' cnt='7997' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='7997' not_taken='0' cnt='7997' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='889' live='852' memory='184040' stamp='2.373'/>
</parse>
<parse_done nodes='892' live='854' memory='184656' stamp='2.373'/>
</parse>
<bc code='159' bci='98'/>
<branch target_bci='137' taken='249' not_taken='0' cnt='249' prob='always'/>
<uncommon_trap bci='98' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='139'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='846' holder='833' name='getField' return='768' flags='0' bytes='5' iicount='1453'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='262' stamp='2.373'>
<parse_done nodes='921' live='881' memory='191176' stamp='2.373'/>
</parse>
<bc code='198' bci='142'/>
<branch target_bci='168' taken='0' not_taken='262' cnt='262' prob='never'/>
<uncommon_trap bci='142' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='151'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<call method='846' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='846' uses='262' stamp='2.374'>
<parse_done nodes='984' live='942' memory='207768' stamp='2.374'/>
</parse>
<bc code='182' bci='156'/>
<method id='847' holder='833' name='isUnshared' return='716' flags='1' bytes='5' iicount='456'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<call method='847' count='262' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='847' uses='262' stamp='2.374'>
<parse_done nodes='1006' live='963' memory='212424' stamp='2.374'/>
</parse>
<bc code='183' bci='160'/>
<type id='724' name='void'/>
<method id='848' holder='833' name='&lt;init&gt;' return='724' arguments='768 716 716' flags='0' bytes='69' iicount='686'/>
<call method='848' count='262' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='262' stamp='2.374'>
<bc code='183' bci='1'/>
<method id='860' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='39' compiler='C2' iicount='10155'/>
<call method='860' count='-1' prof_factor='0.381924' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.374'>
<parse_done nodes='1050' live='1006' memory='249664' stamp='2.374'/>
</parse>
<bc code='182' bci='21'/>
<method id='861' holder='768' name='getName' return='730' flags='1' bytes='5' compile_id='73' compiler='C2' iicount='12777'/>
<call method='861' count='-1' prof_factor='0.381924' inline='1'/>
<inline_success reason='accessor'/>
<parse method='861' uses='-1' stamp='2.374'>
<uncommon_trap bci='21' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='1103' live='1057' memory='260224' stamp='2.374'/>
</parse>
<bc code='182' bci='28'/>
<klass id='731' name='java/lang/Class' flags='17'/>
<method id='862' holder='768' name='getType' return='731' flags='1' bytes='5' iicount='818'/>
<call method='862' count='-1' prof_factor='0.381924' inline='1'/>
<inline_success reason='accessor'/>
<parse method='862' uses='-1' stamp='2.374'>
<parse_done nodes='1135' live='1088' memory='269336' stamp='2.374'/>
</parse>
<bc code='182' bci='40'/>
<method id='865' holder='731' name='isPrimitive' return='716' flags='257' bytes='0' iicount='3878'/>
<call method='865' count='-1' prof_factor='0.381924' inline='1'/>
<uncommon_trap bci='40' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isPrimitive' nodes='26'/>
<bc code='184' bci='59'/>
<method id='863' holder='833' name='getClassSignature' return='730' arguments='731' flags='10' bytes='242' iicount='735'/>
<call method='863' count='-1' prof_factor='0.381924' inline='1'/>
<klass id='888' name='java/lang/InternalError' unloaded='1'/>
<uncommon_trap method='863' bci='190' reason='unloaded' action='reinterpret' index='45' klass='888'/>
<inline_success reason='inline (hot)'/>
<parse method='863' uses='-1' stamp='2.374'>
<bc code='183' bci='4'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='871' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='3095'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='4'/>
<bc code='182' bci='9'/>
<method id='872' holder='731' name='isArray' return='716' flags='257' bytes='0' iicount='2228'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isArray' nodes='17'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='18'/>
<method id='873' holder='795' name='append' return='795' arguments='717' flags='1' bytes='8' iicount='2491'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='18'/>
<bc code='182' bci='23'/>
<method id='889' holder='731' name='getComponentType' return='731' flags='257' bytes='0' iicount='391'/>
<call method='889' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='23' reason='null_check' action='make_not_entrant'/>
<intrinsic id='_getComponentType' nodes='40'/>
<bc code='182' bci='9'/>
<call method='872' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_isArray' nodes='30'/>
<bc code='182' bci='31'/>
<call method='865' count='-1' prof_factor='1' inline='1'/>
<intrinsic id='_isPrimitive' nodes='12'/>
<bc code='182' bci='47'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='47'/>
<bc code='182' bci='64'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='64'/>
<bc code='182' bci='81'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='81'/>
<bc code='182' bci='98'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='98'/>
<bc code='182' bci='115'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='115'/>
<bc code='182' bci='132'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='132'/>
<bc code='182' bci='149'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='149'/>
<bc code='182' bci='166'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='166'/>
<bc code='182' bci='183'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='183'/>
<bc code='187' bci='190'/>
<uncommon_trap bci='190' reason='unloaded' action='reinterpret' index='45'/>
<bc code='183' bci='203'/>
<call method='871' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='208'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='208'/>
<bc code='182' bci='212'/>
<method id='874' holder='731' name='getName' return='730' flags='1' bytes='21' iicount='2519'/>
<call method='874' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='-1' stamp='2.375'>
<bc code='183' bci='11'/>
<method id='902' holder='731' name='getName0' return='730' flags='258' bytes='0' iicount='138'/>
<call method='902' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='11'/>
<parse_done nodes='1814' live='1759' memory='391168' stamp='2.375'/>
</parse>
<bc code='182' bci='219'/>
<method id='875' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='820'/>
<call method='875' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='219'/>
<uncommon_trap bci='219' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='222'/>
<method id='876' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='77' compiler='C2' iicount='25109'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='222'/>
<uncommon_trap bci='222' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='227'/>
<call method='873' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='227'/>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='230'/>
<method id='877' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='3253'/>
<call method='877' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='230'/>
<uncommon_trap bci='230' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='233'/>
<call method='876' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='233'/>
<bc code='182' bci='238'/>
<call method='877' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='238'/>
<parse_done nodes='1978' live='1918' memory='425720' stamp='2.376'/>
</parse>
<bc code='182' bci='62'/>
<method id='864' holder='730' name='intern' return='730' flags='257' bytes='0' iicount='2597'/>
<call method='864' count='-1' prof_factor='0.381924' inline='1'/>
<inline_fail reason='native method'/>
<direct_call bci='62'/>
<uncommon_trap bci='62' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='2037' live='1975' memory='439184' stamp='2.376'/>
</parse>
<bc code='162' bci='47'/>
<branch target_bci='198' taken='263' not_taken='31224' cnt='31224' prob='0.00835265'/>
<bc code='199' bci='200'/>
<branch target_bci='223' taken='263' not_taken='0' cnt='263' prob='always'/>
<uncommon_trap bci='200' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='227'/>
<method id='838' holder='833' name='getOffset' return='722' flags='1' bytes='5' iicount='684'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<call method='838' count='263' prof_factor='1' inline='1'/>
<inline_success reason='accessor'/>
<parse method='838' uses='263' stamp='2.376'>
<uncommon_trap bci='227' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='2110' live='2045' memory='504464' stamp='2.376'/>
</parse>
<bc code='182' bci='230'/>
<method id='839' holder='833' name='setOffset' return='724' arguments='722' flags='4' bytes='6' iicount='1017'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<call method='839' count='263' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='263' stamp='2.376'>
<parse_done nodes='2126' live='2060' memory='507416' stamp='2.376'/>
</parse>
<bc code='83' bci='238'/>
<uncommon_trap bci='238' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='28'/>
<branch target_bci='245' taken='11' not_taken='262' cnt='263' prob='0.040293'/>
<parse_done nodes='2183' live='2115' memory='518192' stamp='2.376'/>
</parse>
<late_inline method='877'>
<jvms bci='238' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='877' uses='-1' stamp='2.376'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='906' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='6297'/>
<call method='906' count='-1' prof_factor='1' inline='1'/>
<uncommon_trap method='906' bci='58' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<uncommon_trap method='906' bci='25' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<uncommon_trap method='906' bci='8' reason='unloaded' action='reinterpret' index='6' klass='855'/>
<inline_success reason='inline (hot)'/>
<parse method='906' uses='-1' stamp='2.377'>
<bc code='183' bci='1'/>
<call method='860' count='3018' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='6299' stamp='2.377'>
<parse_done nodes='2264' live='1346' memory='532856' stamp='2.377'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='6299' not_taken='0' cnt='6299' prob='always'/>
<bc code='157' bci='18'/>
<branch target_bci='50' taken='6253' not_taken='46' cnt='6299' prob='0.992697'/>
<bc code='156' bci='22'/>
<branch target_bci='34' taken='46' not_taken='0' cnt='46' prob='always'/>
<uncommon_trap bci='22' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='163' bci='37'/>
<branch target_bci='50' taken='0' not_taken='46' cnt='46' prob='never'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='55'/>
<branch target_bci='69' taken='6253' not_taken='0' cnt='6253' prob='always'/>
<uncommon_trap bci='55' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='75'/>
<klass id='911' name='java/util/Arrays' flags='1'/>
<method id='912' holder='911' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='85' compiler='C2' iicount='21573'/>
<call method='912' count='2996' prof_factor='1' inline='1'/>
<klass id='919' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='912' bci='8' reason='unloaded' action='reinterpret' index='2' klass='919'/>
<inline_success reason='inline (hot)'/>
<parse method='912' uses='6253' stamp='2.377'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='916' name='java/lang/Math' flags='17'/>
<method id='917' holder='916' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='68' compiler='C2' iicount='10204'/>
<call method='917' count='18275' prof_factor='0.289853' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='918' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='57' compile_kind='c2n' iicount='10000'/>
<call method='918' count='18274' prof_factor='0.289853' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='2557' live='1632' memory='584808' stamp='2.377'/>
</parse>
<parse_done nodes='2572' live='1646' memory='587800' stamp='2.377'/>
</parse>
<parse_done nodes='2582' live='1655' memory='590392' stamp='2.377'/>
</parse>
<late_inline method='877'>
<jvms bci='230' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='877' uses='-1' stamp='2.377'>
<bc code='183' bci='13'/>
<call method='906' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='906' uses='-1' stamp='2.377'>
<bc code='183' bci='1'/>
<call method='860' count='3018' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='6299' stamp='2.377'>
<parse_done nodes='2653' live='1724' memory='604432' stamp='2.377'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='6299' not_taken='0' cnt='6299' prob='always'/>
<bc code='157' bci='18'/>
<branch target_bci='50' taken='6253' not_taken='46' cnt='6299' prob='0.992697'/>
<bc code='156' bci='22'/>
<branch target_bci='34' taken='46' not_taken='0' cnt='46' prob='always'/>
<uncommon_trap bci='22' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<bc code='163' bci='37'/>
<branch target_bci='50' taken='0' not_taken='46' cnt='46' prob='never'/>
<bc code='190' bci='52'/>
<uncommon_trap bci='52' reason='null_check' action='maybe_recompile'/>
<bc code='164' bci='55'/>
<branch target_bci='69' taken='6253' not_taken='0' cnt='6253' prob='always'/>
<uncommon_trap bci='55' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='75'/>
<call method='912' count='2996' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='912' uses='6253' stamp='2.378'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='21572' not_taken='0' cnt='21572' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<call method='917' count='18275' prof_factor='0.289853' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='918' count='18274' prof_factor='0.289853' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='2934' live='1998' memory='657912' stamp='2.378'/>
</parse>
<parse_done nodes='2949' live='2012' memory='660904' stamp='2.378'/>
</parse>
<parse_done nodes='2959' live='2021' memory='663472' stamp='2.378'/>
</parse>
<late_inline method='873'>
<jvms bci='227' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.378'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='892' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='3303'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.378'>
<bc code='183' bci='7'/>
<method id='922' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='71' compiler='C2' iicount='10076'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3042' live='2100' memory='679672' stamp='2.378'/>
</parse>
<parse_done nodes='3046' live='2103' memory='681464' stamp='2.378'/>
</parse>
<late_inline method='873'>
<jvms bci='208' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.378'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.378'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3129' live='2182' memory='703960' stamp='2.378'/>
</parse>
<parse_done nodes='3133' live='2185' memory='705752' stamp='2.378'/>
</parse>
<late_inline method='871'>
<jvms bci='203' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='871' uses='-1' stamp='2.378'>
<bc code='183' bci='3'/>
<method id='891' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='3883'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='2.379'>
<bc code='183' bci='1'/>
<call method='860' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.379'>
<parse_done nodes='3178' live='2228' memory='715112' stamp='2.379'/>
</parse>
<parse_done nodes='3220' live='2269' memory='724656' stamp='2.379'/>
</parse>
<parse_done nodes='3226' live='2274' memory='726848' stamp='2.379'/>
</parse>
<late_inline method='873'>
<jvms bci='183' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.379'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.379'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3309' live='2353' memory='745056' stamp='2.379'/>
</parse>
<parse_done nodes='3313' live='2356' memory='746832' stamp='2.379'/>
</parse>
<late_inline method='873'>
<jvms bci='166' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.379'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.379'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3396' live='2435' memory='764608' stamp='2.379'/>
</parse>
<parse_done nodes='3400' live='2438' memory='767408' stamp='2.379'/>
</parse>
<late_inline method='873'>
<jvms bci='149' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.379'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.379'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3483' live='2517' memory='787104' stamp='2.379'/>
</parse>
<parse_done nodes='3487' live='2520' memory='788880' stamp='2.379'/>
</parse>
<late_inline method='873'>
<jvms bci='132' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.379'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.379'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3570' live='2599' memory='805160' stamp='2.380'/>
</parse>
<parse_done nodes='3574' live='2602' memory='806936' stamp='2.380'/>
</parse>
<late_inline method='873'>
<jvms bci='115' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.380'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.380'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3657' live='2681' memory='822984' stamp='2.380'/>
</parse>
<parse_done nodes='3661' live='2684' memory='824760' stamp='2.380'/>
</parse>
<late_inline method='873'>
<jvms bci='98' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.380'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.380'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3744' live='2763' memory='904184' stamp='2.380'/>
</parse>
<parse_done nodes='3748' live='2766' memory='905960' stamp='2.380'/>
</parse>
<late_inline method='873'>
<jvms bci='81' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.380'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.380'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3831' live='2845' memory='922528' stamp='2.380'/>
</parse>
<parse_done nodes='3835' live='2848' memory='924304' stamp='2.380'/>
</parse>
<late_inline method='873'>
<jvms bci='64' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.380'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.380'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3918' live='2927' memory='942632' stamp='2.380'/>
</parse>
<parse_done nodes='3922' live='2930' memory='944408' stamp='2.380'/>
</parse>
<late_inline method='873'>
<jvms bci='47' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.380'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.380'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4005' live='3009' memory='959872' stamp='2.381'/>
</parse>
<parse_done nodes='4009' live='3012' memory='961648' stamp='2.381'/>
</parse>
<late_inline method='873'>
<jvms bci='18' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='873' uses='-1' stamp='2.381'>
<bc code='183' bci='2'/>
<call method='892' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='892' uses='-1' stamp='2.381'>
<bc code='183' bci='7'/>
<call method='922' count='-1' prof_factor='1' inline='1'/>
<inline_fail reason='already compiled into a medium method'/>
<direct_call bci='7'/>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4094' live='3093' memory='977624' stamp='2.381'/>
</parse>
<parse_done nodes='4098' live='3096' memory='1081608' stamp='2.381'/>
</parse>
<late_inline method='871'>
<jvms bci='4' method='863'/>
<jvms bci='59' method='848'/>
<jvms bci='160' method='835'/>
</late_inline>
<parse method='871' uses='-1' stamp='2.381'>
<bc code='183' bci='3'/>
<call method='891' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='891' uses='-1' stamp='2.381'>
<bc code='183' bci='1'/>
<call method='860' count='-1' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='860' uses='-1' stamp='2.381'>
<parse_done nodes='4148' live='3144' memory='1091848' stamp='2.381'/>
</parse>
<parse_done nodes='4194' live='3189' memory='1102264' stamp='2.381'/>
</parse>
<parse_done nodes='4207' live='3201' memory='1105576' stamp='2.381'/>
</parse>
<phase_done name='parse' nodes='4207' live='2100' stamp='2.381'/>
</phase>
<phase name='optimizer' nodes='4207' live='2100' stamp='2.381'>
<phase name='idealLoop' nodes='1937' live='1937' stamp='2.383'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1958' live='1935' stamp='2.384'/>
</phase>
<phase name='escapeAnalysis' nodes='1958' live='1935' stamp='2.384'>
<phase name='connectionGraph' nodes='1959' live='1936' stamp='2.384'>
<phase_done name='connectionGraph' nodes='1959' live='1936' stamp='2.385'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1959' live='1936' stamp='2.385'/>
</phase>
<phase name='idealLoop' nodes='1959' live='1936' stamp='2.385'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2076' live='1922' stamp='2.387'/>
</phase>
<phase name='idealLoop' nodes='2076' live='1922' stamp='2.387'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2163' live='1921' stamp='2.388'/>
</phase>
<phase name='idealLoop' nodes='2163' live='1921' stamp='2.388'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2163' live='1915' stamp='2.389'/>
</phase>
<phase name='ccp' nodes='2163' live='1915' stamp='2.390'>
<phase_done name='ccp' nodes='2163' live='1915' stamp='2.390'/>
</phase>
<phase name='idealLoop' nodes='2184' live='1899' stamp='2.391'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2227' live='1870' stamp='2.393'/>
</phase>
<phase name='idealLoop' nodes='2227' live='1870' stamp='2.393'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2267' live='1856' stamp='2.393'/>
</phase>
<phase name='idealLoop' nodes='2267' live='1856' stamp='2.393'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2307' live='1811' stamp='2.394'/>
</phase>
<phase name='idealLoop' nodes='2307' live='1811' stamp='2.394'>
<loop_tree>
<loop idx='1945' >
<loop idx='1951' >
<loop idx='1939' inner_loop='1' >
</loop>
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='2347' live='1811' stamp='2.396'/>
</phase>
<phase_done name='optimizer' nodes='2996' live='2153' stamp='2.396'/>
</phase>
<phase name='matcher' nodes='2996' live='2153' stamp='2.396'>
<phase_done name='matcher' nodes='2105' live='2105' stamp='2.398'/>
</phase>
<phase name='regalloc' nodes='2652' live='2624' stamp='2.399'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='4347' live='3553' stamp='2.427'/>
</phase>
<phase name='output' nodes='4363' live='3569' stamp='2.427'>
<phase_done name='output' nodes='4475' live='3649' stamp='2.429'/>
</phase>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<dependency type='unique_concrete_method' ctxk='833' x='844'/>
<dependency type='unique_concrete_method' ctxk='833' x='845'/>
<dependency type='unique_concrete_method' ctxk='833' x='846'/>
<dependency type='unique_concrete_method' ctxk='833' x='847'/>
<dependency type='unique_concrete_method' ctxk='833' x='838'/>
<dependency type='unique_concrete_method' ctxk='833' x='839'/>
<code_cache total_blobs='346' nmethods='90' adapters='206' free_code_cache='49617536'/>
<task_done success='1' nmsize='8024' count='5000' backedge_count='5002' inlined_bytes='1480' stamp='2.543'/>
</task>
</compilation_log>
<hotspot_log_done stamp='23.355'/>
</hotspot_log>
