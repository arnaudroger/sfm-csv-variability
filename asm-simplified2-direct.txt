# {method} {0x000000011497fef8} 'nextCharDirect' '(Lorg/openjdk/jmh/infra/Blackhole;[CII)I' in 'org/github/arnaudroger/SimplifiedBenchmark2'
# this:     rsi:rsi   = 'org/github/arnaudroger/SimplifiedBenchmark2'
# parm0:    rdx:rdx   = 'org/openjdk/jmh/infra/Blackhole'
# parm1:    rcx:rcx   = '[C'
# parm2:    r8        = int
# parm3:    r9        = int
#           [sp+0x60]  (sp of caller)
[Entry Point]
0x00000001182b9040: mov 0x8(%rsi),%r10d
0x00000001182b9044: shl $0x3,%r10
0x00000001182b9048: cmp %r10,%rax
0x00000001182b904b: jne 0x0000000118108e20  ;   {runtime_call}
0x00000001182b9051: data32 xchg %ax,%ax
0x00000001182b9054: nopl 0x0(%rax,%rax,1)
0x00000001182b905c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
0x00000001182b9060: mov %eax,-0x14000(%rsp)
0x00000001182b9067: push %rbp
0x00000001182b9068: sub $0x50,%rsp  ;*synchronization entry
                                    ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@-1 (line 39)
0x00000001182b906c: mov %rsi,%r10
0x00000001182b906f: mov %rdx,0x8(%rsp)
0x00000001182b9074: mov %r9d,(%rsp)
0x00000001182b9078: mov %rcx,%rbx
0x00000001182b907b: mov 0xc(%rcx),%r11d  ; implicit exception: dispatches to 0x00000001182b93c9
0x00000001182b907f: mov %r11d,0x30(%rsp)
0x00000001182b9084: cmp 0x30(%rsp),%r9d
0x00000001182b9089: jae L000b
0x00000001182b908f: movzwl 0x10(%rcx,%r9,2),%edx  ;*caload
                                                  ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@3 (line 39)
0x00000001182b9095: mov %r8d,%r9d
0x00000001182b9098: lea 0x10(%rcx,%r8,2),%rdi  ;*invokestatic arraycopy // start of array
                                               ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
0x00000001182b909d: mov (%rsp),%r10d
0x00000001182b90a1: sub %r8d,%r10d  ;*isub // length
                                    ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@2 (line 52)
                                    ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
0x00000001182b90a4: mov (%rsp),%r11d
0x00000001182b90a8: inc %r11d  ;*iadd
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@28 (line 42)
0x00000001182b90ab: mov %r11d,0x4(%rsp)
0x00000001182b90b0: movslq %r10d,%r11  ;*invokestatic arraycopy
                                       ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                       ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
0x00000001182b90b3: movslq %r10d,%rcx  ;*newarray
                                       ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@7 (line 53)
                                       ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
0x00000001182b90b6: cmp $0x2c,%edx
0x00000001182b90b9: jne L0003  ;*if_icmpne
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@10 (line 40)
0x00000001182b90bf: cmp $0x80000,%r10d
0x00000001182b90c6: ja L0000
0x00000001182b90c8: mov %r11,%rcx
             L0000: shl %rcx
0x00000001182b90ce: add $0x17,%rcx
0x00000001182b90d2: cmp $0x80000,%r10d
0x00000001182b90d9: ja L0009
0x00000001182b90df: mov 0x60(%r15),%rbp
0x00000001182b90e3: mov %rcx,%r8
0x00000001182b90e6: and $0xfffffffffffffff8,%r8
0x00000001182b90ea: mov %rbp,%rdx
0x00000001182b90ed: add %r8,%rdx
0x00000001182b90f0: cmp 0x70(%r15),%rdx
0x00000001182b90f4: jae L0009
0x00000001182b90fa: mov %rdx,0x60(%r15)
0x00000001182b90fe: prefetchnta 0xc0(%rdx)
0x00000001182b9105: movq $0x1,0x0(%rbp)
0x00000001182b910d: prefetchnta 0x100(%rdx)
0x00000001182b9114: movl $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
0x00000001182b911b: mov %r10d,0xc(%rbp)
0x00000001182b911f: prefetchnta 0x140(%rdx)
0x00000001182b9126: prefetchnta 0x180(%rdx)  ;*newarray
                                             ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@7 (line 53)
                                             ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
             L0001: mov %rbp,%rsi
0x00000001182b9130: add $0x10,%rsi
0x00000001182b9134: test %r9d,%r9d
0x00000001182b9137: jl L000d
0x00000001182b913d: mov 0x30(%rsp),%r8d
0x00000001182b9142: cmp (%rsp),%r8d
0x00000001182b9146: jb L000d
0x00000001182b914c: test %r10d,%r10d
0x00000001182b914f: jle L0002
0x00000001182b9151: mov %r11,%rdx
0x00000001182b9154: movabs $0x118115580,%r10
0x00000001182b915e: callq *%r10  ;*invokestatic arraycopy
                                 ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                 ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
             L0002: mov 0x8(%rsp),%rsi
0x00000001182b9166: test %rsi,%rsi
0x00000001182b9169: je L000c
0x00000001182b916f: mov %rbp,%rdx
0x00000001182b9172: nop
0x00000001182b9173: callq 0x0000000118109020  ; OopMap{off=312}
                                              ;*invokevirtual consume
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@22 (line 41)
                                              ;   {optimized virtual_call}
0x00000001182b9178: jmp L0004
             L0003: cmp $0xa,%edx
0x00000001182b917d: je L0005  ;*if_icmpne
                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@34 (line 43)
0x00000001182b917f: mov %r8d,0x4(%rsp)  ;*caload
                                        ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@3 (line 39)
             L0004: mov 0x4(%rsp),%eax
0x00000001182b9188: add $0x50,%rsp
0x00000001182b918c: pop %rbp
0x00000001182b918d: test %eax,-0xf7d4193(%rip)  # 0x0000000108ae5000
                                                ;   {poll_return} *** SAFEPOINT POLL ***
0x00000001182b9193: retq
             L0005: cmp $0x80000,%r10d
0x00000001182b919b: ja L0006
0x00000001182b919d: mov %r11,%rcx
             L0006: shl %rcx
0x00000001182b91a3: add $0x17,%rcx
0x00000001182b91a7: cmp $0x80000,%r10d
0x00000001182b91ae: ja L000a
0x00000001182b91b4: mov 0x60(%r15),%rbp
0x00000001182b91b8: mov %rcx,%r8
0x00000001182b91bb: and $0xfffffffffffffff8,%r8
0x00000001182b91bf: mov %rbp,%rdx
0x00000001182b91c2: add %r8,%rdx
0x00000001182b91c5: cmp 0x70(%r15),%rdx
0x00000001182b91c9: jae L000a
0x00000001182b91cf: mov %rdx,0x60(%r15)
0x00000001182b91d3: prefetchnta 0xc0(%rdx)
0x00000001182b91da: movq $0x1,0x0(%rbp)
0x00000001182b91e2: prefetchnta 0x100(%rdx)
0x00000001182b91e9: movl $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
0x00000001182b91f0: mov %r10d,0xc(%rbp)
0x00000001182b91f4: prefetchnta 0x140(%rdx)
0x00000001182b91fb: prefetchnta 0x180(%rdx)  ;*newarray
                                             ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@7 (line 53)
                                             ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
             L0007: mov %rbp,%rdx
0x00000001182b9205: add $0x10,%rdx
0x00000001182b9209: test %r9d,%r9d
0x00000001182b920c: jl L000f
0x00000001182b9212: mov (%rsp),%eax
0x00000001182b9215: mov 0x30(%rsp),%r8d
0x00000001182b921a: cmp %eax,%r8d
0x00000001182b921d: jb L000f
0x00000001182b9223: test %r10d,%r10d
0x00000001182b9226: jle L0008
0x00000001182b9228: mov %rdx,%rsi
0x00000001182b922b: mov %r11,%rdx
0x00000001182b922e: movabs $0x118115580,%r10
0x00000001182b9238: callq *%r10  ;*invokestatic arraycopy
                                 ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                 ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
             L0008: mov 0x8(%rsp),%r10
0x00000001182b9240: test %r10,%r10
0x00000001182b9243: je L000e
0x00000001182b9249: mov %r10,%rsi
0x00000001182b924c: mov %rbp,%rdx
0x00000001182b924f: callq 0x0000000118109020  ; OopMap{off=532}
                                              ;*invokevirtual consume
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@46 (line 44)
                                              ;   {optimized virtual_call}
0x00000001182b9254: jmpq L0004
             L0009: mov %rcx,0x28(%rsp)
0x00000001182b925e: mov %r11,0x20(%rsp)
0x00000001182b9263: mov 0x4(%rsp),%r11d
0x00000001182b9268: mov %r11d,0x1c(%rsp)
0x00000001182b926d: mov %r10d,0x18(%rsp)
0x00000001182b9272: mov %rdi,0x10(%rsp)
0x00000001182b9277: mov %r9d,0x4(%rsp)
0x00000001182b927c: mov %rbx,%rbp
0x00000001182b927f: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
0x00000001182b9289: mov %r10d,%edx
0x00000001182b928c: data32 xchg %ax,%ax
0x00000001182b928f: callq 0x00000001181c4fe0  ; OopMap{rbp=Oop [8]=Oop [16]=Derived_oop_rbp off=596}
                                              ;*newarray
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@7 (line 53)
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
                                              ;   {runtime_call}
0x00000001182b9294: mov %rbp,%rbx
0x00000001182b9297: mov 0x4(%rsp),%r9d
0x00000001182b929c: mov 0x10(%rsp),%rdi
0x00000001182b92a1: mov 0x18(%rsp),%r10d
0x00000001182b92a6: mov 0x1c(%rsp),%r11d
0x00000001182b92ab: mov %r11d,0x4(%rsp)
0x00000001182b92b0: mov 0x20(%rsp),%r11
0x00000001182b92b5: mov 0x28(%rsp),%rcx
0x00000001182b92ba: mov %rax,%rbp
0x00000001182b92bd: jmpq L0001
             L000a: mov %rcx,0x28(%rsp)
0x00000001182b92c7: mov %r11,0x20(%rsp)
0x00000001182b92cc: mov 0x4(%rsp),%r11d
0x00000001182b92d1: mov %r11d,0x1c(%rsp)
0x00000001182b92d6: mov %r10d,0x18(%rsp)
0x00000001182b92db: mov %rdi,0x10(%rsp)
0x00000001182b92e0: mov %r9d,0x4(%rsp)
0x00000001182b92e5: mov %rbx,%rbp
0x00000001182b92e8: movabs $0x7c0000208,%rsi  ;   {metadata({type array char})}
0x00000001182b92f2: mov %r10d,%edx
0x00000001182b92f5: xchg %ax,%ax
0x00000001182b92f7: callq 0x00000001181c4fe0  ; OopMap{rbp=Oop [8]=Oop [16]=Derived_oop_rbp off=700}
                                              ;*newarray
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@7 (line 53)
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
                                              ;   {runtime_call}
0x00000001182b92fc: mov %rbp,%rbx
0x00000001182b92ff: mov 0x4(%rsp),%r9d
0x00000001182b9304: mov 0x10(%rsp),%rdi
0x00000001182b9309: mov 0x18(%rsp),%r10d
0x00000001182b930e: mov 0x1c(%rsp),%r11d
0x00000001182b9313: mov %r11d,0x4(%rsp)
0x00000001182b9318: mov 0x20(%rsp),%r11
0x00000001182b931d: mov 0x28(%rsp),%rcx
0x00000001182b9322: mov %rax,%rbp
0x00000001182b9325: jmpq L0007
             L000b: mov $0xffffffe4,%esi
0x00000001182b932f: mov %r10,%rbp
0x00000001182b9332: mov %r8d,0x4(%rsp)
0x00000001182b9337: mov %rcx,0x18(%rsp)
0x00000001182b933c: data32 xchg %ax,%ax
0x00000001182b933f: callq 0x00000001180c81a0  ; OopMap{rbp=Oop [8]=Oop [24]=Oop off=772}
                                              ;*caload
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@3 (line 39)
                                              ;   {runtime_call}
0x00000001182b9344: callq 0x000000010a085e14  ;*caload
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@3 (line 39)
                                              ;   {runtime_call}
             L000c: mov $0xfffffff6,%esi
0x00000001182b934e: nop
0x00000001182b934f: callq 0x00000001180c81a0  ; OopMap{rbp=Oop off=788}
                                              ;*invokevirtual consume
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@22 (line 41)
                                              ;   {runtime_call}
0x00000001182b9354: callq 0x000000010a085e14  ;   {runtime_call}
             L000d: shr $0x3,%rcx
0x00000001182b935d: add $0xfffffffffffffffe,%rcx
0x00000001182b9361: mov %rsi,%rdi
0x00000001182b9364: xor %rax,%rax
0x00000001182b9367: shl $0x3,%rcx
0x00000001182b936b: rep rex
0x00000001182b936e: mov %rbx,%rsi
0x00000001182b9371: mov %r9d,%edx
0x00000001182b9374: mov %rbp,%rcx
0x00000001182b9377: xor %r8d,%r8d
0x00000001182b937a: mov %r10d,%r9d
0x00000001182b937d: xchg %ax,%ax
0x00000001182b937f: callq 0x00000001181c24e0  ; OopMap{rbp=Oop [8]=Oop off=836}
                                              ;*invokestatic arraycopy
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
                                              ;   {runtime_call}
0x00000001182b9384: jmpq L0002
             L000e: mov $0xfffffff6,%esi
0x00000001182b938e: nop
0x00000001182b938f: callq 0x00000001180c81a0  ; OopMap{rbp=Oop off=852}
                                              ;*invokevirtual consume
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@46 (line 44)
                                              ;   {runtime_call}
0x00000001182b9394: callq 0x000000010a085e14  ;   {runtime_call}
             L000f: shr $0x3,%rcx
0x00000001182b939d: add $0xfffffffffffffffe,%rcx
0x00000001182b93a1: mov %rdx,%rdi
0x00000001182b93a4: xor %rax,%rax
0x00000001182b93a7: shl $0x3,%rcx
0x00000001182b93ab: rep rex
0x00000001182b93ae: mov %rbx,%rsi
0x00000001182b93b1: mov %r9d,%edx
0x00000001182b93b4: mov %rbp,%rcx
0x00000001182b93b7: xor %r8d,%r8d
0x00000001182b93ba: mov %r10d,%r9d
0x00000001182b93bd: xchg %ax,%ax
0x00000001182b93bf: callq 0x00000001181c24e0  ; OopMap{rbp=Oop [8]=Oop off=900}
                                              ;*invokestatic arraycopy
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
                                              ;   {runtime_call}
0x00000001182b93c4: jmpq L0008
0x00000001182b93c9: mov $0xfffffff6,%esi
0x00000001182b93ce: mov %r9d,%ebp
0x00000001182b93d1: xchg %ax,%ax
0x00000001182b93d3: callq 0x00000001180c81a0  ; OopMap{off=920}
                                              ;*caload
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@3 (line 39)
                                              ;   {runtime_call}
0x00000001182b93d8: callq 0x000000010a085e14  ;*invokestatic arraycopy
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                                              ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
                                              ;   {runtime_call}
0x00000001182b93dd: jmp L0010  ;*invokestatic arraycopy
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
0x00000001182b93df: jmp L0011  ;*invokestatic arraycopy
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@43 (line 44)
             L0010: mov %rax,%rsi
0x00000001182b93e4: jmp L0012  ;*invokestatic arraycopy
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::processContent@18 (line 54)
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@19 (line 41)
             L0011: mov %rax,%rsi
0x00000001182b93e9: jmp L0012  ;*invokevirtual consume
                               ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@46 (line 44)
0x00000001182b93eb: mov %rax,%rsi
0x00000001182b93ee: jmp L0012
0x00000001182b93f0: mov %rax,%rsi  ;*invokevirtual consume
                                   ; - org.github.arnaudroger.SimplifiedBenchmark2::nextCharDirect@22 (line 41)
             L0012: add $0x50,%rsp
0x00000001182b93f7: pop %rbp
0x00000001182b93f8: jmpq 0x00000001181c25a0  ;   {runtime_call}
0x00000001182b93fd: hlt
0x00000001182b93fe: hlt
0x00000001182b93ff: hlt
[Stub Code]
0x00000001182b9400: movabs $0x0,%rbx  ;   {no_reloc}
             L0013: jmpq L0013  ;   {runtime_call}
0x00000001182b940f: movabs $0x0,%rbx  ;   {static_stub}
             L0014: jmpq L0014  ;   {runtime_call}
[Exception Handler]
0x00000001182b941e: jmpq 0x000000011812f760  ;   {runtime_call}
[Deopt Handler Code]
0x00000001182b9423: callq 0x00000001182b9428
0x00000001182b9428: subq $0x5,(%rsp)
0x00000001182b942d: jmpq 0x000000011810a3c0  ;   {runtime_call}
0x00000001182b9432: hlt
0x00000001182b9433: hlt
0x00000001182b9434: hlt
0x00000001182b9435: hlt
0x00000001182b9436: hlt
0x00000001182b9437: hlt
